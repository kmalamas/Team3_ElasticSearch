[
 "BOOTSTRAP",
 {
  "defaultCharset": "windows-1252",
  "pidString": "7260@DESKTOP-HP7QPF3",
  "systemProperties": {
   "awt.toolkit": "sun.awt.windows.WToolkit",
   "file.encoding": "Cp1252",
   "file.encoding.pkg": "sun.io",
   "file.separator": "\\",
   "java.awt.graphicsenv": "sun.awt.Win32GraphicsEnvironment",
   "java.awt.headless": "true",
   "java.awt.printerjob": "sun.awt.windows.WPrinterJob",
   "java.class.path": "C:\\Users\\kmala\\workspace\\Team3\\core\\build\\classes\\test;C:\\Users\\kmala\\workspace\\Team3\\core\\build\\resources\\test;C:\\Users\\kmala\\workspace\\Team3\\core\\build\\classes\\main;C:\\Users\\kmala\\workspace\\Team3\\core\\build\\resources\\main;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-core\\6.2.0\\849ee62525a294416802be2cacc66c80352f6f13\\lucene-core-6.2.0.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-analyzers-common\\6.2.0\\d254d52dd394b5079129f3d5f3bf4f2d44a5936e\\lucene-analyzers-common-6.2.0.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-backward-codecs\\6.2.0\\b625bb21456b3c0d1e5e431bced125cb060c1abd\\lucene-backward-codecs-6.2.0.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-grouping\\6.2.0\\9527fedfd5acc624b2bb3f862bd99fb8f470b053\\lucene-grouping-6.2.0.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-highlighter\\6.2.0\\7ca342372a3f45e32bbd21cecaa757e38eccb8a5\\lucene-highlighter-6.2.0.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-join\\6.2.0\\da0b8de98511abd4fe9c7d48a353d17854c5ed46\\lucene-join-6.2.0.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-memory\\6.2.0\\bc9e075b1ee051c8e5246c237c38d8e71dab8a66\\lucene-memory-6.2.0.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-misc\\6.2.0\\94ddde6312566a4da4a50a88e453b6c82c759b41\\lucene-misc-6.2.0.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-queries\\6.2.0\\dce47238f78e3e97d91dc6fefa9f46f07866bc2b\\lucene-queries-6.2.0.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-queryparser\\6.2.0\\17ef728ac15e668bfa1105321611548424637645\\lucene-queryparser-6.2.0.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-sandbox\\6.2.0\\520183f7b9aba77a26e224760c420a3844b0631a\\lucene-sandbox-6.2.0.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-spatial\\6.2.0\\8dba929b66927b936fbc76103b109ad6c824daee\\lucene-spatial-6.2.0.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-spatial-extras\\6.2.0\\3b5a6ef5cd90c0218a72e9e2f7e60104be2447da\\lucene-spatial-extras-6.2.0.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-spatial3d\\6.2.0\\fcdb0567725722c5145149d1502848b6a96ec18d\\lucene-spatial3d-6.2.0.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-suggest\\6.2.0\\3d9d526c51f483d27f425c75d7e56bc0849242d6\\lucene-suggest-6.2.0.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.elasticsearch\\securesm\\1.1\\1e423447d020041534be94c0f31a49fbdc1f2950\\securesm-1.1.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\net.sf.jopt-simple\\jopt-simple\\5.0.2\\98cafc6081d5632b61be2c9e60650b64ddbc637c\\jopt-simple-5.0.2.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\com.carrotsearch\\hppc\\0.7.1\\8b5057f74ea378c0150a1860874a3ebdcb713767\\hppc-0.7.1.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\joda-time\\joda-time\\2.9.4\\1c295b462f16702ebe720bbb08f62e1ba80da41b\\joda-time-2.9.4.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.joda\\joda-convert\\1.2\\35ec554f0cd00c956cc69051514d9488b1374dec\\joda-convert-1.2.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.yaml\\snakeyaml\\1.15\\3b132bea69e8ee099f416044970997bde80f4ea6\\snakeyaml-1.15.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml.jackson.core\\jackson-core\\2.8.1\\fd13b1c033741d48291315c6370f7d475a42dccf\\jackson-core-2.8.1.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml.jackson.dataformat\\jackson-dataformat-smile\\2.8.1\\5b73867bc12224946fc67fc8d49d9f5e698d7f\\jackson-dataformat-smile-2.8.1.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml.jackson.dataformat\\jackson-dataformat-yaml\\2.8.1\\eb63166c723b0b4b9fb5298fca232a2f6612ec34\\jackson-dataformat-yaml-2.8.1.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\com.fasterxml.jackson.dataformat\\jackson-dataformat-cbor\\2.8.1\\3a6fb7e75c9972559a78cf5cfc5a48a41a13ea40\\jackson-dataformat-cbor-2.8.1.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\com.tdunning\\t-digest\\3.0\\84ccf145ac2215e6bfa63baa3101c0af41017cfc\\t-digest-3.0.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.hdrhistogram\\HdrHistogram\\2.1.6\\7495feb7f71ee124bd2a7e7d83590e296d71d80e\\HdrHistogram-2.1.6.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.locationtech.spatial4j\\spatial4j\\0.6\\21b15310bddcfd8c72611c180f20cf23279809a3\\spatial4j-0.6.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\com.vividsolutions\\jts\\1.13\\3ccfb9b60f04d71add996a666ceb8902904fd805\\jts-1.13.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.logging.log4j\\log4j-api\\2.6.2\\bd1b74a5d170686362091c7cf596bbc3adf5c09b\\log4j-api-2.6.2.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.logging.log4j\\log4j-core\\2.6.2\\a91369f655eb1639c6aece5c5eb5108db18306\\log4j-core-2.6.2.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.logging.log4j\\log4j-1.2-api\\2.6.2\\3b4c5a8b734b6a29b2f03380535a48da6284b210\\log4j-1.2-api-2.6.2.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\net.java.dev.jna\\jna\\4.2.2\\5012450aee579c3118ff09461d5ce210e0cdc2a9\\jna-4.2.2.jar;C:\\Users\\kmala\\workspace\\Team3\\test\\framework\\build\\distributions\\framework-5.0.0-alpha6-SNAPSHOT.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\com.carrotsearch.randomizedtesting\\randomizedtesting-runner\\2.3.2\\307965917fe8a22b7ee72deba39ef4b8e6ebc069\\randomizedtesting-runner-2.3.2.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\junit\\junit\\4.11\\4e031bb61df09069aeb2bffb4019e7a5034a4ee0\\junit-4.11.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.hamcrest\\hamcrest-all\\1.3\\63a21ebc981131004ad02e0434e799fd7f3a8d5a\\hamcrest-all-1.3.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-test-framework\\6.2.0\\f5026be3983acfb40d4092dbfbc015ec6e6addab\\lucene-test-framework-6.2.0.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.lucene\\lucene-codecs\\6.2.0\\99f887266b0ad9f2c286b3976c5bc48c8cd36624\\lucene-codecs-6.2.0.jar;C:\\Users\\kmala\\workspace\\Team3\\client\\rest\\build\\distributions\\rest-5.0.0-alpha6-SNAPSHOT.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.httpcomponents\\httpclient\\4.5.2\\733db77aa8d9b2d68015189df76ab06304406e50\\httpclient-4.5.2.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.httpcomponents\\httpcore\\4.4.5\\e7501a1b34325abb00d17dde96150604a0658b54\\httpcore-4.4.5.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\commons-logging\\commons-logging\\1.1.3\\f6f66e966c70a83ffbdb6f17a0919eaf7c8aca7f\\commons-logging-1.1.3.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\commons-codec\\commons-codec\\1.10\\4b95f4897fa13f2cd904aee711aeafc0c5295cd8\\commons-codec-1.10.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.elasticsearch\\securemock\\1.2\\98201d4ad5ac93f6b415ae9172d52b5e7cda490e\\securemock-1.2.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.httpcomponents\\httpasyncclient\\4.1.2\\95aa3e6fb520191a0970a73cf09f62948ee614be\\httpasyncclient-4.1.2.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\org.apache.httpcomponents\\httpcore-nio\\4.4.5\\f4be009e7505f6ceddf21e7960c759f413f15056\\httpcore-nio-4.4.5.jar;C:\\Users\\kmala\\.gradle\\caches\\modules-2\\files-2.1\\com.carrotsearch.randomizedtesting\\junit4-ant\\2.3.2\\dc8f03f6111974092491f35b8269eb0fc57f52f7\\junit4-ant-2.3.2.jar",
   "java.class.version": "52.0",
   "java.endorsed.dirs": "C:\\Program Files\\Java\\jdk1.8.0_102\\jre\\lib\\endorsed",
   "java.ext.dirs": "C:\\Program Files\\Java\\jdk1.8.0_102\\jre\\lib\\ext;C:\\Windows\\Sun\\Java\\lib\\ext",
   "java.home": "C:\\Program Files\\Java\\jdk1.8.0_102\\jre",
   "java.io.tmpdir": "./temp",
   "java.library.path": "C:\\Program Files\\Java\\jdk1.8.0_102\\bin;C:\\Windows\\Sun\\Java\\bin;C:\\Windows\\system32;C:\\Windows;C:\\ProgramData\\Oracle\\Java\\javapath;C:\\Windows\\system32;C:\\Windows;C:\\Windows\\System32\\Wbem;C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\;C:\\Program Files (x86)\\Skype\\Phone\\;C:\\Tools\\curl-7.50.1\\bin;C:\\Program Files\\Git\\cmd;C:\\Tools\\gradle-2.13\\bin;C:\\Tools\\apache-maven-3.3.9\\bin;C:\\Program Files\\doxygen\\bin;C:\\Tools\\sonar-scanner-2.7\\bin;C:\\Windows\\system32\\config\\systemprofile\\.dnx\\bin;C:\\Program Files\\Microsoft DNX\\Dnvm\\;C:\\Program Files\\Microsoft SQL Server\\120\\Tools\\Binn\\;C:\\Users\\kmala\\AppData\\Local\\Microsoft\\WindowsApps;;.",
   "java.runtime.name": "Java(TM) SE Runtime Environment",
   "java.runtime.version": "1.8.0_102-b14",
   "java.specification.name": "Java Platform API Specification",
   "java.specification.vendor": "Oracle Corporation",
   "java.specification.version": "1.8",
   "java.vendor": "Oracle Corporation",
   "java.vendor.url": "http://java.oracle.com/",
   "java.vendor.url.bug": "http://bugreport.sun.com/bugreport/",
   "java.version": "1.8.0_102",
   "java.vm.info": "mixed mode",
   "java.vm.name": "Java HotSpot(TM) 64-Bit Server VM",
   "java.vm.specification.name": "Java Virtual Machine Specification",
   "java.vm.specification.vendor": "Oracle Corporation",
   "java.vm.specification.version": "1.8",
   "java.vm.vendor": "Oracle Corporation",
   "java.vm.version": "25.102-b14",
   "jna.nosys": "true",
   "junit4.childvm.count": "3",
   "junit4.childvm.cwd": "C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J2",
   "junit4.childvm.id": "2",
   "junit4.memory.total": "514850816",
   "junit4.pidString": "7260@DESKTOP-HP7QPF3",
   "junit4.processors": "4",
   "line.separator": "\r\n",
   "os.arch": "amd64",
   "os.name": "Windows 10",
   "os.version": "10.0",
   "path.separator": ";",
   "sun.arch.data.model": "64",
   "sun.boot.class.path": "C:\\Program Files\\Java\\jdk1.8.0_102\\jre\\lib\\resources.jar;C:\\Program Files\\Java\\jdk1.8.0_102\\jre\\lib\\rt.jar;C:\\Program Files\\Java\\jdk1.8.0_102\\jre\\lib\\sunrsasign.jar;C:\\Program Files\\Java\\jdk1.8.0_102\\jre\\lib\\jsse.jar;C:\\Program Files\\Java\\jdk1.8.0_102\\jre\\lib\\jce.jar;C:\\Program Files\\Java\\jdk1.8.0_102\\jre\\lib\\charsets.jar;C:\\Program Files\\Java\\jdk1.8.0_102\\jre\\lib\\jfr.jar;C:\\Program Files\\Java\\jdk1.8.0_102\\jre\\classes",
   "sun.boot.library.path": "C:\\Program Files\\Java\\jdk1.8.0_102\\jre\\bin",
   "sun.cpu.endian": "little",
   "sun.cpu.isalist": "amd64",
   "sun.desktop": "windows",
   "sun.io.unicode.encoding": "UnicodeLittle",
   "sun.java.command": "com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe -eventsfile C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\temp\\junit4-J2-20160918_124457_941.events @C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\temp\\junit4-J2-20160918_124457_941.suites -stdin",
   "sun.java.launcher": "SUN_STANDARD",
   "sun.jnu.encoding": "Cp1252",
   "sun.management.compiler": "HotSpot 64-Bit Tiered Compilers",
   "sun.os.patch.level": "",
   "tests.artifact": "core",
   "tests.gradle": "true",
   "tests.ifNoTests": "fail",
   "tests.logger.level": "WARN",
   "tests.prefix": "tests",
   "tests.security.manager": "true",
   "tests.seed": "FD13852EF36FC81C",
   "tests.task": ":core:test",
   "user.country": "US",
   "user.dir": "C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J2",
   "user.home": "C:\\Users\\kmala",
   "user.language": "en",
   "user.name": "kmala",
   "user.script": "",
   "user.timezone": "",
   "user.variant": ""
  }
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderUnitTests",
   "displayName": "org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderUnitTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderUnitTests",
   "children": [
    {
     "id": "ID#testCanRemainUsesLeastAvailableSpace(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderUnitTests)",
     "displayName": "testCanRemainUsesLeastAvailableSpace(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderUnitTests)",
     "methodName": "testCanRemainUsesLeastAvailableSpace",
     "className": "org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderUnitTests",
     "children": []
    },
    {
     "id": "ID#testSizeShrinkIndex(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderUnitTests)",
     "displayName": "testSizeShrinkIndex(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderUnitTests)",
     "methodName": "testSizeShrinkIndex",
     "className": "org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderUnitTests",
     "children": []
    },
    {
     "id": "ID#testShardSizeAndRelocatingSize(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderUnitTests)",
     "displayName": "testShardSizeAndRelocatingSize(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderUnitTests)",
     "methodName": "testShardSizeAndRelocatingSize",
     "className": "org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderUnitTests",
     "children": []
    },
    {
     "id": "ID#testCanAllocateUsesMaxAvailableSpace(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderUnitTests)",
     "displayName": "testCanAllocateUsesMaxAvailableSpace(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderUnitTests)",
     "methodName": "testCanAllocateUsesMaxAvailableSpace",
     "className": "org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderUnitTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195499400
 }
]

[
 "TEST_STARTED",
 "ID#testCanRemainUsesLeastAvailableSpace(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderUnitTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:45:16,192][INFO ][org.elasticsearch.cluster.routing.allocation.decider] --> adding two nodes%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCanRemainUsesLeastAvailableSpace(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderUnitTests)",
  "startTimestamp": 1474195513843,
  "executionTime": 2904
 }
]

[
 "TEST_STARTED",
 "ID#testSizeShrinkIndex(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderUnitTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSizeShrinkIndex(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderUnitTests)",
  "startTimestamp": 1474195516747,
  "executionTime": 329
 }
]

[
 "TEST_STARTED",
 "ID#testShardSizeAndRelocatingSize(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderUnitTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testShardSizeAndRelocatingSize(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderUnitTests)",
  "startTimestamp": 1474195517076,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testCanAllocateUsesMaxAvailableSpace(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderUnitTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCanAllocateUsesMaxAvailableSpace(org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderUnitTests)",
  "startTimestamp": 1474195517084,
  "executionTime": 13
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.allocation.decider.DiskThresholdDeciderUnitTests",
  "startTimestamp": 1474195499400,
  "executionTime": 17759
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.suggest.completion.GeoContextMappingTests",
   "displayName": "org.elasticsearch.search.suggest.completion.GeoContextMappingTests",
   "methodName": null,
   "className": "org.elasticsearch.search.suggest.completion.GeoContextMappingTests",
   "children": [
    {
     "id": "ID#testParsingQueryContextGeoPoint(org.elasticsearch.search.suggest.completion.GeoContextMappingTests)",
     "displayName": "testParsingQueryContextGeoPoint(org.elasticsearch.search.suggest.completion.GeoContextMappingTests)",
     "methodName": "testParsingQueryContextGeoPoint",
     "className": "org.elasticsearch.search.suggest.completion.GeoContextMappingTests",
     "children": []
    },
    {
     "id": "ID#testParsingQueryContextObjectArray(org.elasticsearch.search.suggest.completion.GeoContextMappingTests)",
     "displayName": "testParsingQueryContextObjectArray(org.elasticsearch.search.suggest.completion.GeoContextMappingTests)",
     "methodName": "testParsingQueryContextObjectArray",
     "className": "org.elasticsearch.search.suggest.completion.GeoContextMappingTests",
     "children": []
    },
    {
     "id": "ID#testParsingQueryContextMixed(org.elasticsearch.search.suggest.completion.GeoContextMappingTests)",
     "displayName": "testParsingQueryContextMixed(org.elasticsearch.search.suggest.completion.GeoContextMappingTests)",
     "methodName": "testParsingQueryContextMixed",
     "className": "org.elasticsearch.search.suggest.completion.GeoContextMappingTests",
     "children": []
    },
    {
     "id": "ID#testIndexingWithMultipleContexts(org.elasticsearch.search.suggest.completion.GeoContextMappingTests)",
     "displayName": "testIndexingWithMultipleContexts(org.elasticsearch.search.suggest.completion.GeoContextMappingTests)",
     "methodName": "testIndexingWithMultipleContexts",
     "className": "org.elasticsearch.search.suggest.completion.GeoContextMappingTests",
     "children": []
    },
    {
     "id": "ID#testIndexingWithNoContexts(org.elasticsearch.search.suggest.completion.GeoContextMappingTests)",
     "displayName": "testIndexingWithNoContexts(org.elasticsearch.search.suggest.completion.GeoContextMappingTests)",
     "methodName": "testIndexingWithNoContexts",
     "className": "org.elasticsearch.search.suggest.completion.GeoContextMappingTests",
     "children": []
    },
    {
     "id": "ID#testIndexingWithSimpleContexts(org.elasticsearch.search.suggest.completion.GeoContextMappingTests)",
     "displayName": "testIndexingWithSimpleContexts(org.elasticsearch.search.suggest.completion.GeoContextMappingTests)",
     "methodName": "testIndexingWithSimpleContexts",
     "className": "org.elasticsearch.search.suggest.completion.GeoContextMappingTests",
     "children": []
    },
    {
     "id": "ID#testIndexingWithContextList(org.elasticsearch.search.suggest.completion.GeoContextMappingTests)",
     "displayName": "testIndexingWithContextList(org.elasticsearch.search.suggest.completion.GeoContextMappingTests)",
     "methodName": "testIndexingWithContextList",
     "className": "org.elasticsearch.search.suggest.completion.GeoContextMappingTests",
     "children": []
    },
    {
     "id": "ID#testParsingQueryContextObject(org.elasticsearch.search.suggest.completion.GeoContextMappingTests)",
     "displayName": "testParsingQueryContextObject(org.elasticsearch.search.suggest.completion.GeoContextMappingTests)",
     "methodName": "testParsingQueryContextObject",
     "className": "org.elasticsearch.search.suggest.completion.GeoContextMappingTests",
     "children": []
    },
    {
     "id": "ID#testParsingQueryContextBasic(org.elasticsearch.search.suggest.completion.GeoContextMappingTests)",
     "displayName": "testParsingQueryContextBasic(org.elasticsearch.search.suggest.completion.GeoContextMappingTests)",
     "methodName": "testParsingQueryContextBasic",
     "className": "org.elasticsearch.search.suggest.completion.GeoContextMappingTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195517588
 }
]

[
 "TEST_STARTED",
 "ID#testParsingQueryContextGeoPoint(org.elasticsearch.search.suggest.completion.GeoContextMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:45:18,142][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:45:18,613][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.7gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:45:18,617][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:45:18,635][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[7260], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:45:18,691][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:45:18,692][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:45:42,082][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:45:42,083][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:45:42,134][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[1]}, bound_addresses {local[1]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:45:42,336][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{HVBx8o7HTpucf8Pvsvxnmg}{jIoiT5mFRuGK8qvPztzbog}{local}{local[1]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:45:42,350][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:45:42,542][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:45:43,278][INFO ][org.elasticsearch.search.suggest.completion] [GeoContextMappingTests#testParsingQueryContextGeoPoint]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsingQueryContextGeoPoint(org.elasticsearch.search.suggest.completion.GeoContextMappingTests)",
  "startTimestamp": 1474195517695,
  "executionTime": 25619
 }
]

[
 "TEST_STARTED",
 "ID#testParsingQueryContextObjectArray(org.elasticsearch.search.suggest.completion.GeoContextMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:45:43,360][INFO ][org.elasticsearch.search.suggest.completion] [GeoContextMappingTests#testParsingQueryContextObjectArray]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsingQueryContextObjectArray(org.elasticsearch.search.suggest.completion.GeoContextMappingTests)",
  "startTimestamp": 1474195543315,
  "executionTime": 46
 }
]

[
 "TEST_STARTED",
 "ID#testParsingQueryContextMixed(org.elasticsearch.search.suggest.completion.GeoContextMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:45:43,376][INFO ][org.elasticsearch.search.suggest.completion] [GeoContextMappingTests#testParsingQueryContextMixed]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsingQueryContextMixed(org.elasticsearch.search.suggest.completion.GeoContextMappingTests)",
  "startTimestamp": 1474195543361,
  "executionTime": 17
 }
]

[
 "TEST_STARTED",
 "ID#testIndexingWithMultipleContexts(org.elasticsearch.search.suggest.completion.GeoContextMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:45:43,586][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:45:44,533][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:45:45,966][INFO ][org.elasticsearch.search.suggest.completion] [GeoContextMappingTests#testIndexingWithMultipleContexts]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexingWithMultipleContexts(org.elasticsearch.search.suggest.completion.GeoContextMappingTests)",
  "startTimestamp": 1474195543379,
  "executionTime": 2647
 }
]

[
 "TEST_STARTED",
 "ID#testIndexingWithNoContexts(org.elasticsearch.search.suggest.completion.GeoContextMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:45:46,038][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:45:46,100][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:45:46,115][INFO ][org.elasticsearch.search.suggest.completion] [GeoContextMappingTests#testIndexingWithNoContexts]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexingWithNoContexts(org.elasticsearch.search.suggest.completion.GeoContextMappingTests)",
  "startTimestamp": 1474195546027,
  "executionTime": 139
 }
]

[
 "TEST_STARTED",
 "ID#testIndexingWithSimpleContexts(org.elasticsearch.search.suggest.completion.GeoContextMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:45:46,176][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:45:46,287][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:45:46,315][INFO ][org.elasticsearch.search.suggest.completion] [GeoContextMappingTests#testIndexingWithSimpleContexts]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexingWithSimpleContexts(org.elasticsearch.search.suggest.completion.GeoContextMappingTests)",
  "startTimestamp": 1474195546166,
  "executionTime": 249
 }
]

[
 "TEST_STARTED",
 "ID#testIndexingWithContextList(org.elasticsearch.search.suggest.completion.GeoContextMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:45:46,425][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:45:46,518][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:45:46,536][INFO ][org.elasticsearch.search.suggest.completion] [GeoContextMappingTests#testIndexingWithContextList]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexingWithContextList(org.elasticsearch.search.suggest.completion.GeoContextMappingTests)",
  "startTimestamp": 1474195546415,
  "executionTime": 211
 }
]

[
 "TEST_STARTED",
 "ID#testParsingQueryContextObject(org.elasticsearch.search.suggest.completion.GeoContextMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:45:46,631][INFO ][org.elasticsearch.search.suggest.completion] [GeoContextMappingTests#testParsingQueryContextObject]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsingQueryContextObject(org.elasticsearch.search.suggest.completion.GeoContextMappingTests)",
  "startTimestamp": 1474195546626,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testParsingQueryContextBasic(org.elasticsearch.search.suggest.completion.GeoContextMappingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:45:46,642][INFO ][org.elasticsearch.search.suggest.completion] [GeoContextMappingTests#testParsingQueryContextBasic]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsingQueryContextBasic(org.elasticsearch.search.suggest.completion.GeoContextMappingTests)",
  "startTimestamp": 1474195546636,
  "executionTime": 8
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:45:46,645][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:45:46,649][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:45:46,649][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:45:46,678][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.suggest.completion.GeoContextMappingTests",
  "startTimestamp": 1474195517588,
  "executionTime": 29109
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.CompletionFieldMapperTests",
   "displayName": "org.elasticsearch.index.mapper.CompletionFieldMapperTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.CompletionFieldMapperTests",
   "children": [
    {
     "id": "ID#testCompletionAnalyzerSettings(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
     "displayName": "testCompletionAnalyzerSettings(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
     "methodName": "testCompletionAnalyzerSettings",
     "className": "org.elasticsearch.index.mapper.CompletionFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testNonContextEnabledParsingWithContexts(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
     "displayName": "testNonContextEnabledParsingWithContexts(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
     "methodName": "testNonContextEnabledParsingWithContexts",
     "className": "org.elasticsearch.index.mapper.CompletionFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testEmptyName(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
     "displayName": "testEmptyName(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
     "methodName": "testEmptyName",
     "className": "org.elasticsearch.index.mapper.CompletionFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testParsingMultiValued(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
     "displayName": "testParsingMultiValued(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
     "methodName": "testParsingMultiValued",
     "className": "org.elasticsearch.index.mapper.CompletionFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testFieldValueValidation(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
     "displayName": "testFieldValueValidation(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
     "methodName": "testFieldValueValidation",
     "className": "org.elasticsearch.index.mapper.CompletionFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testRegexQueryType(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
     "displayName": "testRegexQueryType(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
     "methodName": "testRegexQueryType",
     "className": "org.elasticsearch.index.mapper.CompletionFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testPrefixQueryType(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
     "displayName": "testPrefixQueryType(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
     "methodName": "testPrefixQueryType",
     "className": "org.elasticsearch.index.mapper.CompletionFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testTypeParsing(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
     "displayName": "testTypeParsing(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
     "methodName": "testTypeParsing",
     "className": "org.elasticsearch.index.mapper.CompletionFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testParsingWithWeight(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
     "displayName": "testParsingWithWeight(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
     "methodName": "testParsingWithWeight",
     "className": "org.elasticsearch.index.mapper.CompletionFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testParsingFull(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
     "displayName": "testParsingFull(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
     "methodName": "testParsingFull",
     "className": "org.elasticsearch.index.mapper.CompletionFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testParsingMinimal(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
     "displayName": "testParsingMinimal(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
     "methodName": "testParsingMinimal",
     "className": "org.elasticsearch.index.mapper.CompletionFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testParsingMultiValueWithWeight(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
     "displayName": "testParsingMultiValueWithWeight(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
     "methodName": "testParsingMultiValueWithWeight",
     "className": "org.elasticsearch.index.mapper.CompletionFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testParsingMixed(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
     "displayName": "testParsingMixed(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
     "methodName": "testParsingMixed",
     "className": "org.elasticsearch.index.mapper.CompletionFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testFuzzyQueryType(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
     "displayName": "testFuzzyQueryType(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
     "methodName": "testFuzzyQueryType",
     "className": "org.elasticsearch.index.mapper.CompletionFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testDefaultConfiguration(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
     "displayName": "testDefaultConfiguration(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
     "methodName": "testDefaultConfiguration",
     "className": "org.elasticsearch.index.mapper.CompletionFieldMapperTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195546712
 }
]

[
 "TEST_STARTED",
 "ID#testCompletionAnalyzerSettings(org.elasticsearch.index.mapper.CompletionFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:45:46,773][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:45:46,822][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.7gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:45:46,823][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:45:46,826][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[7260], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:45:46,833][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:45:46,833][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:45:47,107][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:45:47,108][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:45:47,108][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[2]}, bound_addresses {local[2]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:45:47,144][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{rJHpfDzJTCW5490fLDRVGg}{on5xVpmOQB24NSPF8xTU3w}{local}{local[2]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:45:47,146][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:45:47,169][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:45:47,218][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:45:47,363][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:45:47,389][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [CompletionFieldMapperTests#testCompletionAnalyzerSettings]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCompletionAnalyzerSettings(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
  "startTimestamp": 1474195546762,
  "executionTime": 680
 }
]

[
 "TEST_STARTED",
 "ID#testNonContextEnabledParsingWithContexts(org.elasticsearch.index.mapper.CompletionFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:45:47,453][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:45:47,511][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:45:47,531][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [CompletionFieldMapperTests#testNonContextEnabledParsingWithContexts]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNonContextEnabledParsingWithContexts(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
  "startTimestamp": 1474195547442,
  "executionTime": 130
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyName(org.elasticsearch.index.mapper.CompletionFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:45:47,581][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:45:47,645][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:45:47,667][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [CompletionFieldMapperTests#testEmptyName]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyName(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
  "startTimestamp": 1474195547572,
  "executionTime": 129
 }
]

[
 "TEST_STARTED",
 "ID#testParsingMultiValued(org.elasticsearch.index.mapper.CompletionFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:45:47,711][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:45:47,772][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:45:47,788][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [CompletionFieldMapperTests#testParsingMultiValued]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsingMultiValued(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
  "startTimestamp": 1474195547701,
  "executionTime": 128
 }
]

[
 "TEST_STARTED",
 "ID#testFieldValueValidation(org.elasticsearch.index.mapper.CompletionFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:45:47,839][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:45:47,932][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:45:47,990][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [CompletionFieldMapperTests#testFieldValueValidation]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFieldValueValidation(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
  "startTimestamp": 1474195547829,
  "executionTime": 372
 }
]

[
 "TEST_STARTED",
 "ID#testRegexQueryType(org.elasticsearch.index.mapper.CompletionFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:45:48,215][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:45:48,308][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:45:48,449][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [CompletionFieldMapperTests#testRegexQueryType]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRegexQueryType(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
  "startTimestamp": 1474195548202,
  "executionTime": 288
 }
]

[
 "TEST_STARTED",
 "ID#testPrefixQueryType(org.elasticsearch.index.mapper.CompletionFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:45:48,500][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:45:48,621][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:45:48,642][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [CompletionFieldMapperTests#testPrefixQueryType]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPrefixQueryType(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
  "startTimestamp": 1474195548490,
  "executionTime": 184
 }
]

[
 "TEST_STARTED",
 "ID#testTypeParsing(org.elasticsearch.index.mapper.CompletionFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:45:48,687][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:45:48,767][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:45:48,788][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [CompletionFieldMapperTests#testTypeParsing]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTypeParsing(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
  "startTimestamp": 1474195548674,
  "executionTime": 389
 }
]

[
 "TEST_STARTED",
 "ID#testParsingWithWeight(org.elasticsearch.index.mapper.CompletionFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:45:49,079][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:45:49,167][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:45:49,186][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [CompletionFieldMapperTests#testParsingWithWeight]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsingWithWeight(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
  "startTimestamp": 1474195549063,
  "executionTime": 205
 }
]

[
 "TEST_STARTED",
 "ID#testParsingFull(org.elasticsearch.index.mapper.CompletionFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:45:49,284][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:45:49,374][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:45:49,396][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [CompletionFieldMapperTests#testParsingFull]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsingFull(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
  "startTimestamp": 1474195549268,
  "executionTime": 158
 }
]

[
 "TEST_STARTED",
 "ID#testParsingMinimal(org.elasticsearch.index.mapper.CompletionFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:45:49,439][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:45:49,520][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:45:49,538][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [CompletionFieldMapperTests#testParsingMinimal]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsingMinimal(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
  "startTimestamp": 1474195549427,
  "executionTime": 158
 }
]

[
 "TEST_STARTED",
 "ID#testParsingMultiValueWithWeight(org.elasticsearch.index.mapper.CompletionFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:45:49,599][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:45:49,662][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:45:49,688][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [CompletionFieldMapperTests#testParsingMultiValueWithWeight]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsingMultiValueWithWeight(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
  "startTimestamp": 1474195549585,
  "executionTime": 140
 }
]

[
 "TEST_STARTED",
 "ID#testParsingMixed(org.elasticsearch.index.mapper.CompletionFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:45:49,734][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:45:49,798][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:45:49,814][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [CompletionFieldMapperTests#testParsingMixed]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsingMixed(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
  "startTimestamp": 1474195549725,
  "executionTime": 127
 }
]

[
 "TEST_STARTED",
 "ID#testFuzzyQueryType(org.elasticsearch.index.mapper.CompletionFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:45:49,863][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:45:49,925][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:45:49,947][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [CompletionFieldMapperTests#testFuzzyQueryType]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFuzzyQueryType(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
  "startTimestamp": 1474195549852,
  "executionTime": 888
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultConfiguration(org.elasticsearch.index.mapper.CompletionFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:45:50,748][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:45:50,984][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:45:51,033][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [CompletionFieldMapperTests#testDefaultConfiguration]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultConfiguration(org.elasticsearch.index.mapper.CompletionFieldMapperTests)",
  "startTimestamp": 1474195550741,
  "executionTime": 436
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:45:51,178][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:45:51,179][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:45:51,179][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T08:45:51,181][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.CompletionFieldMapperTests",
  "startTimestamp": 1474195546712,
  "executionTime": 4495
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.lucene.all.SimpleAllTests",
   "displayName": "org.elasticsearch.common.lucene.all.SimpleAllTests",
   "methodName": null,
   "className": "org.elasticsearch.common.lucene.all.SimpleAllTests",
   "children": [
    {
     "id": "ID#testTermMissingFromOneSegment(org.elasticsearch.common.lucene.all.SimpleAllTests)",
     "displayName": "testTermMissingFromOneSegment(org.elasticsearch.common.lucene.all.SimpleAllTests)",
     "methodName": "testTermMissingFromOneSegment",
     "className": "org.elasticsearch.common.lucene.all.SimpleAllTests",
     "children": []
    },
    {
     "id": "ID#testNoTokens(org.elasticsearch.common.lucene.all.SimpleAllTests)",
     "displayName": "testNoTokens(org.elasticsearch.common.lucene.all.SimpleAllTests)",
     "methodName": "testNoTokens",
     "className": "org.elasticsearch.common.lucene.all.SimpleAllTests",
     "children": []
    },
    {
     "id": "ID#testSimpleAllNoBoost(org.elasticsearch.common.lucene.all.SimpleAllTests)",
     "displayName": "testSimpleAllNoBoost(org.elasticsearch.common.lucene.all.SimpleAllTests)",
     "methodName": "testSimpleAllNoBoost",
     "className": "org.elasticsearch.common.lucene.all.SimpleAllTests",
     "children": []
    },
    {
     "id": "ID#testMultipleTokensAllNoBoost(org.elasticsearch.common.lucene.all.SimpleAllTests)",
     "displayName": "testMultipleTokensAllNoBoost(org.elasticsearch.common.lucene.all.SimpleAllTests)",
     "methodName": "testMultipleTokensAllNoBoost",
     "className": "org.elasticsearch.common.lucene.all.SimpleAllTests",
     "children": []
    },
    {
     "id": "ID#testMultipleTokensAllWithBoost(org.elasticsearch.common.lucene.all.SimpleAllTests)",
     "displayName": "testMultipleTokensAllWithBoost(org.elasticsearch.common.lucene.all.SimpleAllTests)",
     "methodName": "testMultipleTokensAllWithBoost",
     "className": "org.elasticsearch.common.lucene.all.SimpleAllTests",
     "children": []
    },
    {
     "id": "ID#testSimpleAllWithBoost(org.elasticsearch.common.lucene.all.SimpleAllTests)",
     "displayName": "testSimpleAllWithBoost(org.elasticsearch.common.lucene.all.SimpleAllTests)",
     "methodName": "testSimpleAllWithBoost",
     "className": "org.elasticsearch.common.lucene.all.SimpleAllTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195551219
 }
]

[
 "TEST_STARTED",
 "ID#testTermMissingFromOneSegment(org.elasticsearch.common.lucene.all.SimpleAllTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTermMissingFromOneSegment(org.elasticsearch.common.lucene.all.SimpleAllTests)",
  "startTimestamp": 1474195551254,
  "executionTime": 926
 }
]

[
 "TEST_STARTED",
 "ID#testNoTokens(org.elasticsearch.common.lucene.all.SimpleAllTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoTokens(org.elasticsearch.common.lucene.all.SimpleAllTests)",
  "startTimestamp": 1474195552181,
  "executionTime": 33
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleAllNoBoost(org.elasticsearch.common.lucene.all.SimpleAllTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleAllNoBoost(org.elasticsearch.common.lucene.all.SimpleAllTests)",
  "startTimestamp": 1474195552214,
  "executionTime": 38
 }
]

[
 "TEST_STARTED",
 "ID#testMultipleTokensAllNoBoost(org.elasticsearch.common.lucene.all.SimpleAllTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultipleTokensAllNoBoost(org.elasticsearch.common.lucene.all.SimpleAllTests)",
  "startTimestamp": 1474195552253,
  "executionTime": 20
 }
]

[
 "TEST_STARTED",
 "ID#testMultipleTokensAllWithBoost(org.elasticsearch.common.lucene.all.SimpleAllTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultipleTokensAllWithBoost(org.elasticsearch.common.lucene.all.SimpleAllTests)",
  "startTimestamp": 1474195552273,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleAllWithBoost(org.elasticsearch.common.lucene.all.SimpleAllTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleAllWithBoost(org.elasticsearch.common.lucene.all.SimpleAllTests)",
  "startTimestamp": 1474195552285,
  "executionTime": 20
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.lucene.all.SimpleAllTests",
  "startTimestamp": 1474195551219,
  "executionTime": 1089
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.rest.action.RestMainActionTests",
   "displayName": "org.elasticsearch.rest.action.RestMainActionTests",
   "methodName": null,
   "className": "org.elasticsearch.rest.action.RestMainActionTests",
   "children": [
    {
     "id": "ID#testHeadResponse(org.elasticsearch.rest.action.RestMainActionTests)",
     "displayName": "testHeadResponse(org.elasticsearch.rest.action.RestMainActionTests)",
     "methodName": "testHeadResponse",
     "className": "org.elasticsearch.rest.action.RestMainActionTests",
     "children": []
    },
    {
     "id": "ID#testGetResponse(org.elasticsearch.rest.action.RestMainActionTests)",
     "displayName": "testGetResponse(org.elasticsearch.rest.action.RestMainActionTests)",
     "methodName": "testGetResponse",
     "className": "org.elasticsearch.rest.action.RestMainActionTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195552319
 }
]

[
 "TEST_STARTED",
 "ID#testHeadResponse(org.elasticsearch.rest.action.RestMainActionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHeadResponse(org.elasticsearch.rest.action.RestMainActionTests)",
  "startTimestamp": 1474195552603,
  "executionTime": 41
 }
]

[
 "TEST_STARTED",
 "ID#testGetResponse(org.elasticsearch.rest.action.RestMainActionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGetResponse(org.elasticsearch.rest.action.RestMainActionTests)",
  "startTimestamp": 1474195552644,
  "executionTime": 6
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.rest.action.RestMainActionTests",
  "startTimestamp": 1474195552319,
  "executionTime": 333
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.action.shard.ShardStateActionTests",
   "displayName": "org.elasticsearch.cluster.action.shard.ShardStateActionTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.action.shard.ShardStateActionTests",
   "children": [
    {
     "id": "ID#testUnhandledFailure(org.elasticsearch.cluster.action.shard.ShardStateActionTests)",
     "displayName": "testUnhandledFailure(org.elasticsearch.cluster.action.shard.ShardStateActionTests)",
     "methodName": "testUnhandledFailure",
     "className": "org.elasticsearch.cluster.action.shard.ShardStateActionTests",
     "children": []
    },
    {
     "id": "ID#testNoMaster(org.elasticsearch.cluster.action.shard.ShardStateActionTests)",
     "displayName": "testNoMaster(org.elasticsearch.cluster.action.shard.ShardStateActionTests)",
     "methodName": "testNoMaster",
     "className": "org.elasticsearch.cluster.action.shard.ShardStateActionTests",
     "children": []
    },
    {
     "id": "ID#testShardNotFound(org.elasticsearch.cluster.action.shard.ShardStateActionTests)",
     "displayName": "testShardNotFound(org.elasticsearch.cluster.action.shard.ShardStateActionTests)",
     "methodName": "testShardNotFound",
     "className": "org.elasticsearch.cluster.action.shard.ShardStateActionTests",
     "children": []
    },
    {
     "id": "ID#testMasterChannelException(org.elasticsearch.cluster.action.shard.ShardStateActionTests)",
     "displayName": "testMasterChannelException(org.elasticsearch.cluster.action.shard.ShardStateActionTests)",
     "methodName": "testMasterChannelException",
     "className": "org.elasticsearch.cluster.action.shard.ShardStateActionTests",
     "children": []
    },
    {
     "id": "ID#testNoLongerPrimaryShardException(org.elasticsearch.cluster.action.shard.ShardStateActionTests)",
     "displayName": "testNoLongerPrimaryShardException(org.elasticsearch.cluster.action.shard.ShardStateActionTests)",
     "methodName": "testNoLongerPrimaryShardException",
     "className": "org.elasticsearch.cluster.action.shard.ShardStateActionTests",
     "children": []
    },
    {
     "id": "ID#testSuccess(org.elasticsearch.cluster.action.shard.ShardStateActionTests)",
     "displayName": "testSuccess(org.elasticsearch.cluster.action.shard.ShardStateActionTests)",
     "methodName": "testSuccess",
     "className": "org.elasticsearch.cluster.action.shard.ShardStateActionTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195552684
 }
]

[
 "TEST_STARTED",
 "ID#testUnhandledFailure(org.elasticsearch.cluster.action.shard.ShardStateActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:45:52,763][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{9sLRdVpaRaqAze5fKY10Ng}{local}{local[6]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:45:52,798][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node_1}{Ulu5YZh4Tp63E5tjClllYA}{local}{local[8]}, previous {node}{9sLRdVpaRaqAze5fKY10Ng}{local}{local[6]}}, removed {{node}{9sLRdVpaRaqAze5fKY10Ng}{local}{local[6]},}, added {{node_1}{Ulu5YZh4Tp63E5tjClllYA}{local}{local[8]},{node_2}{E2F4-KH-TeeddZ6uTJWPyQ}{local}{local[9]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "2016-09-18 07:45:52,839 TEST-ShardStateActionTests.testUnhandledFailure-seed#[FD13852EF36FC81C] ERROR An exception occurred processing Appender console java.security.AccessControlException: access denied (\"java.lang.RuntimePermission\" \"accessClassInPackage.sun.reflect\")%0D%0A%09at java.security.AccessControlContext.checkPermission(AccessControlContext.java:472)%0D%0A%09at java.security.AccessController.checkPermission(AccessController.java:884)%0D%0A%09at java.lang.SecurityManager.checkPermission(SecurityManager.java:549)%0D%0A%09at java.lang.SecurityManager.checkPackageAccess(SecurityManager.java:1564)%0D%0A%09at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:311)%0D%0A%09at java.lang.ClassLoader.loadClass(ClassLoader.java:357)%0D%0A%09at java.lang.Class.forName0(Native Method)%0D%0A%09at java.lang.Class.forName(Class.java:264)%0D%0A%09at org.apache.logging.log4j.util.LoaderUtil.loadClass(LoaderUtil.java:122)%0D%0A%09at org.apache.logging.log4j.core.util.Loader.loadClass(Loader.java:228)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.loadClass(ThrowableProxy.java:496)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.toExtendedStackTrace(ThrowableProxy.java:617)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.<init>(ThrowableProxy.java:163)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.<init>(ThrowableProxy.java:138)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.<init>(ThrowableProxy.java:117)%0D%0A%09at org.apache.logging.log4j.core.impl.MutableLogEvent.getThrownProxy(MutableLogEvent.java:314)%0D%0A%09at org.apache.logging.log4j.core.pattern.ExtendedThrowablePatternConverter.format(ExtendedThrowablePatternConverter.java:61)%0D%0A%09at org.apache.logging.log4j.core.pattern.PatternFormatter.format(PatternFormatter.java:38)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout$PatternSerializer.toSerializable(PatternLayout.java:294)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout.toText(PatternLayout.java:195)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout.encode(PatternLayout.java:180)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout.encode(PatternLayout.java:57)%0D%0A%09at org.apache.logging.log4j.core.appender.AbstractOutputStreamAppender.directEncodeEvent(AbstractOutputStreamAppender.java:120)%0D%0A%09at org.apache.logging.log4j.core.appender.AbstractOutputStreamAppender.tryAppend(AbstractOutputStreamAppender.java:113)%0D%0A%09at org.apache.logging.log4j.core.appender.AbstractOutputStreamAppender.append(AbstractOutputStreamAppender.java:104)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.tryCallAppender(AppenderControl.java:155)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.callAppender0(AppenderControl.java:128)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.callAppenderPreventRecursion(AppenderControl.java:119)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.callAppender(AppenderControl.java:84)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.callAppenders(LoggerConfig.java:390)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.processLogEvent(LoggerConfig.java:375)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.log(LoggerConfig.java:359)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.log(LoggerConfig.java:349)%0D%0A%09at org.apache.logging.log4j.core.config.AwaitCompletionReliabilityStrategy.log(AwaitCompletionReliabilityStrategy.java:63)%0D%0A%09at org.apache.logging.log4j.core.Logger.logMessage(Logger.java:146)%0D%0A%09at org.apache.logging.log4j.spi.AbstractLogger.logMessage(AbstractLogger.java:1983)%0D%0A%09at org.apache.logging.log4j.spi.AbstractLogger.logIfEnabled(AbstractLogger.java:1845)%0D%0A%09at org.apache.logging.log4j.spi.AbstractLogger.warn(AbstractLogger.java:2536)%0D%0A%09at org.elasticsearch.cluster.action.shard.ShardStateAction$1.handleException(ShardStateAction.java:113)%0D%0A%09at org.elasticsearch.transport.TransportService$ContextRestoreResponseHandler.handleException(TransportService.java:957)%0D%0A%09at org.elasticsearch.test.transport.CapturingTransport.handleError(CapturingTransport.java:184)%0D%0A%09at org.elasticsearch.test.transport.CapturingTransport.handleRemoteError(CapturingTransport.java:169)%0D%0A%09at org.elasticsearch.cluster.action.shard.ShardStateActionTests.testUnhandledFailure(ShardStateActionTests.java:292)%0D%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)%0D%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)%0D%0A%09at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)%0D%0A%09at java.lang.reflect.Method.invoke(Method.java:498)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:49)%0D%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)%0D%0A%09at org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:48)%0D%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)%0D%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0D%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)%0D%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)%0D%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:41)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:53)%0D%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)%0D%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)%0D%0A%09at org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:54)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0D%0A%09at java.lang.Thread.run(Thread.java:745)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnhandledFailure(org.elasticsearch.cluster.action.shard.ShardStateActionTests)",
  "startTimestamp": 1474195552740,
  "executionTime": 107
 }
]

[
 "TEST_STARTED",
 "ID#testNoMaster(org.elasticsearch.cluster.action.shard.ShardStateActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:45:52,860][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{aCMHJD7ASEqpb4Vq3ND62A}{local}{local[13]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:45:52,862][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node_1}{CLRPdn-CR5WRfRneaMKKbg}{local}{local[15]}, previous {node}{aCMHJD7ASEqpb4Vq3ND62A}{local}{local[13]}}, removed {{node}{aCMHJD7ASEqpb4Vq3ND62A}{local}{local[13]},}, added {{node_1}{CLRPdn-CR5WRfRneaMKKbg}{local}{local[15]},{node_3}{F069wi57SmKbmdQOybaIIA}{local}{local[17]},{node_2}{FV_pAvjPQwGs49uTvVLfVg}{local}{local[16]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:45:52,871][WARN ][org.elasticsearch.cluster.action.shard] [node_s_0] [test][0] no master known for action [internal:cluster/shard/failure] for shard entry [shard id [[test][0]], allocation id [g7AIOkZdSQWURLRij-07dA], primary term [0], message [test], failure [CorruptIndexException[simulated (resource=null)]]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:45:52,872][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_0}{PmN-tce3TLOY0X6FxeCK6Q}{local}{local[14]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoMaster(org.elasticsearch.cluster.action.shard.ShardStateActionTests)",
  "startTimestamp": 1474195552848,
  "executionTime": 27
 }
]

[
 "TEST_STARTED",
 "ID#testShardNotFound(org.elasticsearch.cluster.action.shard.ShardStateActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:45:52,890][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{CNzxDN42T4ihEAOwkVwupg}{local}{local[21]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:45:52,893][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node_1}{gI6dsYQOQZeJ4efR3IE7Ig}{local}{local[23]}, previous {node}{CNzxDN42T4ihEAOwkVwupg}{local}{local[21]}}, removed {{node}{CNzxDN42T4ihEAOwkVwupg}{local}{local[21]},}, added {{node_4}{3BIU_KsBQnOnku4U0Bcbpg}{local}{local[26]},{node_5}{owEz4PI1QLyoBz6zDgiP6Q}{local}{local[27]},{node_1}{gI6dsYQOQZeJ4efR3IE7Ig}{local}{local[23]},{node_3}{U_LzqFCTTvied6MYQGSNAg}{local}{local[25]},{node_2}{MYKN1cI-QWevC_td84jbxw}{local}{local[24]},}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testShardNotFound(org.elasticsearch.cluster.action.shard.ShardStateActionTests)",
  "startTimestamp": 1474195552875,
  "executionTime": 20
 }
]

[
 "TEST_STARTED",
 "ID#testMasterChannelException(org.elasticsearch.cluster.action.shard.ShardStateActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:45:52,910][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{WOMQLXZbTvSXiMsEK3nzvQ}{local}{local[31]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:45:52,923][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node_1}{Am4K7wnMSzKmjP3HR1ZGvQ}{local}{local[33]}, previous {node}{WOMQLXZbTvSXiMsEK3nzvQ}{local}{local[31]}}, removed {{node}{WOMQLXZbTvSXiMsEK3nzvQ}{local}{local[31]},}, added {{node_1}{Am4K7wnMSzKmjP3HR1ZGvQ}{local}{local[33]},{node_2}{4L20XRLLRV61IQfKKy0j3Q}{local}{local[34]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:45:52,925][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_0}{8QG-yJWxSUWswIH0ooD8og}{local}{local[32]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMasterChannelException(org.elasticsearch.cluster.action.shard.ShardStateActionTests)",
  "startTimestamp": 1474195552895,
  "executionTime": 597
 }
]

[
 "TEST_STARTED",
 "ID#testNoLongerPrimaryShardException(org.elasticsearch.cluster.action.shard.ShardStateActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:45:53,498][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{L54t_IImTqaJFu1htKzs4w}{local}{local[38]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:45:53,500][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node_1}{imNIoelkQaeyi-gqxC-pWw}{local}{local[40]}, previous {node}{L54t_IImTqaJFu1htKzs4w}{local}{local[38]}}, removed {{node}{L54t_IImTqaJFu1htKzs4w}{local}{local[38]},}, added {{node_1}{imNIoelkQaeyi-gqxC-pWw}{local}{local[40]},{node_4}{ZJpQ77gYSQW4Ma0EqqvksA}{local}{local[43]},{node_2}{DxcFnwEDQHCxPkU-67wK5A}{local}{local[41]},{node_5}{mJqmQGyHRyile1lzc29_Lw}{local}{local[44]},{node_6}{OTLPD3oyR-i2YVxY-4mAvQ}{local}{local[45]},{node_3}{q21VvuewSKS-rehIIY4xsg}{local}{local[42]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "2016-09-18 07:45:53,504 TEST-ShardStateActionTests.testNoLongerPrimaryShardException-seed#[FD13852EF36FC81C] ERROR An exception occurred processing Appender console java.security.AccessControlException: access denied (\"java.lang.RuntimePermission\" \"accessClassInPackage.sun.reflect\")%0D%0A%09at java.security.AccessControlContext.checkPermission(AccessControlContext.java:472)%0D%0A%09at java.security.AccessController.checkPermission(AccessController.java:884)%0D%0A%09at java.lang.SecurityManager.checkPermission(SecurityManager.java:549)%0D%0A%09at java.lang.SecurityManager.checkPackageAccess(SecurityManager.java:1564)%0D%0A%09at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:311)%0D%0A%09at java.lang.ClassLoader.loadClass(ClassLoader.java:357)%0D%0A%09at java.lang.Class.forName0(Native Method)%0D%0A%09at java.lang.Class.forName(Class.java:264)%0D%0A%09at org.apache.logging.log4j.util.LoaderUtil.loadClass(LoaderUtil.java:122)%0D%0A%09at org.apache.logging.log4j.core.util.Loader.loadClass(Loader.java:228)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.loadClass(ThrowableProxy.java:496)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.toExtendedStackTrace(ThrowableProxy.java:617)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.<init>(ThrowableProxy.java:163)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.<init>(ThrowableProxy.java:138)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.<init>(ThrowableProxy.java:117)%0D%0A%09at org.apache.logging.log4j.core.impl.MutableLogEvent.getThrownProxy(MutableLogEvent.java:314)%0D%0A%09at org.apache.logging.log4j.core.pattern.ExtendedThrowablePatternConverter.format(ExtendedThrowablePatternConverter.java:61)%0D%0A%09at org.apache.logging.log4j.core.pattern.PatternFormatter.format(PatternFormatter.java:38)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout$PatternSerializer.toSerializable(PatternLayout.java:294)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout.toText(PatternLayout.java:195)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout.encode(PatternLayout.java:180)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout.encode(PatternLayout.java:57)%0D%0A%09at org.apache.logging.log4j.core.appender.AbstractOutputStreamAppender.directEncodeEvent(AbstractOutputStreamAppender.java:120)%0D%0A%09at org.apache.logging.log4j.core.appender.AbstractOutputStreamAppender.tryAppend(AbstractOutputStreamAppender.java:113)%0D%0A%09at org.apache.logging.log4j.core.appender.AbstractOutputStreamAppender.append(AbstractOutputStreamAppender.java:104)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.tryCallAppender(AppenderControl.java:155)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.callAppender0(AppenderControl.java:128)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.callAppenderPreventRecursion(AppenderControl.java:119)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.callAppender(AppenderControl.java:84)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.callAppenders(LoggerConfig.java:390)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.processLogEvent(LoggerConfig.java:375)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.log(LoggerConfig.java:359)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.log(LoggerConfig.java:349)%0D%0A%09at org.apache.logging.log4j.core.config.AwaitCompletionReliabilityStrategy.log(AwaitCompletionReliabilityStrategy.java:63)%0D%0A%09at org.apache.logging.log4j.core.Logger.logMessage(Logger.java:146)%0D%0A%09at org.apache.logging.log4j.spi.AbstractLogger.logMessage(AbstractLogger.java:1983)%0D%0A%09at org.apache.logging.log4j.spi.AbstractLogger.logIfEnabled(AbstractLogger.java:1845)%0D%0A%09at org.apache.logging.log4j.spi.AbstractLogger.warn(AbstractLogger.java:2536)%0D%0A%09at org.elasticsearch.cluster.action.shard.ShardStateAction$1.handleException(ShardStateAction.java:113)%0D%0A%09at org.elasticsearch.transport.TransportService$ContextRestoreResponseHandler.handleException(TransportService.java:957)%0D%0A%09at org.elasticsearch.test.transport.CapturingTransport.handleError(CapturingTransport.java:184)%0D%0A%09at org.elasticsearch.test.transport.CapturingTransport.handleRemoteError(CapturingTransport.java:169)%0D%0A%09at org.elasticsearch.cluster.action.shard.ShardStateActionTests.testNoLongerPrimaryShardException(ShardStateActionTests.java:360)%0D%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)%0D%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)%0D%0A%09at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)%0D%0A%09at java.lang.reflect.Method.invoke(Method.java:498)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:49)%0D%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)%0D%0A%09at org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:48)%0D%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)%0D%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0D%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)%0D%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)%0D%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:41)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:53)%0D%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)%0D%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)%0D%0A%09at org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:54)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0D%0A%09at java.lang.Thread.run(Thread.java:745)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoLongerPrimaryShardException(org.elasticsearch.cluster.action.shard.ShardStateActionTests)",
  "startTimestamp": 1474195553492,
  "executionTime": 16
 }
]

[
 "TEST_STARTED",
 "ID#testSuccess(org.elasticsearch.cluster.action.shard.ShardStateActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:45:53,513][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{v3ztdb8KQpupIDxKuR5K9g}{local}{local[49]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:45:53,515][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node_1}{CYzuV2BxQdWvIwaBibq2cg}{local}{local[51]}, previous {node}{v3ztdb8KQpupIDxKuR5K9g}{local}{local[49]}}, removed {{node}{v3ztdb8KQpupIDxKuR5K9g}{local}{local[49]},}, added {{node_1}{CYzuV2BxQdWvIwaBibq2cg}{local}{local[51]},{node_2}{RKfhH3BXQFOKdC3zYTUGvQ}{local}{local[52]},}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSuccess(org.elasticsearch.cluster.action.shard.ShardStateActionTests)",
  "startTimestamp": 1474195553508,
  "executionTime": 9
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.action.shard.ShardStateActionTests",
  "startTimestamp": 1474195552684,
  "executionTime": 835
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.geo.builders.MultiPolygonBuilderTests",
   "displayName": "org.elasticsearch.common.geo.builders.MultiPolygonBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.common.geo.builders.MultiPolygonBuilderTests",
   "children": [
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.common.geo.builders.MultiPolygonBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.common.geo.builders.MultiPolygonBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.common.geo.builders.MultiPolygonBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.common.geo.builders.MultiPolygonBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.common.geo.builders.MultiPolygonBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.common.geo.builders.MultiPolygonBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.common.geo.builders.MultiPolygonBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.common.geo.builders.MultiPolygonBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.common.geo.builders.MultiPolygonBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195553530
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.common.geo.builders.MultiPolygonBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.common.geo.builders.MultiPolygonBuilderTests)",
  "startTimestamp": 1474195553553,
  "executionTime": 773
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.common.geo.builders.MultiPolygonBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.common.geo.builders.MultiPolygonBuilderTests)",
  "startTimestamp": 1474195554326,
  "executionTime": 88
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.common.geo.builders.MultiPolygonBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.common.geo.builders.MultiPolygonBuilderTests)",
  "startTimestamp": 1474195554414,
  "executionTime": 1545
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.geo.builders.MultiPolygonBuilderTests",
  "startTimestamp": 1474195553530,
  "executionTime": 2438
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.service.ClusterServiceTests",
   "displayName": "org.elasticsearch.cluster.service.ClusterServiceTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.service.ClusterServiceTests",
   "children": [
    {
     "id": "ID#testClusterStateUpdateLogging(org.elasticsearch.cluster.service.ClusterServiceTests)",
     "displayName": "testClusterStateUpdateLogging(org.elasticsearch.cluster.service.ClusterServiceTests)",
     "methodName": "testClusterStateUpdateLogging",
     "className": "org.elasticsearch.cluster.service.ClusterServiceTests",
     "children": []
    },
    {
     "id": "ID#testLongClusterStateUpdateLogging(org.elasticsearch.cluster.service.ClusterServiceTests)",
     "displayName": "testLongClusterStateUpdateLogging(org.elasticsearch.cluster.service.ClusterServiceTests)",
     "methodName": "testLongClusterStateUpdateLogging",
     "className": "org.elasticsearch.cluster.service.ClusterServiceTests",
     "children": []
    },
    {
     "id": "ID#testDuplicateSubmission(org.elasticsearch.cluster.service.ClusterServiceTests)",
     "displayName": "testDuplicateSubmission(org.elasticsearch.cluster.service.ClusterServiceTests)",
     "methodName": "testDuplicateSubmission",
     "className": "org.elasticsearch.cluster.service.ClusterServiceTests",
     "children": []
    },
    {
     "id": "ID#testClusterStateUpdateTasksAreExecutedInOrder(org.elasticsearch.cluster.service.ClusterServiceTests)",
     "displayName": "testClusterStateUpdateTasksAreExecutedInOrder(org.elasticsearch.cluster.service.ClusterServiceTests)",
     "methodName": "testClusterStateUpdateTasksAreExecutedInOrder",
     "className": "org.elasticsearch.cluster.service.ClusterServiceTests",
     "children": []
    },
    {
     "id": "ID#testTimeoutUpdateTask(org.elasticsearch.cluster.service.ClusterServiceTests)",
     "displayName": "testTimeoutUpdateTask(org.elasticsearch.cluster.service.ClusterServiceTests)",
     "methodName": "testTimeoutUpdateTask",
     "className": "org.elasticsearch.cluster.service.ClusterServiceTests",
     "children": []
    },
    {
     "id": "ID#testPrioritizedTasks(org.elasticsearch.cluster.service.ClusterServiceTests)",
     "displayName": "testPrioritizedTasks(org.elasticsearch.cluster.service.ClusterServiceTests)",
     "methodName": "testPrioritizedTasks",
     "className": "org.elasticsearch.cluster.service.ClusterServiceTests",
     "children": []
    },
    {
     "id": "ID#testClusterStateTaskListenerThrowingExceptionIsOkay(org.elasticsearch.cluster.service.ClusterServiceTests)",
     "displayName": "testClusterStateTaskListenerThrowingExceptionIsOkay(org.elasticsearch.cluster.service.ClusterServiceTests)",
     "methodName": "testClusterStateTaskListenerThrowingExceptionIsOkay",
     "className": "org.elasticsearch.cluster.service.ClusterServiceTests",
     "children": []
    },
    {
     "id": "ID#testClusterStateBatchedUpdates(org.elasticsearch.cluster.service.ClusterServiceTests)",
     "displayName": "testClusterStateBatchedUpdates(org.elasticsearch.cluster.service.ClusterServiceTests)",
     "methodName": "testClusterStateBatchedUpdates",
     "className": "org.elasticsearch.cluster.service.ClusterServiceTests",
     "children": []
    },
    {
     "id": "ID#testSingleBatchSubmission(org.elasticsearch.cluster.service.ClusterServiceTests)",
     "displayName": "testSingleBatchSubmission(org.elasticsearch.cluster.service.ClusterServiceTests)",
     "methodName": "testSingleBatchSubmission",
     "className": "org.elasticsearch.cluster.service.ClusterServiceTests",
     "children": []
    },
    {
     "id": "ID#testMasterAwareExecution(org.elasticsearch.cluster.service.ClusterServiceTests)",
     "displayName": "testMasterAwareExecution(org.elasticsearch.cluster.service.ClusterServiceTests)",
     "methodName": "testMasterAwareExecution",
     "className": "org.elasticsearch.cluster.service.ClusterServiceTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195556017
 }
]

[
 "TEST_STARTED",
 "ID#testClusterStateUpdateLogging(org.elasticsearch.cluster.service.ClusterServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:45:56,166][TRACE][org.elasticsearch.cluster.service] [node_s_0] will process [test setting state]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:45:56,215][DEBUG][org.elasticsearch.cluster.service] [node_s_0] processing [test setting state]: execute%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:45:56,215][TRACE][org.elasticsearch.cluster.service] [node_s_0] cluster state updated, source [test setting state]%0Acluster uuid: _na_%0Aversion: 2%0Astate uuid: iyLIeuH8TWSj7nnFGBzm-w%0Afrom_diff: false%0Ameta data version: 0%0Anodes: %0A   {node1}{zGTVWkvaQzq3wIx36tnIgA}{local}{local[56]}, local, master%0Arouting_table (version 0):%0Arouting_nodes:%0A---- unassigned%0A%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:45:56,216][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node1}{zGTVWkvaQzq3wIx36tnIgA}{local}{local[56]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:45:56,216][DEBUG][org.elasticsearch.cluster.service] [node_s_0] publishing cluster state version [2]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:45:56,216][DEBUG][org.elasticsearch.cluster.service] [node_s_0] set local cluster state to version 2%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:45:56,216][DEBUG][org.elasticsearch.cluster.service] [node_s_0] processing [test setting state]: took [0s] done applying updated cluster_state (version: 2, uuid: iyLIeuH8TWSj7nnFGBzm-w)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:45:56,228][TRACE][org.elasticsearch.cluster.service] [node_s_0] will process [test1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "2016-09-18 12:45:56,228 elasticsearch[clusterService#updateTask][T#1] ERROR Attempted to append to non-started appender mock"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:45:56,229][DEBUG][org.elasticsearch.cluster.service] [node_s_0] processing [test1]: execute%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "2016-09-18 12:45:56,229 elasticsearch[clusterService#updateTask][T#1] ERROR Attempted to append to non-started appender mock"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:45:56,230][DEBUG][org.elasticsearch.cluster.service] [node_s_0] processing [test1]: took [1s] no change in cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "2016-09-18 12:45:56,230 elasticsearch[clusterService#updateTask][T#1] ERROR Attempted to append to non-started appender mock"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:45:56,231][TRACE][org.elasticsearch.cluster.service] [node_s_0] will process [test2]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "2016-09-18 12:45:56,231 elasticsearch[clusterService#updateTask][T#1] ERROR Attempted to append to non-started appender mock"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:45:56,231][DEBUG][org.elasticsearch.cluster.service] [node_s_0] processing [test2]: execute%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:45:56,232][TRACE][org.elasticsearch.cluster.service] failed to execute cluster state update in [2s], state:%0Aversion [2], source [test2]%0Anodes: %0A   {node1}{zGTVWkvaQzq3wIx36tnIgA}{local}{local[56]}, local, master%0Arouting_table (version 0):%0Arouting_nodes:%0A---- unassigned%0A%0D%0Ajava.lang.IllegalArgumentException: Testing handling of exceptions in the cluster state task%0A%09at org.elasticsearch.cluster.service.ClusterServiceTests$14.execute(ClusterServiceTests.java:716) ~[test/:?]%0A%09at org.elasticsearch.cluster.ClusterStateUpdateTask.execute(ClusterStateUpdateTask.java:45) ~[main/:5.0.0-alpha6-SNAPSHOT]%0A%09at org.elasticsearch.cluster.service.ClusterService.runTasksForExecutor(ClusterService.java:555) [main/:?]%0A%09at org.elasticsearch.cluster.service.ClusterService$UpdateTask.run(ClusterService.java:894) [main/:?]%0A%09at org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingRunnable.run(ThreadContext.java:444) [main/:?]%0A%09at org.elasticsearch.common.util.concurrent.PrioritizedEsThreadPoolExecutor$TieBreakingPrioritizedRunnable.runAndClean(PrioritizedEsThreadPoolExecutor.java:237) [main/:?]%0A%09at org.elasticsearch.common.util.concurrent.PrioritizedEsThreadPoolExecutor$TieBreakingPrioritizedRunnable.run(PrioritizedEsThreadPoolExecutor.java:200) [main/:?]%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_102]%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_102]%0A%09at java.lang.Thread.run(Thread.java:745) [?:1.8.0_102]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:45:56,235][DEBUG][org.elasticsearch.cluster.service] cluster state update task [test2] failed%0D%0Ajava.lang.IllegalArgumentException: Testing handling of exceptions in the cluster state task%0A%09at org.elasticsearch.cluster.service.ClusterServiceTests$14.execute(ClusterServiceTests.java:716) ~[test/:?]%0A%09at org.elasticsearch.cluster.ClusterStateUpdateTask.execute(ClusterStateUpdateTask.java:45) ~[main/:5.0.0-alpha6-SNAPSHOT]%0A%09at org.elasticsearch.cluster.service.ClusterService.runTasksForExecutor(ClusterService.java:555) [main/:?]%0A%09at org.elasticsearch.cluster.service.ClusterService$UpdateTask.run(ClusterService.java:894) [main/:?]%0A%09at org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingRunnable.run(ThreadContext.java:444) [main/:?]%0A%09at org.elasticsearch.common.util.concurrent.PrioritizedEsThreadPoolExecutor$TieBreakingPrioritizedRunnable.runAndClean(PrioritizedEsThreadPoolExecutor.java:237) [main/:?]%0A%09at org.elasticsearch.common.util.concurrent.PrioritizedEsThreadPoolExecutor$TieBreakingPrioritizedRunnable.run(PrioritizedEsThreadPoolExecutor.java:200) [main/:?]%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_102]%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_102]%0A%09at java.lang.Thread.run(Thread.java:745) [?:1.8.0_102]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:45:56,236][DEBUG][org.elasticsearch.cluster.service] [node_s_0] processing [test2]: took [2s] no change in cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:45:56,236][TRACE][org.elasticsearch.cluster.service] [node_s_0] will process [test3]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:45:56,237][DEBUG][org.elasticsearch.cluster.service] [node_s_0] processing [test3]: execute%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:45:56,238][TRACE][org.elasticsearch.cluster.service] [node_s_0] cluster state updated, source [test3]%0Acluster uuid: _na_%0Aversion: 4%0Astate uuid: wLEpd0NzRQOh7PfLnYDvyg%0Afrom_diff: false%0Ameta data version: 0%0Anodes: %0A   {node1}{zGTVWkvaQzq3wIx36tnIgA}{local}{local[56]}, local, master%0Arouting_table (version 0):%0Arouting_nodes:%0A---- unassigned%0A%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:45:56,239][DEBUG][org.elasticsearch.cluster.service] [node_s_0] publishing cluster state version [4]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:45:56,240][DEBUG][org.elasticsearch.cluster.service] [node_s_0] set local cluster state to version 4%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:45:56,241][DEBUG][org.elasticsearch.cluster.service] [node_s_0] processing [test3]: took [3s] done applying updated cluster_state (version: 4, uuid: wLEpd0NzRQOh7PfLnYDvyg)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:45:56,241][TRACE][org.elasticsearch.cluster.service] [node_s_0] will process [test4]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:45:56,241][DEBUG][org.elasticsearch.cluster.service] [node_s_0] processing [test4]: execute%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:45:56,241][DEBUG][org.elasticsearch.cluster.service] [node_s_0] processing [test4]: took [0s] no change in cluster_state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClusterStateUpdateLogging(org.elasticsearch.cluster.service.ClusterServiceTests)",
  "startTimestamp": 1474195556154,
  "executionTime": 89
 }
]

[
 "TEST_STARTED",
 "ID#testLongClusterStateUpdateLogging(org.elasticsearch.cluster.service.ClusterServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:45:56,383][WARN ][org.elasticsearch.cluster.service] [node_s_0] cluster state update task [test2] took [32s] above the warn threshold of 30s%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "2016-09-18 12:45:56,388 elasticsearch[clusterService#updateTask][T#1] ERROR Attempted to append to non-started appender mock"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:45:56,388][WARN ][org.elasticsearch.cluster.service] [node_s_0] cluster state update task [test2] took [32s] above the warn threshold of 30s%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "2016-09-18 12:45:56,389 elasticsearch[clusterService#updateTask][T#1] ERROR Attempted to append to non-started appender mock"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:45:56,390][WARN ][org.elasticsearch.cluster.service] [node_s_0] cluster state update task [test3] took [33s] above the warn threshold of 30s%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "2016-09-18 12:45:56,390 elasticsearch[clusterService#updateTask][T#1] ERROR Attempted to append to non-started appender mock"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:45:56,393][WARN ][org.elasticsearch.cluster.service] [node_s_0] cluster state update task [test4] took [34s] above the warn threshold of 30s%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "2016-09-18 12:45:56,394 elasticsearch[clusterService#updateTask][T#1] ERROR Attempted to append to non-started appender mock"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLongClusterStateUpdateLogging(org.elasticsearch.cluster.service.ClusterServiceTests)",
  "startTimestamp": 1474195556243,
  "executionTime": 153
 }
]

[
 "TEST_STARTED",
 "ID#testDuplicateSubmission(org.elasticsearch.cluster.service.ClusterServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:45:56,428][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node1}{2uJ1PrexTgKKu31pJsNyog}{local}{local[58]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDuplicateSubmission(org.elasticsearch.cluster.service.ClusterServiceTests)",
  "startTimestamp": 1474195556396,
  "executionTime": 45
 }
]

[
 "TEST_STARTED",
 "ID#testClusterStateUpdateTasksAreExecutedInOrder(org.elasticsearch.cluster.service.ClusterServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:45:56,459][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node1}{3B0E1mUiSd21wo_xUZQMNQ}{local}{local[59]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClusterStateUpdateTasksAreExecutedInOrder(org.elasticsearch.cluster.service.ClusterServiceTests)",
  "startTimestamp": 1474195556442,
  "executionTime": 43
 }
]

[
 "TEST_STARTED",
 "ID#testTimeoutUpdateTask(org.elasticsearch.cluster.service.ClusterServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:45:56,565][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node1}{FrgwSMc7Sy6By9U0HxvfAA}{local}{local[60]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTimeoutUpdateTask(org.elasticsearch.cluster.service.ClusterServiceTests)",
  "startTimestamp": 1474195556485,
  "executionTime": 90
 }
]

[
 "TEST_STARTED",
 "ID#testPrioritizedTasks(org.elasticsearch.cluster.service.ClusterServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:45:56,581][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node1}{5hwYKkMwQs27YlPEa5YjUg}{local}{local[61]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPrioritizedTasks(org.elasticsearch.cluster.service.ClusterServiceTests)",
  "startTimestamp": 1474195556575,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testClusterStateTaskListenerThrowingExceptionIsOkay(org.elasticsearch.cluster.service.ClusterServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:45:56,591][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node1}{XyiwjCneTXWAMlU9aAi_Ww}{local}{local[62]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:45:56,596][ERROR][org.elasticsearch.cluster.service] exception thrown by listener while notifying of cluster state processed from [testClusterStateTaskListenerThrowingExceptionIsOkay], old cluster state:%0Acluster uuid: _na_%0Aversion: 2%0Astate uuid: g2MWcF4eQAuVq-YBrMg3eA%0Afrom_diff: false%0Ameta data version: 0%0Anodes: %0A   {node1}{XyiwjCneTXWAMlU9aAi_Ww}{local}{local[62]}, local, master%0Arouting_table (version 0):%0Arouting_nodes:%0A---- unassigned%0A%0Anew cluster state:%0Acluster uuid: _na_%0Aversion: 3%0Astate uuid: _2BhVkbtQZOa_b-Si6wgig%0Afrom_diff: false%0Ameta data version: 0%0Anodes: %0A   {node1}{XyiwjCneTXWAMlU9aAi_Ww}{local}{local[62]}, local, master%0Arouting_table (version 0):%0Arouting_nodes:%0A---- unassigned%0A%0D%0Ajava.lang.IllegalStateException: testClusterStateTaskListenerThrowingExceptionIsOkay%0A%09at org.elasticsearch.cluster.service.ClusterServiceTests$8.clusterStateProcessed(ClusterServiceTests.java:291) ~[test/:?]%0A%09at org.elasticsearch.cluster.service.ClusterService$SafeClusterStateTaskListener.clusterStateProcessed(ClusterService.java:821) [main/:?]%0A%09at org.elasticsearch.cluster.service.ClusterService.runTasksForExecutor(ClusterService.java:739) [main/:?]%0A%09at org.elasticsearch.cluster.service.ClusterService$UpdateTask.run(ClusterService.java:894) [main/:?]%0A%09at org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingRunnable.run(ThreadContext.java:444) [main/:?]%0A%09at org.elasticsearch.common.util.concurrent.PrioritizedEsThreadPoolExecutor$TieBreakingPrioritizedRunnable.runAndClean(PrioritizedEsThreadPoolExecutor.java:237) [main/:?]%0A%09at org.elasticsearch.common.util.concurrent.PrioritizedEsThreadPoolExecutor$TieBreakingPrioritizedRunnable.run(PrioritizedEsThreadPoolExecutor.java:200) [main/:?]%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_102]%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_102]%0A%09at java.lang.Thread.run(Thread.java:745) [?:1.8.0_102]%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClusterStateTaskListenerThrowingExceptionIsOkay(org.elasticsearch.cluster.service.ClusterServiceTests)",
  "startTimestamp": 1474195556583,
  "executionTime": 19
 }
]

[
 "TEST_STARTED",
 "ID#testClusterStateBatchedUpdates(org.elasticsearch.cluster.service.ClusterServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:45:56,624][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node1}{otrcViAESBCu5KH2XWDlzg}{local}{local[63]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClusterStateBatchedUpdates(org.elasticsearch.cluster.service.ClusterServiceTests)",
  "startTimestamp": 1474195556613,
  "executionTime": 129
 }
]

[
 "TEST_STARTED",
 "ID#testSingleBatchSubmission(org.elasticsearch.cluster.service.ClusterServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:45:56,764][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node1}{2bbl67B1RmeMkEC952Zovw}{local}{local[64]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleBatchSubmission(org.elasticsearch.cluster.service.ClusterServiceTests)",
  "startTimestamp": 1474195556743,
  "executionTime": 23
 }
]

[
 "TEST_STARTED",
 "ID#testMasterAwareExecution(org.elasticsearch.cluster.service.ClusterServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:45:56,808][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node1}{aTyIeYPFQvm-Z3D9ZM3CQw}{local}{local[65]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMasterAwareExecution(org.elasticsearch.cluster.service.ClusterServiceTests)",
  "startTimestamp": 1474195556766,
  "executionTime": 102
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.service.ClusterServiceTests",
  "startTimestamp": 1474195556017,
  "executionTime": 853
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.indices.IndexingMemoryControllerTests",
   "displayName": "org.elasticsearch.indices.IndexingMemoryControllerTests",
   "methodName": null,
   "className": "org.elasticsearch.indices.IndexingMemoryControllerTests",
   "children": [
    {
     "id": "ID#testThrottling(org.elasticsearch.indices.IndexingMemoryControllerTests)",
     "displayName": "testThrottling(org.elasticsearch.indices.IndexingMemoryControllerTests)",
     "methodName": "testThrottling",
     "className": "org.elasticsearch.indices.IndexingMemoryControllerTests",
     "children": []
    },
    {
     "id": "ID#testDeletesAloneCanTriggerRefresh(org.elasticsearch.indices.IndexingMemoryControllerTests)",
     "displayName": "testDeletesAloneCanTriggerRefresh(org.elasticsearch.indices.IndexingMemoryControllerTests)",
     "methodName": "testDeletesAloneCanTriggerRefresh",
     "className": "org.elasticsearch.indices.IndexingMemoryControllerTests",
     "children": []
    },
    {
     "id": "ID#testNegativeMaxIndexBufferSize(org.elasticsearch.indices.IndexingMemoryControllerTests)",
     "displayName": "testNegativeMaxIndexBufferSize(org.elasticsearch.indices.IndexingMemoryControllerTests)",
     "methodName": "testNegativeMaxIndexBufferSize",
     "className": "org.elasticsearch.indices.IndexingMemoryControllerTests",
     "children": []
    },
    {
     "id": "ID#testNegativeShardInactiveTime(org.elasticsearch.indices.IndexingMemoryControllerTests)",
     "displayName": "testNegativeShardInactiveTime(org.elasticsearch.indices.IndexingMemoryControllerTests)",
     "methodName": "testNegativeShardInactiveTime",
     "className": "org.elasticsearch.indices.IndexingMemoryControllerTests",
     "children": []
    },
    {
     "id": "ID#testShardAdditionAndRemoval(org.elasticsearch.indices.IndexingMemoryControllerTests)",
     "displayName": "testShardAdditionAndRemoval(org.elasticsearch.indices.IndexingMemoryControllerTests)",
     "methodName": "testShardAdditionAndRemoval",
     "className": "org.elasticsearch.indices.IndexingMemoryControllerTests",
     "children": []
    },
    {
     "id": "ID#testTranslogRecoveryWorksWithIMC(org.elasticsearch.indices.IndexingMemoryControllerTests)",
     "displayName": "testTranslogRecoveryWorksWithIMC(org.elasticsearch.indices.IndexingMemoryControllerTests)",
     "methodName": "testTranslogRecoveryWorksWithIMC",
     "className": "org.elasticsearch.indices.IndexingMemoryControllerTests",
     "children": []
    },
    {
     "id": "ID#testMinBufferSizes(org.elasticsearch.indices.IndexingMemoryControllerTests)",
     "displayName": "testMinBufferSizes(org.elasticsearch.indices.IndexingMemoryControllerTests)",
     "methodName": "testMinBufferSizes",
     "className": "org.elasticsearch.indices.IndexingMemoryControllerTests",
     "children": []
    },
    {
     "id": "ID#testNegativeInterval(org.elasticsearch.indices.IndexingMemoryControllerTests)",
     "displayName": "testNegativeInterval(org.elasticsearch.indices.IndexingMemoryControllerTests)",
     "methodName": "testNegativeInterval",
     "className": "org.elasticsearch.indices.IndexingMemoryControllerTests",
     "children": []
    },
    {
     "id": "ID#testActiveInactive(org.elasticsearch.indices.IndexingMemoryControllerTests)",
     "displayName": "testActiveInactive(org.elasticsearch.indices.IndexingMemoryControllerTests)",
     "methodName": "testActiveInactive",
     "className": "org.elasticsearch.indices.IndexingMemoryControllerTests",
     "children": []
    },
    {
     "id": "ID#testNegativeMinIndexBufferSize(org.elasticsearch.indices.IndexingMemoryControllerTests)",
     "displayName": "testNegativeMinIndexBufferSize(org.elasticsearch.indices.IndexingMemoryControllerTests)",
     "methodName": "testNegativeMinIndexBufferSize",
     "className": "org.elasticsearch.indices.IndexingMemoryControllerTests",
     "children": []
    },
    {
     "id": "ID#testMaxBufferSizes(org.elasticsearch.indices.IndexingMemoryControllerTests)",
     "displayName": "testMaxBufferSizes(org.elasticsearch.indices.IndexingMemoryControllerTests)",
     "methodName": "testMaxBufferSizes",
     "className": "org.elasticsearch.indices.IndexingMemoryControllerTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195556882
 }
]

[
 "TEST_STARTED",
 "ID#testThrottling(org.elasticsearch.indices.IndexingMemoryControllerTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:45:57,113][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:45:57,160][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:45:57,161][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:45:57,164][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[7260], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:45:57,167][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:45:57,167][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:45:57,442][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:45:57,442][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:45:57,443][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[3]}, bound_addresses {local[3]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:45:57,446][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{EdVyNUACT6O4a5z2F4x7Gw}{JupbTCESRpmN_OMrCUHLIA}{local}{local[3]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:45:57,447][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:45:57,470][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:45:57,488][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [3]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:45:57,712][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:45:57,831][INFO ][org.elasticsearch.indices] [node_s_0] now throttling indexing for shard [[test][1]]: segment writing can't keep up%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:45:57,831][INFO ][org.elasticsearch.indices] [node_s_0] --> Indexing more data%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:45:57,831][INFO ][org.elasticsearch.indices] [node_s_0] now throttling indexing for shard [[test][0]]: segment writing can't keep up%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:45:57,831][INFO ][org.elasticsearch.indices] [node_s_0] stop throttling indexing for shard [[test][1]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:45:57,831][INFO ][org.elasticsearch.indices] [node_s_0] stop throttling indexing for shard [[test][0]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:45:57,831][INFO ][org.elasticsearch.indices] [node_s_0] [IndexingMemoryControllerTests#testThrottling]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThrottling(org.elasticsearch.indices.IndexingMemoryControllerTests)",
  "startTimestamp": 1474195557051,
  "executionTime": 1096
 }
]

[
 "TEST_STARTED",
 "ID#testDeletesAloneCanTriggerRefresh(org.elasticsearch.indices.IndexingMemoryControllerTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:45:58,157][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:45:58,256][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[index][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:45:58,534][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index/jMCFdaDwRSmpHR5CmaRNag] create_mapping [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:05,068][INFO ][org.elasticsearch.indices] [node_s_0] now throttling indexing for shard [[index][0]]: segment writing can't keep up%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:05,069][INFO ][org.elasticsearch.indices] [node_s_0] [IndexingMemoryControllerTests#testDeletesAloneCanTriggerRefresh]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDeletesAloneCanTriggerRefresh(org.elasticsearch.indices.IndexingMemoryControllerTests)",
  "startTimestamp": 1474195558147,
  "executionTime": 7232
 }
]

[
 "TEST_STARTED",
 "ID#testNegativeMaxIndexBufferSize(org.elasticsearch.indices.IndexingMemoryControllerTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:05,384][INFO ][org.elasticsearch.indices] [node_s_0] [IndexingMemoryControllerTests#testNegativeMaxIndexBufferSize]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNegativeMaxIndexBufferSize(org.elasticsearch.indices.IndexingMemoryControllerTests)",
  "startTimestamp": 1474195565379,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testNegativeShardInactiveTime(org.elasticsearch.indices.IndexingMemoryControllerTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:05,398][INFO ][org.elasticsearch.indices] [node_s_0] [IndexingMemoryControllerTests#testNegativeShardInactiveTime]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNegativeShardInactiveTime(org.elasticsearch.indices.IndexingMemoryControllerTests)",
  "startTimestamp": 1474195565392,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testShardAdditionAndRemoval(org.elasticsearch.indices.IndexingMemoryControllerTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:05,420][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [3]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:05,671][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:05,688][INFO ][org.elasticsearch.indices] [node_s_0] [IndexingMemoryControllerTests#testShardAdditionAndRemoval]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testShardAdditionAndRemoval(org.elasticsearch.indices.IndexingMemoryControllerTests)",
  "startTimestamp": 1474195565404,
  "executionTime": 415
 }
]

[
 "TEST_STARTED",
 "ID#testTranslogRecoveryWorksWithIMC(org.elasticsearch.indices.IndexingMemoryControllerTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:05,829][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:05,967][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:05,987][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/oDOUabdeSG6XNO-B4lyNzw] create_mapping [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:07,139][INFO ][org.elasticsearch.indices] [node_s_0] now throttling indexing for shard [[test][0]]: segment writing can't keep up%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:07,576][INFO ][org.elasticsearch.indices] [node_s_0] [IndexingMemoryControllerTests#testTranslogRecoveryWorksWithIMC]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTranslogRecoveryWorksWithIMC(org.elasticsearch.indices.IndexingMemoryControllerTests)",
  "startTimestamp": 1474195565819,
  "executionTime": 1801
 }
]

[
 "TEST_STARTED",
 "ID#testMinBufferSizes(org.elasticsearch.indices.IndexingMemoryControllerTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:07,625][INFO ][org.elasticsearch.indices] [node_s_0] [IndexingMemoryControllerTests#testMinBufferSizes]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMinBufferSizes(org.elasticsearch.indices.IndexingMemoryControllerTests)",
  "startTimestamp": 1474195567620,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testNegativeInterval(org.elasticsearch.indices.IndexingMemoryControllerTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:07,631][INFO ][org.elasticsearch.indices] [node_s_0] [IndexingMemoryControllerTests#testNegativeInterval]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNegativeInterval(org.elasticsearch.indices.IndexingMemoryControllerTests)",
  "startTimestamp": 1474195567627,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testActiveInactive(org.elasticsearch.indices.IndexingMemoryControllerTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:07,642][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [2]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:07,765][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:07,778][INFO ][org.elasticsearch.indices] [node_s_0] now throttling indexing for shard [[test][1]]: segment writing can't keep up%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:07,778][INFO ][org.elasticsearch.indices] [node_s_0] [IndexingMemoryControllerTests#testActiveInactive]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testActiveInactive(org.elasticsearch.indices.IndexingMemoryControllerTests)",
  "startTimestamp": 1474195567633,
  "executionTime": 206
 }
]

[
 "TEST_STARTED",
 "ID#testNegativeMinIndexBufferSize(org.elasticsearch.indices.IndexingMemoryControllerTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:07,845][INFO ][org.elasticsearch.indices] [node_s_0] [IndexingMemoryControllerTests#testNegativeMinIndexBufferSize]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNegativeMinIndexBufferSize(org.elasticsearch.indices.IndexingMemoryControllerTests)",
  "startTimestamp": 1474195567839,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testMaxBufferSizes(org.elasticsearch.indices.IndexingMemoryControllerTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:07,853][INFO ][org.elasticsearch.indices] [node_s_0] [IndexingMemoryControllerTests#testMaxBufferSizes]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMaxBufferSizes(org.elasticsearch.indices.IndexingMemoryControllerTests)",
  "startTimestamp": 1474195567849,
  "executionTime": 5
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:07,855][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:07,855][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:07,856][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:07,860][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.indices.IndexingMemoryControllerTests",
  "startTimestamp": 1474195556882,
  "executionTime": 10997
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.lucene.search.function.ScriptScoreFunctionTests",
   "displayName": "org.elasticsearch.common.lucene.search.function.ScriptScoreFunctionTests",
   "methodName": null,
   "className": "org.elasticsearch.common.lucene.search.function.ScriptScoreFunctionTests",
   "children": [
    {
     "id": "ID#testScriptScoresReturnsNaN(org.elasticsearch.common.lucene.search.function.ScriptScoreFunctionTests)",
     "displayName": "testScriptScoresReturnsNaN(org.elasticsearch.common.lucene.search.function.ScriptScoreFunctionTests)",
     "methodName": "testScriptScoresReturnsNaN",
     "className": "org.elasticsearch.common.lucene.search.function.ScriptScoreFunctionTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195567894
 }
]

[
 "TEST_STARTED",
 "ID#testScriptScoresReturnsNaN(org.elasticsearch.common.lucene.search.function.ScriptScoreFunctionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testScriptScoresReturnsNaN(org.elasticsearch.common.lucene.search.function.ScriptScoreFunctionTests)",
  "startTimestamp": 1474195567925,
  "executionTime": 144
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.lucene.search.function.ScriptScoreFunctionTests",
  "startTimestamp": 1474195567894,
  "executionTime": 177
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.ingest.PipelineFactoryTests",
   "displayName": "org.elasticsearch.ingest.PipelineFactoryTests",
   "methodName": null,
   "className": "org.elasticsearch.ingest.PipelineFactoryTests",
   "children": [
    {
     "id": "ID#testCreateUnusedProcessorOptions(org.elasticsearch.ingest.PipelineFactoryTests)",
     "displayName": "testCreateUnusedProcessorOptions(org.elasticsearch.ingest.PipelineFactoryTests)",
     "methodName": "testCreateUnusedProcessorOptions",
     "className": "org.elasticsearch.ingest.PipelineFactoryTests",
     "children": []
    },
    {
     "id": "ID#testCreateWithPipelineEmptyOnFailure(org.elasticsearch.ingest.PipelineFactoryTests)",
     "displayName": "testCreateWithPipelineEmptyOnFailure(org.elasticsearch.ingest.PipelineFactoryTests)",
     "methodName": "testCreateWithPipelineEmptyOnFailure",
     "className": "org.elasticsearch.ingest.PipelineFactoryTests",
     "children": []
    },
    {
     "id": "ID#testCreateWithNoProcessorsField(org.elasticsearch.ingest.PipelineFactoryTests)",
     "displayName": "testCreateWithNoProcessorsField(org.elasticsearch.ingest.PipelineFactoryTests)",
     "methodName": "testCreateWithNoProcessorsField",
     "className": "org.elasticsearch.ingest.PipelineFactoryTests",
     "children": []
    },
    {
     "id": "ID#testCreateWithEmptyProcessorsField(org.elasticsearch.ingest.PipelineFactoryTests)",
     "displayName": "testCreateWithEmptyProcessorsField(org.elasticsearch.ingest.PipelineFactoryTests)",
     "methodName": "testCreateWithEmptyProcessorsField",
     "className": "org.elasticsearch.ingest.PipelineFactoryTests",
     "children": []
    },
    {
     "id": "ID#testFlattenProcessors(org.elasticsearch.ingest.PipelineFactoryTests)",
     "displayName": "testFlattenProcessors(org.elasticsearch.ingest.PipelineFactoryTests)",
     "methodName": "testFlattenProcessors",
     "className": "org.elasticsearch.ingest.PipelineFactoryTests",
     "children": []
    },
    {
     "id": "ID#testCreateWithPipelineIgnoreFailure(org.elasticsearch.ingest.PipelineFactoryTests)",
     "displayName": "testCreateWithPipelineIgnoreFailure(org.elasticsearch.ingest.PipelineFactoryTests)",
     "methodName": "testCreateWithPipelineIgnoreFailure",
     "className": "org.elasticsearch.ingest.PipelineFactoryTests",
     "children": []
    },
    {
     "id": "ID#testCreateProcessorsWithOnFailureProperties(org.elasticsearch.ingest.PipelineFactoryTests)",
     "displayName": "testCreateProcessorsWithOnFailureProperties(org.elasticsearch.ingest.PipelineFactoryTests)",
     "methodName": "testCreateProcessorsWithOnFailureProperties",
     "className": "org.elasticsearch.ingest.PipelineFactoryTests",
     "children": []
    },
    {
     "id": "ID#testCreate(org.elasticsearch.ingest.PipelineFactoryTests)",
     "displayName": "testCreate(org.elasticsearch.ingest.PipelineFactoryTests)",
     "methodName": "testCreate",
     "className": "org.elasticsearch.ingest.PipelineFactoryTests",
     "children": []
    },
    {
     "id": "ID#testCreateWithPipelineOnFailure(org.elasticsearch.ingest.PipelineFactoryTests)",
     "displayName": "testCreateWithPipelineOnFailure(org.elasticsearch.ingest.PipelineFactoryTests)",
     "methodName": "testCreateWithPipelineOnFailure",
     "className": "org.elasticsearch.ingest.PipelineFactoryTests",
     "children": []
    },
    {
     "id": "ID#testCreateWithPipelineEmptyOnFailureInProcessor(org.elasticsearch.ingest.PipelineFactoryTests)",
     "displayName": "testCreateWithPipelineEmptyOnFailureInProcessor(org.elasticsearch.ingest.PipelineFactoryTests)",
     "methodName": "testCreateWithPipelineEmptyOnFailureInProcessor",
     "className": "org.elasticsearch.ingest.PipelineFactoryTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195568091
 }
]

[
 "TEST_STARTED",
 "ID#testCreateUnusedProcessorOptions(org.elasticsearch.ingest.PipelineFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCreateUnusedProcessorOptions(org.elasticsearch.ingest.PipelineFactoryTests)",
  "startTimestamp": 1474195568135,
  "executionTime": 40
 }
]

[
 "TEST_STARTED",
 "ID#testCreateWithPipelineEmptyOnFailure(org.elasticsearch.ingest.PipelineFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCreateWithPipelineEmptyOnFailure(org.elasticsearch.ingest.PipelineFactoryTests)",
  "startTimestamp": 1474195568175,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testCreateWithNoProcessorsField(org.elasticsearch.ingest.PipelineFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCreateWithNoProcessorsField(org.elasticsearch.ingest.PipelineFactoryTests)",
  "startTimestamp": 1474195568178,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testCreateWithEmptyProcessorsField(org.elasticsearch.ingest.PipelineFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCreateWithEmptyProcessorsField(org.elasticsearch.ingest.PipelineFactoryTests)",
  "startTimestamp": 1474195568183,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testFlattenProcessors(org.elasticsearch.ingest.PipelineFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFlattenProcessors(org.elasticsearch.ingest.PipelineFactoryTests)",
  "startTimestamp": 1474195568189,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCreateWithPipelineIgnoreFailure(org.elasticsearch.ingest.PipelineFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCreateWithPipelineIgnoreFailure(org.elasticsearch.ingest.PipelineFactoryTests)",
  "startTimestamp": 1474195568191,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testCreateProcessorsWithOnFailureProperties(org.elasticsearch.ingest.PipelineFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCreateProcessorsWithOnFailureProperties(org.elasticsearch.ingest.PipelineFactoryTests)",
  "startTimestamp": 1474195568194,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCreate(org.elasticsearch.ingest.PipelineFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCreate(org.elasticsearch.ingest.PipelineFactoryTests)",
  "startTimestamp": 1474195568196,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testCreateWithPipelineOnFailure(org.elasticsearch.ingest.PipelineFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCreateWithPipelineOnFailure(org.elasticsearch.ingest.PipelineFactoryTests)",
  "startTimestamp": 1474195568203,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCreateWithPipelineEmptyOnFailureInProcessor(org.elasticsearch.ingest.PipelineFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCreateWithPipelineEmptyOnFailureInProcessor(org.elasticsearch.ingest.PipelineFactoryTests)",
  "startTimestamp": 1474195568206,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.ingest.PipelineFactoryTests",
  "startTimestamp": 1474195568091,
  "executionTime": 128
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.sort.FieldSortBuilderTests",
   "displayName": "org.elasticsearch.search.sort.FieldSortBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.search.sort.FieldSortBuilderTests",
   "children": [
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.sort.FieldSortBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.sort.FieldSortBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.sort.FieldSortBuilderTests",
     "children": []
    },
    {
     "id": "ID#testReverseOptionFails(org.elasticsearch.search.sort.FieldSortBuilderTests)",
     "displayName": "testReverseOptionFails(org.elasticsearch.search.sort.FieldSortBuilderTests)",
     "methodName": "testReverseOptionFails",
     "className": "org.elasticsearch.search.sort.FieldSortBuilderTests",
     "children": []
    },
    {
     "id": "ID#testBuildSortField(org.elasticsearch.search.sort.FieldSortBuilderTests)",
     "displayName": "testBuildSortField(org.elasticsearch.search.sort.FieldSortBuilderTests)",
     "methodName": "testBuildSortField",
     "className": "org.elasticsearch.search.sort.FieldSortBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.sort.FieldSortBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.search.sort.FieldSortBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.sort.FieldSortBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.sort.FieldSortBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.sort.FieldSortBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.sort.FieldSortBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195568289
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.sort.FieldSortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.sort.FieldSortBuilderTests)",
  "startTimestamp": 1474195568362,
  "executionTime": 176
 }
]

[
 "TEST_STARTED",
 "ID#testReverseOptionFails(org.elasticsearch.search.sort.FieldSortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReverseOptionFails(org.elasticsearch.search.sort.FieldSortBuilderTests)",
  "startTimestamp": 1474195568538,
  "executionTime": 18
 }
]

[
 "TEST_STARTED",
 "ID#testBuildSortField(org.elasticsearch.search.sort.FieldSortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBuildSortField(org.elasticsearch.search.sort.FieldSortBuilderTests)",
  "startTimestamp": 1474195568557,
  "executionTime": 388
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.sort.FieldSortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.sort.FieldSortBuilderTests)",
  "startTimestamp": 1474195568945,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.sort.FieldSortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.sort.FieldSortBuilderTests)",
  "startTimestamp": 1474195568951,
  "executionTime": 9
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.sort.FieldSortBuilderTests",
  "startTimestamp": 1474195568289,
  "executionTime": 696
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.indices.cluster.IndicesClusterStateServiceRandomUpdatesTests",
   "displayName": "org.elasticsearch.indices.cluster.IndicesClusterStateServiceRandomUpdatesTests",
   "methodName": null,
   "className": "org.elasticsearch.indices.cluster.IndicesClusterStateServiceRandomUpdatesTests",
   "children": [
    {
     "id": "ID#testRandomClusterStateUpdates(org.elasticsearch.indices.cluster.IndicesClusterStateServiceRandomUpdatesTests)",
     "displayName": "testRandomClusterStateUpdates(org.elasticsearch.indices.cluster.IndicesClusterStateServiceRandomUpdatesTests)",
     "methodName": "testRandomClusterStateUpdates",
     "className": "org.elasticsearch.indices.cluster.IndicesClusterStateServiceRandomUpdatesTests",
     "children": []
    },
    {
     "id": "ID#testJoiningNewClusterOnlyRemovesInMemoryIndexStructures(org.elasticsearch.indices.cluster.IndicesClusterStateServiceRandomUpdatesTests)",
     "displayName": "testJoiningNewClusterOnlyRemovesInMemoryIndexStructures(org.elasticsearch.indices.cluster.IndicesClusterStateServiceRandomUpdatesTests)",
     "methodName": "testJoiningNewClusterOnlyRemovesInMemoryIndexStructures",
     "className": "org.elasticsearch.indices.cluster.IndicesClusterStateServiceRandomUpdatesTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195569000
 }
]

[
 "TEST_STARTED",
 "ID#testRandomClusterStateUpdates(org.elasticsearch.indices.cluster.IndicesClusterStateServiceRandomUpdatesTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:10,147][INFO ][org.elasticsearch.indices.cluster] [node_s_0] Iteration 0%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:10,248][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_pfwiimgxrpaztaj] creating index, cause [api], templates [], shards [2]/[1], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:10,258][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] closing indices [[[index_pfwiimgxrpaztaj/8jny_FcOQeOvACN4BBw7Xg]]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:10,270][INFO ][org.elasticsearch.indices.cluster] [node_s_0] Iteration 1%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:10,272][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_aibmwlraqhhogqu] creating index, cause [api], templates [], shards [2]/[1], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:10,275][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_xxenysgvksmszge] creating index, cause [api], templates [], shards [2]/[2], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:10,276][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [RED] (reason: [index [index_xxenysgvksmszge] created]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:10,308][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] updating number_of_replicas to [2] for indices [index_xxenysgvksmszge, index_aibmwlraqhhogqu]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:10,396][INFO ][org.elasticsearch.indices.cluster] [node_s_0] Iteration 2%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:10,399][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_nzqfkaqixfpdcns] creating index, cause [api], templates [], shards [1]/[1], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:10,403][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_gfmvqdosxitgrad] creating index, cause [api], templates [], shards [2]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:10,406][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] updating number_of_replicas to [2] for indices [index_aibmwlraqhhogqu]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:10,417][INFO ][org.elasticsearch.indices.cluster] [node_s_0] Iteration 3%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:10,419][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] closing indices [[[index_nzqfkaqixfpdcns/P3pLRbSURxq_Q-1e51GgZQ]]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:10,423][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_imwvumhrxckecxw] creating index, cause [api], templates [], shards [1]/[1], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:10,428][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_lcrfrtskkfjtrbm] creating index, cause [api], templates [], shards [1]/[1], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:10,436][INFO ][org.elasticsearch.indices.cluster] [node_s_0] Iteration 4%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:10,448][INFO ][org.elasticsearch.indices.cluster] [node_s_0] Iteration 5%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:10,451][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_omoogiugossaael] creating index, cause [api], templates [], shards [1]/[1], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:10,452][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [RED] (reason: [index [index_omoogiugossaael] created]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:10,457][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_nvitbfrpglkxjlc] creating index, cause [api], templates [], shards [3]/[1], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:10,459][INFO ][org.elasticsearch.indices.cluster] [node_s_0] Iteration 6%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:10,460][INFO ][org.elasticsearch.indices.cluster] [node_s_0] Iteration 7%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:10,461][INFO ][org.elasticsearch.indices.cluster] [node_s_0] Iteration 8%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:10,462][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_gbfzpmevgbzslsr] creating index, cause [api], templates [], shards [3]/[1], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:10,471][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_tgxagsngmemquyf] creating index, cause [api], templates [], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:10,475][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_kxmexrcbzcllpew] creating index, cause [api], templates [], shards [3]/[2], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:10,479][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_mazvebymprhvgls] creating index, cause [api], templates [], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:10,487][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] updating number_of_replicas to [2] for indices [index_kxmexrcbzcllpew]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:10,491][INFO ][org.elasticsearch.indices.cluster] [node_s_0] Iteration 9%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:10,493][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_sxjjlmngljbmeqm] creating index, cause [api], templates [], shards [2]/[1], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:10,495][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [RED] (reason: [index [index_sxjjlmngljbmeqm] created]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:10,515][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_oryosyzjwgogjyu] creating index, cause [api], templates [], shards [2]/[2], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:10,522][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_efgphmbpwabfiow] creating index, cause [api], templates [], shards [2]/[1], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:10,531][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_uaitcjvotrkgjks] creating index, cause [api], templates [], shards [2]/[1], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:10,535][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] updating number_of_replicas to [2] for indices [index_efgphmbpwabfiow]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:10,543][INFO ][org.elasticsearch.indices.cluster] [node_s_0] Iteration 10%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:10,545][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_jgrmppxttppujlm] creating index, cause [api], templates [], shards [2]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:10,604][INFO ][org.elasticsearch.indices.cluster] [node_s_0] Iteration 11%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:10,611][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_zfawfhpkrqcfngw] creating index, cause [api], templates [], shards [1]/[2], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:10,614][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] closing indices [[[index_jgrmppxttppujlm/uM6UuHthSciEuRtCEBjZ3g]]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:10,616][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] updating number_of_replicas to [0] for indices [index_zfawfhpkrqcfngw]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:10,619][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_igrhfjbrhjjsdbc] creating index, cause [api], templates [], shards [3]/[2], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:10,623][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [RED] (reason: [index [index_igrhfjbrhjjsdbc] created]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:10,625][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_imgxgfalgsfpupb] creating index, cause [api], templates [], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:10,654][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] updating number_of_replicas to [1] for indices [index_igrhfjbrhjjsdbc]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:10,661][INFO ][org.elasticsearch.indices.cluster] [node_s_0] Iteration 12%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:10,664][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_lijjygrspmymhlk] creating index, cause [api], templates [], shards [3]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:10,667][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_vgpzdhpcoxlayfa] creating index, cause [api], templates [], shards [2]/[1], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:10,671][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_hhqctkbfzxbgiax] creating index, cause [api], templates [], shards [1]/[2], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:10,749][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] closing indices [[[index_lijjygrspmymhlk/TSG7f5hHRmaH8WBtv-PuDA]]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:10,752][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_vleeoledgemhtrv] creating index, cause [api], templates [], shards [2]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:10,755][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_jgwxdhionvqvyzg] creating index, cause [api], templates [], shards [2]/[2], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:10,760][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] opening indices [[[index_lijjygrspmymhlk/TSG7f5hHRmaH8WBtv-PuDA]]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:10,762][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [RED] (reason: [indices opened [[[index_lijjygrspmymhlk/TSG7f5hHRmaH8WBtv-PuDA]]]]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:10,764][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] updating number_of_replicas to [0] for indices [index_jgwxdhionvqvyzg]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:10,782][INFO ][org.elasticsearch.indices.cluster] [node_s_0] Iteration 13%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:10,784][INFO ][org.elasticsearch.indices.cluster] [node_s_0] Iteration 14%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:10,785][INFO ][org.elasticsearch.indices.cluster] [node_s_0] Iteration 15%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:10,788][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_ylyfgpryhgwwpsl] creating index, cause [api], templates [], shards [3]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:10,792][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_ejxeikjamvpmwms] creating index, cause [api], templates [], shards [3]/[1], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:10,795][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] updating number_of_replicas to [2] for indices [index_jgwxdhionvqvyzg]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:10,800][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_fecgxnenpuauozh] creating index, cause [api], templates [], shards [2]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:10,804][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_agbfxyavidtzwnt] creating index, cause [api], templates [], shards [2]/[2], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:10,812][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] closing indices [[[index_imgxgfalgsfpupb/6paizmhZRdm7yS2Pf2xu5Q]]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:10,815][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] updating number_of_replicas to [2] for indices [index_vleeoledgemhtrv, index_hhqctkbfzxbgiax]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:10,826][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.refresh_interval] from [1s] to [3s]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:10,838][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.refresh_interval] from [1s] to [3s]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:10,853][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.refresh_interval] from [3s] to [1s]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:10,853][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.refresh_interval] from [1s] to [3s]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:10,874][INFO ][org.elasticsearch.indices.cluster] [node_s_0] Iteration 16%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:10,876][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_ogeiwnmcwrdgkco] creating index, cause [api], templates [], shards [3]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:10,883][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_avauebnuenqpcno] creating index, cause [api], templates [], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:10,885][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [RED] (reason: [index [index_avauebnuenqpcno] created]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:10,899][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_ifwspweerbaqvpz] creating index, cause [api], templates [], shards [1]/[2], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:10,902][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_gmsprpidyvjmvif] creating index, cause [api], templates [], shards [3]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:10,915][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] closing indices [[[index_jgwxdhionvqvyzg/7IOciub9Q1CuZxS3nTdmuA]]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:10,943][INFO ][org.elasticsearch.indices.cluster] [node_s_0] Iteration 17%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:10,945][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_ydhuvvgvaxqlmlx] creating index, cause [api], templates [], shards [2]/[2], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:11,018][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] opening indices [[[index_jgrmppxttppujlm/uM6UuHthSciEuRtCEBjZ3g]]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:11,025][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] updating number_of_replicas to [1] for indices [index_gmsprpidyvjmvif]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:11,038][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.refresh_interval] from [1s] to [3s]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:11,041][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.refresh_interval] from [1s] to [3s]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:11,045][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.refresh_interval] from [1s] to [3s]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:11,046][INFO ][org.elasticsearch.indices.cluster] [node_s_0] Iteration 18%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:11,059][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_ludllghwgqucqpu] creating index, cause [api], templates [], shards [2]/[2], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:11,075][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_fjytouqzybqldzv] creating index, cause [api], templates [], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:11,089][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_hrrcsvnncdaviud] creating index, cause [api], templates [], shards [3]/[2], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:11,097][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] closing indices [[[index_ifwspweerbaqvpz/45uuwSWSQuO2UBtRrzWMkg]]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:11,098][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] opening indices [[[index_jgwxdhionvqvyzg/7IOciub9Q1CuZxS3nTdmuA]]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:11,112][INFO ][org.elasticsearch.indices.cluster] [node_s_0] Iteration 19%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:11,113][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_nwivuxoscqsvakv] creating index, cause [api], templates [], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:11,116][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] updating number_of_replicas to [0] for indices [index_nwivuxoscqsvakv, index_ludllghwgqucqpu]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:11,121][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.refresh_interval] from [1s] to [5s]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:11,125][INFO ][org.elasticsearch.indices.cluster] [node_s_0] Iteration 20%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:11,127][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_ggvdzlzjtsxuupi] creating index, cause [api], templates [], shards [2]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:11,137][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] updating number_of_replicas to [2] for indices [index_ludllghwgqucqpu]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:11,154][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_fmhdejjjftpoobd] creating index, cause [api], templates [], shards [1]/[2], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:11,160][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_jeponwdcolsccoc] creating index, cause [api], templates [], shards [2]/[2], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:11,164][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_ymgljspsyfavecq] creating index, cause [api], templates [], shards [3]/[2], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:11,176][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] closing indices [[[index_ludllghwgqucqpu/vyWPZRMdTy6Jq_fbvzV5tg]]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:11,236][INFO ][org.elasticsearch.indices.cluster] [node_s_0] Iteration 21%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:11,237][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_cjgsqtyspltsspr] creating index, cause [api], templates [], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:11,250][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_dlnzeozblrcglmn] creating index, cause [api], templates [], shards [1]/[1], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:11,269][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_ypfgcpjmwvdgkks] creating index, cause [api], templates [], shards [1]/[1], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:11,274][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_wbpnhbuhuaeuhrj] creating index, cause [api], templates [], shards [2]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:11,277][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] closing indices [[[index_fecgxnenpuauozh/XrqyDtCdQO6V_8TEVRGkAA]]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:11,294][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_bamcdkujhbjpcrz] creating index, cause [api], templates [], shards [3]/[2], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:11,299][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_ikgjatxhbguywxn] creating index, cause [api], templates [], shards [2]/[1], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:11,303][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_sxrkbpczzsixngo] creating index, cause [api], templates [], shards [3]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:11,307][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_dkbwukqlhltpwny] creating index, cause [api], templates [], shards [2]/[2], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:11,314][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] closing indices [[[index_fjytouqzybqldzv/Rr88OafzQz2whzHVaD6FrA]]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:11,337][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] closing indices [[[index_cjgsqtyspltsspr/sWrn_mkETvKz3sqMyzMYSQ]]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:11,339][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] updating number_of_replicas to [0] for indices [index_jeponwdcolsccoc, index_ikgjatxhbguywxn]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:11,362][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.refresh_interval] from [1s] to [3s]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:11,368][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.refresh_interval] from [1s] to [3s]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:11,386][INFO ][org.elasticsearch.indices.cluster] [node_s_0] Iteration 22%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:11,388][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_hckaugyotgzfwtd] creating index, cause [api], templates [], shards [2]/[1], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:11,395][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_iqpxzsqpamemial] creating index, cause [api], templates [], shards [1]/[2], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:11,398][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_hzxfkhrbfwwxjkz] creating index, cause [api], templates [], shards [2]/[1], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:11,406][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_yaqkpaddfivdzvb] creating index, cause [api], templates [], shards [1]/[1], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:11,415][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_fozkretqspoicvn] creating index, cause [api], templates [], shards [2]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:11,422][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] opening indices [[[index_ifwspweerbaqvpz/45uuwSWSQuO2UBtRrzWMkg]]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:11,425][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] updating number_of_replicas to [2] for indices [index_ypfgcpjmwvdgkks, index_wbpnhbuhuaeuhrj]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:11,432][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_iqidjqucqfvnhhg] creating index, cause [api], templates [], shards [2]/[1], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:11,434][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] closing indices [[[index_ydhuvvgvaxqlmlx/e-XHn6p-QjySMnzekV4WYg]]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:11,437][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] updating number_of_replicas to [0] for indices [index_dlnzeozblrcglmn]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:11,443][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_rufimfhtipauven] creating index, cause [api], templates [], shards [3]/[1], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:11,446][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_adirvbaoxkhaaoz] creating index, cause [api], templates [], shards [3]/[1], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:11,451][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] closing indices [[[index_ifwspweerbaqvpz/45uuwSWSQuO2UBtRrzWMkg]]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:11,454][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] updating number_of_replicas to [2] for indices [index_hzxfkhrbfwwxjkz]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:11,457][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[index_ymgljspsyfavecq][0], [index_ypfgcpjmwvdgkks][0], [index_ggvdzlzjtsxuupi][1], [index_ggvdzlzjtsxuupi][0], [index_bamcdkujhbjpcrz][0], [index_bamcdkujhbjpcrz][2]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:11,469][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.refresh_interval] from [1s] to [3s]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:11,473][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.refresh_interval] from [3s] to [4s]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:11,473][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.refresh_interval] from [1s] to [3s]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:11,478][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.refresh_interval] from [1s] to [3s]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:11,533][INFO ][org.elasticsearch.indices.cluster] [node_s_0] Iteration 23%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:11,536][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] closing indices [[[index_iqpxzsqpamemial/eEdYcpr7RJalTAuRG4W_3w]]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:11,537][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] updating number_of_replicas to [2] for indices [index_hzxfkhrbfwwxjkz]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:11,658][INFO ][org.elasticsearch.indices.cluster] [node_s_0] Iteration 24%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:11,660][INFO ][org.elasticsearch.indices.cluster] [node_s_0] Iteration 25%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:11,665][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] closing indices [[[index_hzxfkhrbfwwxjkz/VR23Tq11S2WU78avprx60Q]]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:11,674][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_ysrzanqjullmfoe] creating index, cause [api], templates [], shards [2]/[2], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:11,690][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_jsfipbsmkeuftuq] creating index, cause [api], templates [], shards [3]/[1], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:11,693][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [RED] (reason: [index [index_jsfipbsmkeuftuq] created]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:11,705][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.refresh_interval] from [3s] to [5s]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:11,708][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.refresh_interval] from [3s] to [5s]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:11,711][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.refresh_interval] from [3s] to [5s]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:11,714][INFO ][org.elasticsearch.indices.cluster] [node_s_0] Iteration 26%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:11,718][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_ggpkjimzogidkcg] creating index, cause [api], templates [], shards [1]/[1], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:11,723][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_qpagsycdcpifdfq] creating index, cause [api], templates [], shards [3]/[2], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:11,732][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] opening indices [[[index_ifwspweerbaqvpz/45uuwSWSQuO2UBtRrzWMkg]]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:11,734][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] updating number_of_replicas to [2] for indices [index_ggpkjimzogidkcg, index_ymgljspsyfavecq]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:11,740][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_oevqcwkywijstzw] creating index, cause [api], templates [], shards [1]/[1], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:11,744][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_uhrnhgtbbneeqgk] creating index, cause [api], templates [], shards [1]/[2], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:11,749][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_ipmicvdxlcapmua] creating index, cause [api], templates [], shards [3]/[2], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:11,753][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] closing indices [[[index_qpagsycdcpifdfq/DF5MtFmGS-CQ68WPecd87w]]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:11,768][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.refresh_interval] from [1s] to [2s]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:11,772][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.refresh_interval] from [1s] to [2s]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:11,778][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [index.refresh_interval] from [1s] to [2s]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:11,780][INFO ][org.elasticsearch.indices.cluster] [node_s_0] Iteration 27%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:11,783][INFO ][org.elasticsearch.indices.cluster] [node_s_0] Iteration 28%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:11,787][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_zhlewsxphbytldu] creating index, cause [api], templates [], shards [3]/[2], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:11,797][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_cgcaoakwelshngi] creating index, cause [api], templates [], shards [1]/[2], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:11,833][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_trvgpkaqivdpkjh] creating index, cause [api], templates [], shards [1]/[2], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:11,838][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] closing indices [[[index_trvgpkaqivdpkjh/jDH56CrfR-i_wXgRdLRjWw]]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:11,918][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] closing indices [[[index_sxrkbpczzsixngo/FUAmLJUzRB29SEDQ9hMuZg]]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:11,945][INFO ][org.elasticsearch.indices.cluster] [node_s_0] Iteration 29%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:11,949][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_mwatkqzqpolvrji] creating index, cause [api], templates [], shards [3]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:12,004][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index_yhazakamvtgwpgf] creating index, cause [api], templates [], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:12,082][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] opening indices [[[index_cjgsqtyspltsspr/sWrn_mkETvKz3sqMyzMYSQ]]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:12,088][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [RED] to [YELLOW] (reason: [shards started [[index_oevqcwkywijstzw][0], [index_ggvdzlzjtsxuupi][1], [index_jsfipbsmkeuftuq][2], [index_ipmicvdxlcapmua][0], [index_fozkretqspoicvn][1], [index_yaqkpaddfivdzvb][0], [index_iqidjqucqfvnhhg][1], [index_ysrzanqjullmfoe][0], [index_ifwspweerbaqvpz][0], [index_cgcaoakwelshngi][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:12,118][INFO ][org.elasticsearch.indices.cluster] [node_s_0] Final cluster state: cluster uuid: pXf8RM-rT2-yj0JiLK9AMw%0Aversion: 0%0Astate uuid: pH7Gr5agQLmpBq5y8iMNaA%0Afrom_diff: false%0Ameta data version: 0%0A   [index_hzxfkhrbfwwxjkz/VR23Tq11S2WU78avprx60Q]: v[7]%0A      0: p_term [1], a_ids []%0A      1: p_term [1], a_ids []%0A   [index_cjgsqtyspltsspr/sWrn_mkETvKz3sqMyzMYSQ]: v[5]%0A      0: p_term [2], a_ids []%0A   [index_oevqcwkywijstzw/xaItqWVaQ4aVCIAYG2m12A]: v[3]%0A      0: p_term [1], a_ids [huxFf3eVRL6_Zvv3W2mfrQ]%0A   [index_cgcaoakwelshngi/9ZOJYZ6VRqKDcKgbkbAiAg]: v[3]%0A      0: p_term [1], a_ids [al9xQR05QSOq3nX6KEoDUA]%0A   [index_fjytouqzybqldzv/Rr88OafzQz2whzHVaD6FrA]: v[4]%0A      0: p_term [1], a_ids []%0A   [index_ifwspweerbaqvpz/45uuwSWSQuO2UBtRrzWMkg]: v[10]%0A      0: p_term [3], a_ids [53g_cq_2SE6BuCI1MG_N8w]%0A   [index_dlnzeozblrcglmn/9OWAGQckSLSQ70VK0lk-tw]: v[9]%0A      0: p_term [1], a_ids [ZifLW7xXTeG_iJKhb1hNaA]%0A   [index_ipmicvdxlcapmua/s2MF2_tgQIyaJKHOoLw-aA]: v[5]%0A      0: p_term [1], a_ids [gSyQGI0oQzybaRiuqal5uA]%0A      1: p_term [1], a_ids [6K3y1cwFQ1qC1c6EIaaEgw]%0A      2: p_term [1], a_ids [PfY9FOK_RVehq42XYI_h9Q]%0A   [index_sxrkbpczzsixngo/FUAmLJUzRB29SEDQ9hMuZg]: v[10]%0A      0: p_term [1], a_ids [gma52lXXRIa926uvv3UE_w]%0A      1: p_term [1], a_ids [J8g7CBFHSayyikvRlDQddQ]%0A      2: p_term [1], a_ids [YpRcI6lVTcCF5rFac2VAkw]%0A   [index_yaqkpaddfivdzvb/m1KfNZuwQnemE_GEmdqDhQ]: v[5]%0A      0: p_term [1], a_ids [nrBh3Ak6QE22y3FU9n7mbA, 2p4YGAoeS9qtSv5NwoEfhQ]%0A   [index_fozkretqspoicvn/zIudYFd1TZeNBa2NnP9K7g]: v[8]%0A      0: p_term [1], a_ids [odAXURpATzadbDNqls4zqA]%0A      1: p_term [1], a_ids [g1hZAij0RiO7Sr8Uo2kqvA]%0A   [index_ysrzanqjullmfoe/qPxrEEONQtiDibcMldfsyA]: v[6]%0A      0: p_term [1], a_ids [YY31Iw2ESaafNmvwDtJjWw, vODNae6yRE-2WFx5xXdH0w]%0A      1: p_term [1], a_ids [621RRqeQTN6HPotAPnBt3A, IvgTTdC6TjCa0DsvxEQlDA, QyooV3jeT-uH3CLqTE9x6w]%0A   [index_ggvdzlzjtsxuupi/QuxzUizSQc6Gcv0-x2MRIA]: v[11]%0A      0: p_term [1], a_ids [SKBdKDAeQ7eeAWkjcw9Cqw]%0A      1: p_term [2], a_ids [0rSnVEgwSwavbd3t3cStiw]%0A   [index_bamcdkujhbjpcrz/H0vpXQM2TcWmVNHq0KT1KQ]: v[6]%0A      0: p_term [1], a_ids [Hj7y8XvKR6yBzU_Cr4j1zA, Ptzlv5m8S4WW_9ERIAqc5A, MkLr7Ss0Qh67RJneRAon5Q]%0A      1: p_term [1], a_ids [b93pfuRoQZSnLSRcNWnS9w, fnuym6nVRAuvAjbeLU48gQ, WC2K29pcSxiRkcfMqsp_Mg]%0A      2: p_term [1], a_ids [IRW5bpgUSGGCqQtPD1yd8A, Vg0i0SOtQymcbhx737tM6A]%0A   [index_ggpkjimzogidkcg/wYIzCqRVQjG1o-zOC4k1qg]: v[5]%0A      0: p_term [1], a_ids [DBkMKpaETomF_23R0vpBRw]%0A   [index_qpagsycdcpifdfq/DF5MtFmGS-CQ68WPecd87w]: v[4]%0A      0: p_term [1], a_ids []%0A      1: p_term [1], a_ids []%0A      2: p_term [1], a_ids []%0A   [index_rufimfhtipauven/XyVfTnFpQfy0h999v7mAww]: v[8]%0A      0: p_term [0], a_ids [Sow4S43XS8KzC3efRrggYQ, BD9PEP_XQdGwWJMvrDPPXA]%0A      1: p_term [1], a_ids [w7nw3pmkRFObKRlwpOBN9g, 2OqO8c9yRLK3n0KwqNHpIQ]%0A      2: p_term [1], a_ids [JrjQGQV9SPCUpsfr_zEjpQ, zkHF1IjQREOxWNuLjpCrgg]%0A   [index_iqidjqucqfvnhhg/U4M8SGSXTAeeD40TTU1F7A]: v[7]%0A      0: p_term [1], a_ids [U3Ird1LrQzWBMDtFE3EHAw, Spqfrf-NRQWyJd20LFLqtw]%0A      1: p_term [1], a_ids [sCbGji1_SnOJGzNWX5JBGA, KIJbqtwJQxCD4DAreJOx-Q]%0A   [index_ymgljspsyfavecq/250AjfIOT26Yho2oJrJUvA]: v[12]%0A      0: p_term [0], a_ids [olEbA1lhRJ2QP5mwaeQ-Pg, 2aj8hzLSRb2EOnb9KWxNDQ, XMe7Alg9RM6RI3T0egC80w]%0A      1: p_term [1], a_ids [MohCxpMOR-i4uWBN_X_h9Q, 5_NYy0OmQiWVM3kTVQlekw, dZMAs8n-T461tbbRuH3sYQ]%0A      2: p_term [1], a_ids [668zqQv2SJSSIOzW1ydY8Q, rUsTQ7CmRSCSb46aiI2GYQ, s0LdVq7DRhCZukrk_maoOg]%0A   [index_wbpnhbuhuaeuhrj/EHw1jzOsQqe99gleogUrDQ]: v[10]%0A      0: p_term [1], a_ids [xBQKGiwDT6aTcfYTwwYSIA, OWIL4fBzQYql8byw8jvoaw, FbJFmZUYQ1CuOGzdmPIO7Q]%0A      1: p_term [1], a_ids [kgJWWsynR2evdcnenqbwuQ, pOtUz-jgRbuT4wc-1bOwZg, v9vulyXNRqKBvYuSrxUYVw]%0A   [index_ypfgcpjmwvdgkks/JAaBh_epSeKOrLCYfIZO-w]: v[6]%0A      0: p_term [1], a_ids [cW4WZsV-TcO5v81Jq-Jx3A, y2VpLCWXRwWd4Geb4xHtBQ, 6AiobKRVSyqEF1wMKind1g]%0A   [index_ludllghwgqucqpu/vyWPZRMdTy6Jq_fbvzV5tg]: v[7]%0A      0: p_term [1], a_ids []%0A      1: p_term [1], a_ids []%0A   [index_jsfipbsmkeuftuq/gTTgCa1eQK2x6dUzLi82lw]: v[7]%0A      0: p_term [1], a_ids [exyqtk8fR0CeN9CxUXs9sg, gkT_drwgRYujTCAIzkpmlg]%0A      1: p_term [1], a_ids [j9vwUiNzQLCWbt37STvMCQ, csSz10eoSTaXDPqwuylygQ]%0A      2: p_term [1], a_ids [HwK2hj2pT3-I6C-5e7uOhQ, Uthx7GEmSnqA1LhkkEp3kA]%0A   [index_iqpxzsqpamemial/eEdYcpr7RJalTAuRG4W_3w]: v[3]%0A      0: p_term [1], a_ids []%0A   [index_mwatkqzqpolvrji/c3aCfvGgSbCrM5VOVKrG2w]: v[3]%0A      0: p_term [1], a_ids []%0A      1: p_term [1], a_ids []%0A      2: p_term [1], a_ids []%0A   [index_trvgpkaqivdpkjh/jDH56CrfR-i_wXgRdLRjWw]: v[4]%0A      0: p_term [1], a_ids []%0A   [index_yhazakamvtgwpgf/A3IqT6lzQb6BS1qHZDBNOQ]: v[2]%0A      0: p_term [1], a_ids []%0Ablocks: %0A   index_sxrkbpczzsixngo:%0A      4,index closed, blocks READ,WRITE   index_fjytouqzybqldzv:%0A      4,index closed, blocks READ,WRITE   index_ludllghwgqucqpu:%0A      4,index closed, blocks READ,WRITE   index_iqpxzsqpamemial:%0A      4,index closed, blocks READ,WRITE   index_hzxfkhrbfwwxjkz:%0A      4,index closed, blocks READ,WRITE   index_trvgpkaqivdpkjh:%0A      4,index closed, blocks READ,WRITE   index_qpagsycdcpifdfq:%0A      4,index closed, blocks READ,WRITE%0Anodes: %0A   {node_AkGRNcJW}{uCSUhJNBSb6P7nWoq8rJbA}{local}{local[73]}%0A   {node_ZocHuSBp}{urgmiwuUQpq1uEv43LFnQA}{local}{local[68]}, local, master%0A   {node_qKlJnABK}{0o1b-cakT8K6bZt_1-1Pcw}{local}{local[72]}%0A   {node_rOAaIljs}{3cVMwC0FRGaw8cajLYJ6IQ}{local}{local[71]}%0A   {node_ncktrexG}{xDG9GT7CRyelKCTTCiIrJg}{local}{local[74]}%0A   {node_komyJUwC}{A6398lhMR7CH_rIag80-FQ}{local}{local[69]}%0A   {node_smTqgxtP}{stXRwiaHSuW7EHVz9LdpBg}{local}{local[70]}%0Arouting_table (version 0):%0A-- index [[index_ggpkjimzogidkcg/wYIzCqRVQjG1o-zOC4k1qg]]%0A----shard_id [index_ggpkjimzogidkcg][0]%0A--------[index_ggpkjimzogidkcg][0], node[node_komyJUwC], [P], s[STARTED], a[id=DBkMKpaETomF_23R0vpBRw]%0A--------[index_ggpkjimzogidkcg][0], node[node_smTqgxtP], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=aggtlqblRSqpvZgbd8iMkQ], unassigned_info[[reason=INDEX_CREATED], at[2016-09-18T10:46:11.719Z], delayed=false, allocation_status[no_attempt]]%0A--------[index_ggpkjimzogidkcg][0], node[node_ncktrexG], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=xBb8vl2HTF6zHvL8U6YP2g], unassigned_info[[reason=REPLICA_ADDED], at[2016-09-18T10:46:11.734Z], delayed=false, allocation_status[no_attempt]]%0A%0A-- index [[index_rufimfhtipauven/XyVfTnFpQfy0h999v7mAww]]%0A----shard_id [index_rufimfhtipauven][0]%0A--------[index_rufimfhtipauven][0], node[node_komyJUwC], relocating [node_ncktrexG], [R], s[RELOCATING], a[id=BD9PEP_XQdGwWJMvrDPPXA, rId=phipjLGHQvSApc-IDxEnbw]%0A--------[index_rufimfhtipauven][0], node[node_smTqgxtP], [P], s[STARTED], a[id=Sow4S43XS8KzC3efRrggYQ]%0A----shard_id [index_rufimfhtipauven][1]%0A--------[index_rufimfhtipauven][1], node[node_komyJUwC], [R], s[STARTED], a[id=w7nw3pmkRFObKRlwpOBN9g]%0A--------[index_rufimfhtipauven][1], node[node_smTqgxtP], [P], s[STARTED], a[id=2OqO8c9yRLK3n0KwqNHpIQ]%0A----shard_id [index_rufimfhtipauven][2]%0A--------[index_rufimfhtipauven][2], node[node_smTqgxtP], [R], s[STARTED], a[id=zkHF1IjQREOxWNuLjpCrgg]%0A--------[index_rufimfhtipauven][2], node[node_ncktrexG], [P], s[STARTED], a[id=JrjQGQV9SPCUpsfr_zEjpQ]%0A%0A-- index [[index_dlnzeozblrcglmn/9OWAGQckSLSQ70VK0lk-tw]]%0A----shard_id [index_dlnzeozblrcglmn][0]%0A--------[index_dlnzeozblrcglmn][0], node[node_komyJUwC], relocating [node_smTqgxtP], [P], s[RELOCATING], a[id=ZifLW7xXTeG_iJKhb1hNaA, rId=g7UlmFT3SViXGSOj40Msww]%0A%0A-- index [[index_yaqkpaddfivdzvb/m1KfNZuwQnemE_GEmdqDhQ]]%0A----shard_id [index_yaqkpaddfivdzvb][0]%0A--------[index_yaqkpaddfivdzvb][0], node[node_komyJUwC], relocating [node_ncktrexG], [R], s[RELOCATING], a[id=2p4YGAoeS9qtSv5NwoEfhQ, rId=hpGYyFxeSF2dwHrlzdOjaw]%0A--------[index_yaqkpaddfivdzvb][0], node[node_smTqgxtP], [P], s[STARTED], a[id=nrBh3Ak6QE22y3FU9n7mbA]%0A%0A-- index [[index_oevqcwkywijstzw/xaItqWVaQ4aVCIAYG2m12A]]%0A----shard_id [index_oevqcwkywijstzw][0]%0A--------[index_oevqcwkywijstzw][0], node[node_ncktrexG], relocating [node_komyJUwC], [P], s[RELOCATING], a[id=huxFf3eVRL6_Zvv3W2mfrQ, rId=-I61h2BgQpOT6z8hS2T_3g]%0A--------[index_oevqcwkywijstzw][0], node[null], [R], recovery_source[peer recovery], s[UN"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "ASSIGNED], unassigned_info[[reason=INDEX_CREATED], at[2016-09-18T10:46:11.740Z], delayed=false, allocation_status[no_attempt]]%0A%0A-- index [[index_jsfipbsmkeuftuq/gTTgCa1eQK2x6dUzLi82lw]]%0A----shard_id [index_jsfipbsmkeuftuq][0]%0A--------[index_jsfipbsmkeuftuq][0], node[node_komyJUwC], [P], s[STARTED], a[id=exyqtk8fR0CeN9CxUXs9sg]%0A--------[index_jsfipbsmkeuftuq][0], node[node_smTqgxtP], relocating [node_ncktrexG], [R], s[RELOCATING], a[id=gkT_drwgRYujTCAIzkpmlg, rId=l70EfyZ_QseRnEQflOZUTQ]%0A----shard_id [index_jsfipbsmkeuftuq][1]%0A--------[index_jsfipbsmkeuftuq][1], node[node_smTqgxtP], [P], s[STARTED], a[id=csSz10eoSTaXDPqwuylygQ]%0A--------[index_jsfipbsmkeuftuq][1], node[node_ncktrexG], relocating [node_komyJUwC], [R], s[RELOCATING], a[id=j9vwUiNzQLCWbt37STvMCQ, rId=-N9hjvXsQduDt8Vp5VsgBQ]%0A----shard_id [index_jsfipbsmkeuftuq][2]%0A--------[index_jsfipbsmkeuftuq][2], node[node_smTqgxtP], relocating [node_komyJUwC], [P], s[RELOCATING], a[id=Uthx7GEmSnqA1LhkkEp3kA, rId=DxajimEQTByxH_ZHaTbNjA]%0A--------[index_jsfipbsmkeuftuq][2], node[node_ncktrexG], [R], s[STARTED], a[id=HwK2hj2pT3-I6C-5e7uOhQ]%0A%0A-- index [[index_ymgljspsyfavecq/250AjfIOT26Yho2oJrJUvA]]%0A----shard_id [index_ymgljspsyfavecq][0]%0A--------[index_ymgljspsyfavecq][0], node[node_komyJUwC], [R], s[STARTED], a[id=olEbA1lhRJ2QP5mwaeQ-Pg]%0A--------[index_ymgljspsyfavecq][0], node[node_smTqgxtP], [R], s[STARTED], a[id=2aj8hzLSRb2EOnb9KWxNDQ]%0A--------[index_ymgljspsyfavecq][0], node[node_ncktrexG], [P], s[STARTED], a[id=XMe7Alg9RM6RI3T0egC80w]%0A----shard_id [index_ymgljspsyfavecq][1]%0A--------[index_ymgljspsyfavecq][1], node[node_komyJUwC], [R], s[STARTED], a[id=5_NYy0OmQiWVM3kTVQlekw]%0A--------[index_ymgljspsyfavecq][1], node[node_smTqgxtP], [P], s[STARTED], a[id=MohCxpMOR-i4uWBN_X_h9Q]%0A--------[index_ymgljspsyfavecq][1], node[node_ncktrexG], [R], s[STARTED], a[id=dZMAs8n-T461tbbRuH3sYQ]%0A----shard_id [index_ymgljspsyfavecq][2]%0A--------[index_ymgljspsyfavecq][2], node[node_komyJUwC], [R], s[STARTED], a[id=668zqQv2SJSSIOzW1ydY8Q]%0A--------[index_ymgljspsyfavecq][2], node[node_smTqgxtP], [R], s[STARTED], a[id=rUsTQ7CmRSCSb46aiI2GYQ]%0A--------[index_ymgljspsyfavecq][2], node[node_ncktrexG], [P], s[STARTED], a[id=s0LdVq7DRhCZukrk_maoOg]%0A%0A-- index [[index_cgcaoakwelshngi/9ZOJYZ6VRqKDcKgbkbAiAg]]%0A----shard_id [index_cgcaoakwelshngi][0]%0A--------[index_cgcaoakwelshngi][0], node[node_smTqgxtP], [P], s[STARTED], a[id=al9xQR05QSOq3nX6KEoDUA]%0A--------[index_cgcaoakwelshngi][0], node[null], [R], recovery_source[peer recovery], s[UNASSIGNED], unassigned_info[[reason=INDEX_CREATED], at[2016-09-18T10:46:11.797Z], delayed=false, allocation_status[no_attempt]]%0A--------[index_cgcaoakwelshngi][0], node[null], [R], recovery_source[peer recovery], s[UNASSIGNED], unassigned_info[[reason=INDEX_CREATED], at[2016-09-18T10:46:11.797Z], delayed=false, allocation_status[no_attempt]]%0A%0A-- index [[index_bamcdkujhbjpcrz/H0vpXQM2TcWmVNHq0KT1KQ]]%0A----shard_id [index_bamcdkujhbjpcrz][0]%0A--------[index_bamcdkujhbjpcrz][0], node[node_komyJUwC], [P], s[STARTED], a[id=Ptzlv5m8S4WW_9ERIAqc5A]%0A--------[index_bamcdkujhbjpcrz][0], node[node_smTqgxtP], [R], s[STARTED], a[id=MkLr7Ss0Qh67RJneRAon5Q]%0A--------[index_bamcdkujhbjpcrz][0], node[node_ncktrexG], [R], s[STARTED], a[id=Hj7y8XvKR6yBzU_Cr4j1zA]%0A----shard_id [index_bamcdkujhbjpcrz][1]%0A--------[index_bamcdkujhbjpcrz][1], node[node_komyJUwC], [R], s[STARTED], a[id=fnuym6nVRAuvAjbeLU48gQ]%0A--------[index_bamcdkujhbjpcrz][1], node[node_smTqgxtP], [P], s[STARTED], a[id=b93pfuRoQZSnLSRcNWnS9w]%0A--------[index_bamcdkujhbjpcrz][1], node[node_ncktrexG], [R], s[STARTED], a[id=WC2K29pcSxiRkcfMqsp_Mg]%0A----shard_id [index_bamcdkujhbjpcrz][2]%0A--------[index_bamcdkujhbjpcrz][2], node[node_komyJUwC], [P], s[STARTED], a[id=IRW5bpgUSGGCqQtPD1yd8A]%0A--------[index_bamcdkujhbjpcrz][2], node[node_smTqgxtP], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=-zue-Bq2TvGrfQ9pFpIPmA], unassigned_info[[reason=INDEX_CREATED], at[2016-09-18T10:46:11.294Z], delayed=false, allocation_status[no_attempt]]%0A--------[index_bamcdkujhbjpcrz][2], node[node_ncktrexG], [R], s[STARTED], a[id=Vg0i0SOtQymcbhx737tM6A]%0A%0A-- index [[index_ipmicvdxlcapmua/s2MF2_tgQIyaJKHOoLw-aA]]%0A----shard_id [index_ipmicvdxlcapmua][0]%0A--------[index_ipmicvdxlcapmua][0], node[node_smTqgxtP], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=a_eRrICLSK-KMju08eiM6Q], unassigned_info[[reason=INDEX_CREATED], at[2016-09-18T10:46:11.749Z], delayed=false, allocation_status[no_attempt]]%0A--------[index_ipmicvdxlcapmua][0], node[node_ncktrexG], [P], s[STARTED], a[id=gSyQGI0oQzybaRiuqal5uA]%0A--------[index_ipmicvdxlcapmua][0], node[null], [R], recovery_source[peer recovery], s[UNASSIGNED], unassigned_info[[reason=INDEX_CREATED], at[2016-09-18T10:46:11.749Z], delayed=false, allocation_status[no_attempt]]%0A----shard_id [index_ipmicvdxlcapmua][1]%0A--------[index_ipmicvdxlcapmua][1], node[node_komyJUwC], [P], s[STARTED], a[id=6K3y1cwFQ1qC1c6EIaaEgw]%0A--------[index_ipmicvdxlcapmua][1], node[node_smTqgxtP], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=IrOtk-2wS5aVY03gvfG4nw], unassigned_info[[reason=INDEX_CREATED], at[2016-09-18T10:46:11.749Z], delayed=false, allocation_status[no_attempt]]%0A--------[index_ipmicvdxlcapmua][1], node[node_ncktrexG], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=zUmENt_3SuW5QGnJBSCR_w], unassigned_info[[reason=INDEX_CREATED], at[2016-09-18T10:46:11.749Z], delayed=false, allocation_status[no_attempt]]%0A----shard_id [index_ipmicvdxlcapmua][2]%0A--------[index_ipmicvdxlcapmua][2], node[node_komyJUwC], [P], s[STARTED], a[id=PfY9FOK_RVehq42XYI_h9Q]%0A--------[index_ipmicvdxlcapmua][2], node[node_smTqgxtP], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=8-0Zi5b8QJGudo1fjTe5BQ], unassigned_info[[reason=INDEX_CREATED], at[2016-09-18T10:46:11.749Z], delayed=false, allocation_status[no_attempt]]%0A--------[index_ipmicvdxlcapmua][2], node[node_ncktrexG], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=445_l3mYQPONPFMACgc5Lw], unassigned_info[[reason=INDEX_CREATED], at[2016-09-18T10:46:11.749Z], delayed=false, allocation_status[no_attempt]]%0A%0A-- index [[index_ysrzanqjullmfoe/qPxrEEONQtiDibcMldfsyA]]%0A----shard_id [index_ysrzanqjullmfoe][0]%0A--------[index_ysrzanqjullmfoe][0], node[node_komyJUwC], [R], s[STARTED], a[id=vODNae6yRE-2WFx5xXdH0w]%0A--------[index_ysrzanqjullmfoe][0], node[node_smTqgxtP], [P], s[STARTED], a[id=YY31Iw2ESaafNmvwDtJjWw]%0A--------[index_ysrzanqjullmfoe][0], node[node_ncktrexG], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=NaacJT04SnyLnDl_a8LTHg], unassigned_info[[reason=INDEX_CREATED], at[2016-09-18T10:46:11.675Z], delayed=false, allocation_status[no_attempt]]%0A----shard_id [index_ysrzanqjullmfoe][1]%0A--------[index_ysrzanqjullmfoe][1], node[node_komyJUwC], [R], s[STARTED], a[id=IvgTTdC6TjCa0DsvxEQlDA]%0A--------[index_ysrzanqjullmfoe][1], node[node_smTqgxtP], [R], s[STARTED], a[id=621RRqeQTN6HPotAPnBt3A]%0A--------[index_ysrzanqjullmfoe][1], node[node_ncktrexG], [P], s[STARTED], a[id=QyooV3jeT-uH3CLqTE9x6w]%0A%0A-- index [[index_wbpnhbuhuaeuhrj/EHw1jzOsQqe99gleogUrDQ]]%0A----shard_id [index_wbpnhbuhuaeuhrj][0]%0A--------[index_wbpnhbuhuaeuhrj][0], node[node_komyJUwC], [P], s[STARTED], a[id=xBQKGiwDT6aTcfYTwwYSIA]%0A--------[index_wbpnhbuhuaeuhrj][0], node[node_smTqgxtP], [R], s[STARTED], a[id=FbJFmZUYQ1CuOGzdmPIO7Q]%0A--------[index_wbpnhbuhuaeuhrj][0], node[node_ncktrexG], [R], s[STARTED], a[id=OWIL4fBzQYql8byw8jvoaw]%0A----shard_id [index_wbpnhbuhuaeuhrj][1]%0A--------[index_wbpnhbuhuaeuhrj][1], node[node_komyJUwC], [R], s[STARTED], a[id=pOtUz-jgRbuT4wc-1bOwZg]%0A--------[index_wbpnhbuhuaeuhrj][1], node[node_smTqgxtP], [P], s[STARTED], a[id=kgJWWsynR2evdcnenqbwuQ]%0A--------[index_wbpnhbuhuaeuhrj][1], node[node_ncktrexG], [R], s[STARTED], a[id=v9vulyXNRqKBvYuSrxUYVw]%0A%0A-- index [[index_cjgsqtyspltsspr/sWrn_mkETvKz3sqMyzMYSQ]]%0A----shard_id [index_cjgsqtyspltsspr][0]%0A--------[index_cjgsqtyspltsspr][0], node[node_komyJUwC], [P], recovery_source[new shard recovery], s[INITIALIZING], a[id=TjFM2A6lSuKbe1nSHEVGxg], unassigned_info[[reason=INDEX_REOPENED], at[2016-09-18T10:46:12.082Z], delayed=false, allocation_status[no_attempt]]%0A%0A-- index [[index_mwatkqzqpolvrji/c3aCfvGgSbCrM5VOVKrG2w]]%0A----shard_id "
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[index_mwatkqzqpolvrji][0]%0A--------[index_mwatkqzqpolvrji][0], node[node_komyJUwC], [P], recovery_source[new shard recovery], s[INITIALIZING], a[id=K9wMKIWXSOOroiwZFvuVtA], unassigned_info[[reason=INDEX_CREATED], at[2016-09-18T10:46:11.949Z], delayed=false, allocation_status[no_attempt]]%0A----shard_id [index_mwatkqzqpolvrji][1]%0A--------[index_mwatkqzqpolvrji][1], node[node_komyJUwC], [P], recovery_source[new shard recovery], s[INITIALIZING], a[id=pPfNZ10eS4K_YnS_2FoDkA], unassigned_info[[reason=INDEX_CREATED], at[2016-09-18T10:46:11.949Z], delayed=false, allocation_status[no_attempt]]%0A----shard_id [index_mwatkqzqpolvrji][2]%0A--------[index_mwatkqzqpolvrji][2], node[node_komyJUwC], [P], recovery_source[new shard recovery], s[INITIALIZING], a[id=iZd72VUZRDGlTREWz1uINw], unassigned_info[[reason=INDEX_CREATED], at[2016-09-18T10:46:11.949Z], delayed=false, allocation_status[deciders_throttled]]%0A%0A-- index [[index_ypfgcpjmwvdgkks/JAaBh_epSeKOrLCYfIZO-w]]%0A----shard_id [index_ypfgcpjmwvdgkks][0]%0A--------[index_ypfgcpjmwvdgkks][0], node[node_komyJUwC], [R], s[STARTED], a[id=6AiobKRVSyqEF1wMKind1g]%0A--------[index_ypfgcpjmwvdgkks][0], node[node_smTqgxtP], [R], s[STARTED], a[id=cW4WZsV-TcO5v81Jq-Jx3A]%0A--------[index_ypfgcpjmwvdgkks][0], node[node_ncktrexG], [P], s[STARTED], a[id=y2VpLCWXRwWd4Geb4xHtBQ]%0A%0A-- index [[index_ggvdzlzjtsxuupi/QuxzUizSQc6Gcv0-x2MRIA]]%0A----shard_id [index_ggvdzlzjtsxuupi][0]%0A--------[index_ggvdzlzjtsxuupi][0], node[node_ncktrexG], relocating [node_smTqgxtP], [P], s[RELOCATING], a[id=SKBdKDAeQ7eeAWkjcw9Cqw, rId=QQHZBCiES9GhiJSwps_e5Q]%0A----shard_id [index_ggvdzlzjtsxuupi][1]%0A--------[index_ggvdzlzjtsxuupi][1], node[node_ncktrexG], relocating [node_komyJUwC], [P], s[RELOCATING], a[id=0rSnVEgwSwavbd3t3cStiw, rId=52FvFGfnT8-e0R_X_fs9Tg]%0A%0A-- index [[index_yhazakamvtgwpgf/A3IqT6lzQb6BS1qHZDBNOQ]]%0A----shard_id [index_yhazakamvtgwpgf][0]%0A--------[index_yhazakamvtgwpgf][0], node[node_ncktrexG], [P], recovery_source[new shard recovery], s[INITIALIZING], a[id=36htz314QrK-MtGN-Yy5Qg], unassigned_info[[reason=INDEX_CREATED], at[2016-09-18T10:46:12.005Z], delayed=false, allocation_status[no_attempt]]%0A%0A-- index [[index_iqidjqucqfvnhhg/U4M8SGSXTAeeD40TTU1F7A]]%0A----shard_id [index_iqidjqucqfvnhhg][0]%0A--------[index_iqidjqucqfvnhhg][0], node[node_komyJUwC], relocating [node_smTqgxtP], [P], s[RELOCATING], a[id=U3Ird1LrQzWBMDtFE3EHAw, rId=0lsnuZgxR7aiyUbJV0rzHQ]%0A--------[index_iqidjqucqfvnhhg][0], node[node_ncktrexG], [R], s[STARTED], a[id=Spqfrf-NRQWyJd20LFLqtw]%0A----shard_id [index_iqidjqucqfvnhhg][1]%0A--------[index_iqidjqucqfvnhhg][1], node[node_komyJUwC], [P], s[STARTED], a[id=KIJbqtwJQxCD4DAreJOx-Q]%0A--------[index_iqidjqucqfvnhhg][1], node[node_ncktrexG], [R], s[STARTED], a[id=sCbGji1_SnOJGzNWX5JBGA]%0A%0A-- index [[index_fozkretqspoicvn/zIudYFd1TZeNBa2NnP9K7g]]%0A----shard_id [index_fozkretqspoicvn][0]%0A--------[index_fozkretqspoicvn][0], node[node_ncktrexG], relocating [node_smTqgxtP], [P], s[RELOCATING], a[id=odAXURpATzadbDNqls4zqA, rId=lSrJkWB1TPe52ibyQ3TbQw]%0A----shard_id [index_fozkretqspoicvn][1]%0A--------[index_fozkretqspoicvn][1], node[node_ncktrexG], [P], s[STARTED], a[id=g1hZAij0RiO7Sr8Uo2kqvA]%0A%0A-- index [[index_ifwspweerbaqvpz/45uuwSWSQuO2UBtRrzWMkg]]%0A----shard_id [index_ifwspweerbaqvpz][0]%0A--------[index_ifwspweerbaqvpz][0], node[node_komyJUwC], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=N_3NC_hRSqiwUGjDUCyGUg], unassigned_info[[reason=INDEX_REOPENED], at[2016-09-18T10:46:11.733Z], delayed=false, allocation_status[no_attempt]]%0A--------[index_ifwspweerbaqvpz][0], node[node_smTqgxtP], [P], s[STARTED], a[id=53g_cq_2SE6BuCI1MG_N8w]%0A--------[index_ifwspweerbaqvpz][0], node[null], [R], recovery_source[peer recovery], s[UNASSIGNED], unassigned_info[[reason=INDEX_REOPENED], at[2016-09-18T10:46:11.733Z], delayed=false, allocation_status[no_attempt]]%0A%0Arouting_nodes:%0A-----node_id[node_komyJUwC][V]%0A--------[index_ggpkjimzogidkcg][0], node[node_komyJUwC], [P], s[STARTED], a[id=DBkMKpaETomF_23R0vpBRw]%0A--------[index_rufimfhtipauven][1], node[node_komyJUwC], [R], s[STARTED], a[id=w7nw3pmkRFObKRlwpOBN9g]%0A--------[index_rufimfhtipauven][0], node[node_komyJUwC], relocating [node_ncktrexG], [R], s[RELOCATING], a[id=BD9PEP_XQdGwWJMvrDPPXA, rId=phipjLGHQvSApc-IDxEnbw]%0A--------[index_dlnzeozblrcglmn][0], node[node_komyJUwC], relocating [node_smTqgxtP], [P], s[RELOCATING], a[id=ZifLW7xXTeG_iJKhb1hNaA, rId=g7UlmFT3SViXGSOj40Msww]%0A--------[index_yaqkpaddfivdzvb][0], node[node_komyJUwC], relocating [node_ncktrexG], [R], s[RELOCATING], a[id=2p4YGAoeS9qtSv5NwoEfhQ, rId=hpGYyFxeSF2dwHrlzdOjaw]%0A--------[index_oevqcwkywijstzw][0], node[node_komyJUwC], relocating [node_ncktrexG], [P], recovery_source[peer recovery], s[INITIALIZING], a[id=-I61h2BgQpOT6z8hS2T_3g, rId=huxFf3eVRL6_Zvv3W2mfrQ]%0A--------[index_jsfipbsmkeuftuq][1], node[node_komyJUwC], relocating [node_ncktrexG], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=-N9hjvXsQduDt8Vp5VsgBQ, rId=j9vwUiNzQLCWbt37STvMCQ]%0A--------[index_jsfipbsmkeuftuq][2], node[node_komyJUwC], relocating [node_smTqgxtP], [P], recovery_source[peer recovery], s[INITIALIZING], a[id=DxajimEQTByxH_ZHaTbNjA, rId=Uthx7GEmSnqA1LhkkEp3kA]%0A--------[index_jsfipbsmkeuftuq][0], node[node_komyJUwC], [P], s[STARTED], a[id=exyqtk8fR0CeN9CxUXs9sg]%0A--------[index_ymgljspsyfavecq][1], node[node_komyJUwC], [R], s[STARTED], a[id=5_NYy0OmQiWVM3kTVQlekw]%0A--------[index_ymgljspsyfavecq][2], node[node_komyJUwC], [R], s[STARTED], a[id=668zqQv2SJSSIOzW1ydY8Q]%0A--------[index_ymgljspsyfavecq][0], node[node_komyJUwC], [R], s[STARTED], a[id=olEbA1lhRJ2QP5mwaeQ-Pg]%0A--------[index_bamcdkujhbjpcrz][1], node[node_komyJUwC], [R], s[STARTED], a[id=fnuym6nVRAuvAjbeLU48gQ]%0A--------[index_bamcdkujhbjpcrz][2], node[node_komyJUwC], [P], s[STARTED], a[id=IRW5bpgUSGGCqQtPD1yd8A]%0A--------[index_bamcdkujhbjpcrz][0], node[node_komyJUwC], [P], s[STARTED], a[id=Ptzlv5m8S4WW_9ERIAqc5A]%0A--------[index_ipmicvdxlcapmua][1], node[node_komyJUwC], [P], s[STARTED], a[id=6K3y1cwFQ1qC1c6EIaaEgw]%0A--------[index_ipmicvdxlcapmua][2], node[node_komyJUwC], [P], s[STARTED], a[id=PfY9FOK_RVehq42XYI_h9Q]%0A--------[index_ysrzanqjullmfoe][1], node[node_komyJUwC], [R], s[STARTED], a[id=IvgTTdC6TjCa0DsvxEQlDA]%0A--------[index_ysrzanqjullmfoe][0], node[node_komyJUwC], [R], s[STARTED], a[id=vODNae6yRE-2WFx5xXdH0w]%0A--------[index_wbpnhbuhuaeuhrj][1], node[node_komyJUwC], [R], s[STARTED], a[id=pOtUz-jgRbuT4wc-1bOwZg]%0A--------[index_wbpnhbuhuaeuhrj][0], node[node_komyJUwC], [P], s[STARTED], a[id=xBQKGiwDT6aTcfYTwwYSIA]%0A--------[index_cjgsqtyspltsspr][0], node[node_komyJUwC], [P], recovery_source[new shard recovery], s[INITIALIZING], a[id=TjFM2A6lSuKbe1nSHEVGxg], unassigned_info[[reason=INDEX_REOPENED], at[2016-09-18T10:46:12.082Z], delayed=false, allocation_status[no_attempt]]%0A--------[index_mwatkqzqpolvrji][1], node[node_komyJUwC], [P], recovery_source[new shard recovery], s[INITIALIZING], a[id=pPfNZ10eS4K_YnS_2FoDkA], unassigned_info[[reason=INDEX_CREATED], at[2016-09-18T10:46:11.949Z], delayed=false, allocation_status[no_attempt]]%0A--------[index_mwatkqzqpolvrji][2], node[node_komyJUwC], [P], recovery_source[new shard recovery], s[INITIALIZING], a[id=iZd72VUZRDGlTREWz1uINw], unassigned_info[[reason=INDEX_CREATED], at[2016-09-18T10:46:11.949Z], delayed=false, allocation_status[deciders_throttled]]%0A--------[index_mwatkqzqpolvrji][0], node[node_komyJUwC], [P], recovery_source[new shard recovery], s[INITIALIZING], a[id=K9wMKIWXSOOroiwZFvuVtA], unassigned_info[[reason=INDEX_CREATED], at[2016-09-18T10:46:11.949Z], delayed=false, allocation_status[no_attempt]]%0A--------[index_ypfgcpjmwvdgkks][0], node[node_komyJUwC], [R], s[STARTED], a[id=6AiobKRVSyqEF1wMKind1g]%0A--------[index_ggvdzlzjtsxuupi][1], node[node_komyJUwC], relocating [node_ncktrexG], [P], recovery_source[peer recovery], s[INITIALIZING], a[id=52FvFGfnT8-e0R_X_fs9Tg, rId=0rSnVEgwSwavbd3t3cStiw]%0A--------[index_iqidjqucqfvnhhg][1], node[node_komyJUwC], [P], s[STARTED], a[id=KIJbqtwJQxCD4DAreJOx-Q]%0A--------[index_iqidjqucqfvnhhg][0], node[node_komyJUwC], relocating [node_smTqgxtP], [P], s[RELOCATING], a[id=U3Ird1LrQzWBMDtFE3EHAw, rId=0lsnuZgxR7aiyUbJV0rzHQ]%0A--------[index_ifwspweerbaqvpz][0], node[node_komyJUwC], [R], recovery_source[pee"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "r recovery], s[INITIALIZING], a[id=N_3NC_hRSqiwUGjDUCyGUg], unassigned_info[[reason=INDEX_REOPENED], at[2016-09-18T10:46:11.733Z], delayed=false, allocation_status[no_attempt]]%0A-----node_id[node_smTqgxtP][V]%0A--------[index_ggpkjimzogidkcg][0], node[node_smTqgxtP], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=aggtlqblRSqpvZgbd8iMkQ], unassigned_info[[reason=INDEX_CREATED], at[2016-09-18T10:46:11.719Z], delayed=false, allocation_status[no_attempt]]%0A--------[index_rufimfhtipauven][1], node[node_smTqgxtP], [P], s[STARTED], a[id=2OqO8c9yRLK3n0KwqNHpIQ]%0A--------[index_rufimfhtipauven][2], node[node_smTqgxtP], [R], s[STARTED], a[id=zkHF1IjQREOxWNuLjpCrgg]%0A--------[index_rufimfhtipauven][0], node[node_smTqgxtP], [P], s[STARTED], a[id=Sow4S43XS8KzC3efRrggYQ]%0A--------[index_dlnzeozblrcglmn][0], node[node_smTqgxtP], relocating [node_komyJUwC], [P], recovery_source[peer recovery], s[INITIALIZING], a[id=g7UlmFT3SViXGSOj40Msww, rId=ZifLW7xXTeG_iJKhb1hNaA]%0A--------[index_yaqkpaddfivdzvb][0], node[node_smTqgxtP], [P], s[STARTED], a[id=nrBh3Ak6QE22y3FU9n7mbA]%0A--------[index_jsfipbsmkeuftuq][1], node[node_smTqgxtP], [P], s[STARTED], a[id=csSz10eoSTaXDPqwuylygQ]%0A--------[index_jsfipbsmkeuftuq][2], node[node_smTqgxtP], relocating [node_komyJUwC], [P], s[RELOCATING], a[id=Uthx7GEmSnqA1LhkkEp3kA, rId=DxajimEQTByxH_ZHaTbNjA]%0A--------[index_jsfipbsmkeuftuq][0], node[node_smTqgxtP], relocating [node_ncktrexG], [R], s[RELOCATING], a[id=gkT_drwgRYujTCAIzkpmlg, rId=l70EfyZ_QseRnEQflOZUTQ]%0A--------[index_ymgljspsyfavecq][1], node[node_smTqgxtP], [P], s[STARTED], a[id=MohCxpMOR-i4uWBN_X_h9Q]%0A--------[index_ymgljspsyfavecq][2], node[node_smTqgxtP], [R], s[STARTED], a[id=rUsTQ7CmRSCSb46aiI2GYQ]%0A--------[index_ymgljspsyfavecq][0], node[node_smTqgxtP], [R], s[STARTED], a[id=2aj8hzLSRb2EOnb9KWxNDQ]%0A--------[index_cgcaoakwelshngi][0], node[node_smTqgxtP], [P], s[STARTED], a[id=al9xQR05QSOq3nX6KEoDUA]%0A--------[index_bamcdkujhbjpcrz][1], node[node_smTqgxtP], [P], s[STARTED], a[id=b93pfuRoQZSnLSRcNWnS9w]%0A--------[index_bamcdkujhbjpcrz][2], node[node_smTqgxtP], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=-zue-Bq2TvGrfQ9pFpIPmA], unassigned_info[[reason=INDEX_CREATED], at[2016-09-18T10:46:11.294Z], delayed=false, allocation_status[no_attempt]]%0A--------[index_bamcdkujhbjpcrz][0], node[node_smTqgxtP], [R], s[STARTED], a[id=MkLr7Ss0Qh67RJneRAon5Q]%0A--------[index_ipmicvdxlcapmua][1], node[node_smTqgxtP], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=IrOtk-2wS5aVY03gvfG4nw], unassigned_info[[reason=INDEX_CREATED], at[2016-09-18T10:46:11.749Z], delayed=false, allocation_status[no_attempt]]%0A--------[index_ipmicvdxlcapmua][2], node[node_smTqgxtP], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=8-0Zi5b8QJGudo1fjTe5BQ], unassigned_info[[reason=INDEX_CREATED], at[2016-09-18T10:46:11.749Z], delayed=false, allocation_status[no_attempt]]%0A--------[index_ipmicvdxlcapmua][0], node[node_smTqgxtP], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=a_eRrICLSK-KMju08eiM6Q], unassigned_info[[reason=INDEX_CREATED], at[2016-09-18T10:46:11.749Z], delayed=false, allocation_status[no_attempt]]%0A--------[index_ysrzanqjullmfoe][1], node[node_smTqgxtP], [R], s[STARTED], a[id=621RRqeQTN6HPotAPnBt3A]%0A--------[index_ysrzanqjullmfoe][0], node[node_smTqgxtP], [P], s[STARTED], a[id=YY31Iw2ESaafNmvwDtJjWw]%0A--------[index_wbpnhbuhuaeuhrj][1], node[node_smTqgxtP], [P], s[STARTED], a[id=kgJWWsynR2evdcnenqbwuQ]%0A--------[index_wbpnhbuhuaeuhrj][0], node[node_smTqgxtP], [R], s[STARTED], a[id=FbJFmZUYQ1CuOGzdmPIO7Q]%0A--------[index_ypfgcpjmwvdgkks][0], node[node_smTqgxtP], [R], s[STARTED], a[id=cW4WZsV-TcO5v81Jq-Jx3A]%0A--------[index_ggvdzlzjtsxuupi][0], node[node_smTqgxtP], relocating [node_ncktrexG], [P], recovery_source[peer recovery], s[INITIALIZING], a[id=QQHZBCiES9GhiJSwps_e5Q, rId=SKBdKDAeQ7eeAWkjcw9Cqw]%0A--------[index_iqidjqucqfvnhhg][0], node[node_smTqgxtP], relocating [node_komyJUwC], [P], recovery_source[peer recovery], s[INITIALIZING], a[id=0lsnuZgxR7aiyUbJV0rzHQ, rId=U3Ird1LrQzWBMDtFE3EHAw]%0A--------[index_fozkretqspoicvn][0], node[node_smTqgxtP], relocating [node_ncktrexG], [P], recovery_source[peer recovery], s[INITIALIZING], a[id=lSrJkWB1TPe52ibyQ3TbQw, rId=odAXURpATzadbDNqls4zqA]%0A--------[index_ifwspweerbaqvpz][0], node[node_smTqgxtP], [P], s[STARTED], a[id=53g_cq_2SE6BuCI1MG_N8w]%0A-----node_id[node_ncktrexG][V]%0A--------[index_ggpkjimzogidkcg][0], node[node_ncktrexG], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=xBb8vl2HTF6zHvL8U6YP2g], unassigned_info[[reason=REPLICA_ADDED], at[2016-09-18T10:46:11.734Z], delayed=false, allocation_status[no_attempt]]%0A--------[index_rufimfhtipauven][2], node[node_ncktrexG], [P], s[STARTED], a[id=JrjQGQV9SPCUpsfr_zEjpQ]%0A--------[index_rufimfhtipauven][0], node[node_ncktrexG], relocating [node_komyJUwC], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=phipjLGHQvSApc-IDxEnbw, rId=BD9PEP_XQdGwWJMvrDPPXA]%0A--------[index_yaqkpaddfivdzvb][0], node[node_ncktrexG], relocating [node_komyJUwC], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=hpGYyFxeSF2dwHrlzdOjaw, rId=2p4YGAoeS9qtSv5NwoEfhQ]%0A--------[index_oevqcwkywijstzw][0], node[node_ncktrexG], relocating [node_komyJUwC], [P], s[RELOCATING], a[id=huxFf3eVRL6_Zvv3W2mfrQ, rId=-I61h2BgQpOT6z8hS2T_3g]%0A--------[index_jsfipbsmkeuftuq][1], node[node_ncktrexG], relocating [node_komyJUwC], [R], s[RELOCATING], a[id=j9vwUiNzQLCWbt37STvMCQ, rId=-N9hjvXsQduDt8Vp5VsgBQ]%0A--------[index_jsfipbsmkeuftuq][2], node[node_ncktrexG], [R], s[STARTED], a[id=HwK2hj2pT3-I6C-5e7uOhQ]%0A--------[index_jsfipbsmkeuftuq][0], node[node_ncktrexG], relocating [node_smTqgxtP], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=l70EfyZ_QseRnEQflOZUTQ, rId=gkT_drwgRYujTCAIzkpmlg]%0A--------[index_ymgljspsyfavecq][1], node[node_ncktrexG], [R], s[STARTED], a[id=dZMAs8n-T461tbbRuH3sYQ]%0A--------[index_ymgljspsyfavecq][2], node[node_ncktrexG], [P], s[STARTED], a[id=s0LdVq7DRhCZukrk_maoOg]%0A--------[index_ymgljspsyfavecq][0], node[node_ncktrexG], [P], s[STARTED], a[id=XMe7Alg9RM6RI3T0egC80w]%0A--------[index_bamcdkujhbjpcrz][1], node[node_ncktrexG], [R], s[STARTED], a[id=WC2K29pcSxiRkcfMqsp_Mg]%0A--------[index_bamcdkujhbjpcrz][2], node[node_ncktrexG], [R], s[STARTED], a[id=Vg0i0SOtQymcbhx737tM6A]%0A--------[index_bamcdkujhbjpcrz][0], node[node_ncktrexG], [R], s[STARTED], a[id=Hj7y8XvKR6yBzU_Cr4j1zA]%0A--------[index_ipmicvdxlcapmua][1], node[node_ncktrexG], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=zUmENt_3SuW5QGnJBSCR_w], unassigned_info[[reason=INDEX_CREATED], at[2016-09-18T10:46:11.749Z], delayed=false, allocation_status[no_attempt]]%0A--------[index_ipmicvdxlcapmua][2], node[node_ncktrexG], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=445_l3mYQPONPFMACgc5Lw], unassigned_info[[reason=INDEX_CREATED], at[2016-09-18T10:46:11.749Z], delayed=false, allocation_status[no_attempt]]%0A--------[index_ipmicvdxlcapmua][0], node[node_ncktrexG], [P], s[STARTED], a[id=gSyQGI0oQzybaRiuqal5uA]%0A--------[index_ysrzanqjullmfoe][1], node[node_ncktrexG], [P], s[STARTED], a[id=QyooV3jeT-uH3CLqTE9x6w]%0A--------[index_ysrzanqjullmfoe][0], node[node_ncktrexG], [R], recovery_source[peer recovery], s[INITIALIZING], a[id=NaacJT04SnyLnDl_a8LTHg], unassigned_info[[reason=INDEX_CREATED], at[2016-09-18T10:46:11.675Z], delayed=false, allocation_status[no_attempt]]%0A--------[index_wbpnhbuhuaeuhrj][1], node[node_ncktrexG], [R], s[STARTED], a[id=v9vulyXNRqKBvYuSrxUYVw]%0A--------[index_wbpnhbuhuaeuhrj][0], node[node_ncktrexG], [R], s[STARTED], a[id=OWIL4fBzQYql8byw8jvoaw]%0A--------[index_ypfgcpjmwvdgkks][0], node[node_ncktrexG], [P], s[STARTED], a[id=y2VpLCWXRwWd4Geb4xHtBQ]%0A--------[index_ggvdzlzjtsxuupi][1], node[node_ncktrexG], relocating [node_komyJUwC], [P], s[RELOCATING], a[id=0rSnVEgwSwavbd3t3cStiw, rId=52FvFGfnT8-e0R_X_fs9Tg]%0A--------[index_ggvdzlzjtsxuupi][0], node[node_ncktrexG], relocating [node_smTqgxtP], [P], s[RELOCATING], a[id=SKBdKDAeQ7eeAWkjcw9Cqw, rId=QQHZBCiES9GhiJSwps_e5Q]%0A--------[index_yhazakamvtgwpgf][0], node[node_ncktrexG], [P], recovery_source[new shard recovery], s[INITIALIZING], a[id=36htz314QrK-MtGN-Yy5Qg], unassigned_info[[reason=INDEX_CREATED], at[2016-09-18T10:46:"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "12.005Z], delayed=false, allocation_status[no_attempt]]%0A--------[index_iqidjqucqfvnhhg][1], node[node_ncktrexG], [R], s[STARTED], a[id=sCbGji1_SnOJGzNWX5JBGA]%0A--------[index_iqidjqucqfvnhhg][0], node[node_ncktrexG], [R], s[STARTED], a[id=Spqfrf-NRQWyJd20LFLqtw]%0A--------[index_fozkretqspoicvn][1], node[node_ncktrexG], [P], s[STARTED], a[id=g1hZAij0RiO7Sr8Uo2kqvA]%0A--------[index_fozkretqspoicvn][0], node[node_ncktrexG], relocating [node_smTqgxtP], [P], s[RELOCATING], a[id=odAXURpATzadbDNqls4zqA, rId=lSrJkWB1TPe52ibyQ3TbQw]%0A---- unassigned%0A--------[index_oevqcwkywijstzw][0], node[null], [R], recovery_source[peer recovery], s[UNASSIGNED], unassigned_info[[reason=INDEX_CREATED], at[2016-09-18T10:46:11.740Z], delayed=false, allocation_status[no_attempt]]%0A--------[index_cgcaoakwelshngi][0], node[null], [R], recovery_source[peer recovery], s[UNASSIGNED], unassigned_info[[reason=INDEX_CREATED], at[2016-09-18T10:46:11.797Z], delayed=false, allocation_status[no_attempt]]%0A--------[index_cgcaoakwelshngi][0], node[null], [R], recovery_source[peer recovery], s[UNASSIGNED], unassigned_info[[reason=INDEX_CREATED], at[2016-09-18T10:46:11.797Z], delayed=false, allocation_status[no_attempt]]%0A--------[index_ipmicvdxlcapmua][0], node[null], [R], recovery_source[peer recovery], s[UNASSIGNED], unassigned_info[[reason=INDEX_CREATED], at[2016-09-18T10:46:11.749Z], delayed=false, allocation_status[no_attempt]]%0A--------[index_ifwspweerbaqvpz][0], node[null], [R], recovery_source[peer recovery], s[UNASSIGNED], unassigned_info[[reason=INDEX_REOPENED], at[2016-09-18T10:46:11.733Z], delayed=false, allocation_status[no_attempt]]%0A%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRandomClusterStateUpdates(org.elasticsearch.indices.cluster.IndicesClusterStateServiceRandomUpdatesTests)",
  "startTimestamp": 1474195569058,
  "executionTime": 3070
 }
]

[
 "TEST_STARTED",
 "ID#testJoiningNewClusterOnlyRemovesInMemoryIndexStructures(org.elasticsearch.indices.cluster.IndicesClusterStateServiceRandomUpdatesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testJoiningNewClusterOnlyRemovesInMemoryIndexStructures(org.elasticsearch.indices.cluster.IndicesClusterStateServiceRandomUpdatesTests)",
  "startTimestamp": 1474195572129,
  "executionTime": 75
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.indices.cluster.IndicesClusterStateServiceRandomUpdatesTests",
  "startTimestamp": 1474195569000,
  "executionTime": 3211
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.monitor.jvm.JvmGcMonitorServiceTests",
   "displayName": "org.elasticsearch.monitor.jvm.JvmGcMonitorServiceTests",
   "methodName": null,
   "className": "org.elasticsearch.monitor.jvm.JvmGcMonitorServiceTests",
   "children": [
    {
     "id": "ID#testSlowGcLogging(org.elasticsearch.monitor.jvm.JvmGcMonitorServiceTests)",
     "displayName": "testSlowGcLogging(org.elasticsearch.monitor.jvm.JvmGcMonitorServiceTests)",
     "methodName": "testSlowGcLogging",
     "className": "org.elasticsearch.monitor.jvm.JvmGcMonitorServiceTests",
     "children": []
    },
    {
     "id": "ID#testGcOverheadLogging(org.elasticsearch.monitor.jvm.JvmGcMonitorServiceTests)",
     "displayName": "testGcOverheadLogging(org.elasticsearch.monitor.jvm.JvmGcMonitorServiceTests)",
     "methodName": "testGcOverheadLogging",
     "className": "org.elasticsearch.monitor.jvm.JvmGcMonitorServiceTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195572223
 }
]

[
 "TEST_STARTED",
 "ID#testSlowGcLogging(org.elasticsearch.monitor.jvm.JvmGcMonitorServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSlowGcLogging(org.elasticsearch.monitor.jvm.JvmGcMonitorServiceTests)",
  "startTimestamp": 1474195572660,
  "executionTime": 560
 }
]

[
 "TEST_STARTED",
 "ID#testGcOverheadLogging(org.elasticsearch.monitor.jvm.JvmGcMonitorServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGcOverheadLogging(org.elasticsearch.monitor.jvm.JvmGcMonitorServiceTests)",
  "startTimestamp": 1474195573221,
  "executionTime": 30
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.monitor.jvm.JvmGcMonitorServiceTests",
  "startTimestamp": 1474195572223,
  "executionTime": 1031
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.bootstrap.JavaVersionTests",
   "displayName": "org.elasticsearch.bootstrap.JavaVersionTests",
   "methodName": null,
   "className": "org.elasticsearch.bootstrap.JavaVersionTests",
   "children": [
    {
     "id": "ID#testValidVersions(org.elasticsearch.bootstrap.JavaVersionTests)",
     "displayName": "testValidVersions(org.elasticsearch.bootstrap.JavaVersionTests)",
     "methodName": "testValidVersions",
     "className": "org.elasticsearch.bootstrap.JavaVersionTests",
     "children": []
    },
    {
     "id": "ID#testJava8Compat(org.elasticsearch.bootstrap.JavaVersionTests)",
     "displayName": "testJava8Compat(org.elasticsearch.bootstrap.JavaVersionTests)",
     "methodName": "testJava8Compat",
     "className": "org.elasticsearch.bootstrap.JavaVersionTests",
     "children": []
    },
    {
     "id": "ID#testParse(org.elasticsearch.bootstrap.JavaVersionTests)",
     "displayName": "testParse(org.elasticsearch.bootstrap.JavaVersionTests)",
     "methodName": "testParse",
     "className": "org.elasticsearch.bootstrap.JavaVersionTests",
     "children": []
    },
    {
     "id": "ID#testCompare(org.elasticsearch.bootstrap.JavaVersionTests)",
     "displayName": "testCompare(org.elasticsearch.bootstrap.JavaVersionTests)",
     "methodName": "testCompare",
     "className": "org.elasticsearch.bootstrap.JavaVersionTests",
     "children": []
    },
    {
     "id": "ID#testInvalidVersions(org.elasticsearch.bootstrap.JavaVersionTests)",
     "displayName": "testInvalidVersions(org.elasticsearch.bootstrap.JavaVersionTests)",
     "methodName": "testInvalidVersions",
     "className": "org.elasticsearch.bootstrap.JavaVersionTests",
     "children": []
    },
    {
     "id": "ID#testToString(org.elasticsearch.bootstrap.JavaVersionTests)",
     "displayName": "testToString(org.elasticsearch.bootstrap.JavaVersionTests)",
     "methodName": "testToString",
     "className": "org.elasticsearch.bootstrap.JavaVersionTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195573262
 }
]

[
 "TEST_STARTED",
 "ID#testValidVersions(org.elasticsearch.bootstrap.JavaVersionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidVersions(org.elasticsearch.bootstrap.JavaVersionTests)",
  "startTimestamp": 1474195573359,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testJava8Compat(org.elasticsearch.bootstrap.JavaVersionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testJava8Compat(org.elasticsearch.bootstrap.JavaVersionTests)",
  "startTimestamp": 1474195573362,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testParse(org.elasticsearch.bootstrap.JavaVersionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParse(org.elasticsearch.bootstrap.JavaVersionTests)",
  "startTimestamp": 1474195573366,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testCompare(org.elasticsearch.bootstrap.JavaVersionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCompare(org.elasticsearch.bootstrap.JavaVersionTests)",
  "startTimestamp": 1474195573370,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidVersions(org.elasticsearch.bootstrap.JavaVersionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidVersions(org.elasticsearch.bootstrap.JavaVersionTests)",
  "startTimestamp": 1474195573372,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testToString(org.elasticsearch.bootstrap.JavaVersionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToString(org.elasticsearch.bootstrap.JavaVersionTests)",
  "startTimestamp": 1474195573375,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.bootstrap.JavaVersionTests",
  "startTimestamp": 1474195573262,
  "executionTime": 119
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.regex.RegexTests",
   "displayName": "org.elasticsearch.common.regex.RegexTests",
   "methodName": null,
   "className": "org.elasticsearch.common.regex.RegexTests",
   "children": [
    {
     "id": "ID#testFlags(org.elasticsearch.common.regex.RegexTests)",
     "displayName": "testFlags(org.elasticsearch.common.regex.RegexTests)",
     "methodName": "testFlags",
     "className": "org.elasticsearch.common.regex.RegexTests",
     "children": []
    },
    {
     "id": "ID#testDoubleWildcardMatch(org.elasticsearch.common.regex.RegexTests)",
     "displayName": "testDoubleWildcardMatch(org.elasticsearch.common.regex.RegexTests)",
     "methodName": "testDoubleWildcardMatch",
     "className": "org.elasticsearch.common.regex.RegexTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195573391
 }
]

[
 "TEST_STARTED",
 "ID#testFlags(org.elasticsearch.common.regex.RegexTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFlags(org.elasticsearch.common.regex.RegexTests)",
  "startTimestamp": 1474195573461,
  "executionTime": 20
 }
]

[
 "TEST_STARTED",
 "ID#testDoubleWildcardMatch(org.elasticsearch.common.regex.RegexTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDoubleWildcardMatch(org.elasticsearch.common.regex.RegexTests)",
  "startTimestamp": 1474195573481,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.regex.RegexTests",
  "startTimestamp": 1474195573391,
  "executionTime": 97
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.tasks.TaskResultTests",
   "displayName": "org.elasticsearch.tasks.TaskResultTests",
   "methodName": null,
   "className": "org.elasticsearch.tasks.TaskResultTests",
   "children": [
    {
     "id": "ID#testXContentRoundTrip(org.elasticsearch.tasks.TaskResultTests)",
     "displayName": "testXContentRoundTrip(org.elasticsearch.tasks.TaskResultTests)",
     "methodName": "testXContentRoundTrip",
     "className": "org.elasticsearch.tasks.TaskResultTests",
     "children": []
    },
    {
     "id": "ID#testBinaryRoundTrip(org.elasticsearch.tasks.TaskResultTests)",
     "displayName": "testBinaryRoundTrip(org.elasticsearch.tasks.TaskResultTests)",
     "methodName": "testBinaryRoundTrip",
     "className": "org.elasticsearch.tasks.TaskResultTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195573499
 }
]

[
 "TEST_STARTED",
 "ID#testXContentRoundTrip(org.elasticsearch.tasks.TaskResultTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testXContentRoundTrip(org.elasticsearch.tasks.TaskResultTests)",
  "startTimestamp": 1474195573524,
  "executionTime": 38
 }
]

[
 "TEST_STARTED",
 "ID#testBinaryRoundTrip(org.elasticsearch.tasks.TaskResultTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBinaryRoundTrip(org.elasticsearch.tasks.TaskResultTests)",
  "startTimestamp": 1474195573562,
  "executionTime": 10
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.tasks.TaskResultTests",
  "startTimestamp": 1474195573499,
  "executionTime": 75
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.suggest.term.SortByTests",
   "displayName": "org.elasticsearch.search.suggest.term.SortByTests",
   "methodName": null,
   "className": "org.elasticsearch.search.suggest.term.SortByTests",
   "children": [
    {
     "id": "ID#testReadFrom(org.elasticsearch.search.suggest.term.SortByTests)",
     "displayName": "testReadFrom(org.elasticsearch.search.suggest.term.SortByTests)",
     "methodName": "testReadFrom",
     "className": "org.elasticsearch.search.suggest.term.SortByTests",
     "children": []
    },
    {
     "id": "ID#testWriteTo(org.elasticsearch.search.suggest.term.SortByTests)",
     "displayName": "testWriteTo(org.elasticsearch.search.suggest.term.SortByTests)",
     "methodName": "testWriteTo",
     "className": "org.elasticsearch.search.suggest.term.SortByTests",
     "children": []
    },
    {
     "id": "ID#testValidOrdinals(org.elasticsearch.search.suggest.term.SortByTests)",
     "displayName": "testValidOrdinals(org.elasticsearch.search.suggest.term.SortByTests)",
     "methodName": "testValidOrdinals",
     "className": "org.elasticsearch.search.suggest.term.SortByTests",
     "children": []
    },
    {
     "id": "ID#testFromString(org.elasticsearch.search.suggest.term.SortByTests)",
     "displayName": "testFromString(org.elasticsearch.search.suggest.term.SortByTests)",
     "methodName": "testFromString",
     "className": "org.elasticsearch.search.suggest.term.SortByTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195573583
 }
]

[
 "TEST_STARTED",
 "ID#testReadFrom(org.elasticsearch.search.suggest.term.SortByTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReadFrom(org.elasticsearch.search.suggest.term.SortByTests)",
  "startTimestamp": 1474195573610,
  "executionTime": 28
 }
]

[
 "TEST_STARTED",
 "ID#testWriteTo(org.elasticsearch.search.suggest.term.SortByTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWriteTo(org.elasticsearch.search.suggest.term.SortByTests)",
  "startTimestamp": 1474195573638,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testValidOrdinals(org.elasticsearch.search.suggest.term.SortByTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidOrdinals(org.elasticsearch.search.suggest.term.SortByTests)",
  "startTimestamp": 1474195573640,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromString(org.elasticsearch.search.suggest.term.SortByTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromString(org.elasticsearch.search.suggest.term.SortByTests)",
  "startTimestamp": 1474195573643,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.suggest.term.SortByTests",
  "startTimestamp": 1474195573583,
  "executionTime": 65
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.QueryDSLDocumentationTests",
   "displayName": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
   "children": [
    {
     "id": "ID#testType(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testType(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testType",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testGeoPolygon(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testGeoPolygon(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testGeoPolygon",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testSpanFirst(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testSpanFirst(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testSpanFirst",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testMLT(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testMLT(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testMLT",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testSpanContaining(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testSpanContaining(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testSpanContaining",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testGeoDistance(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testGeoDistance(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testGeoDistance",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testQueryString(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testQueryString(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testQueryString",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testCommonTerms(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testCommonTerms(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testCommonTerms",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testGeoHashCell(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testGeoHashCell(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testGeoHashCell",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testBool(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testBool(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testBool",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testRange(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testRange(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testRange",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testTerms(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testTerms(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testTerms",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testGeoBoundingBox(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testGeoBoundingBox(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testGeoBoundingBox",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testWildcard(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testWildcard(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testWildcard",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testHasParent(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testHasParent(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testHasParent",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testGeoDistanceRange(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testGeoDistanceRange(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testGeoDistanceRange",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testSpanMultiTerm(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testSpanMultiTerm(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testSpanMultiTerm",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testPrefix(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testPrefix(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testPrefix",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testFuzzy(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testFuzzy(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testFuzzy",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testSpanWithin(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testSpanWithin(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testSpanWithin",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testSimpleQueryString(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testSimpleQueryString(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testSimpleQueryString",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testIndices(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testIndices(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testIndices",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testTerm(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testTerm(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testTerm",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testExists(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testExists(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testExists",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testGeoShape(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testGeoShape(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testGeoShape",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testSpanOr(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testSpanOr(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testSpanOr",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testSpanNot(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testSpanNot(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testSpanNot",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testDisMax(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testDisMax(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testDisMax",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testScript(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testScript(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testScript",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testConstantScore(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testConstantScore(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testConstantScore",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testIds(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testIds(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testIds",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testMatch(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testMatch(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testMatch",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testHasChild(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testHasChild(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testHasChild",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testNested(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testNested(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testNested",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testMatchAll(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testMatchAll(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testMatchAll",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testRegExp(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testRegExp(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testRegExp",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testSpanNear(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testSpanNear(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testSpanNear",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testBoosting(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testBoosting(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testBoosting",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testMultiMatch(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testMultiMatch(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testMultiMatch",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testFunctionScore(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testFunctionScore(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testFunctionScore",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    },
    {
     "id": "ID#testSpanTerm(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "displayName": "testSpanTerm(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
     "methodName": "testSpanTerm",
     "className": "org.elasticsearch.index.query.QueryDSLDocumentationTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195573660
 }
]

[
 "TEST_STARTED",
 "ID#testType(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testType(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1474195573731,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testGeoPolygon(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGeoPolygon(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1474195573743,
  "executionTime": 43
 }
]

[
 "TEST_STARTED",
 "ID#testSpanFirst(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSpanFirst(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1474195573788,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testMLT(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMLT(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1474195573792,
  "executionTime": 70
 }
]

[
 "TEST_STARTED",
 "ID#testSpanContaining(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSpanContaining(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1474195573862,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testGeoDistance(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGeoDistance(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1474195573867,
  "executionTime": 136
 }
]

[
 "TEST_STARTED",
 "ID#testQueryString(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryString(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1474195574004,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testCommonTerms(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCommonTerms(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1474195574008,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testGeoHashCell(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGeoHashCell(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1474195574014,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testBool(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBool(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1474195574025,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testRange(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRange(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1474195574031,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testTerms(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTerms(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1474195574033,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testGeoBoundingBox(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGeoBoundingBox(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1474195574036,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testWildcard(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWildcard(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1474195574041,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testHasParent(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHasParent(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1474195574044,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testGeoDistanceRange(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGeoDistanceRange(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1474195574050,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testSpanMultiTerm(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSpanMultiTerm(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1474195574056,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testPrefix(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPrefix(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1474195574059,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFuzzy(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFuzzy(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1474195574062,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSpanWithin(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSpanWithin(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1474195574064,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleQueryString(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleQueryString(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1474195574067,
  "executionTime": 73
 }
]

[
 "TEST_STARTED",
 "ID#testIndices(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:46:14,143][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:46:14,145][WARN ][org.elasticsearch.deprecation.index.query] indices query is deprecated. Instead search on the '_index' field%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndices(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1474195574140,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testTerm(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTerm(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1474195574145,
  "executionTime": 15
 }
]

[
 "TEST_STARTED",
 "ID#testExists(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExists(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1474195574161,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testGeoShape(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGeoShape(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1474195574164,
  "executionTime": 27
 }
]

[
 "TEST_STARTED",
 "ID#testSpanOr(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSpanOr(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1474195574191,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSpanNot(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSpanNot(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1474195574193,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testDisMax(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDisMax(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1474195574195,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testScript(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testScript(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1474195574198,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testConstantScore(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConstantScore(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1474195574200,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIds(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIds(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1474195574202,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testMatch(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMatch(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1474195574204,
  "executionTime": 52
 }
]

[
 "TEST_STARTED",
 "ID#testHasChild(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHasChild(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1474195574256,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testNested(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNested(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1474195574261,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testMatchAll(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMatchAll(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1474195574265,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testRegExp(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRegExp(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1474195574266,
  "executionTime": 17
 }
]

[
 "TEST_STARTED",
 "ID#testSpanNear(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSpanNear(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1474195574283,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testBoosting(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBoosting(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1474195574286,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testMultiMatch(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultiMatch(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1474195574288,
  "executionTime": 18
 }
]

[
 "TEST_STARTED",
 "ID#testFunctionScore(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFunctionScore(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1474195574307,
  "executionTime": 127
 }
]

[
 "TEST_STARTED",
 "ID#testSpanTerm(org.elasticsearch.index.query.QueryDSLDocumentationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSpanTerm(org.elasticsearch.index.query.QueryDSLDocumentationTests)",
  "startTimestamp": 1474195574434,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.QueryDSLDocumentationTests",
  "startTimestamp": 1474195573660,
  "executionTime": 784
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.recovery.RecoverySettingsTests",
   "displayName": "org.elasticsearch.recovery.RecoverySettingsTests",
   "methodName": null,
   "className": "org.elasticsearch.recovery.RecoverySettingsTests",
   "children": [
    {
     "id": "ID#testAllSettingsAreDynamicallyUpdatable(org.elasticsearch.recovery.RecoverySettingsTests)",
     "displayName": "testAllSettingsAreDynamicallyUpdatable(org.elasticsearch.recovery.RecoverySettingsTests)",
     "methodName": "testAllSettingsAreDynamicallyUpdatable",
     "className": "org.elasticsearch.recovery.RecoverySettingsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195574459
 }
]

[
 "TEST_STARTED",
 "ID#testAllSettingsAreDynamicallyUpdatable(org.elasticsearch.recovery.RecoverySettingsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:16:14,722][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:16:14,795][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:16:14,796][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:16:14,802][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[7260], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:16:14,805][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:16:14,805][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:16:15,302][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:16:15,303][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:16:15,303][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[4]}, bound_addresses {local[4]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:16:15,350][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{aB9-yNoRSO6ULN2-yi7GKw}{c_62nu5yTcK9ndbhdDgoDw}{local}{local[4]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:16:15,352][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:16:15,391][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:16:15,623][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [indices.recovery.max_bytes_per_sec] from [40mb] to [0]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:16:15,628][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [indices.recovery.retry_delay_state_sync] from [500ms] to [6ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:16:15,633][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [indices.recovery.retry_delay_network] from [5s] to [136ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:16:15,641][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [indices.recovery.recovery_activity_timeout] from [30m] to [152ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:16:15,649][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [indices.recovery.internal_action_timeout] from [15m] to [194ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:16:15,650][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [indices.recovery.internal_action_long_timeout] from [30m] to [388ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:16:15,653][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [indices.recovery.internal_action_long_timeout] from [388ms] to [94ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:16:15,654][INFO ][org.elasticsearch.recovery] [RecoverySettingsTests#testAllSettingsAreDynamicallyUpdatable]: cleaning up after test%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:16:15,655][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:16:15,657][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:16:15,658][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:16:15,680][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:16:15,691][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:16:15,724][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:16:15,724][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:16:15,728][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[7260], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:16:15,732][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:16:15,732][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:16:15,959][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:16:15,960][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:16:15,960][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[5]}, bound_addresses {local[5]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:16:15,965][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{RA67cce-T2iXuuuwyCwpug}{kNKw-S2aQSK7RKuSLvvlsw}{local}{local[5]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:16:15,966][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:16:15,981][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAllSettingsAreDynamicallyUpdatable(org.elasticsearch.recovery.RecoverySettingsTests)",
  "startTimestamp": 1474195574703,
  "executionTime": 1295
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:16:15,999][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:16:16,000][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:16:16,000][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:16:16,002][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.recovery.RecoverySettingsTests",
  "startTimestamp": 1474195574459,
  "executionTime": 1552
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.allocation.FilterAllocationDeciderTests",
   "displayName": "org.elasticsearch.cluster.routing.allocation.FilterAllocationDeciderTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.allocation.FilterAllocationDeciderTests",
   "children": [
    {
     "id": "ID#testFilterInitialAllocation(org.elasticsearch.cluster.routing.allocation.FilterAllocationDeciderTests)",
     "displayName": "testFilterInitialAllocation(org.elasticsearch.cluster.routing.allocation.FilterAllocationDeciderTests)",
     "methodName": "testFilterInitialAllocation",
     "className": "org.elasticsearch.cluster.routing.allocation.FilterAllocationDeciderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195576018
 }
]

[
 "TEST_STARTED",
 "ID#testFilterInitialAllocation(org.elasticsearch.cluster.routing.allocation.FilterAllocationDeciderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:46:16,060][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [RED] (reason: [shards failed [[idx][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:46:16,065][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [RED] to [GREEN] (reason: [shards started [[idx][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:46:16,066][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [GREEN] to [RED] (reason: [shards failed [[idx][0]] ...]).%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFilterInitialAllocation(org.elasticsearch.cluster.routing.allocation.FilterAllocationDeciderTests)",
  "startTimestamp": 1474195576053,
  "executionTime": 13
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.allocation.FilterAllocationDeciderTests",
  "startTimestamp": 1474195576018,
  "executionTime": 54
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.settings.loader.JsonSettingsLoaderTests",
   "displayName": "org.elasticsearch.common.settings.loader.JsonSettingsLoaderTests",
   "methodName": null,
   "className": "org.elasticsearch.common.settings.loader.JsonSettingsLoaderTests",
   "children": [
    {
     "id": "ID#testDuplicateKeysThrowsException(org.elasticsearch.common.settings.loader.JsonSettingsLoaderTests)",
     "displayName": "testDuplicateKeysThrowsException(org.elasticsearch.common.settings.loader.JsonSettingsLoaderTests)",
     "methodName": "testDuplicateKeysThrowsException",
     "className": "org.elasticsearch.common.settings.loader.JsonSettingsLoaderTests",
     "children": []
    },
    {
     "id": "ID#testSimpleJsonSettings(org.elasticsearch.common.settings.loader.JsonSettingsLoaderTests)",
     "displayName": "testSimpleJsonSettings(org.elasticsearch.common.settings.loader.JsonSettingsLoaderTests)",
     "methodName": "testSimpleJsonSettings",
     "className": "org.elasticsearch.common.settings.loader.JsonSettingsLoaderTests",
     "children": []
    },
    {
     "id": "ID#testNullValuedSettingThrowsException(org.elasticsearch.common.settings.loader.JsonSettingsLoaderTests)",
     "displayName": "testNullValuedSettingThrowsException(org.elasticsearch.common.settings.loader.JsonSettingsLoaderTests)",
     "methodName": "testNullValuedSettingThrowsException",
     "className": "org.elasticsearch.common.settings.loader.JsonSettingsLoaderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195576079
 }
]

[
 "TEST_STARTED",
 "ID#testDuplicateKeysThrowsException(org.elasticsearch.common.settings.loader.JsonSettingsLoaderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDuplicateKeysThrowsException(org.elasticsearch.common.settings.loader.JsonSettingsLoaderTests)",
  "startTimestamp": 1474195576100,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleJsonSettings(org.elasticsearch.common.settings.loader.JsonSettingsLoaderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleJsonSettings(org.elasticsearch.common.settings.loader.JsonSettingsLoaderTests)",
  "startTimestamp": 1474195576110,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testNullValuedSettingThrowsException(org.elasticsearch.common.settings.loader.JsonSettingsLoaderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNullValuedSettingThrowsException(org.elasticsearch.common.settings.loader.JsonSettingsLoaderTests)",
  "startTimestamp": 1474195576119,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.settings.loader.JsonSettingsLoaderTests",
  "startTimestamp": 1474195576079,
  "executionTime": 45
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.lucene.search.MatchNoDocsQueryTests",
   "displayName": "org.elasticsearch.common.lucene.search.MatchNoDocsQueryTests",
   "methodName": null,
   "className": "org.elasticsearch.common.lucene.search.MatchNoDocsQueryTests",
   "children": [
    {
     "id": "ID#testSimple(org.elasticsearch.common.lucene.search.MatchNoDocsQueryTests)",
     "displayName": "testSimple(org.elasticsearch.common.lucene.search.MatchNoDocsQueryTests)",
     "methodName": "testSimple",
     "className": "org.elasticsearch.common.lucene.search.MatchNoDocsQueryTests",
     "children": []
    },
    {
     "id": "ID#testSearch(org.elasticsearch.common.lucene.search.MatchNoDocsQueryTests)",
     "displayName": "testSearch(org.elasticsearch.common.lucene.search.MatchNoDocsQueryTests)",
     "methodName": "testSearch",
     "className": "org.elasticsearch.common.lucene.search.MatchNoDocsQueryTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195576131
 }
]

[
 "TEST_STARTED",
 "ID#testSimple(org.elasticsearch.common.lucene.search.MatchNoDocsQueryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimple(org.elasticsearch.common.lucene.search.MatchNoDocsQueryTests)",
  "startTimestamp": 1474195576153,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testSearch(org.elasticsearch.common.lucene.search.MatchNoDocsQueryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSearch(org.elasticsearch.common.lucene.search.MatchNoDocsQueryTests)",
  "startTimestamp": 1474195576158,
  "executionTime": 117
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.lucene.search.MatchNoDocsQueryTests",
  "startTimestamp": 1474195576131,
  "executionTime": 147
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.metrics.ScriptedMetricTests",
   "displayName": "org.elasticsearch.search.aggregations.metrics.ScriptedMetricTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.metrics.ScriptedMetricTests",
   "children": [
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.ScriptedMetricTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.ScriptedMetricTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.aggregations.metrics.ScriptedMetricTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.aggregations.metrics.ScriptedMetricTests)",
     "displayName": "testSerialization(org.elasticsearch.search.aggregations.metrics.ScriptedMetricTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.aggregations.metrics.ScriptedMetricTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.aggregations.metrics.ScriptedMetricTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.aggregations.metrics.ScriptedMetricTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.aggregations.metrics.ScriptedMetricTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195576289
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:46:16,329][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{m26T8CYGSlWQGmRT-ev6AA}{local}{local[83]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.ScriptedMetricTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.ScriptedMetricTests)",
  "startTimestamp": 1474195576380,
  "executionTime": 80
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.aggregations.metrics.ScriptedMetricTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.aggregations.metrics.ScriptedMetricTests)",
  "startTimestamp": 1474195576460,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.aggregations.metrics.ScriptedMetricTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.aggregations.metrics.ScriptedMetricTests)",
  "startTimestamp": 1474195576469,
  "executionTime": 6
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.metrics.ScriptedMetricTests",
  "startTimestamp": 1474195576289,
  "executionTime": 288
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.analysis.StopTokenFilterTests",
   "displayName": "org.elasticsearch.index.analysis.StopTokenFilterTests",
   "methodName": null,
   "className": "org.elasticsearch.index.analysis.StopTokenFilterTests",
   "children": [
    {
     "id": "ID#testCorrectPositionIncrementSetting(org.elasticsearch.index.analysis.StopTokenFilterTests)",
     "displayName": "testCorrectPositionIncrementSetting(org.elasticsearch.index.analysis.StopTokenFilterTests)",
     "methodName": "testCorrectPositionIncrementSetting",
     "className": "org.elasticsearch.index.analysis.StopTokenFilterTests",
     "children": []
    },
    {
     "id": "ID#testThatSuggestStopFilterWorks(org.elasticsearch.index.analysis.StopTokenFilterTests)",
     "displayName": "testThatSuggestStopFilterWorks(org.elasticsearch.index.analysis.StopTokenFilterTests)",
     "methodName": "testThatSuggestStopFilterWorks",
     "className": "org.elasticsearch.index.analysis.StopTokenFilterTests",
     "children": []
    },
    {
     "id": "ID#testPositionIncrementSetting(org.elasticsearch.index.analysis.StopTokenFilterTests)",
     "displayName": "testPositionIncrementSetting(org.elasticsearch.index.analysis.StopTokenFilterTests)",
     "methodName": "testPositionIncrementSetting",
     "className": "org.elasticsearch.index.analysis.StopTokenFilterTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195576610
 }
]

[
 "TEST_STARTED",
 "ID#testCorrectPositionIncrementSetting(org.elasticsearch.index.analysis.StopTokenFilterTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCorrectPositionIncrementSetting(org.elasticsearch.index.analysis.StopTokenFilterTests)",
  "startTimestamp": 1474195576629,
  "executionTime": 23
 }
]

[
 "TEST_STARTED",
 "ID#testThatSuggestStopFilterWorks(org.elasticsearch.index.analysis.StopTokenFilterTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatSuggestStopFilterWorks(org.elasticsearch.index.analysis.StopTokenFilterTests)",
  "startTimestamp": 1474195576652,
  "executionTime": 42
 }
]

[
 "TEST_STARTED",
 "ID#testPositionIncrementSetting(org.elasticsearch.index.analysis.StopTokenFilterTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPositionIncrementSetting(org.elasticsearch.index.analysis.StopTokenFilterTests)",
  "startTimestamp": 1474195576694,
  "executionTime": 13
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.analysis.StopTokenFilterTests",
  "startTimestamp": 1474195576610,
  "executionTime": 101
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.metadata.HumanReadableIndexSettingsTests",
   "displayName": "org.elasticsearch.cluster.metadata.HumanReadableIndexSettingsTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.metadata.HumanReadableIndexSettingsTests",
   "children": [
    {
     "id": "ID#testHumanReadableSettings(org.elasticsearch.cluster.metadata.HumanReadableIndexSettingsTests)",
     "displayName": "testHumanReadableSettings(org.elasticsearch.cluster.metadata.HumanReadableIndexSettingsTests)",
     "methodName": "testHumanReadableSettings",
     "className": "org.elasticsearch.cluster.metadata.HumanReadableIndexSettingsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195576719
 }
]

[
 "TEST_STARTED",
 "ID#testHumanReadableSettings(org.elasticsearch.cluster.metadata.HumanReadableIndexSettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHumanReadableSettings(org.elasticsearch.cluster.metadata.HumanReadableIndexSettingsTests)",
  "startTimestamp": 1474195576751,
  "executionTime": 130
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.metadata.HumanReadableIndexSettingsTests",
  "startTimestamp": 1474195576719,
  "executionTime": 166
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.recycler.LockedRecyclerTests",
   "displayName": "org.elasticsearch.common.recycler.LockedRecyclerTests",
   "methodName": null,
   "className": "org.elasticsearch.common.recycler.LockedRecyclerTests",
   "children": [
    {
     "id": "ID#testDoubleRelease(org.elasticsearch.common.recycler.LockedRecyclerTests)",
     "displayName": "testDoubleRelease(org.elasticsearch.common.recycler.LockedRecyclerTests)",
     "methodName": "testDoubleRelease",
     "className": "org.elasticsearch.common.recycler.LockedRecyclerTests",
     "children": []
    },
    {
     "id": "ID#testReuse(org.elasticsearch.common.recycler.LockedRecyclerTests)",
     "displayName": "testReuse(org.elasticsearch.common.recycler.LockedRecyclerTests)",
     "methodName": "testReuse",
     "className": "org.elasticsearch.common.recycler.LockedRecyclerTests",
     "children": []
    },
    {
     "id": "ID#testClose(org.elasticsearch.common.recycler.LockedRecyclerTests)",
     "displayName": "testClose(org.elasticsearch.common.recycler.LockedRecyclerTests)",
     "methodName": "testClose",
     "className": "org.elasticsearch.common.recycler.LockedRecyclerTests",
     "children": []
    },
    {
     "id": "ID#testRecycle(org.elasticsearch.common.recycler.LockedRecyclerTests)",
     "displayName": "testRecycle(org.elasticsearch.common.recycler.LockedRecyclerTests)",
     "methodName": "testRecycle",
     "className": "org.elasticsearch.common.recycler.LockedRecyclerTests",
     "children": []
    },
    {
     "id": "ID#testDestroyWhenOverCapacity(org.elasticsearch.common.recycler.LockedRecyclerTests)",
     "displayName": "testDestroyWhenOverCapacity(org.elasticsearch.common.recycler.LockedRecyclerTests)",
     "methodName": "testDestroyWhenOverCapacity",
     "className": "org.elasticsearch.common.recycler.LockedRecyclerTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195576898
 }
]

[
 "TEST_STARTED",
 "ID#testDoubleRelease(org.elasticsearch.common.recycler.LockedRecyclerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDoubleRelease(org.elasticsearch.common.recycler.LockedRecyclerTests)",
  "startTimestamp": 1474195576953,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testReuse(org.elasticsearch.common.recycler.LockedRecyclerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReuse(org.elasticsearch.common.recycler.LockedRecyclerTests)",
  "startTimestamp": 1474195576956,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testClose(org.elasticsearch.common.recycler.LockedRecyclerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClose(org.elasticsearch.common.recycler.LockedRecyclerTests)",
  "startTimestamp": 1474195576957,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRecycle(org.elasticsearch.common.recycler.LockedRecyclerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecycle(org.elasticsearch.common.recycler.LockedRecyclerTests)",
  "startTimestamp": 1474195576959,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testDestroyWhenOverCapacity(org.elasticsearch.common.recycler.LockedRecyclerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDestroyWhenOverCapacity(org.elasticsearch.common.recycler.LockedRecyclerTests)",
  "startTimestamp": 1474195576963,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.recycler.LockedRecyclerTests",
  "startTimestamp": 1474195576898,
  "executionTime": 69
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.PathMapperTests",
   "displayName": "org.elasticsearch.index.mapper.PathMapperTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.PathMapperTests",
   "children": [
    {
     "id": "ID#testPathMapping(org.elasticsearch.index.mapper.PathMapperTests)",
     "displayName": "testPathMapping(org.elasticsearch.index.mapper.PathMapperTests)",
     "methodName": "testPathMapping",
     "className": "org.elasticsearch.index.mapper.PathMapperTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195576974
 }
]

[
 "TEST_STARTED",
 "ID#testPathMapping(org.elasticsearch.index.mapper.PathMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:46:17,388][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:46:17,431][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:46:17,431][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:46:17,434][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[7260], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:46:17,437][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:46:17,437][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:46:17,660][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:46:17,660][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:46:17,661][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[6]}, bound_addresses {local[6]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:46:17,664][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{e9BIbiiQTZiDP45w2lQOPw}{2YkrIIbrSmeux6y5adXJ9w}{local}{local[6]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:46:17,665][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:46:17,686][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:46:17,856][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:46:18,470][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:46:18,491][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [PathMapperTests#testPathMapping]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPathMapping(org.elasticsearch.index.mapper.PathMapperTests)",
  "startTimestamp": 1474195577315,
  "executionTime": 1216
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:46:18,531][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:46:18,532][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:46:18,533][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:46:18,534][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.PathMapperTests",
  "startTimestamp": 1474195576974,
  "executionTime": 1609
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.CombineFunctionTests",
   "displayName": "org.elasticsearch.index.query.CombineFunctionTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.CombineFunctionTests",
   "children": [
    {
     "id": "ID#testReadFrom(org.elasticsearch.index.query.CombineFunctionTests)",
     "displayName": "testReadFrom(org.elasticsearch.index.query.CombineFunctionTests)",
     "methodName": "testReadFrom",
     "className": "org.elasticsearch.index.query.CombineFunctionTests",
     "children": []
    },
    {
     "id": "ID#testWriteTo(org.elasticsearch.index.query.CombineFunctionTests)",
     "displayName": "testWriteTo(org.elasticsearch.index.query.CombineFunctionTests)",
     "methodName": "testWriteTo",
     "className": "org.elasticsearch.index.query.CombineFunctionTests",
     "children": []
    },
    {
     "id": "ID#testValidOrdinals(org.elasticsearch.index.query.CombineFunctionTests)",
     "displayName": "testValidOrdinals(org.elasticsearch.index.query.CombineFunctionTests)",
     "methodName": "testValidOrdinals",
     "className": "org.elasticsearch.index.query.CombineFunctionTests",
     "children": []
    },
    {
     "id": "ID#testFromString(org.elasticsearch.index.query.CombineFunctionTests)",
     "displayName": "testFromString(org.elasticsearch.index.query.CombineFunctionTests)",
     "methodName": "testFromString",
     "className": "org.elasticsearch.index.query.CombineFunctionTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195578592
 }
]

[
 "TEST_STARTED",
 "ID#testReadFrom(org.elasticsearch.index.query.CombineFunctionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReadFrom(org.elasticsearch.index.query.CombineFunctionTests)",
  "startTimestamp": 1474195578610,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testWriteTo(org.elasticsearch.index.query.CombineFunctionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWriteTo(org.elasticsearch.index.query.CombineFunctionTests)",
  "startTimestamp": 1474195578612,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testValidOrdinals(org.elasticsearch.index.query.CombineFunctionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidOrdinals(org.elasticsearch.index.query.CombineFunctionTests)",
  "startTimestamp": 1474195578614,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromString(org.elasticsearch.index.query.CombineFunctionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromString(org.elasticsearch.index.query.CombineFunctionTests)",
  "startTimestamp": 1474195578616,
  "executionTime": 4
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.CombineFunctionTests",
  "startTimestamp": 1474195578592,
  "executionTime": 31
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.rest.action.cat.RestRecoveryActionTests",
   "displayName": "org.elasticsearch.rest.action.cat.RestRecoveryActionTests",
   "methodName": null,
   "className": "org.elasticsearch.rest.action.cat.RestRecoveryActionTests",
   "children": [
    {
     "id": "ID#testRestRecoveryAction(org.elasticsearch.rest.action.cat.RestRecoveryActionTests)",
     "displayName": "testRestRecoveryAction(org.elasticsearch.rest.action.cat.RestRecoveryActionTests)",
     "methodName": "testRestRecoveryAction",
     "className": "org.elasticsearch.rest.action.cat.RestRecoveryActionTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195578628
 }
]

[
 "TEST_STARTED",
 "ID#testRestRecoveryAction(org.elasticsearch.rest.action.cat.RestRecoveryActionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRestRecoveryAction(org.elasticsearch.rest.action.cat.RestRecoveryActionTests)",
  "startTimestamp": 1474195578645,
  "executionTime": 161
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.rest.action.cat.RestRecoveryActionTests",
  "startTimestamp": 1474195578628,
  "executionTime": 188
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.collect.IteratorsTests",
   "displayName": "org.elasticsearch.common.collect.IteratorsTests",
   "methodName": null,
   "className": "org.elasticsearch.common.collect.IteratorsTests",
   "children": [
    {
     "id": "ID#testSingleton(org.elasticsearch.common.collect.IteratorsTests)",
     "displayName": "testSingleton(org.elasticsearch.common.collect.IteratorsTests)",
     "methodName": "testSingleton",
     "className": "org.elasticsearch.common.collect.IteratorsTests",
     "children": []
    },
    {
     "id": "ID#testEmptyBeforeSingleton(org.elasticsearch.common.collect.IteratorsTests)",
     "displayName": "testEmptyBeforeSingleton(org.elasticsearch.common.collect.IteratorsTests)",
     "methodName": "testEmptyBeforeSingleton",
     "className": "org.elasticsearch.common.collect.IteratorsTests",
     "children": []
    },
    {
     "id": "ID#testNull(org.elasticsearch.common.collect.IteratorsTests)",
     "displayName": "testNull(org.elasticsearch.common.collect.IteratorsTests)",
     "methodName": "testNull",
     "className": "org.elasticsearch.common.collect.IteratorsTests",
     "children": []
    },
    {
     "id": "ID#testEmptyAfterSingleton(org.elasticsearch.common.collect.IteratorsTests)",
     "displayName": "testEmptyAfterSingleton(org.elasticsearch.common.collect.IteratorsTests)",
     "methodName": "testEmptyAfterSingleton",
     "className": "org.elasticsearch.common.collect.IteratorsTests",
     "children": []
    },
    {
     "id": "ID#testNullIterator(org.elasticsearch.common.collect.IteratorsTests)",
     "displayName": "testNullIterator(org.elasticsearch.common.collect.IteratorsTests)",
     "methodName": "testNullIterator",
     "className": "org.elasticsearch.common.collect.IteratorsTests",
     "children": []
    },
    {
     "id": "ID#testRandomIterators(org.elasticsearch.common.collect.IteratorsTests)",
     "displayName": "testRandomIterators(org.elasticsearch.common.collect.IteratorsTests)",
     "methodName": "testRandomIterators",
     "className": "org.elasticsearch.common.collect.IteratorsTests",
     "children": []
    },
    {
     "id": "ID#testTwoEntries(org.elasticsearch.common.collect.IteratorsTests)",
     "displayName": "testTwoEntries(org.elasticsearch.common.collect.IteratorsTests)",
     "methodName": "testTwoEntries",
     "className": "org.elasticsearch.common.collect.IteratorsTests",
     "children": []
    },
    {
     "id": "ID#testEmptyConcatenation(org.elasticsearch.common.collect.IteratorsTests)",
     "displayName": "testEmptyConcatenation(org.elasticsearch.common.collect.IteratorsTests)",
     "methodName": "testEmptyConcatenation",
     "className": "org.elasticsearch.common.collect.IteratorsTests",
     "children": []
    },
    {
     "id": "ID#testConcatentation(org.elasticsearch.common.collect.IteratorsTests)",
     "displayName": "testConcatentation(org.elasticsearch.common.collect.IteratorsTests)",
     "methodName": "testConcatentation",
     "className": "org.elasticsearch.common.collect.IteratorsTests",
     "children": []
    },
    {
     "id": "ID#testRandomSingleton(org.elasticsearch.common.collect.IteratorsTests)",
     "displayName": "testRandomSingleton(org.elasticsearch.common.collect.IteratorsTests)",
     "methodName": "testRandomSingleton",
     "className": "org.elasticsearch.common.collect.IteratorsTests",
     "children": []
    },
    {
     "id": "ID#testNoConcatenation(org.elasticsearch.common.collect.IteratorsTests)",
     "displayName": "testNoConcatenation(org.elasticsearch.common.collect.IteratorsTests)",
     "methodName": "testNoConcatenation",
     "className": "org.elasticsearch.common.collect.IteratorsTests",
     "children": []
    },
    {
     "id": "ID#testMultipleEmptyConcatenation(org.elasticsearch.common.collect.IteratorsTests)",
     "displayName": "testMultipleEmptyConcatenation(org.elasticsearch.common.collect.IteratorsTests)",
     "methodName": "testMultipleEmptyConcatenation",
     "className": "org.elasticsearch.common.collect.IteratorsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195578825
 }
]

[
 "TEST_STARTED",
 "ID#testSingleton(org.elasticsearch.common.collect.IteratorsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleton(org.elasticsearch.common.collect.IteratorsTests)",
  "startTimestamp": 1474195578881,
  "executionTime": 13
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyBeforeSingleton(org.elasticsearch.common.collect.IteratorsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyBeforeSingleton(org.elasticsearch.common.collect.IteratorsTests)",
  "startTimestamp": 1474195578895,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNull(org.elasticsearch.common.collect.IteratorsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNull(org.elasticsearch.common.collect.IteratorsTests)",
  "startTimestamp": 1474195578898,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyAfterSingleton(org.elasticsearch.common.collect.IteratorsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyAfterSingleton(org.elasticsearch.common.collect.IteratorsTests)",
  "startTimestamp": 1474195578911,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testNullIterator(org.elasticsearch.common.collect.IteratorsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNullIterator(org.elasticsearch.common.collect.IteratorsTests)",
  "startTimestamp": 1474195578913,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRandomIterators(org.elasticsearch.common.collect.IteratorsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRandomIterators(org.elasticsearch.common.collect.IteratorsTests)",
  "startTimestamp": 1474195578915,
  "executionTime": 78
 }
]

[
 "TEST_STARTED",
 "ID#testTwoEntries(org.elasticsearch.common.collect.IteratorsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTwoEntries(org.elasticsearch.common.collect.IteratorsTests)",
  "startTimestamp": 1474195578993,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyConcatenation(org.elasticsearch.common.collect.IteratorsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyConcatenation(org.elasticsearch.common.collect.IteratorsTests)",
  "startTimestamp": 1474195578996,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testConcatentation(org.elasticsearch.common.collect.IteratorsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConcatentation(org.elasticsearch.common.collect.IteratorsTests)",
  "startTimestamp": 1474195578998,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRandomSingleton(org.elasticsearch.common.collect.IteratorsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRandomSingleton(org.elasticsearch.common.collect.IteratorsTests)",
  "startTimestamp": 1474195579000,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNoConcatenation(org.elasticsearch.common.collect.IteratorsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoConcatenation(org.elasticsearch.common.collect.IteratorsTests)",
  "startTimestamp": 1474195579002,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testMultipleEmptyConcatenation(org.elasticsearch.common.collect.IteratorsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultipleEmptyConcatenation(org.elasticsearch.common.collect.IteratorsTests)",
  "startTimestamp": 1474195579005,
  "executionTime": 1
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.collect.IteratorsTests",
  "startTimestamp": 1474195578825,
  "executionTime": 184
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.AggregationCollectorTests",
   "displayName": "org.elasticsearch.search.aggregations.AggregationCollectorTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.AggregationCollectorTests",
   "children": [
    {
     "id": "ID#testNeedsScores(org.elasticsearch.search.aggregations.AggregationCollectorTests)",
     "displayName": "testNeedsScores(org.elasticsearch.search.aggregations.AggregationCollectorTests)",
     "methodName": "testNeedsScores",
     "className": "org.elasticsearch.search.aggregations.AggregationCollectorTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195579015
 }
]

[
 "TEST_STARTED",
 "ID#testNeedsScores(org.elasticsearch.search.aggregations.AggregationCollectorTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:46:19,200][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:46:19,433][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:46:19,433][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:46:19,437][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[7260], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:46:19,439][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:46:19,439][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:46:19,843][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:46:19,843][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:46:19,843][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[7]}, bound_addresses {local[7]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:46:19,890][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{PfsYbMeITj6SCP1-WIBClA}{f2m5ppdBQO2l4KR2zg4avQ}{local}{local[7]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:46:19,890][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:46:19,978][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:46:20,006][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [idx] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:46:20,116][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[idx][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:46:20,193][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [idx/U3-yFey9TqWamFVkItItSA] create_mapping [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:46:21,774][INFO ][org.elasticsearch.search.aggregations] [AggregationCollectorTests#testNeedsScores]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNeedsScores(org.elasticsearch.search.aggregations.AggregationCollectorTests)",
  "startTimestamp": 1474195579122,
  "executionTime": 2731
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:46:21,854][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:46:21,854][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:46:21,855][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:46:21,856][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.AggregationCollectorTests",
  "startTimestamp": 1474195579015,
  "executionTime": 2852
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.env.EnvironmentTests",
   "displayName": "org.elasticsearch.env.EnvironmentTests",
   "methodName": null,
   "className": "org.elasticsearch.env.EnvironmentTests",
   "children": [
    {
     "id": "ID#testRepositoryResolution(org.elasticsearch.env.EnvironmentTests)",
     "displayName": "testRepositoryResolution(org.elasticsearch.env.EnvironmentTests)",
     "methodName": "testRepositoryResolution",
     "className": "org.elasticsearch.env.EnvironmentTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195581873
 }
]

[
 "TEST_STARTED",
 "ID#testRepositoryResolution(org.elasticsearch.env.EnvironmentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRepositoryResolution(org.elasticsearch.env.EnvironmentTests)",
  "startTimestamp": 1474195581885,
  "executionTime": 22
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.env.EnvironmentTests",
  "startTimestamp": 1474195581873,
  "executionTime": 41
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.StringMappingUpgradeTests",
   "displayName": "org.elasticsearch.index.mapper.StringMappingUpgradeTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.StringMappingUpgradeTests",
   "children": [
    {
     "id": "ID#testUpgradeIgnoreAbove(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
     "displayName": "testUpgradeIgnoreAbove(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
     "methodName": "testUpgradeIgnoreAbove",
     "className": "org.elasticsearch.index.mapper.StringMappingUpgradeTests",
     "children": []
    },
    {
     "id": "ID#testUpgradeKeywordIncludeInAll(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
     "displayName": "testUpgradeKeywordIncludeInAll(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
     "methodName": "testUpgradeKeywordIncludeInAll",
     "className": "org.elasticsearch.index.mapper.StringMappingUpgradeTests",
     "children": []
    },
    {
     "id": "ID#testUpgradeAnalyzer(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
     "displayName": "testUpgradeAnalyzer(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
     "methodName": "testUpgradeAnalyzer",
     "className": "org.elasticsearch.index.mapper.StringMappingUpgradeTests",
     "children": []
    },
    {
     "id": "ID#testUpgradeTemplateWithDynamicTypeKeyword2(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
     "displayName": "testUpgradeTemplateWithDynamicTypeKeyword2(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
     "methodName": "testUpgradeTemplateWithDynamicTypeKeyword2",
     "className": "org.elasticsearch.index.mapper.StringMappingUpgradeTests",
     "children": []
    },
    {
     "id": "ID#testNotSupportedUpgrade(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
     "displayName": "testNotSupportedUpgrade(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
     "methodName": "testNotSupportedUpgrade",
     "className": "org.elasticsearch.index.mapper.StringMappingUpgradeTests",
     "children": []
    },
    {
     "id": "ID#testUpgradeTemplateWithDynamicType2(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
     "displayName": "testUpgradeTemplateWithDynamicType2(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
     "methodName": "testUpgradeTemplateWithDynamicType2",
     "className": "org.elasticsearch.index.mapper.StringMappingUpgradeTests",
     "children": []
    },
    {
     "id": "ID#testUpgradeRandomMapping(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
     "displayName": "testUpgradeRandomMapping(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
     "methodName": "testUpgradeRandomMapping",
     "className": "org.elasticsearch.index.mapper.StringMappingUpgradeTests",
     "children": []
    },
    {
     "id": "ID#testUpgradeFielddataSettings(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
     "displayName": "testUpgradeFielddataSettings(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
     "methodName": "testUpgradeFielddataSettings",
     "className": "org.elasticsearch.index.mapper.StringMappingUpgradeTests",
     "children": []
    },
    {
     "id": "ID#testUpgradeTextIncludeInAll(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
     "displayName": "testUpgradeTextIncludeInAll(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
     "methodName": "testUpgradeTextIncludeInAll",
     "className": "org.elasticsearch.index.mapper.StringMappingUpgradeTests",
     "children": []
    },
    {
     "id": "ID#testUpgradeAnalyzedString(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
     "displayName": "testUpgradeAnalyzedString(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
     "methodName": "testUpgradeAnalyzedString",
     "className": "org.elasticsearch.index.mapper.StringMappingUpgradeTests",
     "children": []
    },
    {
     "id": "ID#testUpgradeIndexOptions(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
     "displayName": "testUpgradeIndexOptions(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
     "methodName": "testUpgradeIndexOptions",
     "className": "org.elasticsearch.index.mapper.StringMappingUpgradeTests",
     "children": []
    },
    {
     "id": "ID#testUpgradeTemplateWithDynamicTypeKeyword(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
     "displayName": "testUpgradeTemplateWithDynamicTypeKeyword(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
     "methodName": "testUpgradeTemplateWithDynamicTypeKeyword",
     "className": "org.elasticsearch.index.mapper.StringMappingUpgradeTests",
     "children": []
    },
    {
     "id": "ID#testUpgradeTemplateWithDynamicType(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
     "displayName": "testUpgradeTemplateWithDynamicType(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
     "methodName": "testUpgradeTemplateWithDynamicType",
     "className": "org.elasticsearch.index.mapper.StringMappingUpgradeTests",
     "children": []
    },
    {
     "id": "ID#testUpgradeNotIndexedString(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
     "displayName": "testUpgradeNotIndexedString(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
     "methodName": "testUpgradeNotIndexedString",
     "className": "org.elasticsearch.index.mapper.StringMappingUpgradeTests",
     "children": []
    },
    {
     "id": "ID#testUpgradeNotAnalyzedString(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
     "displayName": "testUpgradeNotAnalyzedString(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
     "methodName": "testUpgradeNotAnalyzedString",
     "className": "org.elasticsearch.index.mapper.StringMappingUpgradeTests",
     "children": []
    },
    {
     "id": "ID#testIllegalIndexValue(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
     "displayName": "testIllegalIndexValue(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
     "methodName": "testIllegalIndexValue",
     "className": "org.elasticsearch.index.mapper.StringMappingUpgradeTests",
     "children": []
    },
    {
     "id": "ID#testUpgradePositionGap(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
     "displayName": "testUpgradePositionGap(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
     "methodName": "testUpgradePositionGap",
     "className": "org.elasticsearch.index.mapper.StringMappingUpgradeTests",
     "children": []
    },
    {
     "id": "ID#testUpgradeDefaults(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
     "displayName": "testUpgradeDefaults(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
     "methodName": "testUpgradeDefaults",
     "className": "org.elasticsearch.index.mapper.StringMappingUpgradeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195581923
 }
]

[
 "TEST_STARTED",
 "ID#testUpgradeIgnoreAbove(org.elasticsearch.index.mapper.StringMappingUpgradeTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:21,948][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:21,999][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:21,999][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:22,003][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[7260], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:22,006][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:22,007][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.test.InternalSettingsPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:22,174][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:22,174][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:22,176][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[8]}, bound_addresses {local[8]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:22,197][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{oK7dLHvzSAKvD1olz2Y25w}{eM6LIzLiQvedej_k0yCRqw}{local}{local[8]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:22,198][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:22,212][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:22,239][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:22,550][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:22,647][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] The [string] field is deprecated, please use [text] or [keyword] instead on [field]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:22,648][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [StringMappingUpgradeTests#testUpgradeIgnoreAbove]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUpgradeIgnoreAbove(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
  "startTimestamp": 1474195581938,
  "executionTime": 748
 }
]

[
 "TEST_STARTED",
 "ID#testUpgradeKeywordIncludeInAll(org.elasticsearch.index.mapper.StringMappingUpgradeTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:22,695][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:22,749][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:22,776][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] The [string] field is deprecated, please use [text] or [keyword] instead on [field]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:22,776][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [StringMappingUpgradeTests#testUpgradeKeywordIncludeInAll]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUpgradeKeywordIncludeInAll(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
  "startTimestamp": 1474195582687,
  "executionTime": 127
 }
]

[
 "TEST_STARTED",
 "ID#testUpgradeAnalyzer(org.elasticsearch.index.mapper.StringMappingUpgradeTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:22,821][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:22,884][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:22,899][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] The [string] field is deprecated, please use [text] or [keyword] instead on [field]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:22,900][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [StringMappingUpgradeTests#testUpgradeAnalyzer]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUpgradeAnalyzer(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
  "startTimestamp": 1474195582815,
  "executionTime": 130
 }
]

[
 "TEST_STARTED",
 "ID#testUpgradeTemplateWithDynamicTypeKeyword2(org.elasticsearch.index.mapper.StringMappingUpgradeTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:22,958][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:23,020][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:23,044][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] Expected a boolean for property [index] but got [not_analyzed]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:23,045][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [StringMappingUpgradeTests#testUpgradeTemplateWithDynamicTypeKeyword2]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUpgradeTemplateWithDynamicTypeKeyword2(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
  "startTimestamp": 1474195582945,
  "executionTime": 178
 }
]

[
 "TEST_STARTED",
 "ID#testNotSupportedUpgrade(org.elasticsearch.index.mapper.StringMappingUpgradeTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:23,130][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:23,213][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:23,231][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [StringMappingUpgradeTests#testNotSupportedUpgrade]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNotSupportedUpgrade(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
  "startTimestamp": 1474195583124,
  "executionTime": 150
 }
]

[
 "TEST_STARTED",
 "ID#testUpgradeTemplateWithDynamicType2(org.elasticsearch.index.mapper.StringMappingUpgradeTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:23,281][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:23,390][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:23,410][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [StringMappingUpgradeTests#testUpgradeTemplateWithDynamicType2]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUpgradeTemplateWithDynamicType2(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
  "startTimestamp": 1474195583274,
  "executionTime": 192
 }
]

[
 "TEST_STARTED",
 "ID#testUpgradeRandomMapping(org.elasticsearch.index.mapper.StringMappingUpgradeTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:23,473][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test0] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:23,539][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test0][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:23,558][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test1] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:23,658][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test1][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:23,675][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test2] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:23,734][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test2][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:23,752][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test3] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:23,852][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test3][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:23,879][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test3] The [string] field is deprecated, please use [text] or [keyword] instead on [field]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:23,900][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test4] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:23,958][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test4][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:23,983][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test5] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:24,035][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test5][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:24,049][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test5] The [string] field is deprecated, please use [text] or [keyword] instead on [field]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:24,054][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test6] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:24,142][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test6][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:24,160][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test7] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:24,217][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test7][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:24,231][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test7] The [string] field is deprecated, please use [text] or [keyword] instead on [field]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:24,238][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test8] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:24,289][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test8][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:24,304][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test8] The [norms{enabled:true/false}] way of specifying norms is deprecated, please use [norms:true/false] instead%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:24,310][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test9] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:24,361][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test9][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:24,382][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test9] The [norms{enabled:true/false}] way of specifying norms is deprecated, please use [norms:true/false] instead%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:24,387][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test10] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:24,439][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test10][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:24,462][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test10] The [string] field is deprecated, please use [text] or [keyword] instead on [field]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:24,466][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test11] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:24,539][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test11][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:24,564][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test11] [omit_norms] is deprecated, please use [norms] instead with the opposite boolean value%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:24,569][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test12] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:24,622][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test12][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:24,640][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test12] The [norms{enabled:true/false}] way of specifying norms is deprecated, please use [norms:true/false] instead%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:24,645][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test13] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:24,749][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test13][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:24,767][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test13] [omit_norms] is deprecated, please use [norms] instead with the opposite boolean value%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:24,772][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test14] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:24,860][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test14][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:24,889][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test14] The [string] field is deprecated, please use [text] or [keyword] instead on [field]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:24,895][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test15] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:25,038][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test15][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:25,086][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test15] The [string] field is deprecated, please use [text] or [keyword] instead on [field]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:25,087][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test15] Expected a boolean for property [store] but got [yes]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:25,091][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test16] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:25,193][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test16][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:25,212][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test17] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:25,294][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test17][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:25,311][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test17] The [string] field is deprecated, please use [text] or [keyword] instead on [field]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:25,316][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test18] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:25,399][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test18][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:25,419][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test19] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:25,503][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test19][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:25,518][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test19] The [string] field is deprecated, please use [text] or [keyword] instead on [field]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:25,519][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test19] [StringMappingUpgradeTests#testUpgradeRandomMapping]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUpgradeRandomMapping(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
  "startTimestamp": 1474195583466,
  "executionTime": 2754
 }
]

[
 "TEST_STARTED",
 "ID#testUpgradeFielddataSettings(org.elasticsearch.index.mapper.StringMappingUpgradeTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:26,229][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:26,301][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:26,321][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] The [string] field is deprecated, please use [text] or [keyword] instead on [field]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:26,322][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [StringMappingUpgradeTests#testUpgradeFielddataSettings]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUpgradeFielddataSettings(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
  "startTimestamp": 1474195586221,
  "executionTime": 140
 }
]

[
 "TEST_STARTED",
 "ID#testUpgradeTextIncludeInAll(org.elasticsearch.index.mapper.StringMappingUpgradeTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:26,370][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:26,422][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:26,437][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] The [string] field is deprecated, please use [text] or [keyword] instead on [field]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:26,437][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [StringMappingUpgradeTests#testUpgradeTextIncludeInAll]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUpgradeTextIncludeInAll(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
  "startTimestamp": 1474195586362,
  "executionTime": 101
 }
]

[
 "TEST_STARTED",
 "ID#testUpgradeAnalyzedString(org.elasticsearch.index.mapper.StringMappingUpgradeTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:26,470][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:26,560][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:26,580][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] The [string] field is deprecated, please use [text] or [keyword] instead on [field]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:26,581][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [StringMappingUpgradeTests#testUpgradeAnalyzedString]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUpgradeAnalyzedString(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
  "startTimestamp": 1474195586463,
  "executionTime": 171
 }
]

[
 "TEST_STARTED",
 "ID#testUpgradeIndexOptions(org.elasticsearch.index.mapper.StringMappingUpgradeTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:26,650][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:26,704][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:26,728][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] The [string] field is deprecated, please use [text] or [keyword] instead on [field]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:26,732][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [StringMappingUpgradeTests#testUpgradeIndexOptions]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUpgradeIndexOptions(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
  "startTimestamp": 1474195586634,
  "executionTime": 130
 }
]

[
 "TEST_STARTED",
 "ID#testUpgradeTemplateWithDynamicTypeKeyword(org.elasticsearch.index.mapper.StringMappingUpgradeTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:26,776][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:26,845][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:26,867][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] Expected a boolean for property [index] but got [not_analyzed]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:26,868][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [StringMappingUpgradeTests#testUpgradeTemplateWithDynamicTypeKeyword]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUpgradeTemplateWithDynamicTypeKeyword(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
  "startTimestamp": 1474195586765,
  "executionTime": 138
 }
]

[
 "TEST_STARTED",
 "ID#testUpgradeTemplateWithDynamicType(org.elasticsearch.index.mapper.StringMappingUpgradeTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:26,913][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:27,095][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:27,116][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [StringMappingUpgradeTests#testUpgradeTemplateWithDynamicType]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUpgradeTemplateWithDynamicType(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
  "startTimestamp": 1474195586903,
  "executionTime": 249
 }
]

[
 "TEST_STARTED",
 "ID#testUpgradeNotIndexedString(org.elasticsearch.index.mapper.StringMappingUpgradeTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:27,159][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:27,242][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:27,258][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] The [string] field is deprecated, please use [text] or [keyword] instead on [field]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:27,258][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [StringMappingUpgradeTests#testUpgradeNotIndexedString]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUpgradeNotIndexedString(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
  "startTimestamp": 1474195587152,
  "executionTime": 137
 }
]

[
 "TEST_STARTED",
 "ID#testUpgradeNotAnalyzedString(org.elasticsearch.index.mapper.StringMappingUpgradeTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:27,298][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:27,356][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:27,376][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] The [string] field is deprecated, please use [text] or [keyword] instead on [field]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:27,377][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [StringMappingUpgradeTests#testUpgradeNotAnalyzedString]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUpgradeNotAnalyzedString(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
  "startTimestamp": 1474195587290,
  "executionTime": 119
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalIndexValue(org.elasticsearch.index.mapper.StringMappingUpgradeTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:27,416][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:27,491][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:27,519][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [StringMappingUpgradeTests#testIllegalIndexValue]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalIndexValue(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
  "startTimestamp": 1474195587409,
  "executionTime": 168
 }
]

[
 "TEST_STARTED",
 "ID#testUpgradePositionGap(org.elasticsearch.index.mapper.StringMappingUpgradeTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:27,585][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:27,633][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:27,650][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] The [string] field is deprecated, please use [text] or [keyword] instead on [field]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:27,651][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [StringMappingUpgradeTests#testUpgradePositionGap]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUpgradePositionGap(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
  "startTimestamp": 1474195587578,
  "executionTime": 128
 }
]

[
 "TEST_STARTED",
 "ID#testUpgradeDefaults(org.elasticsearch.index.mapper.StringMappingUpgradeTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:27,713][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:27,766][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:27,780][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] The [string] field is deprecated, please use [text] or [keyword] instead on [field]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:27,781][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [StringMappingUpgradeTests#testUpgradeDefaults]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUpgradeDefaults(org.elasticsearch.index.mapper.StringMappingUpgradeTests)",
  "startTimestamp": 1474195587706,
  "executionTime": 107
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:27,814][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:27,814][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:27,815][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:27,816][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.StringMappingUpgradeTests",
  "startTimestamp": 1474195581923,
  "executionTime": 5904
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.functionscore.FieldValueFactorFunctionModifierTests",
   "displayName": "org.elasticsearch.index.query.functionscore.FieldValueFactorFunctionModifierTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.functionscore.FieldValueFactorFunctionModifierTests",
   "children": [
    {
     "id": "ID#testReadFrom(org.elasticsearch.index.query.functionscore.FieldValueFactorFunctionModifierTests)",
     "displayName": "testReadFrom(org.elasticsearch.index.query.functionscore.FieldValueFactorFunctionModifierTests)",
     "methodName": "testReadFrom",
     "className": "org.elasticsearch.index.query.functionscore.FieldValueFactorFunctionModifierTests",
     "children": []
    },
    {
     "id": "ID#testWriteTo(org.elasticsearch.index.query.functionscore.FieldValueFactorFunctionModifierTests)",
     "displayName": "testWriteTo(org.elasticsearch.index.query.functionscore.FieldValueFactorFunctionModifierTests)",
     "methodName": "testWriteTo",
     "className": "org.elasticsearch.index.query.functionscore.FieldValueFactorFunctionModifierTests",
     "children": []
    },
    {
     "id": "ID#testValidOrdinals(org.elasticsearch.index.query.functionscore.FieldValueFactorFunctionModifierTests)",
     "displayName": "testValidOrdinals(org.elasticsearch.index.query.functionscore.FieldValueFactorFunctionModifierTests)",
     "methodName": "testValidOrdinals",
     "className": "org.elasticsearch.index.query.functionscore.FieldValueFactorFunctionModifierTests",
     "children": []
    },
    {
     "id": "ID#testFromString(org.elasticsearch.index.query.functionscore.FieldValueFactorFunctionModifierTests)",
     "displayName": "testFromString(org.elasticsearch.index.query.functionscore.FieldValueFactorFunctionModifierTests)",
     "methodName": "testFromString",
     "className": "org.elasticsearch.index.query.functionscore.FieldValueFactorFunctionModifierTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195587859
 }
]

[
 "TEST_STARTED",
 "ID#testReadFrom(org.elasticsearch.index.query.functionscore.FieldValueFactorFunctionModifierTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReadFrom(org.elasticsearch.index.query.functionscore.FieldValueFactorFunctionModifierTests)",
  "startTimestamp": 1474195588000,
  "executionTime": 59
 }
]

[
 "TEST_STARTED",
 "ID#testWriteTo(org.elasticsearch.index.query.functionscore.FieldValueFactorFunctionModifierTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWriteTo(org.elasticsearch.index.query.functionscore.FieldValueFactorFunctionModifierTests)",
  "startTimestamp": 1474195588059,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testValidOrdinals(org.elasticsearch.index.query.functionscore.FieldValueFactorFunctionModifierTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidOrdinals(org.elasticsearch.index.query.functionscore.FieldValueFactorFunctionModifierTests)",
  "startTimestamp": 1474195588062,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFromString(org.elasticsearch.index.query.functionscore.FieldValueFactorFunctionModifierTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromString(org.elasticsearch.index.query.functionscore.FieldValueFactorFunctionModifierTests)",
  "startTimestamp": 1474195588065,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.functionscore.FieldValueFactorFunctionModifierTests",
  "startTimestamp": 1474195587859,
  "executionTime": 210
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.IndexFieldMapperTests",
   "displayName": "org.elasticsearch.index.mapper.IndexFieldMapperTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.IndexFieldMapperTests",
   "children": [
    {
     "id": "ID#testBwCompatIndexNotConfigurable(org.elasticsearch.index.mapper.IndexFieldMapperTests)",
     "displayName": "testBwCompatIndexNotConfigurable(org.elasticsearch.index.mapper.IndexFieldMapperTests)",
     "methodName": "testBwCompatIndexNotConfigurable",
     "className": "org.elasticsearch.index.mapper.IndexFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testIndexNotConfigurable(org.elasticsearch.index.mapper.IndexFieldMapperTests)",
     "displayName": "testIndexNotConfigurable(org.elasticsearch.index.mapper.IndexFieldMapperTests)",
     "methodName": "testIndexNotConfigurable",
     "className": "org.elasticsearch.index.mapper.IndexFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testDefaultDisabledIndexMapper(org.elasticsearch.index.mapper.IndexFieldMapperTests)",
     "displayName": "testDefaultDisabledIndexMapper(org.elasticsearch.index.mapper.IndexFieldMapperTests)",
     "methodName": "testDefaultDisabledIndexMapper",
     "className": "org.elasticsearch.index.mapper.IndexFieldMapperTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195588076
 }
]

[
 "TEST_STARTED",
 "ID#testBwCompatIndexNotConfigurable(org.elasticsearch.index.mapper.IndexFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:28,127][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:28,700][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:28,700][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:28,703][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[7260], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:28,706][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:28,706][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.test.InternalSettingsPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:28,840][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:28,840][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:28,841][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[9]}, bound_addresses {local[9]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:28,843][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{A1LAGr7-TVm26_uock-kJQ}{RTOtzazZRe6nCA8V9YfSVg}{local}{local[9]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:28,844][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:28,919][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:28,936][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:29,000][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:29,013][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [IndexFieldMapperTests#testBwCompatIndexNotConfigurable]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBwCompatIndexNotConfigurable(org.elasticsearch.index.mapper.IndexFieldMapperTests)",
  "startTimestamp": 1474195588119,
  "executionTime": 924
 }
]

[
 "TEST_STARTED",
 "ID#testIndexNotConfigurable(org.elasticsearch.index.mapper.IndexFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:29,050][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:29,099][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:29,116][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [IndexFieldMapperTests#testIndexNotConfigurable]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexNotConfigurable(org.elasticsearch.index.mapper.IndexFieldMapperTests)",
  "startTimestamp": 1474195589043,
  "executionTime": 116
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultDisabledIndexMapper(org.elasticsearch.index.mapper.IndexFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:29,171][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:29,227][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:29,248][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [IndexFieldMapperTests#testDefaultDisabledIndexMapper]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultDisabledIndexMapper(org.elasticsearch.index.mapper.IndexFieldMapperTests)",
  "startTimestamp": 1474195589160,
  "executionTime": 165
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:29,325][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:29,326][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:29,326][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:29,328][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.IndexFieldMapperTests",
  "startTimestamp": 1474195588076,
  "executionTime": 1260
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.indices.IndicesQueryCacheTests",
   "displayName": "org.elasticsearch.indices.IndicesQueryCacheTests",
   "methodName": null,
   "className": "org.elasticsearch.indices.IndicesQueryCacheTests",
   "children": [
    {
     "id": "ID#testBasics(org.elasticsearch.indices.IndicesQueryCacheTests)",
     "displayName": "testBasics(org.elasticsearch.indices.IndicesQueryCacheTests)",
     "methodName": "testBasics",
     "className": "org.elasticsearch.indices.IndicesQueryCacheTests",
     "children": []
    },
    {
     "id": "ID#testTwoShards(org.elasticsearch.indices.IndicesQueryCacheTests)",
     "displayName": "testTwoShards(org.elasticsearch.indices.IndicesQueryCacheTests)",
     "methodName": "testTwoShards",
     "className": "org.elasticsearch.indices.IndicesQueryCacheTests",
     "children": []
    },
    {
     "id": "ID#testStatsOnEviction(org.elasticsearch.indices.IndicesQueryCacheTests)",
     "displayName": "testStatsOnEviction(org.elasticsearch.indices.IndicesQueryCacheTests)",
     "methodName": "testStatsOnEviction",
     "className": "org.elasticsearch.indices.IndicesQueryCacheTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195589344
 }
]

[
 "TEST_STARTED",
 "ID#testBasics(org.elasticsearch.indices.IndicesQueryCacheTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBasics(org.elasticsearch.indices.IndicesQueryCacheTests)",
  "startTimestamp": 1474195589361,
  "executionTime": 287
 }
]

[
 "TEST_STARTED",
 "ID#testTwoShards(org.elasticsearch.indices.IndicesQueryCacheTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTwoShards(org.elasticsearch.indices.IndicesQueryCacheTests)",
  "startTimestamp": 1474195589648,
  "executionTime": 256
 }
]

[
 "TEST_STARTED",
 "ID#testStatsOnEviction(org.elasticsearch.indices.IndicesQueryCacheTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStatsOnEviction(org.elasticsearch.indices.IndicesQueryCacheTests)",
  "startTimestamp": 1474195589905,
  "executionTime": 46
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.indices.IndicesQueryCacheTests",
  "startTimestamp": 1474195589344,
  "executionTime": 610
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.bucket.histogram.ExtendedBoundsTests",
   "displayName": "org.elasticsearch.search.aggregations.bucket.histogram.ExtendedBoundsTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.bucket.histogram.ExtendedBoundsTests",
   "children": [
    {
     "id": "ID#testParseAndValidate(org.elasticsearch.search.aggregations.bucket.histogram.ExtendedBoundsTests)",
     "displayName": "testParseAndValidate(org.elasticsearch.search.aggregations.bucket.histogram.ExtendedBoundsTests)",
     "methodName": "testParseAndValidate",
     "className": "org.elasticsearch.search.aggregations.bucket.histogram.ExtendedBoundsTests",
     "children": []
    },
    {
     "id": "ID#testXContentRoundTrip(org.elasticsearch.search.aggregations.bucket.histogram.ExtendedBoundsTests)",
     "displayName": "testXContentRoundTrip(org.elasticsearch.search.aggregations.bucket.histogram.ExtendedBoundsTests)",
     "methodName": "testXContentRoundTrip",
     "className": "org.elasticsearch.search.aggregations.bucket.histogram.ExtendedBoundsTests",
     "children": []
    },
    {
     "id": "ID#testTransportRoundTrip(org.elasticsearch.search.aggregations.bucket.histogram.ExtendedBoundsTests)",
     "displayName": "testTransportRoundTrip(org.elasticsearch.search.aggregations.bucket.histogram.ExtendedBoundsTests)",
     "methodName": "testTransportRoundTrip",
     "className": "org.elasticsearch.search.aggregations.bucket.histogram.ExtendedBoundsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195589985
 }
]

[
 "TEST_STARTED",
 "ID#testParseAndValidate(org.elasticsearch.search.aggregations.bucket.histogram.ExtendedBoundsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseAndValidate(org.elasticsearch.search.aggregations.bucket.histogram.ExtendedBoundsTests)",
  "startTimestamp": 1474195590006,
  "executionTime": 278
 }
]

[
 "TEST_STARTED",
 "ID#testXContentRoundTrip(org.elasticsearch.search.aggregations.bucket.histogram.ExtendedBoundsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testXContentRoundTrip(org.elasticsearch.search.aggregations.bucket.histogram.ExtendedBoundsTests)",
  "startTimestamp": 1474195590284,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testTransportRoundTrip(org.elasticsearch.search.aggregations.bucket.histogram.ExtendedBoundsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTransportRoundTrip(org.elasticsearch.search.aggregations.bucket.histogram.ExtendedBoundsTests)",
  "startTimestamp": 1474195590288,
  "executionTime": 4
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.bucket.histogram.ExtendedBoundsTests",
  "startTimestamp": 1474195589985,
  "executionTime": 337
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.LegacyIntegerFieldTypeTests",
   "displayName": "org.elasticsearch.index.mapper.LegacyIntegerFieldTypeTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.LegacyIntegerFieldTypeTests",
   "children": [
    {
     "id": "ID#testCheckTypeName(org.elasticsearch.index.mapper.LegacyIntegerFieldTypeTests)",
     "displayName": "testCheckTypeName(org.elasticsearch.index.mapper.LegacyIntegerFieldTypeTests)",
     "methodName": "testCheckTypeName",
     "className": "org.elasticsearch.index.mapper.LegacyIntegerFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testEquals(org.elasticsearch.index.mapper.LegacyIntegerFieldTypeTests)",
     "displayName": "testEquals(org.elasticsearch.index.mapper.LegacyIntegerFieldTypeTests)",
     "methodName": "testEquals",
     "className": "org.elasticsearch.index.mapper.LegacyIntegerFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.LegacyIntegerFieldTypeTests)",
     "displayName": "testCheckCompatibility(org.elasticsearch.index.mapper.LegacyIntegerFieldTypeTests)",
     "methodName": "testCheckCompatibility",
     "className": "org.elasticsearch.index.mapper.LegacyIntegerFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testIsFieldWithinQuery(org.elasticsearch.index.mapper.LegacyIntegerFieldTypeTests)",
     "displayName": "testIsFieldWithinQuery(org.elasticsearch.index.mapper.LegacyIntegerFieldTypeTests)",
     "methodName": "testIsFieldWithinQuery",
     "className": "org.elasticsearch.index.mapper.LegacyIntegerFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testFreeze(org.elasticsearch.index.mapper.LegacyIntegerFieldTypeTests)",
     "displayName": "testFreeze(org.elasticsearch.index.mapper.LegacyIntegerFieldTypeTests)",
     "methodName": "testFreeze",
     "className": "org.elasticsearch.index.mapper.LegacyIntegerFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testValueForSearch(org.elasticsearch.index.mapper.LegacyIntegerFieldTypeTests)",
     "displayName": "testValueForSearch(org.elasticsearch.index.mapper.LegacyIntegerFieldTypeTests)",
     "methodName": "testValueForSearch",
     "className": "org.elasticsearch.index.mapper.LegacyIntegerFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testClone(org.elasticsearch.index.mapper.LegacyIntegerFieldTypeTests)",
     "displayName": "testClone(org.elasticsearch.index.mapper.LegacyIntegerFieldTypeTests)",
     "methodName": "testClone",
     "className": "org.elasticsearch.index.mapper.LegacyIntegerFieldTypeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195590334
 }
]

[
 "TEST_STARTED",
 "ID#testCheckTypeName(org.elasticsearch.index.mapper.LegacyIntegerFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckTypeName(org.elasticsearch.index.mapper.LegacyIntegerFieldTypeTests)",
  "startTimestamp": 1474195590410,
  "executionTime": 21
 }
]

[
 "TEST_STARTED",
 "ID#testEquals(org.elasticsearch.index.mapper.LegacyIntegerFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEquals(org.elasticsearch.index.mapper.LegacyIntegerFieldTypeTests)",
  "startTimestamp": 1474195590432,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCheckCompatibility(org.elasticsearch.index.mapper.LegacyIntegerFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.LegacyIntegerFieldTypeTests)",
  "startTimestamp": 1474195590434,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testIsFieldWithinQuery(org.elasticsearch.index.mapper.LegacyIntegerFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsFieldWithinQuery(org.elasticsearch.index.mapper.LegacyIntegerFieldTypeTests)",
  "startTimestamp": 1474195590439,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testFreeze(org.elasticsearch.index.mapper.LegacyIntegerFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFreeze(org.elasticsearch.index.mapper.LegacyIntegerFieldTypeTests)",
  "startTimestamp": 1474195590443,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testValueForSearch(org.elasticsearch.index.mapper.LegacyIntegerFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValueForSearch(org.elasticsearch.index.mapper.LegacyIntegerFieldTypeTests)",
  "startTimestamp": 1474195590445,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testClone(org.elasticsearch.index.mapper.LegacyIntegerFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClone(org.elasticsearch.index.mapper.LegacyIntegerFieldTypeTests)",
  "startTimestamp": 1474195590448,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.LegacyIntegerFieldTypeTests",
  "startTimestamp": 1474195590334,
  "executionTime": 118
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.allocation.AddIncrementallyTests",
   "displayName": "org.elasticsearch.cluster.routing.allocation.AddIncrementallyTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.allocation.AddIncrementallyTests",
   "children": [
    {
     "id": "ID#testAddNodesAndIndices(org.elasticsearch.cluster.routing.allocation.AddIncrementallyTests)",
     "displayName": "testAddNodesAndIndices(org.elasticsearch.cluster.routing.allocation.AddIncrementallyTests)",
     "methodName": "testAddNodesAndIndices",
     "className": "org.elasticsearch.cluster.routing.allocation.AddIncrementallyTests",
     "children": []
    },
    {
     "id": "ID#testMinimalRelocationsNoLimit(org.elasticsearch.cluster.routing.allocation.AddIncrementallyTests)",
     "displayName": "testMinimalRelocationsNoLimit(org.elasticsearch.cluster.routing.allocation.AddIncrementallyTests)",
     "methodName": "testMinimalRelocationsNoLimit",
     "className": "org.elasticsearch.cluster.routing.allocation.AddIncrementallyTests",
     "children": []
    },
    {
     "id": "ID#testMinimalRelocations(org.elasticsearch.cluster.routing.allocation.AddIncrementallyTests)",
     "displayName": "testMinimalRelocations(org.elasticsearch.cluster.routing.allocation.AddIncrementallyTests)",
     "methodName": "testMinimalRelocations",
     "className": "org.elasticsearch.cluster.routing.allocation.AddIncrementallyTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195590460
 }
]

[
 "TEST_STARTED",
 "ID#testAddNodesAndIndices(org.elasticsearch.cluster.routing.allocation.AddIncrementallyTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:30,494][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start 1 nodes%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:30,498][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] restart all the primary shards, replicas will start initializing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:30,503][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start the replica shards%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:30,504][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] complete rebalancing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:30,507][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] now, start [1] more node, check that rebalancing will happen because we set it to always%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:30,533][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test0][2]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:30,533][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] now, start [1] more node, check that rebalancing will happen because we set it to always%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:30,550][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] now, start [1] more node, check that rebalancing will happen because we set it to always%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:30,557][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Removing [1] nodes%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:30,564][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [GREEN] to [YELLOW] (reason: [reroute]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:30,564][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start all the primary shards, replicas will start initializing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:30,570][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start the replica shards%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:30,571][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test0][2]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:30,571][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] rebalancing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:30,571][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] complete rebalancing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:30,573][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] restart all the primary shards, replicas will start initializing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:30,575][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start the replica shards%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:30,576][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] complete rebalancing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:30,577][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] restart all the primary shards, replicas will start initializing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:30,578][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start the replica shards%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:30,582][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] complete rebalancing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:30,583][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] now, start [1] more node, check that rebalancing will happen because we set it to always%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:30,621][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test3][1], [test3][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:30,629][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Removing [1] nodes%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:30,632][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [GREEN] to [YELLOW] (reason: [reroute]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:30,632][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start all the primary shards, replicas will start initializing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:30,638][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start the replica shards%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:30,639][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] rebalancing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:30,639][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] complete rebalancing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:30,639][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] now, start [1] more node, check that rebalancing will happen because we set it to always%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:30,646][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test3][1], [test3][0]] ...]).%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAddNodesAndIndices(org.elasticsearch.cluster.routing.allocation.AddIncrementallyTests)",
  "startTimestamp": 1474195590487,
  "executionTime": 165
 }
]

[
 "TEST_STARTED",
 "ID#testMinimalRelocationsNoLimit(org.elasticsearch.cluster.routing.allocation.AddIncrementallyTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:30,662][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start 1 nodes%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:30,666][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] restart all the primary shards, replicas will start initializing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:30,667][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start the replica shards%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:30,667][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] complete rebalancing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:30,667][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] now, start [1] more node, check that rebalancing will happen because we set it to always%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:30,670][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test0][1], [test0][2], [test0][0], [test2][1], [test2][2], [test2][0], [test1][1], [test1][2], [test1][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:30,671][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] now, start one more node, check that rebalancing will happen because we set it to always%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMinimalRelocationsNoLimit(org.elasticsearch.cluster.routing.allocation.AddIncrementallyTests)",
  "startTimestamp": 1474195590652,
  "executionTime": 49
 }
]

[
 "TEST_STARTED",
 "ID#testMinimalRelocations(org.elasticsearch.cluster.routing.allocation.AddIncrementallyTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:30,708][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start 1 nodes%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:30,709][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] restart all the primary shards, replicas will start initializing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:30,710][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start the replica shards%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:30,710][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] complete rebalancing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:30,711][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] now, start [1] more node, check that rebalancing will happen because we set it to always%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:30,717][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test0][2]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:30,717][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] now, start one more node, check that rebalancing will happen because we set it to always%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMinimalRelocations(org.elasticsearch.cluster.routing.allocation.AddIncrementallyTests)",
  "startTimestamp": 1474195590701,
  "executionTime": 20
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.allocation.AddIncrementallyTests",
  "startTimestamp": 1474195590460,
  "executionTime": 263
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.indices.recovery.RecoverySourceHandlerTests",
   "displayName": "org.elasticsearch.indices.recovery.RecoverySourceHandlerTests",
   "methodName": null,
   "className": "org.elasticsearch.indices.recovery.RecoverySourceHandlerTests",
   "children": [
    {
     "id": "ID#testSendFiles(org.elasticsearch.indices.recovery.RecoverySourceHandlerTests)",
     "displayName": "testSendFiles(org.elasticsearch.indices.recovery.RecoverySourceHandlerTests)",
     "methodName": "testSendFiles",
     "className": "org.elasticsearch.indices.recovery.RecoverySourceHandlerTests",
     "children": []
    },
    {
     "id": "ID#testWaitForClusterStateOnPrimaryRelocation(org.elasticsearch.indices.recovery.RecoverySourceHandlerTests)",
     "displayName": "testWaitForClusterStateOnPrimaryRelocation(org.elasticsearch.indices.recovery.RecoverySourceHandlerTests)",
     "methodName": "testWaitForClusterStateOnPrimaryRelocation",
     "className": "org.elasticsearch.indices.recovery.RecoverySourceHandlerTests",
     "children": []
    },
    {
     "id": "ID#testHandleCorruptedIndexOnSendSendFiles(org.elasticsearch.indices.recovery.RecoverySourceHandlerTests)",
     "displayName": "testHandleCorruptedIndexOnSendSendFiles(org.elasticsearch.indices.recovery.RecoverySourceHandlerTests)",
     "methodName": "testHandleCorruptedIndexOnSendSendFiles",
     "className": "org.elasticsearch.indices.recovery.RecoverySourceHandlerTests",
     "children": []
    },
    {
     "id": "ID#testThrowExceptionOnPrimaryRelocatedBeforePhase1Completed(org.elasticsearch.indices.recovery.RecoverySourceHandlerTests)",
     "displayName": "testThrowExceptionOnPrimaryRelocatedBeforePhase1Completed(org.elasticsearch.indices.recovery.RecoverySourceHandlerTests)",
     "methodName": "testThrowExceptionOnPrimaryRelocatedBeforePhase1Completed",
     "className": "org.elasticsearch.indices.recovery.RecoverySourceHandlerTests",
     "children": []
    },
    {
     "id": "ID#testHandleExceptinoOnSendSendFiles(org.elasticsearch.indices.recovery.RecoverySourceHandlerTests)",
     "displayName": "testHandleExceptinoOnSendSendFiles(org.elasticsearch.indices.recovery.RecoverySourceHandlerTests)",
     "methodName": "testHandleExceptinoOnSendSendFiles",
     "className": "org.elasticsearch.indices.recovery.RecoverySourceHandlerTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195590742
 }
]

[
 "TEST_STARTED",
 "ID#testSendFiles(org.elasticsearch.indices.recovery.RecoverySourceHandlerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSendFiles(org.elasticsearch.indices.recovery.RecoverySourceHandlerTests)",
  "startTimestamp": 1474195590782,
  "executionTime": 856
 }
]

[
 "TEST_STARTED",
 "ID#testWaitForClusterStateOnPrimaryRelocation(org.elasticsearch.indices.recovery.RecoverySourceHandlerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWaitForClusterStateOnPrimaryRelocation(org.elasticsearch.indices.recovery.RecoverySourceHandlerTests)",
  "startTimestamp": 1474195591639,
  "executionTime": 177
 }
]

[
 "TEST_STARTED",
 "ID#testHandleCorruptedIndexOnSendSendFiles(org.elasticsearch.indices.recovery.RecoverySourceHandlerTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:46:32,150][INFO ][test                     ] Corrupting file --  flipping at position 304 from 4c to 4d file: _0.si%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:46:32,156][INFO ][test                     ] Checksum before: [1801639450] after: [2707170697] checksum value after corruption: 1801639450] file: _0.si length: 363%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:46:32,179][WARN ][org.elasticsearch.indices.recovery]  [index][1] 1 Corrupted file detected name [_0.si], length [363], checksum [tsndwa], writtenBy [6.2.0] checksum mismatch%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHandleCorruptedIndexOnSendSendFiles(org.elasticsearch.indices.recovery.RecoverySourceHandlerTests)",
  "startTimestamp": 1474195591816,
  "executionTime": 364
 }
]

[
 "TEST_STARTED",
 "ID#testThrowExceptionOnPrimaryRelocatedBeforePhase1Completed(org.elasticsearch.indices.recovery.RecoverySourceHandlerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThrowExceptionOnPrimaryRelocatedBeforePhase1Completed(org.elasticsearch.indices.recovery.RecoverySourceHandlerTests)",
  "startTimestamp": 1474195592180,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testHandleExceptinoOnSendSendFiles(org.elasticsearch.indices.recovery.RecoverySourceHandlerTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "2016-09-18 12:46:32,350 TEST-RecoverySourceHandlerTests.testHandleExceptinoOnSendSendFiles-seed#[FD13852EF36FC81C] ERROR An exception occurred processing Appender console java.security.AccessControlException: access denied (\"java.lang.RuntimePermission\" \"accessClassInPackage.sun.reflect\")%0D%0A%09at java.security.AccessControlContext.checkPermission(AccessControlContext.java:472)%0D%0A%09at java.security.AccessController.checkPermission(AccessController.java:884)%0D%0A%09at java.lang.SecurityManager.checkPermission(SecurityManager.java:549)%0D%0A%09at java.lang.SecurityManager.checkPackageAccess(SecurityManager.java:1564)%0D%0A%09at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:311)%0D%0A%09at java.lang.ClassLoader.loadClass(ClassLoader.java:357)%0D%0A%09at java.lang.Class.forName0(Native Method)%0D%0A%09at java.lang.Class.forName(Class.java:264)%0D%0A%09at org.apache.logging.log4j.util.LoaderUtil.loadClass(LoaderUtil.java:122)%0D%0A%09at org.apache.logging.log4j.core.util.Loader.loadClass(Loader.java:228)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.loadClass(ThrowableProxy.java:496)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.toExtendedStackTrace(ThrowableProxy.java:617)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.<init>(ThrowableProxy.java:135)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.<init>(ThrowableProxy.java:117)%0D%0A%09at org.apache.logging.log4j.core.impl.MutableLogEvent.getThrownProxy(MutableLogEvent.java:314)%0D%0A%09at org.apache.logging.log4j.core.pattern.ExtendedThrowablePatternConverter.format(ExtendedThrowablePatternConverter.java:61)%0D%0A%09at org.apache.logging.log4j.core.pattern.PatternFormatter.format(PatternFormatter.java:38)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout$PatternSerializer.toSerializable(PatternLayout.java:294)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout.toText(PatternLayout.java:195)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout.encode(PatternLayout.java:180)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout.encode(PatternLayout.java:57)%0D%0A%09at org.apache.logging.log4j.core.appender.AbstractOutputStreamAppender.directEncodeEvent(AbstractOutputStreamAppender.java:120)%0D%0A%09at org.apache.logging.log4j.core.appender.AbstractOutputStreamAppender.tryAppend(AbstractOutputStreamAppender.java:113)%0D%0A%09at org.apache.logging.log4j.core.appender.AbstractOutputStreamAppender.append(AbstractOutputStreamAppender.java:104)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.tryCallAppender(AppenderControl.java:155)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.callAppender0(AppenderControl.java:128)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.callAppenderPreventRecursion(AppenderControl.java:119)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.callAppender(AppenderControl.java:84)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.callAppenders(LoggerConfig.java:390)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.processLogEvent(LoggerConfig.java:375)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.log(LoggerConfig.java:359)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.log(LoggerConfig.java:349)%0D%0A%09at org.apache.logging.log4j.core.config.AwaitCompletionReliabilityStrategy.log(AwaitCompletionReliabilityStrategy.java:63)%0D%0A%09at org.apache.logging.log4j.core.Logger.logMessage(Logger.java:146)%0D%0A%09at org.apache.logging.log4j.spi.AbstractLogger.logMessage(AbstractLogger.java:1983)%0D%0A%09at org.apache.logging.log4j.spi.AbstractLogger.logIfEnabled(AbstractLogger.java:1845)%0D%0A%09at org.apache.logging.log4j.spi.AbstractLogger.warn(AbstractLogger.java:2536)%0D%0A%09at org.elasticsearch.indices.recovery.RecoverySourceHandler.sendFiles(RecoverySourceHandler.java:564)%0D%0A%09at org.elasticsearch.indices.recovery.RecoverySourceHandlerTests.testHandleExceptinoOnSendSendFiles(RecoverySourceHandlerTests.java:235)%0D%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)%0D%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)%0D%0A%09at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)%0D%0A%09at java.lang.reflect.Method.invoke(Method.java:498)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:49)%0D%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)%0D%0A%09at org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:48)%0D%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)%0D%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0D%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)%0D%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)%0D%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:41)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:53)%0D%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)%0D%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)%0D%0A%09at org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:54)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0D%0A%09at java.lang.Thread.run(Thread.java:745)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHandleExceptinoOnSendSendFiles(org.elasticsearch.indices.recovery.RecoverySourceHandlerTests)",
  "startTimestamp": 1474195592185,
  "executionTime": 169
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.indices.recovery.RecoverySourceHandlerTests",
  "startTimestamp": 1474195590742,
  "executionTime": 1649
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.network.NetworkUtilsTests",
   "displayName": "org.elasticsearch.common.network.NetworkUtilsTests",
   "methodName": null,
   "className": "org.elasticsearch.common.network.NetworkUtilsTests",
   "children": [
    {
     "id": "ID#testSortKey(org.elasticsearch.common.network.NetworkUtilsTests)",
     "displayName": "testSortKey(org.elasticsearch.common.network.NetworkUtilsTests)",
     "methodName": "testSortKey",
     "className": "org.elasticsearch.common.network.NetworkUtilsTests",
     "children": []
    },
    {
     "id": "ID#testSortKeySiteLocal(org.elasticsearch.common.network.NetworkUtilsTests)",
     "displayName": "testSortKeySiteLocal(org.elasticsearch.common.network.NetworkUtilsTests)",
     "methodName": "testSortKeySiteLocal",
     "className": "org.elasticsearch.common.network.NetworkUtilsTests",
     "children": []
    },
    {
     "id": "ID#testSortKeyLinkLocal(org.elasticsearch.common.network.NetworkUtilsTests)",
     "displayName": "testSortKeyLinkLocal(org.elasticsearch.common.network.NetworkUtilsTests)",
     "methodName": "testSortKeyLinkLocal",
     "className": "org.elasticsearch.common.network.NetworkUtilsTests",
     "children": []
    },
    {
     "id": "ID#testFilter(org.elasticsearch.common.network.NetworkUtilsTests)",
     "displayName": "testFilter(org.elasticsearch.common.network.NetworkUtilsTests)",
     "methodName": "testFilter",
     "className": "org.elasticsearch.common.network.NetworkUtilsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195592405
 }
]

[
 "TEST_STARTED",
 "ID#testSortKey(org.elasticsearch.common.network.NetworkUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSortKey(org.elasticsearch.common.network.NetworkUtilsTests)",
  "startTimestamp": 1474195592444,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSortKeySiteLocal(org.elasticsearch.common.network.NetworkUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSortKeySiteLocal(org.elasticsearch.common.network.NetworkUtilsTests)",
  "startTimestamp": 1474195592446,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSortKeyLinkLocal(org.elasticsearch.common.network.NetworkUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSortKeyLinkLocal(org.elasticsearch.common.network.NetworkUtilsTests)",
  "startTimestamp": 1474195592448,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFilter(org.elasticsearch.common.network.NetworkUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFilter(org.elasticsearch.common.network.NetworkUtilsTests)",
  "startTimestamp": 1474195592450,
  "executionTime": 9
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.network.NetworkUtilsTests",
  "startTimestamp": 1474195592405,
  "executionTime": 73
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.geo.builders.LineStringBuilderTests",
   "displayName": "org.elasticsearch.common.geo.builders.LineStringBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.common.geo.builders.LineStringBuilderTests",
   "children": [
    {
     "id": "ID#testFromXContent(org.elasticsearch.common.geo.builders.LineStringBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.common.geo.builders.LineStringBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.common.geo.builders.LineStringBuilderTests",
     "children": []
    },
    {
     "id": "ID#testInvalidConstructorArgs(org.elasticsearch.common.geo.builders.LineStringBuilderTests)",
     "displayName": "testInvalidConstructorArgs(org.elasticsearch.common.geo.builders.LineStringBuilderTests)",
     "methodName": "testInvalidConstructorArgs",
     "className": "org.elasticsearch.common.geo.builders.LineStringBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.common.geo.builders.LineStringBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.common.geo.builders.LineStringBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.common.geo.builders.LineStringBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.common.geo.builders.LineStringBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.common.geo.builders.LineStringBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.common.geo.builders.LineStringBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195592489
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.common.geo.builders.LineStringBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.common.geo.builders.LineStringBuilderTests)",
  "startTimestamp": 1474195592520,
  "executionTime": 46
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidConstructorArgs(org.elasticsearch.common.geo.builders.LineStringBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidConstructorArgs(org.elasticsearch.common.geo.builders.LineStringBuilderTests)",
  "startTimestamp": 1474195592566,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.common.geo.builders.LineStringBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.common.geo.builders.LineStringBuilderTests)",
  "startTimestamp": 1474195592569,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.common.geo.builders.LineStringBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.common.geo.builders.LineStringBuilderTests)",
  "startTimestamp": 1474195592573,
  "executionTime": 5
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.geo.builders.LineStringBuilderTests",
  "startTimestamp": 1474195592489,
  "executionTime": 91
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.analysis.HunspellTokenFilterFactoryTests",
   "displayName": "org.elasticsearch.index.analysis.HunspellTokenFilterFactoryTests",
   "methodName": null,
   "className": "org.elasticsearch.index.analysis.HunspellTokenFilterFactoryTests",
   "children": [
    {
     "id": "ID#testDedup(org.elasticsearch.index.analysis.HunspellTokenFilterFactoryTests)",
     "displayName": "testDedup(org.elasticsearch.index.analysis.HunspellTokenFilterFactoryTests)",
     "methodName": "testDedup",
     "className": "org.elasticsearch.index.analysis.HunspellTokenFilterFactoryTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195592586
 }
]

[
 "TEST_STARTED",
 "ID#testDedup(org.elasticsearch.index.analysis.HunspellTokenFilterFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDedup(org.elasticsearch.index.analysis.HunspellTokenFilterFactoryTests)",
  "startTimestamp": 1474195592629,
  "executionTime": 3471
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.analysis.HunspellTokenFilterFactoryTests",
  "startTimestamp": 1474195592586,
  "executionTime": 3519
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.NullValueTests",
   "displayName": "org.elasticsearch.index.mapper.NullValueTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.NullValueTests",
   "children": [
    {
     "id": "ID#testNullNullValue(org.elasticsearch.index.mapper.NullValueTests)",
     "displayName": "testNullNullValue(org.elasticsearch.index.mapper.NullValueTests)",
     "methodName": "testNullNullValue",
     "className": "org.elasticsearch.index.mapper.NullValueTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195596110
 }
]

[
 "TEST_STARTED",
 "ID#testNullNullValue(org.elasticsearch.index.mapper.NullValueTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:46:36,151][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:46:36,177][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:46:36,177][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:46:36,181][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[7260], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:46:36,184][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:46:36,184][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:46:36,332][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:46:36,333][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:46:36,337][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[10]}, bound_addresses {local[10]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:46:36,343][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{3M8doVpUTeGbKEEoNnEeIg}{MEtAtIGlQr-TCiNHe8FuVQ}{local}{local[10]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:46:36,344][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:46:36,451][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:46:36,542][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:46:36,639][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:46:36,702][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [NullValueTests#testNullNullValue]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNullNullValue(org.elasticsearch.index.mapper.NullValueTests)",
  "startTimestamp": 1474195596135,
  "executionTime": 595
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:46:36,730][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:46:36,733][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:46:36,733][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:46:36,735][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.NullValueTests",
  "startTimestamp": 1474195596110,
  "executionTime": 635
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.monitor.fs.DeviceStatsTests",
   "displayName": "org.elasticsearch.monitor.fs.DeviceStatsTests",
   "methodName": null,
   "className": "org.elasticsearch.monitor.fs.DeviceStatsTests",
   "children": [
    {
     "id": "ID#testDeviceStats(org.elasticsearch.monitor.fs.DeviceStatsTests)",
     "displayName": "testDeviceStats(org.elasticsearch.monitor.fs.DeviceStatsTests)",
     "methodName": "testDeviceStats",
     "className": "org.elasticsearch.monitor.fs.DeviceStatsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195596752
 }
]

[
 "TEST_STARTED",
 "ID#testDeviceStats(org.elasticsearch.monitor.fs.DeviceStatsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDeviceStats(org.elasticsearch.monitor.fs.DeviceStatsTests)",
  "startTimestamp": 1474195596792,
  "executionTime": 4
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.monitor.fs.DeviceStatsTests",
  "startTimestamp": 1474195596752,
  "executionTime": 48
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.allocation.ExpectedShardSizeAllocationTests",
   "displayName": "org.elasticsearch.cluster.routing.allocation.ExpectedShardSizeAllocationTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.allocation.ExpectedShardSizeAllocationTests",
   "children": [
    {
     "id": "ID#testInitializingHasExpectedSize(org.elasticsearch.cluster.routing.allocation.ExpectedShardSizeAllocationTests)",
     "displayName": "testInitializingHasExpectedSize(org.elasticsearch.cluster.routing.allocation.ExpectedShardSizeAllocationTests)",
     "methodName": "testInitializingHasExpectedSize",
     "className": "org.elasticsearch.cluster.routing.allocation.ExpectedShardSizeAllocationTests",
     "children": []
    },
    {
     "id": "ID#testExpectedSizeOnMove(org.elasticsearch.cluster.routing.allocation.ExpectedShardSizeAllocationTests)",
     "displayName": "testExpectedSizeOnMove(org.elasticsearch.cluster.routing.allocation.ExpectedShardSizeAllocationTests)",
     "methodName": "testExpectedSizeOnMove",
     "className": "org.elasticsearch.cluster.routing.allocation.ExpectedShardSizeAllocationTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195596806
 }
]

[
 "TEST_STARTED",
 "ID#testInitializingHasExpectedSize(org.elasticsearch.cluster.routing.allocation.ExpectedShardSizeAllocationTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:46:36,842][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Building initial routing table%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:46:36,844][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Adding one node and performing rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:46:36,845][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Start the primary shard%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:46:36,845][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Add another one node and reroute%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInitializingHasExpectedSize(org.elasticsearch.cluster.routing.allocation.ExpectedShardSizeAllocationTests)",
  "startTimestamp": 1474195596828,
  "executionTime": 18
 }
]

[
 "TEST_STARTED",
 "ID#testExpectedSizeOnMove(org.elasticsearch.cluster.routing.allocation.ExpectedShardSizeAllocationTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:46:36,859][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] creating an index with 1 shard, no replica%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:46:36,860][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] adding two nodes and performing rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:46:36,862][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start primary shard%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:46:36,863][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:46:36,863][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] move the shard%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:46:36,865][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] finish moving the shard%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExpectedSizeOnMove(org.elasticsearch.cluster.routing.allocation.ExpectedShardSizeAllocationTests)",
  "startTimestamp": 1474195596846,
  "executionTime": 20
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.allocation.ExpectedShardSizeAllocationTests",
  "startTimestamp": 1474195596806,
  "executionTime": 62
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.allocation.ReplicaAllocatedAfterPrimaryTests",
   "displayName": "org.elasticsearch.cluster.routing.allocation.ReplicaAllocatedAfterPrimaryTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.allocation.ReplicaAllocatedAfterPrimaryTests",
   "children": [
    {
     "id": "ID#testBackupIsAllocatedAfterPrimary(org.elasticsearch.cluster.routing.allocation.ReplicaAllocatedAfterPrimaryTests)",
     "displayName": "testBackupIsAllocatedAfterPrimary(org.elasticsearch.cluster.routing.allocation.ReplicaAllocatedAfterPrimaryTests)",
     "methodName": "testBackupIsAllocatedAfterPrimary",
     "className": "org.elasticsearch.cluster.routing.allocation.ReplicaAllocatedAfterPrimaryTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195596874
 }
]

[
 "TEST_STARTED",
 "ID#testBackupIsAllocatedAfterPrimary(org.elasticsearch.cluster.routing.allocation.ReplicaAllocatedAfterPrimaryTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:36,936][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Building initial routing table%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:36,945][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Adding one node and performing rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:46:36,946][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Start all the primary shards%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBackupIsAllocatedAfterPrimary(org.elasticsearch.cluster.routing.allocation.ReplicaAllocatedAfterPrimaryTests)",
  "startTimestamp": 1474195596930,
  "executionTime": 17
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.allocation.ReplicaAllocatedAfterPrimaryTests",
  "startTimestamp": 1474195596874,
  "executionTime": 74
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.xcontent.support.filtering.FilterPathGeneratorFilteringTests",
   "displayName": "org.elasticsearch.common.xcontent.support.filtering.FilterPathGeneratorFilteringTests",
   "methodName": null,
   "className": "org.elasticsearch.common.xcontent.support.filtering.FilterPathGeneratorFilteringTests",
   "children": [
    {
     "id": "ID#testExclusiveFiltersWithDots(org.elasticsearch.common.xcontent.support.filtering.FilterPathGeneratorFilteringTests)",
     "displayName": "testExclusiveFiltersWithDots(org.elasticsearch.common.xcontent.support.filtering.FilterPathGeneratorFilteringTests)",
     "methodName": "testExclusiveFiltersWithDots",
     "className": "org.elasticsearch.common.xcontent.support.filtering.FilterPathGeneratorFilteringTests",
     "children": []
    },
    {
     "id": "ID#testInclusiveFiltersWithDots(org.elasticsearch.common.xcontent.support.filtering.FilterPathGeneratorFilteringTests)",
     "displayName": "testInclusiveFiltersWithDots(org.elasticsearch.common.xcontent.support.filtering.FilterPathGeneratorFilteringTests)",
     "methodName": "testInclusiveFiltersWithDots",
     "className": "org.elasticsearch.common.xcontent.support.filtering.FilterPathGeneratorFilteringTests",
     "children": []
    },
    {
     "id": "ID#testInclusiveFilters(org.elasticsearch.common.xcontent.support.filtering.FilterPathGeneratorFilteringTests)",
     "displayName": "testInclusiveFilters(org.elasticsearch.common.xcontent.support.filtering.FilterPathGeneratorFilteringTests)",
     "methodName": "testInclusiveFilters",
     "className": "org.elasticsearch.common.xcontent.support.filtering.FilterPathGeneratorFilteringTests",
     "children": []
    },
    {
     "id": "ID#testExclusiveFilters(org.elasticsearch.common.xcontent.support.filtering.FilterPathGeneratorFilteringTests)",
     "displayName": "testExclusiveFilters(org.elasticsearch.common.xcontent.support.filtering.FilterPathGeneratorFilteringTests)",
     "methodName": "testExclusiveFilters",
     "className": "org.elasticsearch.common.xcontent.support.filtering.FilterPathGeneratorFilteringTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195596955
 }
]

[
 "TEST_STARTED",
 "ID#testExclusiveFiltersWithDots(org.elasticsearch.common.xcontent.support.filtering.FilterPathGeneratorFilteringTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExclusiveFiltersWithDots(org.elasticsearch.common.xcontent.support.filtering.FilterPathGeneratorFilteringTests)",
  "startTimestamp": 1474195596988,
  "executionTime": 28
 }
]

[
 "TEST_STARTED",
 "ID#testInclusiveFiltersWithDots(org.elasticsearch.common.xcontent.support.filtering.FilterPathGeneratorFilteringTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInclusiveFiltersWithDots(org.elasticsearch.common.xcontent.support.filtering.FilterPathGeneratorFilteringTests)",
  "startTimestamp": 1474195597016,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testInclusiveFilters(org.elasticsearch.common.xcontent.support.filtering.FilterPathGeneratorFilteringTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInclusiveFilters(org.elasticsearch.common.xcontent.support.filtering.FilterPathGeneratorFilteringTests)",
  "startTimestamp": 1474195597018,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testExclusiveFilters(org.elasticsearch.common.xcontent.support.filtering.FilterPathGeneratorFilteringTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExclusiveFilters(org.elasticsearch.common.xcontent.support.filtering.FilterPathGeneratorFilteringTests)",
  "startTimestamp": 1474195597029,
  "executionTime": 6
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.xcontent.support.filtering.FilterPathGeneratorFilteringTests",
  "startTimestamp": 1474195596955,
  "executionTime": 84
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.admin.indices.stats.IndicesStatsTests",
   "displayName": "org.elasticsearch.action.admin.indices.stats.IndicesStatsTests",
   "methodName": null,
   "className": "org.elasticsearch.action.admin.indices.stats.IndicesStatsTests",
   "children": [
    {
     "id": "ID#testCommitStats(org.elasticsearch.action.admin.indices.stats.IndicesStatsTests)",
     "displayName": "testCommitStats(org.elasticsearch.action.admin.indices.stats.IndicesStatsTests)",
     "methodName": "testCommitStats",
     "className": "org.elasticsearch.action.admin.indices.stats.IndicesStatsTests",
     "children": []
    },
    {
     "id": "ID#testSegmentStatsEmptyIndex(org.elasticsearch.action.admin.indices.stats.IndicesStatsTests)",
     "displayName": "testSegmentStatsEmptyIndex(org.elasticsearch.action.admin.indices.stats.IndicesStatsTests)",
     "methodName": "testSegmentStatsEmptyIndex",
     "className": "org.elasticsearch.action.admin.indices.stats.IndicesStatsTests",
     "children": []
    },
    {
     "id": "ID#testSegmentStats(org.elasticsearch.action.admin.indices.stats.IndicesStatsTests)",
     "displayName": "testSegmentStats(org.elasticsearch.action.admin.indices.stats.IndicesStatsTests)",
     "methodName": "testSegmentStats",
     "className": "org.elasticsearch.action.admin.indices.stats.IndicesStatsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195597046
 }
]

[
 "TEST_STARTED",
 "ID#testCommitStats(org.elasticsearch.action.admin.indices.stats.IndicesStatsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:46:37,104][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:46:37,146][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:46:37,146][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:46:37,152][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[7260], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:46:37,156][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:46:37,156][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:46:37,281][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:46:37,281][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:46:37,282][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[11]}, bound_addresses {local[11]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:46:37,283][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{9qTO1JvoTvyvmqdSbuSaqQ}{hBdg0O1eSAeu_DgOIFQixQ}{local}{local[11]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:46:37,284][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:46:37,304][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:46:37,323][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:46:37,418][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:46:37,452][INFO ][org.elasticsearch.action.admin.indices.stats] [node_s_0] [IndicesStatsTests#testCommitStats]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCommitStats(org.elasticsearch.action.admin.indices.stats.IndicesStatsTests)",
  "startTimestamp": 1474195597092,
  "executionTime": 401
 }
]

[
 "TEST_STARTED",
 "ID#testSegmentStatsEmptyIndex(org.elasticsearch.action.admin.indices.stats.IndicesStatsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:46:37,500][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:46:37,629][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:46:37,644][INFO ][org.elasticsearch.action.admin.indices.stats] [node_s_0] [IndicesStatsTests#testSegmentStatsEmptyIndex]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSegmentStatsEmptyIndex(org.elasticsearch.action.admin.indices.stats.IndicesStatsTests)",
  "startTimestamp": 1474195597493,
  "executionTime": 199
 }
]

[
 "TEST_STARTED",
 "ID#testSegmentStats(org.elasticsearch.action.admin.indices.stats.IndicesStatsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:46:37,702][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [doc]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:46:37,855][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:46:38,665][INFO ][org.elasticsearch.action.admin.indices.stats] [node_s_0] [IndicesStatsTests#testSegmentStats]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSegmentStats(org.elasticsearch.action.admin.indices.stats.IndicesStatsTests)",
  "startTimestamp": 1474195597692,
  "executionTime": 1028
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:46:38,720][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:46:38,721][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:46:38,721][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:46:38,723][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.admin.indices.stats.IndicesStatsTests",
  "startTimestamp": 1474195597046,
  "executionTime": 1695
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.shard.StoreRecoveryTests",
   "displayName": "org.elasticsearch.index.shard.StoreRecoveryTests",
   "methodName": null,
   "className": "org.elasticsearch.index.shard.StoreRecoveryTests",
   "children": [
    {
     "id": "ID#testStatsDirWrapper(org.elasticsearch.index.shard.StoreRecoveryTests)",
     "displayName": "testStatsDirWrapper(org.elasticsearch.index.shard.StoreRecoveryTests)",
     "methodName": "testStatsDirWrapper",
     "className": "org.elasticsearch.index.shard.StoreRecoveryTests",
     "children": []
    },
    {
     "id": "ID#testAddIndices(org.elasticsearch.index.shard.StoreRecoveryTests)",
     "displayName": "testAddIndices(org.elasticsearch.index.shard.StoreRecoveryTests)",
     "methodName": "testAddIndices",
     "className": "org.elasticsearch.index.shard.StoreRecoveryTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195598748
 }
]

[
 "TEST_STARTED",
 "ID#testStatsDirWrapper(org.elasticsearch.index.shard.StoreRecoveryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStatsDirWrapper(org.elasticsearch.index.shard.StoreRecoveryTests)",
  "startTimestamp": 1474195598783,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testAddIndices(org.elasticsearch.index.shard.StoreRecoveryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAddIndices(org.elasticsearch.index.shard.StoreRecoveryTests)",
  "startTimestamp": 1474195598793,
  "executionTime": 892
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.shard.StoreRecoveryTests",
  "startTimestamp": 1474195598748,
  "executionTime": 1114
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.engine.ShadowEngineTests",
   "displayName": "org.elasticsearch.index.engine.ShadowEngineTests",
   "methodName": null,
   "className": "org.elasticsearch.index.engine.ShadowEngineTests",
   "children": [
    {
     "id": "ID#testDocStats(org.elasticsearch.index.engine.ShadowEngineTests)",
     "displayName": "testDocStats(org.elasticsearch.index.engine.ShadowEngineTests)",
     "methodName": "testDocStats",
     "className": "org.elasticsearch.index.engine.ShadowEngineTests",
     "children": []
    },
    {
     "id": "ID#testFailStart(org.elasticsearch.index.engine.ShadowEngineTests)",
     "displayName": "testFailStart(org.elasticsearch.index.engine.ShadowEngineTests)",
     "methodName": "testFailStart",
     "className": "org.elasticsearch.index.engine.ShadowEngineTests",
     "children": []
    },
    {
     "id": "ID#testCommitStats(org.elasticsearch.index.engine.ShadowEngineTests)",
     "displayName": "testCommitStats(org.elasticsearch.index.engine.ShadowEngineTests)",
     "methodName": "testCommitStats",
     "className": "org.elasticsearch.index.engine.ShadowEngineTests",
     "children": []
    },
    {
     "id": "ID#testNoTranslog(org.elasticsearch.index.engine.ShadowEngineTests)",
     "displayName": "testNoTranslog(org.elasticsearch.index.engine.ShadowEngineTests)",
     "methodName": "testNoTranslog",
     "className": "org.elasticsearch.index.engine.ShadowEngineTests",
     "children": []
    },
    {
     "id": "ID#testRefreshListenersFails(org.elasticsearch.index.engine.ShadowEngineTests)",
     "displayName": "testRefreshListenersFails(org.elasticsearch.index.engine.ShadowEngineTests)",
     "methodName": "testRefreshListenersFails",
     "className": "org.elasticsearch.index.engine.ShadowEngineTests",
     "children": []
    },
    {
     "id": "ID#testSettings(org.elasticsearch.index.engine.ShadowEngineTests)",
     "displayName": "testSettings(org.elasticsearch.index.engine.ShadowEngineTests)",
     "methodName": "testSettings",
     "className": "org.elasticsearch.index.engine.ShadowEngineTests",
     "children": []
    },
    {
     "id": "ID#testShadowEngineCreationRetry(org.elasticsearch.index.engine.ShadowEngineTests)",
     "displayName": "testShadowEngineCreationRetry(org.elasticsearch.index.engine.ShadowEngineTests)",
     "methodName": "testShadowEngineCreationRetry",
     "className": "org.elasticsearch.index.engine.ShadowEngineTests",
     "children": []
    },
    {
     "id": "ID#testSearchResultRelease(org.elasticsearch.index.engine.ShadowEngineTests)",
     "displayName": "testSearchResultRelease(org.elasticsearch.index.engine.ShadowEngineTests)",
     "methodName": "testSearchResultRelease",
     "className": "org.elasticsearch.index.engine.ShadowEngineTests",
     "children": []
    },
    {
     "id": "ID#testSegments(org.elasticsearch.index.engine.ShadowEngineTests)",
     "displayName": "testSegments(org.elasticsearch.index.engine.ShadowEngineTests)",
     "methodName": "testSegments",
     "className": "org.elasticsearch.index.engine.ShadowEngineTests",
     "children": []
    },
    {
     "id": "ID#testVerboseSegments(org.elasticsearch.index.engine.ShadowEngineTests)",
     "displayName": "testVerboseSegments(org.elasticsearch.index.engine.ShadowEngineTests)",
     "methodName": "testVerboseSegments",
     "className": "org.elasticsearch.index.engine.ShadowEngineTests",
     "children": []
    },
    {
     "id": "ID#testShadowEngineIgnoresWriteOperations(org.elasticsearch.index.engine.ShadowEngineTests)",
     "displayName": "testShadowEngineIgnoresWriteOperations(org.elasticsearch.index.engine.ShadowEngineTests)",
     "methodName": "testShadowEngineIgnoresWriteOperations",
     "className": "org.elasticsearch.index.engine.ShadowEngineTests",
     "children": []
    },
    {
     "id": "ID#testSimpleOperations(org.elasticsearch.index.engine.ShadowEngineTests)",
     "displayName": "testSimpleOperations(org.elasticsearch.index.engine.ShadowEngineTests)",
     "methodName": "testSimpleOperations",
     "className": "org.elasticsearch.index.engine.ShadowEngineTests",
     "children": []
    },
    {
     "id": "ID#testFailEngineOnCorruption(org.elasticsearch.index.engine.ShadowEngineTests)",
     "displayName": "testFailEngineOnCorruption(org.elasticsearch.index.engine.ShadowEngineTests)",
     "methodName": "testFailEngineOnCorruption",
     "className": "org.elasticsearch.index.engine.ShadowEngineTests",
     "children": []
    },
    {
     "id": "ID#testExtractShardId(org.elasticsearch.index.engine.ShadowEngineTests)",
     "displayName": "testExtractShardId(org.elasticsearch.index.engine.ShadowEngineTests)",
     "methodName": "testExtractShardId",
     "className": "org.elasticsearch.index.engine.ShadowEngineTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195599874
 }
]

[
 "TEST_STARTED",
 "ID#testDocStats(org.elasticsearch.index.engine.ShadowEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDocStats(org.elasticsearch.index.engine.ShadowEngineTests)",
  "startTimestamp": 1474195599901,
  "executionTime": 730
 }
]

[
 "TEST_STARTED",
 "ID#testFailStart(org.elasticsearch.index.engine.ShadowEngineTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "2016-09-18 06:46:41,050 TEST-ShadowEngineTests.testFailStart-seed#[FD13852EF36FC81C] ERROR An exception occurred processing Appender console java.security.AccessControlException: access denied (\"java.lang.RuntimePermission\" \"accessClassInPackage.sun.reflect\")%0D%0A%09at java.security.AccessControlContext.checkPermission(AccessControlContext.java:472)%0D%0A%09at java.security.AccessController.checkPermission(AccessController.java:884)%0D%0A%09at java.lang.SecurityManager.checkPermission(SecurityManager.java:549)%0D%0A%09at java.lang.SecurityManager.checkPackageAccess(SecurityManager.java:1564)%0D%0A%09at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:311)%0D%0A%09at java.lang.ClassLoader.loadClass(ClassLoader.java:357)%0D%0A%09at java.lang.Class.forName0(Native Method)%0D%0A%09at java.lang.Class.forName(Class.java:264)%0D%0A%09at org.apache.logging.log4j.util.LoaderUtil.loadClass(LoaderUtil.java:122)%0D%0A%09at org.apache.logging.log4j.core.util.Loader.loadClass(Loader.java:228)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.loadClass(ThrowableProxy.java:496)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.toExtendedStackTrace(ThrowableProxy.java:617)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.<init>(ThrowableProxy.java:135)%0D%0A%09at org.apache.logging.log4j.core.impl.ThrowableProxy.<init>(ThrowableProxy.java:117)%0D%0A%09at org.apache.logging.log4j.core.impl.MutableLogEvent.getThrownProxy(MutableLogEvent.java:314)%0D%0A%09at org.apache.logging.log4j.core.pattern.ExtendedThrowablePatternConverter.format(ExtendedThrowablePatternConverter.java:61)%0D%0A%09at org.apache.logging.log4j.core.pattern.PatternFormatter.format(PatternFormatter.java:38)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout$PatternSerializer.toSerializable(PatternLayout.java:294)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout.toText(PatternLayout.java:195)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout.encode(PatternLayout.java:180)%0D%0A%09at org.apache.logging.log4j.core.layout.PatternLayout.encode(PatternLayout.java:57)%0D%0A%09at org.apache.logging.log4j.core.appender.AbstractOutputStreamAppender.directEncodeEvent(AbstractOutputStreamAppender.java:120)%0D%0A%09at org.apache.logging.log4j.core.appender.AbstractOutputStreamAppender.tryAppend(AbstractOutputStreamAppender.java:113)%0D%0A%09at org.apache.logging.log4j.core.appender.AbstractOutputStreamAppender.append(AbstractOutputStreamAppender.java:104)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.tryCallAppender(AppenderControl.java:155)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.callAppender0(AppenderControl.java:128)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.callAppenderPreventRecursion(AppenderControl.java:119)%0D%0A%09at org.apache.logging.log4j.core.config.AppenderControl.callAppender(AppenderControl.java:84)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.callAppenders(LoggerConfig.java:390)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.processLogEvent(LoggerConfig.java:375)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.log(LoggerConfig.java:359)%0D%0A%09at org.apache.logging.log4j.core.config.LoggerConfig.log(LoggerConfig.java:349)%0D%0A%09at org.apache.logging.log4j.core.config.AwaitCompletionReliabilityStrategy.log(AwaitCompletionReliabilityStrategy.java:63)%0D%0A%09at org.apache.logging.log4j.core.Logger.logMessage(Logger.java:146)%0D%0A%09at org.apache.logging.log4j.spi.AbstractLogger.logMessage(AbstractLogger.java:1988)%0D%0A%09at org.apache.logging.log4j.spi.AbstractLogger.logIfEnabled(AbstractLogger.java:1960)%0D%0A%09at org.apache.logging.log4j.spi.AbstractLogger.warn(AbstractLogger.java:2526)%0D%0A%09at org.elasticsearch.index.engine.ShadowEngine.<init>(ShadowEngine.java:93)%0D%0A%09at org.elasticsearch.index.engine.ShadowEngineTests.createShadowEngine(ShadowEngineTests.java:215)%0D%0A%09at org.elasticsearch.index.engine.ShadowEngineTests.createShadowEngine(ShadowEngineTests.java:207)%0D%0A%09at org.elasticsearch.index.engine.ShadowEngineTests.testFailStart(ShadowEngineTests.java:897)%0D%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)%0D%0A%09at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)%0D%0A%09at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)%0D%0A%09at java.lang.reflect.Method.invoke(Method.java:498)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:49)%0D%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)%0D%0A%09at org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:48)%0D%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)%0D%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0D%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)%0D%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)%0D%0A%09at com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)%0D%0A%09at org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:41)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:53)%0D%0A%09at org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)%0D%0A%09at org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)%0D%0A%09at org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:54)%0D%0A%09at com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)%0D%0A%09at com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)%0D%0A%09at java.lang.Thread.run(Thread.java:745)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailStart(org.elasticsearch.index.engine.ShadowEngineTests)",
  "startTimestamp": 1474195600631,
  "executionTime": 3125
 }
]

[
 "TEST_STARTED",
 "ID#testCommitStats(org.elasticsearch.index.engine.ShadowEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCommitStats(org.elasticsearch.index.engine.ShadowEngineTests)",
  "startTimestamp": 1474195603756,
  "executionTime": 538
 }
]

[
 "TEST_STARTED",
 "ID#testNoTranslog(org.elasticsearch.index.engine.ShadowEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoTranslog(org.elasticsearch.index.engine.ShadowEngineTests)",
  "startTimestamp": 1474195604294,
  "executionTime": 80
 }
]

[
 "TEST_STARTED",
 "ID#testRefreshListenersFails(org.elasticsearch.index.engine.ShadowEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRefreshListenersFails(org.elasticsearch.index.engine.ShadowEngineTests)",
  "startTimestamp": 1474195604374,
  "executionTime": 292
 }
]

[
 "TEST_STARTED",
 "ID#testSettings(org.elasticsearch.index.engine.ShadowEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSettings(org.elasticsearch.index.engine.ShadowEngineTests)",
  "startTimestamp": 1474195604666,
  "executionTime": 193
 }
]

[
 "TEST_STARTED",
 "ID#testShadowEngineCreationRetry(org.elasticsearch.index.engine.ShadowEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testShadowEngineCreationRetry(org.elasticsearch.index.engine.ShadowEngineTests)",
  "startTimestamp": 1474195604859,
  "executionTime": 1452
 }
]

[
 "TEST_STARTED",
 "ID#testSearchResultRelease(org.elasticsearch.index.engine.ShadowEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSearchResultRelease(org.elasticsearch.index.engine.ShadowEngineTests)",
  "startTimestamp": 1474195606311,
  "executionTime": 594
 }
]

[
 "TEST_STARTED",
 "ID#testSegments(org.elasticsearch.index.engine.ShadowEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSegments(org.elasticsearch.index.engine.ShadowEngineTests)",
  "startTimestamp": 1474195606906,
  "executionTime": 1763
 }
]

[
 "TEST_STARTED",
 "ID#testVerboseSegments(org.elasticsearch.index.engine.ShadowEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVerboseSegments(org.elasticsearch.index.engine.ShadowEngineTests)",
  "startTimestamp": 1474195608669,
  "executionTime": 1316
 }
]

[
 "TEST_STARTED",
 "ID#testShadowEngineIgnoresWriteOperations(org.elasticsearch.index.engine.ShadowEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testShadowEngineIgnoresWriteOperations(org.elasticsearch.index.engine.ShadowEngineTests)",
  "startTimestamp": 1474195609986,
  "executionTime": 345
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleOperations(org.elasticsearch.index.engine.ShadowEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleOperations(org.elasticsearch.index.engine.ShadowEngineTests)",
  "startTimestamp": 1474195610331,
  "executionTime": 1517
 }
]

[
 "TEST_STARTED",
 "ID#testFailEngineOnCorruption(org.elasticsearch.index.engine.ShadowEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailEngineOnCorruption(org.elasticsearch.index.engine.ShadowEngineTests)",
  "startTimestamp": 1474195611848,
  "executionTime": 394
 }
]

[
 "TEST_STARTED",
 "ID#testExtractShardId(org.elasticsearch.index.engine.ShadowEngineTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExtractShardId(org.elasticsearch.index.engine.ShadowEngineTests)",
  "startTimestamp": 1474195612242,
  "executionTime": 113
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.engine.ShadowEngineTests",
  "startTimestamp": 1474195599874,
  "executionTime": 12821
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.ConstantScoreQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.ConstantScoreQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.ConstantScoreQueryBuilderTests",
   "children": [
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.ConstantScoreQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJsonEmptyQueryBody(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
     "displayName": "testFromJsonEmptyQueryBody(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
     "methodName": "testFromJsonEmptyQueryBody",
     "className": "org.elasticsearch.index.query.ConstantScoreQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
     "displayName": "testQueryWrappedInArray(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
     "methodName": "testQueryWrappedInArray",
     "className": "org.elasticsearch.index.query.ConstantScoreQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIllegalArguments(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
     "displayName": "testIllegalArguments(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
     "methodName": "testIllegalArguments",
     "className": "org.elasticsearch.index.query.ConstantScoreQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMultipleFilterElements(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
     "displayName": "testMultipleFilterElements(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
     "methodName": "testMultipleFilterElements",
     "className": "org.elasticsearch.index.query.ConstantScoreQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.ConstantScoreQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.ConstantScoreQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testNoArrayAsFilterElements(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
     "displayName": "testNoArrayAsFilterElements(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
     "methodName": "testNoArrayAsFilterElements",
     "className": "org.elasticsearch.index.query.ConstantScoreQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.ConstantScoreQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.ConstantScoreQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMustRewrite(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
     "displayName": "testMustRewrite(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
     "methodName": "testMustRewrite",
     "className": "org.elasticsearch.index.query.ConstantScoreQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.ConstantScoreQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.ConstantScoreQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFilterElement(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
     "displayName": "testFilterElement(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
     "methodName": "testFilterElement",
     "className": "org.elasticsearch.index.query.ConstantScoreQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195612713
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:46:52,754][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{ckykILNfTVup_B1OK55DBQ}{local}{local[112]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:46:52,763][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:46:52,763][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:46:52,821][WARN ][org.elasticsearch.deprecation.index.mapper]  [leFMwiA] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:46:52,821][WARN ][org.elasticsearch.deprecation.index.mapper]  [leFMwiA] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:46:52,821][WARN ][org.elasticsearch.deprecation.index.mapper]  [leFMwiA] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:46:52,828][WARN ][org.elasticsearch.deprecation.index.mapper]  [leFMwiA] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:46:52,828][WARN ][org.elasticsearch.deprecation.index.mapper]  [leFMwiA] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:46:52,829][WARN ][org.elasticsearch.deprecation.index.mapper]  [leFMwiA] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:46:52,835][WARN ][org.elasticsearch.deprecation.index.mapper]  [leFMwiA] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:46:52,835][WARN ][org.elasticsearch.deprecation.index.mapper]  [leFMwiA] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:46:52,835][WARN ][org.elasticsearch.deprecation.index.mapper]  [leFMwiA] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:46:52,837][WARN ][org.elasticsearch.deprecation.index.mapper]  [leFMwiA] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:46:52,837][WARN ][org.elasticsearch.deprecation.index.mapper]  [leFMwiA] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:46:52,837][WARN ][org.elasticsearch.deprecation.index.mapper]  [leFMwiA] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:46:52,840][WARN ][org.elasticsearch.deprecation.index.mapper]  [leFMwiA] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:46:52,840][WARN ][org.elasticsearch.deprecation.index.mapper]  [leFMwiA] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:46:52,841][WARN ][org.elasticsearch.deprecation.index.mapper]  [leFMwiA] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:46:52,846][WARN ][org.elasticsearch.deprecation.index.mapper]  [leFMwiA] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:46:52,846][WARN ][org.elasticsearch.deprecation.index.mapper]  [leFMwiA] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:46:52,846][WARN ][org.elasticsearch.deprecation.index.mapper]  [leFMwiA] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
  "startTimestamp": 1474195612733,
  "executionTime": 122
 }
]

[
 "TEST_STARTED",
 "ID#testFromJsonEmptyQueryBody(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:46:52,858][WARN ][org.elasticsearch.deprecation.index.query] query malformed, empty clause found at [1:40]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:46:52,859][WARN ][org.elasticsearch.deprecation.index.query] query malformed, empty clause found at [1:40]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJsonEmptyQueryBody(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
  "startTimestamp": 1474195612856,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testQueryWrappedInArray(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
  "startTimestamp": 1474195612862,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalArguments(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalArguments(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
  "startTimestamp": 1474195612870,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testMultipleFilterElements(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultipleFilterElements(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
  "startTimestamp": 1474195612873,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
  "startTimestamp": 1474195612876,
  "executionTime": 82
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
  "startTimestamp": 1474195612959,
  "executionTime": 42
 }
]

[
 "TEST_STARTED",
 "ID#testNoArrayAsFilterElements(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoArrayAsFilterElements(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
  "startTimestamp": 1474195613002,
  "executionTime": 15
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)"
]

[
 "TEST_IGNORED_ASSUMPTION",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
  "message": "test doesn't apply for query filter queries",
  "trace": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException: test doesn't apply for query filter queries\r\n\tat __randomizedtesting.SeedInfo.seed([FD13852EF36FC81C:881FA591E7A23937]:0)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedTest.assumeTrue(RandomizedTest.java:627)\r\n\tat org.apache.lucene.util.LuceneTestCase.assumeTrue(LuceneTestCase.java:845)\r\n\tat org.elasticsearch.index.query.ConstantScoreQueryBuilderTests.testUnknownField(ConstantScoreQueryBuilderTests.java:98)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:49)\r\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n\tat org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:48)\r\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\r\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)\r\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:41)\r\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\r\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:53)\r\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\r\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\r\n\tat org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:54)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)\r\n\tat java.lang.Thread.run(Thread.java:745)\r\n",
  "throwableString": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException: test doesn't apply for query filter queries",
  "throwableClass": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException",
  "assertionViolation": false,
  "assumptionViolation": true
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
  "startTimestamp": 1474195613017,
  "executionTime": 23
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
  "startTimestamp": 1474195613040,
  "executionTime": 123
 }
]

[
 "TEST_STARTED",
 "ID#testMustRewrite(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMustRewrite(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
  "startTimestamp": 1474195613163,
  "executionTime": 45
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
  "startTimestamp": 1474195613208,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
  "startTimestamp": 1474195613215,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFilterElement(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFilterElement(org.elasticsearch.index.query.ConstantScoreQueryBuilderTests)",
  "startTimestamp": 1474195613217,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.ConstantScoreQueryBuilderTests",
  "startTimestamp": 1474195612713,
  "executionTime": 516
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.xcontent.ConstructingObjectParserTests",
   "displayName": "org.elasticsearch.common.xcontent.ConstructingObjectParserTests",
   "methodName": null,
   "className": "org.elasticsearch.common.xcontent.ConstructingObjectParserTests",
   "children": [
    {
     "id": "ID#testRandomOrder(org.elasticsearch.common.xcontent.ConstructingObjectParserTests)",
     "displayName": "testRandomOrder(org.elasticsearch.common.xcontent.ConstructingObjectParserTests)",
     "methodName": "testRandomOrder",
     "className": "org.elasticsearch.common.xcontent.ConstructingObjectParserTests",
     "children": []
    },
    {
     "id": "ID#testCalledOneTime(org.elasticsearch.common.xcontent.ConstructingObjectParserTests)",
     "displayName": "testCalledOneTime(org.elasticsearch.common.xcontent.ConstructingObjectParserTests)",
     "methodName": "testCalledOneTime",
     "className": "org.elasticsearch.common.xcontent.ConstructingObjectParserTests",
     "children": []
    },
    {
     "id": "ID#testMissingFirstConstructorArg(org.elasticsearch.common.xcontent.ConstructingObjectParserTests)",
     "displayName": "testMissingFirstConstructorArg(org.elasticsearch.common.xcontent.ConstructingObjectParserTests)",
     "methodName": "testMissingFirstConstructorArg",
     "className": "org.elasticsearch.common.xcontent.ConstructingObjectParserTests",
     "children": []
    },
    {
     "id": "ID#testBadParamBeforeObjectBuilt(org.elasticsearch.common.xcontent.ConstructingObjectParserTests)",
     "displayName": "testBadParamBeforeObjectBuilt(org.elasticsearch.common.xcontent.ConstructingObjectParserTests)",
     "methodName": "testBadParamBeforeObjectBuilt",
     "className": "org.elasticsearch.common.xcontent.ConstructingObjectParserTests",
     "children": []
    },
    {
     "id": "ID#testMissingFirstConstructorArgButNotRequired(org.elasticsearch.common.xcontent.ConstructingObjectParserTests)",
     "displayName": "testMissingFirstConstructorArgButNotRequired(org.elasticsearch.common.xcontent.ConstructingObjectParserTests)",
     "methodName": "testMissingFirstConstructorArgButNotRequired",
     "className": "org.elasticsearch.common.xcontent.ConstructingObjectParserTests",
     "children": []
    },
    {
     "id": "ID#testMissingSecondConstructorArg(org.elasticsearch.common.xcontent.ConstructingObjectParserTests)",
     "displayName": "testMissingSecondConstructorArg(org.elasticsearch.common.xcontent.ConstructingObjectParserTests)",
     "methodName": "testMissingSecondConstructorArg",
     "className": "org.elasticsearch.common.xcontent.ConstructingObjectParserTests",
     "children": []
    },
    {
     "id": "ID#testRepeatedConstructorParam(org.elasticsearch.common.xcontent.ConstructingObjectParserTests)",
     "displayName": "testRepeatedConstructorParam(org.elasticsearch.common.xcontent.ConstructingObjectParserTests)",
     "methodName": "testRepeatedConstructorParam",
     "className": "org.elasticsearch.common.xcontent.ConstructingObjectParserTests",
     "children": []
    },
    {
     "id": "ID#testConstructorArgsMustBeConfigured(org.elasticsearch.common.xcontent.ConstructingObjectParserTests)",
     "displayName": "testConstructorArgsMustBeConfigured(org.elasticsearch.common.xcontent.ConstructingObjectParserTests)",
     "methodName": "testConstructorArgsMustBeConfigured",
     "className": "org.elasticsearch.common.xcontent.ConstructingObjectParserTests",
     "children": []
    },
    {
     "id": "ID#testBadParam(org.elasticsearch.common.xcontent.ConstructingObjectParserTests)",
     "displayName": "testBadParam(org.elasticsearch.common.xcontent.ConstructingObjectParserTests)",
     "methodName": "testBadParam",
     "className": "org.elasticsearch.common.xcontent.ConstructingObjectParserTests",
     "children": []
    },
    {
     "id": "ID#testMissingSecondConstructorArgButNotRequired(org.elasticsearch.common.xcontent.ConstructingObjectParserTests)",
     "displayName": "testMissingSecondConstructorArgButNotRequired(org.elasticsearch.common.xcontent.ConstructingObjectParserTests)",
     "methodName": "testMissingSecondConstructorArgButNotRequired",
     "className": "org.elasticsearch.common.xcontent.ConstructingObjectParserTests",
     "children": []
    },
    {
     "id": "ID#testMissingAllConstructorArgsButNotRequired(org.elasticsearch.common.xcontent.ConstructingObjectParserTests)",
     "displayName": "testMissingAllConstructorArgsButNotRequired(org.elasticsearch.common.xcontent.ConstructingObjectParserTests)",
     "methodName": "testMissingAllConstructorArgsButNotRequired",
     "className": "org.elasticsearch.common.xcontent.ConstructingObjectParserTests",
     "children": []
    },
    {
     "id": "ID#testMissingAllConstructorArgs(org.elasticsearch.common.xcontent.ConstructingObjectParserTests)",
     "displayName": "testMissingAllConstructorArgs(org.elasticsearch.common.xcontent.ConstructingObjectParserTests)",
     "methodName": "testMissingAllConstructorArgs",
     "className": "org.elasticsearch.common.xcontent.ConstructingObjectParserTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195613239
 }
]

[
 "TEST_STARTED",
 "ID#testRandomOrder(org.elasticsearch.common.xcontent.ConstructingObjectParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRandomOrder(org.elasticsearch.common.xcontent.ConstructingObjectParserTests)",
  "startTimestamp": 1474195613261,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testCalledOneTime(org.elasticsearch.common.xcontent.ConstructingObjectParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCalledOneTime(org.elasticsearch.common.xcontent.ConstructingObjectParserTests)",
  "startTimestamp": 1474195613269,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testMissingFirstConstructorArg(org.elasticsearch.common.xcontent.ConstructingObjectParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMissingFirstConstructorArg(org.elasticsearch.common.xcontent.ConstructingObjectParserTests)",
  "startTimestamp": 1474195613272,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testBadParamBeforeObjectBuilt(org.elasticsearch.common.xcontent.ConstructingObjectParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBadParamBeforeObjectBuilt(org.elasticsearch.common.xcontent.ConstructingObjectParserTests)",
  "startTimestamp": 1474195613275,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testMissingFirstConstructorArgButNotRequired(org.elasticsearch.common.xcontent.ConstructingObjectParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMissingFirstConstructorArgButNotRequired(org.elasticsearch.common.xcontent.ConstructingObjectParserTests)",
  "startTimestamp": 1474195613278,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testMissingSecondConstructorArg(org.elasticsearch.common.xcontent.ConstructingObjectParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMissingSecondConstructorArg(org.elasticsearch.common.xcontent.ConstructingObjectParserTests)",
  "startTimestamp": 1474195613283,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testRepeatedConstructorParam(org.elasticsearch.common.xcontent.ConstructingObjectParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRepeatedConstructorParam(org.elasticsearch.common.xcontent.ConstructingObjectParserTests)",
  "startTimestamp": 1474195613291,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testConstructorArgsMustBeConfigured(org.elasticsearch.common.xcontent.ConstructingObjectParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConstructorArgsMustBeConfigured(org.elasticsearch.common.xcontent.ConstructingObjectParserTests)",
  "startTimestamp": 1474195613297,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testBadParam(org.elasticsearch.common.xcontent.ConstructingObjectParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBadParam(org.elasticsearch.common.xcontent.ConstructingObjectParserTests)",
  "startTimestamp": 1474195613300,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testMissingSecondConstructorArgButNotRequired(org.elasticsearch.common.xcontent.ConstructingObjectParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMissingSecondConstructorArgButNotRequired(org.elasticsearch.common.xcontent.ConstructingObjectParserTests)",
  "startTimestamp": 1474195613303,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testMissingAllConstructorArgsButNotRequired(org.elasticsearch.common.xcontent.ConstructingObjectParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMissingAllConstructorArgsButNotRequired(org.elasticsearch.common.xcontent.ConstructingObjectParserTests)",
  "startTimestamp": 1474195613305,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testMissingAllConstructorArgs(org.elasticsearch.common.xcontent.ConstructingObjectParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMissingAllConstructorArgs(org.elasticsearch.common.xcontent.ConstructingObjectParserTests)",
  "startTimestamp": 1474195613307,
  "executionTime": 4
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.xcontent.ConstructingObjectParserTests",
  "startTimestamp": 1474195613239,
  "executionTime": 75
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.search.SearchScrollRequestTests",
   "displayName": "org.elasticsearch.action.search.SearchScrollRequestTests",
   "methodName": null,
   "className": "org.elasticsearch.action.search.SearchScrollRequestTests",
   "children": [
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.action.search.SearchScrollRequestTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.action.search.SearchScrollRequestTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.action.search.SearchScrollRequestTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.action.search.SearchScrollRequestTests)",
     "displayName": "testSerialization(org.elasticsearch.action.search.SearchScrollRequestTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.action.search.SearchScrollRequestTests",
     "children": []
    },
    {
     "id": "ID#testInternalScrollSearchRequestSerialization(org.elasticsearch.action.search.SearchScrollRequestTests)",
     "displayName": "testInternalScrollSearchRequestSerialization(org.elasticsearch.action.search.SearchScrollRequestTests)",
     "methodName": "testInternalScrollSearchRequestSerialization",
     "className": "org.elasticsearch.action.search.SearchScrollRequestTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195613321
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.action.search.SearchScrollRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.action.search.SearchScrollRequestTests)",
  "startTimestamp": 1474195613369,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.action.search.SearchScrollRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.action.search.SearchScrollRequestTests)",
  "startTimestamp": 1474195613374,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testInternalScrollSearchRequestSerialization(org.elasticsearch.action.search.SearchScrollRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInternalScrollSearchRequestSerialization(org.elasticsearch.action.search.SearchScrollRequestTests)",
  "startTimestamp": 1474195613376,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.search.SearchScrollRequestTests",
  "startTimestamp": 1474195613321,
  "executionTime": 61
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.admin.indices.create.CreateIndexRequestBuilderTests",
   "displayName": "org.elasticsearch.action.admin.indices.create.CreateIndexRequestBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.action.admin.indices.create.CreateIndexRequestBuilderTests",
   "children": [
    {
     "id": "ID#testSetSource(org.elasticsearch.action.admin.indices.create.CreateIndexRequestBuilderTests)",
     "displayName": "testSetSource(org.elasticsearch.action.admin.indices.create.CreateIndexRequestBuilderTests)",
     "methodName": "testSetSource",
     "className": "org.elasticsearch.action.admin.indices.create.CreateIndexRequestBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSetSettings(org.elasticsearch.action.admin.indices.create.CreateIndexRequestBuilderTests)",
     "displayName": "testSetSettings(org.elasticsearch.action.admin.indices.create.CreateIndexRequestBuilderTests)",
     "methodName": "testSetSettings",
     "className": "org.elasticsearch.action.admin.indices.create.CreateIndexRequestBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195613391
 }
]

[
 "TEST_STARTED",
 "ID#testSetSource(org.elasticsearch.action.admin.indices.create.CreateIndexRequestBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSetSource(org.elasticsearch.action.admin.indices.create.CreateIndexRequestBuilderTests)",
  "startTimestamp": 1474195613435,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testSetSettings(org.elasticsearch.action.admin.indices.create.CreateIndexRequestBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSetSettings(org.elasticsearch.action.admin.indices.create.CreateIndexRequestBuilderTests)",
  "startTimestamp": 1474195613441,
  "executionTime": 5
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.admin.indices.create.CreateIndexRequestBuilderTests",
  "startTimestamp": 1474195613391,
  "executionTime": 57
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.DiskUsageTests",
   "displayName": "org.elasticsearch.cluster.DiskUsageTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.DiskUsageTests",
   "children": [
    {
     "id": "ID#testRandomDiskUsage(org.elasticsearch.cluster.DiskUsageTests)",
     "displayName": "testRandomDiskUsage(org.elasticsearch.cluster.DiskUsageTests)",
     "methodName": "testRandomDiskUsage",
     "className": "org.elasticsearch.cluster.DiskUsageTests",
     "children": []
    },
    {
     "id": "ID#testFillDiskUsageSomeInvalidValues(org.elasticsearch.cluster.DiskUsageTests)",
     "displayName": "testFillDiskUsageSomeInvalidValues(org.elasticsearch.cluster.DiskUsageTests)",
     "methodName": "testFillDiskUsageSomeInvalidValues",
     "className": "org.elasticsearch.cluster.DiskUsageTests",
     "children": []
    },
    {
     "id": "ID#testFillShardLevelInfo(org.elasticsearch.cluster.DiskUsageTests)",
     "displayName": "testFillShardLevelInfo(org.elasticsearch.cluster.DiskUsageTests)",
     "methodName": "testFillShardLevelInfo",
     "className": "org.elasticsearch.cluster.DiskUsageTests",
     "children": []
    },
    {
     "id": "ID#testDiskUsageCalc(org.elasticsearch.cluster.DiskUsageTests)",
     "displayName": "testDiskUsageCalc(org.elasticsearch.cluster.DiskUsageTests)",
     "methodName": "testDiskUsageCalc",
     "className": "org.elasticsearch.cluster.DiskUsageTests",
     "children": []
    },
    {
     "id": "ID#testFillDiskUsage(org.elasticsearch.cluster.DiskUsageTests)",
     "displayName": "testFillDiskUsage(org.elasticsearch.cluster.DiskUsageTests)",
     "methodName": "testFillDiskUsage",
     "className": "org.elasticsearch.cluster.DiskUsageTests",
     "children": []
    },
    {
     "id": "ID#testFillShardsWithShadowIndices(org.elasticsearch.cluster.DiskUsageTests)",
     "displayName": "testFillShardsWithShadowIndices(org.elasticsearch.cluster.DiskUsageTests)",
     "methodName": "testFillShardsWithShadowIndices",
     "className": "org.elasticsearch.cluster.DiskUsageTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195613456
 }
]

[
 "TEST_STARTED",
 "ID#testRandomDiskUsage(org.elasticsearch.cluster.DiskUsageTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRandomDiskUsage(org.elasticsearch.cluster.DiskUsageTests)",
  "startTimestamp": 1474195613480,
  "executionTime": 15
 }
]

[
 "TEST_STARTED",
 "ID#testFillDiskUsageSomeInvalidValues(org.elasticsearch.cluster.DiskUsageTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFillDiskUsageSomeInvalidValues(org.elasticsearch.cluster.DiskUsageTests)",
  "startTimestamp": 1474195613496,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFillShardLevelInfo(org.elasticsearch.cluster.DiskUsageTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFillShardLevelInfo(org.elasticsearch.cluster.DiskUsageTests)",
  "startTimestamp": 1474195613499,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testDiskUsageCalc(org.elasticsearch.cluster.DiskUsageTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDiskUsageCalc(org.elasticsearch.cluster.DiskUsageTests)",
  "startTimestamp": 1474195613504,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testFillDiskUsage(org.elasticsearch.cluster.DiskUsageTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFillDiskUsage(org.elasticsearch.cluster.DiskUsageTests)",
  "startTimestamp": 1474195613509,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFillShardsWithShadowIndices(org.elasticsearch.cluster.DiskUsageTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:46:53,520][INFO ][org.elasticsearch.cluster] [node_s_0] --> calling buildShardLevelInfo with state: {%0A  \"version\" : 0,%0A  \"state_uuid\" : \"Fvt1kKiKSyCbMmqpjhoeZg\",%0A  \"master_node\" : null,%0A  \"blocks\" : { },%0A  \"nodes\" : { },%0A  \"metadata\" : {%0A    \"cluster_uuid\" : \"_na_\",%0A    \"templates\" : { },%0A    \"indices\" : {%0A      \"shadow\" : {%0A        \"state\" : \"open\",%0A        \"settings\" : {%0A          \"index\" : {%0A            \"number_of_shards\" : \"1\",%0A            \"number_of_replicas\" : \"0\",%0A            \"uuid\" : \"0xcafe0001\",%0A            \"version\" : {%0A              \"created\" : \"5000006\"%0A            },%0A            \"shadow_replicas\" : \"true\"%0A          }%0A        },%0A        \"mappings\" : { },%0A        \"aliases\" : [ ],%0A        \"primary_terms\" : {%0A          \"0\" : 0%0A        },%0A        \"in_sync_allocations\" : {%0A          \"0\" : [ ]%0A        }%0A      },%0A      \"non-shadow\" : {%0A        \"state\" : \"open\",%0A        \"settings\" : {%0A          \"index\" : {%0A            \"number_of_shards\" : \"1\",%0A            \"number_of_replicas\" : \"0\",%0A            \"uuid\" : \"0xcafe0000\",%0A            \"version\" : {%0A              \"created\" : \"5000006\"%0A            }%0A          }%0A        },%0A        \"mappings\" : { },%0A        \"aliases\" : [ ],%0A        \"primary_terms\" : {%0A          \"0\" : 0%0A        },%0A        \"in_sync_allocations\" : {%0A          \"0\" : [ ]%0A        }%0A      }%0A    },%0A    \"index-graveyard\" : {%0A      \"tombstones\" : [ ]%0A    }%0A  },%0A  \"routing_table\" : {%0A    \"indices\" : { }%0A  },%0A  \"routing_nodes\" : {%0A    \"unassigned\" : [ ],%0A    \"nodes\" : { }%0A  }%0A}%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFillShardsWithShadowIndices(org.elasticsearch.cluster.DiskUsageTests)",
  "startTimestamp": 1474195613512,
  "executionTime": 10
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.DiskUsageTests",
  "startTimestamp": 1474195613456,
  "executionTime": 70
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.BooleansTests",
   "displayName": "org.elasticsearch.common.BooleansTests",
   "methodName": null,
   "className": "org.elasticsearch.common.BooleansTests",
   "children": [
    {
     "id": "ID#testIsExplicit(org.elasticsearch.common.BooleansTests)",
     "displayName": "testIsExplicit(org.elasticsearch.common.BooleansTests)",
     "methodName": "testIsExplicit",
     "className": "org.elasticsearch.common.BooleansTests",
     "children": []
    },
    {
     "id": "ID#testParseBooleanExact(org.elasticsearch.common.BooleansTests)",
     "displayName": "testParseBooleanExact(org.elasticsearch.common.BooleansTests)",
     "methodName": "testParseBooleanExact",
     "className": "org.elasticsearch.common.BooleansTests",
     "children": []
    },
    {
     "id": "ID#testParseBoolean(org.elasticsearch.common.BooleansTests)",
     "displayName": "testParseBoolean(org.elasticsearch.common.BooleansTests)",
     "methodName": "testParseBoolean",
     "className": "org.elasticsearch.common.BooleansTests",
     "children": []
    },
    {
     "id": "ID#testIsBoolean(org.elasticsearch.common.BooleansTests)",
     "displayName": "testIsBoolean(org.elasticsearch.common.BooleansTests)",
     "methodName": "testIsBoolean",
     "className": "org.elasticsearch.common.BooleansTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195613533
 }
]

[
 "TEST_STARTED",
 "ID#testIsExplicit(org.elasticsearch.common.BooleansTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsExplicit(org.elasticsearch.common.BooleansTests)",
  "startTimestamp": 1474195613558,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParseBooleanExact(org.elasticsearch.common.BooleansTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseBooleanExact(org.elasticsearch.common.BooleansTests)",
  "startTimestamp": 1474195613560,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParseBoolean(org.elasticsearch.common.BooleansTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseBoolean(org.elasticsearch.common.BooleansTests)",
  "startTimestamp": 1474195613562,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIsBoolean(org.elasticsearch.common.BooleansTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsBoolean(org.elasticsearch.common.BooleansTests)",
  "startTimestamp": 1474195613564,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.BooleansTests",
  "startTimestamp": 1474195613533,
  "executionTime": 35
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.xcontent.cbor.CborXContentParserTests",
   "displayName": "org.elasticsearch.common.xcontent.cbor.CborXContentParserTests",
   "methodName": null,
   "className": "org.elasticsearch.common.xcontent.cbor.CborXContentParserTests",
   "children": [
    {
     "id": "ID#testEmptyValue(org.elasticsearch.common.xcontent.cbor.CborXContentParserTests)",
     "displayName": "testEmptyValue(org.elasticsearch.common.xcontent.cbor.CborXContentParserTests)",
     "methodName": "testEmptyValue",
     "className": "org.elasticsearch.common.xcontent.cbor.CborXContentParserTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195613575
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyValue(org.elasticsearch.common.xcontent.cbor.CborXContentParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyValue(org.elasticsearch.common.xcontent.cbor.CborXContentParserTests)",
  "startTimestamp": 1474195613612,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.xcontent.cbor.CborXContentParserTests",
  "startTimestamp": 1474195613575,
  "executionTime": 41
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.hash.MessageDigestsTests",
   "displayName": "org.elasticsearch.common.hash.MessageDigestsTests",
   "methodName": null,
   "className": "org.elasticsearch.common.hash.MessageDigestsTests",
   "children": [
    {
     "id": "ID#testSha1(org.elasticsearch.common.hash.MessageDigestsTests)",
     "displayName": "testSha1(org.elasticsearch.common.hash.MessageDigestsTests)",
     "methodName": "testSha1",
     "className": "org.elasticsearch.common.hash.MessageDigestsTests",
     "children": []
    },
    {
     "id": "ID#testToHexString(org.elasticsearch.common.hash.MessageDigestsTests)",
     "displayName": "testToHexString(org.elasticsearch.common.hash.MessageDigestsTests)",
     "methodName": "testToHexString",
     "className": "org.elasticsearch.common.hash.MessageDigestsTests",
     "children": []
    },
    {
     "id": "ID#testSha256(org.elasticsearch.common.hash.MessageDigestsTests)",
     "displayName": "testSha256(org.elasticsearch.common.hash.MessageDigestsTests)",
     "methodName": "testSha256",
     "className": "org.elasticsearch.common.hash.MessageDigestsTests",
     "children": []
    },
    {
     "id": "ID#testMd5(org.elasticsearch.common.hash.MessageDigestsTests)",
     "displayName": "testMd5(org.elasticsearch.common.hash.MessageDigestsTests)",
     "methodName": "testMd5",
     "className": "org.elasticsearch.common.hash.MessageDigestsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195613622
 }
]

[
 "TEST_STARTED",
 "ID#testSha1(org.elasticsearch.common.hash.MessageDigestsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSha1(org.elasticsearch.common.hash.MessageDigestsTests)",
  "startTimestamp": 1474195613667,
  "executionTime": 190
 }
]

[
 "TEST_STARTED",
 "ID#testToHexString(org.elasticsearch.common.hash.MessageDigestsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToHexString(org.elasticsearch.common.hash.MessageDigestsTests)",
  "startTimestamp": 1474195613857,
  "executionTime": 66
 }
]

[
 "TEST_STARTED",
 "ID#testSha256(org.elasticsearch.common.hash.MessageDigestsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSha256(org.elasticsearch.common.hash.MessageDigestsTests)",
  "startTimestamp": 1474195613923,
  "executionTime": 358
 }
]

[
 "TEST_STARTED",
 "ID#testMd5(org.elasticsearch.common.hash.MessageDigestsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMd5(org.elasticsearch.common.hash.MessageDigestsTests)",
  "startTimestamp": 1474195614282,
  "executionTime": 246
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.hash.MessageDigestsTests",
  "startTimestamp": 1474195613622,
  "executionTime": 920
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.http.HttpServerTests",
   "displayName": "org.elasticsearch.http.HttpServerTests",
   "methodName": null,
   "className": "org.elasticsearch.http.HttpServerTests",
   "children": [
    {
     "id": "ID#testDispatchRequestAddsAndFreesBytesOnSuccess(org.elasticsearch.http.HttpServerTests)",
     "displayName": "testDispatchRequestAddsAndFreesBytesOnSuccess(org.elasticsearch.http.HttpServerTests)",
     "methodName": "testDispatchRequestAddsAndFreesBytesOnSuccess",
     "className": "org.elasticsearch.http.HttpServerTests",
     "children": []
    },
    {
     "id": "ID#testDispatchRequestLimitsBytes(org.elasticsearch.http.HttpServerTests)",
     "displayName": "testDispatchRequestLimitsBytes(org.elasticsearch.http.HttpServerTests)",
     "methodName": "testDispatchRequestLimitsBytes",
     "className": "org.elasticsearch.http.HttpServerTests",
     "children": []
    },
    {
     "id": "ID#testDispatchRequestAddsAndFreesBytesOnlyOnceOnError(org.elasticsearch.http.HttpServerTests)",
     "displayName": "testDispatchRequestAddsAndFreesBytesOnlyOnceOnError(org.elasticsearch.http.HttpServerTests)",
     "methodName": "testDispatchRequestAddsAndFreesBytesOnlyOnceOnError",
     "className": "org.elasticsearch.http.HttpServerTests",
     "children": []
    },
    {
     "id": "ID#testDispatchRequestAddsAndFreesBytesOnError(org.elasticsearch.http.HttpServerTests)",
     "displayName": "testDispatchRequestAddsAndFreesBytesOnError(org.elasticsearch.http.HttpServerTests)",
     "methodName": "testDispatchRequestAddsAndFreesBytesOnError",
     "className": "org.elasticsearch.http.HttpServerTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195614549
 }
]

[
 "TEST_STARTED",
 "ID#testDispatchRequestAddsAndFreesBytesOnSuccess(org.elasticsearch.http.HttpServerTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:54,736][INFO ][org.elasticsearch.http   ] publish_address {local[1]}, bound_addresses {local[1]}%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDispatchRequestAddsAndFreesBytesOnSuccess(org.elasticsearch.http.HttpServerTests)",
  "startTimestamp": 1474195614629,
  "executionTime": 116
 }
]

[
 "TEST_STARTED",
 "ID#testDispatchRequestLimitsBytes(org.elasticsearch.http.HttpServerTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:54,750][INFO ][org.elasticsearch.http   ] publish_address {local[1]}, bound_addresses {local[1]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:54,769][WARN ][org.elasticsearch.indices.breaker.in_flight_requests] [in_flight_requests] New used memory 21 [21b] for data of [<http_request>] would be larger than configured breaker: 20 [20b], breaking%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDispatchRequestLimitsBytes(org.elasticsearch.http.HttpServerTests)",
  "startTimestamp": 1474195614746,
  "executionTime": 29
 }
]

[
 "TEST_STARTED",
 "ID#testDispatchRequestAddsAndFreesBytesOnlyOnceOnError(org.elasticsearch.http.HttpServerTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:54,780][INFO ][org.elasticsearch.http   ] publish_address {local[1]}, bound_addresses {local[1]}%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDispatchRequestAddsAndFreesBytesOnlyOnceOnError(org.elasticsearch.http.HttpServerTests)",
  "startTimestamp": 1474195614776,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testDispatchRequestAddsAndFreesBytesOnError(org.elasticsearch.http.HttpServerTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:54,791][INFO ][org.elasticsearch.http   ] publish_address {local[1]}, bound_addresses {local[1]}%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDispatchRequestAddsAndFreesBytesOnError(org.elasticsearch.http.HttpServerTests)",
  "startTimestamp": 1474195614787,
  "executionTime": 4
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.http.HttpServerTests",
  "startTimestamp": 1474195614549,
  "executionTime": 245
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.InnerHitBuilderTests",
   "displayName": "org.elasticsearch.index.query.InnerHitBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.InnerHitBuilderTests",
   "children": [
    {
     "id": "ID#testInlineLeafInnerHitsNestedQueryViaFunctionScoreQuery(org.elasticsearch.index.query.InnerHitBuilderTests)",
     "displayName": "testInlineLeafInnerHitsNestedQueryViaFunctionScoreQuery(org.elasticsearch.index.query.InnerHitBuilderTests)",
     "methodName": "testInlineLeafInnerHitsNestedQueryViaFunctionScoreQuery",
     "className": "org.elasticsearch.index.query.InnerHitBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.InnerHitBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.InnerHitBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.InnerHitBuilderTests",
     "children": []
    },
    {
     "id": "ID#testInlineLeafInnerHitsNestedQuery(org.elasticsearch.index.query.InnerHitBuilderTests)",
     "displayName": "testInlineLeafInnerHitsNestedQuery(org.elasticsearch.index.query.InnerHitBuilderTests)",
     "methodName": "testInlineLeafInnerHitsNestedQuery",
     "className": "org.elasticsearch.index.query.InnerHitBuilderTests",
     "children": []
    },
    {
     "id": "ID#testInlineLeafInnerHitsNestedQueryViaBoostingQuery(org.elasticsearch.index.query.InnerHitBuilderTests)",
     "displayName": "testInlineLeafInnerHitsNestedQueryViaBoostingQuery(org.elasticsearch.index.query.InnerHitBuilderTests)",
     "methodName": "testInlineLeafInnerHitsNestedQueryViaBoostingQuery",
     "className": "org.elasticsearch.index.query.InnerHitBuilderTests",
     "children": []
    },
    {
     "id": "ID#testInlineLeafInnerHitsNestedQueryViaConstantScoreQuery(org.elasticsearch.index.query.InnerHitBuilderTests)",
     "displayName": "testInlineLeafInnerHitsNestedQueryViaConstantScoreQuery(org.elasticsearch.index.query.InnerHitBuilderTests)",
     "methodName": "testInlineLeafInnerHitsNestedQueryViaConstantScoreQuery",
     "className": "org.elasticsearch.index.query.InnerHitBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.InnerHitBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.InnerHitBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.InnerHitBuilderTests",
     "children": []
    },
    {
     "id": "ID#testInlineLeafInnerHitsHasChildQuery(org.elasticsearch.index.query.InnerHitBuilderTests)",
     "displayName": "testInlineLeafInnerHitsHasChildQuery(org.elasticsearch.index.query.InnerHitBuilderTests)",
     "methodName": "testInlineLeafInnerHitsHasChildQuery",
     "className": "org.elasticsearch.index.query.InnerHitBuilderTests",
     "children": []
    },
    {
     "id": "ID#testInlineLeafInnerHitsHasParentQuery(org.elasticsearch.index.query.InnerHitBuilderTests)",
     "displayName": "testInlineLeafInnerHitsHasParentQuery(org.elasticsearch.index.query.InnerHitBuilderTests)",
     "methodName": "testInlineLeafInnerHitsHasParentQuery",
     "className": "org.elasticsearch.index.query.InnerHitBuilderTests",
     "children": []
    },
    {
     "id": "ID#testCopyConstructor(org.elasticsearch.index.query.InnerHitBuilderTests)",
     "displayName": "testCopyConstructor(org.elasticsearch.index.query.InnerHitBuilderTests)",
     "methodName": "testCopyConstructor",
     "className": "org.elasticsearch.index.query.InnerHitBuilderTests",
     "children": []
    },
    {
     "id": "ID#testInlineLeafInnerHitsNestedQueryViaBoolQuery(org.elasticsearch.index.query.InnerHitBuilderTests)",
     "displayName": "testInlineLeafInnerHitsNestedQueryViaBoolQuery(org.elasticsearch.index.query.InnerHitBuilderTests)",
     "methodName": "testInlineLeafInnerHitsNestedQueryViaBoolQuery",
     "className": "org.elasticsearch.index.query.InnerHitBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromAndToXContent(org.elasticsearch.index.query.InnerHitBuilderTests)",
     "displayName": "testFromAndToXContent(org.elasticsearch.index.query.InnerHitBuilderTests)",
     "methodName": "testFromAndToXContent",
     "className": "org.elasticsearch.index.query.InnerHitBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195614810
 }
]

[
 "TEST_STARTED",
 "ID#testInlineLeafInnerHitsNestedQueryViaFunctionScoreQuery(org.elasticsearch.index.query.InnerHitBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInlineLeafInnerHitsNestedQueryViaFunctionScoreQuery(org.elasticsearch.index.query.InnerHitBuilderTests)",
  "startTimestamp": 1474195614956,
  "executionTime": 93
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.InnerHitBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.InnerHitBuilderTests)",
  "startTimestamp": 1474195615049,
  "executionTime": 520
 }
]

[
 "TEST_STARTED",
 "ID#testInlineLeafInnerHitsNestedQuery(org.elasticsearch.index.query.InnerHitBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInlineLeafInnerHitsNestedQuery(org.elasticsearch.index.query.InnerHitBuilderTests)",
  "startTimestamp": 1474195615569,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testInlineLeafInnerHitsNestedQueryViaBoostingQuery(org.elasticsearch.index.query.InnerHitBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInlineLeafInnerHitsNestedQueryViaBoostingQuery(org.elasticsearch.index.query.InnerHitBuilderTests)",
  "startTimestamp": 1474195615573,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testInlineLeafInnerHitsNestedQueryViaConstantScoreQuery(org.elasticsearch.index.query.InnerHitBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInlineLeafInnerHitsNestedQueryViaConstantScoreQuery(org.elasticsearch.index.query.InnerHitBuilderTests)",
  "startTimestamp": 1474195615583,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.InnerHitBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.InnerHitBuilderTests)",
  "startTimestamp": 1474195615589,
  "executionTime": 50
 }
]

[
 "TEST_STARTED",
 "ID#testInlineLeafInnerHitsHasChildQuery(org.elasticsearch.index.query.InnerHitBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInlineLeafInnerHitsHasChildQuery(org.elasticsearch.index.query.InnerHitBuilderTests)",
  "startTimestamp": 1474195615639,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testInlineLeafInnerHitsHasParentQuery(org.elasticsearch.index.query.InnerHitBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInlineLeafInnerHitsHasParentQuery(org.elasticsearch.index.query.InnerHitBuilderTests)",
  "startTimestamp": 1474195615647,
  "executionTime": 15
 }
]

[
 "TEST_STARTED",
 "ID#testCopyConstructor(org.elasticsearch.index.query.InnerHitBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCopyConstructor(org.elasticsearch.index.query.InnerHitBuilderTests)",
  "startTimestamp": 1474195615662,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testInlineLeafInnerHitsNestedQueryViaBoolQuery(org.elasticsearch.index.query.InnerHitBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInlineLeafInnerHitsNestedQueryViaBoolQuery(org.elasticsearch.index.query.InnerHitBuilderTests)",
  "startTimestamp": 1474195615668,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testFromAndToXContent(org.elasticsearch.index.query.InnerHitBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromAndToXContent(org.elasticsearch.index.query.InnerHitBuilderTests)",
  "startTimestamp": 1474195615677,
  "executionTime": 536
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.InnerHitBuilderTests",
  "startTimestamp": 1474195614810,
  "executionTime": 1425
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests",
   "displayName": "org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests",
   "children": [
    {
     "id": "ID#testRebalanceWithIgnoredUnassignedShards(org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests)",
     "displayName": "testRebalanceWithIgnoredUnassignedShards(org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests)",
     "methodName": "testRebalanceWithIgnoredUnassignedShards",
     "className": "org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests",
     "children": []
    },
    {
     "id": "ID#testClusterPrimariesActive2(org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests)",
     "displayName": "testClusterPrimariesActive2(org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests)",
     "methodName": "testClusterPrimariesActive2",
     "className": "org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests",
     "children": []
    },
    {
     "id": "ID#testClusterAllActive2(org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests)",
     "displayName": "testClusterAllActive2(org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests)",
     "methodName": "testClusterAllActive2",
     "className": "org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests",
     "children": []
    },
    {
     "id": "ID#testClusterAllActive1(org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests)",
     "displayName": "testClusterAllActive1(org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests)",
     "methodName": "testClusterAllActive1",
     "className": "org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests",
     "children": []
    },
    {
     "id": "ID#testRebalanceWhileShardFetching(org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests)",
     "displayName": "testRebalanceWhileShardFetching(org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests)",
     "methodName": "testRebalanceWhileShardFetching",
     "className": "org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests",
     "children": []
    },
    {
     "id": "ID#testClusterAllActive3(org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests)",
     "displayName": "testClusterAllActive3(org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests)",
     "methodName": "testClusterAllActive3",
     "className": "org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests",
     "children": []
    },
    {
     "id": "ID#testClusterPrimariesActive1(org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests)",
     "displayName": "testClusterPrimariesActive1(org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests)",
     "methodName": "testClusterPrimariesActive1",
     "className": "org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests",
     "children": []
    },
    {
     "id": "ID#testAlways(org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests)",
     "displayName": "testAlways(org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests)",
     "methodName": "testAlways",
     "className": "org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195616259
 }
]

[
 "TEST_STARTED",
 "ID#testRebalanceWithIgnoredUnassignedShards(org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:56,319][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start two nodes%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:56,323][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test1][0], [test1][1]] ...]).%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRebalanceWithIgnoredUnassignedShards(org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests)",
  "startTimestamp": 1474195616310,
  "executionTime": 13
 }
]

[
 "TEST_STARTED",
 "ID#testClusterPrimariesActive2(org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:56,330][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start two nodes%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:56,330][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start all the primary shards for test1, replicas will start initializing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:56,335][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start the test1 replica shards%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:56,335][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] now, start 1 more node, check that rebalancing will not happen (for test1) because we set it to primaries_active%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClusterPrimariesActive2(org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests)",
  "startTimestamp": 1474195616323,
  "executionTime": 13
 }
]

[
 "TEST_STARTED",
 "ID#testClusterAllActive2(org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:56,346][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start two nodes%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:56,348][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start all the primary shards for test1, replicas will start initializing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:56,349][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start the test1 replica shards%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:56,349][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] now, start 1 more node, check that rebalancing will not happen (for test1) because we set it to all_active%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClusterAllActive2(org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests)",
  "startTimestamp": 1474195616336,
  "executionTime": 14
 }
]

[
 "TEST_STARTED",
 "ID#testClusterAllActive1(org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:56,358][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start two nodes%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:56,360][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start all the primary shards for test1, replicas will start initializing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:56,361][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start the test1 replica shards%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:56,361][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start all the primary shards for test2, replicas will start initializing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:56,362][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start the test2 replica shards%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:56,362][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test2][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:56,362][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] now, start 1 more node, check that rebalancing happen (for test1) because we set it to all_active%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClusterAllActive1(org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests)",
  "startTimestamp": 1474195616351,
  "executionTime": 17
 }
]

[
 "TEST_STARTED",
 "ID#testRebalanceWhileShardFetching(org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:56,377][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start two nodes%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:56,377][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [RED] (reason: [reroute]).%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRebalanceWhileShardFetching(org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests)",
  "startTimestamp": 1474195616369,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testClusterAllActive3(org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:56,388][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start two nodes%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:56,388][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start all the primary shards for test1, replicas will start initializing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:56,389][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start the test1 replica shards%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:56,390][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start all the primary shards for test2, replicas will start initializing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:56,390][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] now, start 1 more node, check that rebalancing will not happen (for test1) because we set it to all_active%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClusterAllActive3(org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests)",
  "startTimestamp": 1474195616379,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testClusterPrimariesActive1(org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:56,397][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start two nodes%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:56,397][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start all the primary shards for test1, replicas will start initializing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:56,398][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start the test1 replica shards%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:56,399][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start all the primary shards for test2, replicas will start initializing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:56,399][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] now, start 1 more node, check that rebalancing happen (for test1) because we set it to primaries_active%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClusterPrimariesActive1(org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests)",
  "startTimestamp": 1474195616390,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testAlways(org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:56,407][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start two nodes%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:56,407][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start all the primary shards for test1, replicas will start initializing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:56,408][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start the test1 replica shards%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:56,408][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] now, start 1 more node, check that rebalancing will happen (for test1) because we set it to always%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAlways(org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests)",
  "startTimestamp": 1474195616400,
  "executionTime": 9
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.allocation.ClusterRebalanceRoutingTests",
  "startTimestamp": 1474195616259,
  "executionTime": 151
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.support.MissingValuesTests",
   "displayName": "org.elasticsearch.search.aggregations.support.MissingValuesTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.support.MissingValuesTests",
   "children": [
    {
     "id": "ID#testMissingGeoPoints(org.elasticsearch.search.aggregations.support.MissingValuesTests)",
     "displayName": "testMissingGeoPoints(org.elasticsearch.search.aggregations.support.MissingValuesTests)",
     "methodName": "testMissingGeoPoints",
     "className": "org.elasticsearch.search.aggregations.support.MissingValuesTests",
     "children": []
    },
    {
     "id": "ID#testMissingOrds(org.elasticsearch.search.aggregations.support.MissingValuesTests)",
     "displayName": "testMissingOrds(org.elasticsearch.search.aggregations.support.MissingValuesTests)",
     "methodName": "testMissingOrds",
     "className": "org.elasticsearch.search.aggregations.support.MissingValuesTests",
     "children": []
    },
    {
     "id": "ID#testMissingBytes(org.elasticsearch.search.aggregations.support.MissingValuesTests)",
     "displayName": "testMissingBytes(org.elasticsearch.search.aggregations.support.MissingValuesTests)",
     "methodName": "testMissingBytes",
     "className": "org.elasticsearch.search.aggregations.support.MissingValuesTests",
     "children": []
    },
    {
     "id": "ID#testMissingLongs(org.elasticsearch.search.aggregations.support.MissingValuesTests)",
     "displayName": "testMissingLongs(org.elasticsearch.search.aggregations.support.MissingValuesTests)",
     "methodName": "testMissingLongs",
     "className": "org.elasticsearch.search.aggregations.support.MissingValuesTests",
     "children": []
    },
    {
     "id": "ID#testMissingDoubles(org.elasticsearch.search.aggregations.support.MissingValuesTests)",
     "displayName": "testMissingDoubles(org.elasticsearch.search.aggregations.support.MissingValuesTests)",
     "methodName": "testMissingDoubles",
     "className": "org.elasticsearch.search.aggregations.support.MissingValuesTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195616488
 }
]

[
 "TEST_STARTED",
 "ID#testMissingGeoPoints(org.elasticsearch.search.aggregations.support.MissingValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMissingGeoPoints(org.elasticsearch.search.aggregations.support.MissingValuesTests)",
  "startTimestamp": 1474195616510,
  "executionTime": 36
 }
]

[
 "TEST_STARTED",
 "ID#testMissingOrds(org.elasticsearch.search.aggregations.support.MissingValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMissingOrds(org.elasticsearch.search.aggregations.support.MissingValuesTests)",
  "startTimestamp": 1474195616546,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testMissingBytes(org.elasticsearch.search.aggregations.support.MissingValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMissingBytes(org.elasticsearch.search.aggregations.support.MissingValuesTests)",
  "startTimestamp": 1474195616551,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testMissingLongs(org.elasticsearch.search.aggregations.support.MissingValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMissingLongs(org.elasticsearch.search.aggregations.support.MissingValuesTests)",
  "startTimestamp": 1474195616554,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testMissingDoubles(org.elasticsearch.search.aggregations.support.MissingValuesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMissingDoubles(org.elasticsearch.search.aggregations.support.MissingValuesTests)",
  "startTimestamp": 1474195616556,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.support.MissingValuesTests",
  "startTimestamp": 1474195616488,
  "executionTime": 74
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.watcher.ResourceWatcherServiceTests",
   "displayName": "org.elasticsearch.watcher.ResourceWatcherServiceTests",
   "methodName": null,
   "className": "org.elasticsearch.watcher.ResourceWatcherServiceTests",
   "children": [
    {
     "id": "ID#testSettings(org.elasticsearch.watcher.ResourceWatcherServiceTests)",
     "displayName": "testSettings(org.elasticsearch.watcher.ResourceWatcherServiceTests)",
     "methodName": "testSettings",
     "className": "org.elasticsearch.watcher.ResourceWatcherServiceTests",
     "children": []
    },
    {
     "id": "ID#testHandle(org.elasticsearch.watcher.ResourceWatcherServiceTests)",
     "displayName": "testHandle(org.elasticsearch.watcher.ResourceWatcherServiceTests)",
     "methodName": "testHandle",
     "className": "org.elasticsearch.watcher.ResourceWatcherServiceTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195616569
 }
]

[
 "TEST_STARTED",
 "ID#testSettings(org.elasticsearch.watcher.ResourceWatcherServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSettings(org.elasticsearch.watcher.ResourceWatcherServiceTests)",
  "startTimestamp": 1474195616586,
  "executionTime": 14
 }
]

[
 "TEST_STARTED",
 "ID#testHandle(org.elasticsearch.watcher.ResourceWatcherServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHandle(org.elasticsearch.watcher.ResourceWatcherServiceTests)",
  "startTimestamp": 1474195616600,
  "executionTime": 10
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.watcher.ResourceWatcherServiceTests",
  "startTimestamp": 1474195616569,
  "executionTime": 43
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.unit.ByteSizeUnitTests",
   "displayName": "org.elasticsearch.common.unit.ByteSizeUnitTests",
   "methodName": null,
   "className": "org.elasticsearch.common.unit.ByteSizeUnitTests",
   "children": [
    {
     "id": "ID#testTB(org.elasticsearch.common.unit.ByteSizeUnitTests)",
     "displayName": "testTB(org.elasticsearch.common.unit.ByteSizeUnitTests)",
     "methodName": "testTB",
     "className": "org.elasticsearch.common.unit.ByteSizeUnitTests",
     "children": []
    },
    {
     "id": "ID#testKB(org.elasticsearch.common.unit.ByteSizeUnitTests)",
     "displayName": "testKB(org.elasticsearch.common.unit.ByteSizeUnitTests)",
     "methodName": "testKB",
     "className": "org.elasticsearch.common.unit.ByteSizeUnitTests",
     "children": []
    },
    {
     "id": "ID#testMB(org.elasticsearch.common.unit.ByteSizeUnitTests)",
     "displayName": "testMB(org.elasticsearch.common.unit.ByteSizeUnitTests)",
     "methodName": "testMB",
     "className": "org.elasticsearch.common.unit.ByteSizeUnitTests",
     "children": []
    },
    {
     "id": "ID#testBytes(org.elasticsearch.common.unit.ByteSizeUnitTests)",
     "displayName": "testBytes(org.elasticsearch.common.unit.ByteSizeUnitTests)",
     "methodName": "testBytes",
     "className": "org.elasticsearch.common.unit.ByteSizeUnitTests",
     "children": []
    },
    {
     "id": "ID#testGB(org.elasticsearch.common.unit.ByteSizeUnitTests)",
     "displayName": "testGB(org.elasticsearch.common.unit.ByteSizeUnitTests)",
     "methodName": "testGB",
     "className": "org.elasticsearch.common.unit.ByteSizeUnitTests",
     "children": []
    },
    {
     "id": "ID#testPB(org.elasticsearch.common.unit.ByteSizeUnitTests)",
     "displayName": "testPB(org.elasticsearch.common.unit.ByteSizeUnitTests)",
     "methodName": "testPB",
     "className": "org.elasticsearch.common.unit.ByteSizeUnitTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195616621
 }
]

[
 "TEST_STARTED",
 "ID#testTB(org.elasticsearch.common.unit.ByteSizeUnitTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTB(org.elasticsearch.common.unit.ByteSizeUnitTests)",
  "startTimestamp": 1474195616641,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testKB(org.elasticsearch.common.unit.ByteSizeUnitTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testKB(org.elasticsearch.common.unit.ByteSizeUnitTests)",
  "startTimestamp": 1474195616644,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testMB(org.elasticsearch.common.unit.ByteSizeUnitTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMB(org.elasticsearch.common.unit.ByteSizeUnitTests)",
  "startTimestamp": 1474195616646,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testBytes(org.elasticsearch.common.unit.ByteSizeUnitTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBytes(org.elasticsearch.common.unit.ByteSizeUnitTests)",
  "startTimestamp": 1474195616648,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testGB(org.elasticsearch.common.unit.ByteSizeUnitTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGB(org.elasticsearch.common.unit.ByteSizeUnitTests)",
  "startTimestamp": 1474195616650,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testPB(org.elasticsearch.common.unit.ByteSizeUnitTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPB(org.elasticsearch.common.unit.ByteSizeUnitTests)",
  "startTimestamp": 1474195616652,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.unit.ByteSizeUnitTests",
  "startTimestamp": 1474195616621,
  "executionTime": 35
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.admin.cluster.reroute.ClusterRerouteTests",
   "displayName": "org.elasticsearch.action.admin.cluster.reroute.ClusterRerouteTests",
   "methodName": null,
   "className": "org.elasticsearch.action.admin.cluster.reroute.ClusterRerouteTests",
   "children": [
    {
     "id": "ID#testSerializeRequest(org.elasticsearch.action.admin.cluster.reroute.ClusterRerouteTests)",
     "displayName": "testSerializeRequest(org.elasticsearch.action.admin.cluster.reroute.ClusterRerouteTests)",
     "methodName": "testSerializeRequest",
     "className": "org.elasticsearch.action.admin.cluster.reroute.ClusterRerouteTests",
     "children": []
    },
    {
     "id": "ID#testClusterStateUpdateTask(org.elasticsearch.action.admin.cluster.reroute.ClusterRerouteTests)",
     "displayName": "testClusterStateUpdateTask(org.elasticsearch.action.admin.cluster.reroute.ClusterRerouteTests)",
     "methodName": "testClusterStateUpdateTask",
     "className": "org.elasticsearch.action.admin.cluster.reroute.ClusterRerouteTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195616663
 }
]

[
 "TEST_STARTED",
 "ID#testSerializeRequest(org.elasticsearch.action.admin.cluster.reroute.ClusterRerouteTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerializeRequest(org.elasticsearch.action.admin.cluster.reroute.ClusterRerouteTests)",
  "startTimestamp": 1474195616700,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testClusterStateUpdateTask(org.elasticsearch.action.admin.cluster.reroute.ClusterRerouteTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:46:56,711][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [RED] (reason: [shards failed [[idx][0]] ...]).%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClusterStateUpdateTask(org.elasticsearch.action.admin.cluster.reroute.ClusterRerouteTests)",
  "startTimestamp": 1474195616704,
  "executionTime": 10
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.admin.cluster.reroute.ClusterRerouteTests",
  "startTimestamp": 1474195616663,
  "executionTime": 53
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.TableTests",
   "displayName": "org.elasticsearch.common.TableTests",
   "methodName": null,
   "className": "org.elasticsearch.common.TableTests",
   "children": [
    {
     "id": "ID#testFailOnEndHeadersWithoutStart(org.elasticsearch.common.TableTests)",
     "displayName": "testFailOnEndHeadersWithoutStart(org.elasticsearch.common.TableTests)",
     "methodName": "testFailOnEndHeadersWithoutStart",
     "className": "org.elasticsearch.common.TableTests",
     "children": []
    },
    {
     "id": "ID#testFailOnMoreCellsThanDeclared(org.elasticsearch.common.TableTests)",
     "displayName": "testFailOnMoreCellsThanDeclared(org.elasticsearch.common.TableTests)",
     "methodName": "testFailOnMoreCellsThanDeclared",
     "className": "org.elasticsearch.common.TableTests",
     "children": []
    },
    {
     "id": "ID#testFailOnLessCellsThanDeclared(org.elasticsearch.common.TableTests)",
     "displayName": "testFailOnLessCellsThanDeclared(org.elasticsearch.common.TableTests)",
     "methodName": "testFailOnLessCellsThanDeclared",
     "className": "org.elasticsearch.common.TableTests",
     "children": []
    },
    {
     "id": "ID#testFailOnEndRowWithoutStart(org.elasticsearch.common.TableTests)",
     "displayName": "testFailOnEndRowWithoutStart(org.elasticsearch.common.TableTests)",
     "methodName": "testFailOnEndRowWithoutStart",
     "className": "org.elasticsearch.common.TableTests",
     "children": []
    },
    {
     "id": "ID#testWithTimestamp(org.elasticsearch.common.TableTests)",
     "displayName": "testWithTimestamp(org.elasticsearch.common.TableTests)",
     "methodName": "testWithTimestamp",
     "className": "org.elasticsearch.common.TableTests",
     "children": []
    },
    {
     "id": "ID#testOnLessCellsThanDeclaredUnchecked(org.elasticsearch.common.TableTests)",
     "displayName": "testOnLessCellsThanDeclaredUnchecked(org.elasticsearch.common.TableTests)",
     "methodName": "testOnLessCellsThanDeclaredUnchecked",
     "className": "org.elasticsearch.common.TableTests",
     "children": []
    },
    {
     "id": "ID#testFailOnAddCellWithoutRow(org.elasticsearch.common.TableTests)",
     "displayName": "testFailOnAddCellWithoutRow(org.elasticsearch.common.TableTests)",
     "methodName": "testFailOnAddCellWithoutRow",
     "className": "org.elasticsearch.common.TableTests",
     "children": []
    },
    {
     "id": "ID#testFailOnAddCellWithoutHeader(org.elasticsearch.common.TableTests)",
     "displayName": "testFailOnAddCellWithoutHeader(org.elasticsearch.common.TableTests)",
     "methodName": "testFailOnAddCellWithoutHeader",
     "className": "org.elasticsearch.common.TableTests",
     "children": []
    },
    {
     "id": "ID#testSimple(org.elasticsearch.common.TableTests)",
     "displayName": "testSimple(org.elasticsearch.common.TableTests)",
     "methodName": "testSimple",
     "className": "org.elasticsearch.common.TableTests",
     "children": []
    },
    {
     "id": "ID#testFailOnStartRowWithoutHeader(org.elasticsearch.common.TableTests)",
     "displayName": "testFailOnStartRowWithoutHeader(org.elasticsearch.common.TableTests)",
     "methodName": "testFailOnStartRowWithoutHeader",
     "className": "org.elasticsearch.common.TableTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195616724
 }
]

[
 "TEST_STARTED",
 "ID#testFailOnEndHeadersWithoutStart(org.elasticsearch.common.TableTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailOnEndHeadersWithoutStart(org.elasticsearch.common.TableTests)",
  "startTimestamp": 1474195616741,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testFailOnMoreCellsThanDeclared(org.elasticsearch.common.TableTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailOnMoreCellsThanDeclared(org.elasticsearch.common.TableTests)",
  "startTimestamp": 1474195616747,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFailOnLessCellsThanDeclared(org.elasticsearch.common.TableTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailOnLessCellsThanDeclared(org.elasticsearch.common.TableTests)",
  "startTimestamp": 1474195616749,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFailOnEndRowWithoutStart(org.elasticsearch.common.TableTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailOnEndRowWithoutStart(org.elasticsearch.common.TableTests)",
  "startTimestamp": 1474195616751,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testWithTimestamp(org.elasticsearch.common.TableTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWithTimestamp(org.elasticsearch.common.TableTests)",
  "startTimestamp": 1474195616753,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testOnLessCellsThanDeclaredUnchecked(org.elasticsearch.common.TableTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOnLessCellsThanDeclaredUnchecked(org.elasticsearch.common.TableTests)",
  "startTimestamp": 1474195616756,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testFailOnAddCellWithoutRow(org.elasticsearch.common.TableTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailOnAddCellWithoutRow(org.elasticsearch.common.TableTests)",
  "startTimestamp": 1474195616758,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testFailOnAddCellWithoutHeader(org.elasticsearch.common.TableTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailOnAddCellWithoutHeader(org.elasticsearch.common.TableTests)",
  "startTimestamp": 1474195616760,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testSimple(org.elasticsearch.common.TableTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimple(org.elasticsearch.common.TableTests)",
  "startTimestamp": 1474195616761,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFailOnStartRowWithoutHeader(org.elasticsearch.common.TableTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailOnStartRowWithoutHeader(org.elasticsearch.common.TableTests)",
  "startTimestamp": 1474195616764,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.TableTests",
  "startTimestamp": 1474195616724,
  "executionTime": 43
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.ingest.TrackingResultProcessorTests",
   "displayName": "org.elasticsearch.action.ingest.TrackingResultProcessorTests",
   "methodName": null,
   "className": "org.elasticsearch.action.ingest.TrackingResultProcessorTests",
   "children": [
    {
     "id": "ID#testActualCompoundProcessorWithOnFailure(org.elasticsearch.action.ingest.TrackingResultProcessorTests)",
     "displayName": "testActualCompoundProcessorWithOnFailure(org.elasticsearch.action.ingest.TrackingResultProcessorTests)",
     "methodName": "testActualCompoundProcessorWithOnFailure",
     "className": "org.elasticsearch.action.ingest.TrackingResultProcessorTests",
     "children": []
    },
    {
     "id": "ID#testActualProcessor(org.elasticsearch.action.ingest.TrackingResultProcessorTests)",
     "displayName": "testActualProcessor(org.elasticsearch.action.ingest.TrackingResultProcessorTests)",
     "methodName": "testActualProcessor",
     "className": "org.elasticsearch.action.ingest.TrackingResultProcessorTests",
     "children": []
    },
    {
     "id": "ID#testActualCompoundProcessorWithoutOnFailure(org.elasticsearch.action.ingest.TrackingResultProcessorTests)",
     "displayName": "testActualCompoundProcessorWithoutOnFailure(org.elasticsearch.action.ingest.TrackingResultProcessorTests)",
     "methodName": "testActualCompoundProcessorWithoutOnFailure",
     "className": "org.elasticsearch.action.ingest.TrackingResultProcessorTests",
     "children": []
    },
    {
     "id": "ID#testActualCompoundProcessorWithIgnoreFailure(org.elasticsearch.action.ingest.TrackingResultProcessorTests)",
     "displayName": "testActualCompoundProcessorWithIgnoreFailure(org.elasticsearch.action.ingest.TrackingResultProcessorTests)",
     "methodName": "testActualCompoundProcessorWithIgnoreFailure",
     "className": "org.elasticsearch.action.ingest.TrackingResultProcessorTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195616800
 }
]

[
 "TEST_STARTED",
 "ID#testActualCompoundProcessorWithOnFailure(org.elasticsearch.action.ingest.TrackingResultProcessorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testActualCompoundProcessorWithOnFailure(org.elasticsearch.action.ingest.TrackingResultProcessorTests)",
  "startTimestamp": 1474195616821,
  "executionTime": 24
 }
]

[
 "TEST_STARTED",
 "ID#testActualProcessor(org.elasticsearch.action.ingest.TrackingResultProcessorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testActualProcessor(org.elasticsearch.action.ingest.TrackingResultProcessorTests)",
  "startTimestamp": 1474195616846,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testActualCompoundProcessorWithoutOnFailure(org.elasticsearch.action.ingest.TrackingResultProcessorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testActualCompoundProcessorWithoutOnFailure(org.elasticsearch.action.ingest.TrackingResultProcessorTests)",
  "startTimestamp": 1474195616848,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testActualCompoundProcessorWithIgnoreFailure(org.elasticsearch.action.ingest.TrackingResultProcessorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testActualCompoundProcessorWithIgnoreFailure(org.elasticsearch.action.ingest.TrackingResultProcessorTests)",
  "startTimestamp": 1474195616851,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.ingest.TrackingResultProcessorTests",
  "startTimestamp": 1474195616800,
  "executionTime": 55
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.bucket.SignificantTermsTests",
   "displayName": "org.elasticsearch.search.aggregations.bucket.SignificantTermsTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.bucket.SignificantTermsTests",
   "children": [
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.SignificantTermsTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.SignificantTermsTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.aggregations.bucket.SignificantTermsTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.aggregations.bucket.SignificantTermsTests)",
     "displayName": "testSerialization(org.elasticsearch.search.aggregations.bucket.SignificantTermsTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.aggregations.bucket.SignificantTermsTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.aggregations.bucket.SignificantTermsTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.aggregations.bucket.SignificantTermsTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.aggregations.bucket.SignificantTermsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195616862
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:46:57,156][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{eScHbDWPTM-fHWQQ5hU9sw}{local}{local[143]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.SignificantTermsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.SignificantTermsTests)",
  "startTimestamp": 1474195617171,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.aggregations.bucket.SignificantTermsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.aggregations.bucket.SignificantTermsTests)",
  "startTimestamp": 1474195617176,
  "executionTime": 29
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.aggregations.bucket.SignificantTermsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.aggregations.bucket.SignificantTermsTests)",
  "startTimestamp": 1474195617205,
  "executionTime": 4
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.bucket.SignificantTermsTests",
  "startTimestamp": 1474195616862,
  "executionTime": 351
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.BooleanFieldTypeTests",
   "displayName": "org.elasticsearch.index.mapper.BooleanFieldTypeTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.BooleanFieldTypeTests",
   "children": [
    {
     "id": "ID#testFreeze(org.elasticsearch.index.mapper.BooleanFieldTypeTests)",
     "displayName": "testFreeze(org.elasticsearch.index.mapper.BooleanFieldTypeTests)",
     "methodName": "testFreeze",
     "className": "org.elasticsearch.index.mapper.BooleanFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testClone(org.elasticsearch.index.mapper.BooleanFieldTypeTests)",
     "displayName": "testClone(org.elasticsearch.index.mapper.BooleanFieldTypeTests)",
     "methodName": "testClone",
     "className": "org.elasticsearch.index.mapper.BooleanFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testValueFormat(org.elasticsearch.index.mapper.BooleanFieldTypeTests)",
     "displayName": "testValueFormat(org.elasticsearch.index.mapper.BooleanFieldTypeTests)",
     "methodName": "testValueFormat",
     "className": "org.elasticsearch.index.mapper.BooleanFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testValueForSearch(org.elasticsearch.index.mapper.BooleanFieldTypeTests)",
     "displayName": "testValueForSearch(org.elasticsearch.index.mapper.BooleanFieldTypeTests)",
     "methodName": "testValueForSearch",
     "className": "org.elasticsearch.index.mapper.BooleanFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testEquals(org.elasticsearch.index.mapper.BooleanFieldTypeTests)",
     "displayName": "testEquals(org.elasticsearch.index.mapper.BooleanFieldTypeTests)",
     "methodName": "testEquals",
     "className": "org.elasticsearch.index.mapper.BooleanFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.BooleanFieldTypeTests)",
     "displayName": "testCheckCompatibility(org.elasticsearch.index.mapper.BooleanFieldTypeTests)",
     "methodName": "testCheckCompatibility",
     "className": "org.elasticsearch.index.mapper.BooleanFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckTypeName(org.elasticsearch.index.mapper.BooleanFieldTypeTests)",
     "displayName": "testCheckTypeName(org.elasticsearch.index.mapper.BooleanFieldTypeTests)",
     "methodName": "testCheckTypeName",
     "className": "org.elasticsearch.index.mapper.BooleanFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testTermQuery(org.elasticsearch.index.mapper.BooleanFieldTypeTests)",
     "displayName": "testTermQuery(org.elasticsearch.index.mapper.BooleanFieldTypeTests)",
     "methodName": "testTermQuery",
     "className": "org.elasticsearch.index.mapper.BooleanFieldTypeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195617220
 }
]

[
 "TEST_STARTED",
 "ID#testFreeze(org.elasticsearch.index.mapper.BooleanFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFreeze(org.elasticsearch.index.mapper.BooleanFieldTypeTests)",
  "startTimestamp": 1474195617238,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testClone(org.elasticsearch.index.mapper.BooleanFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClone(org.elasticsearch.index.mapper.BooleanFieldTypeTests)",
  "startTimestamp": 1474195617245,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testValueFormat(org.elasticsearch.index.mapper.BooleanFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValueFormat(org.elasticsearch.index.mapper.BooleanFieldTypeTests)",
  "startTimestamp": 1474195617249,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testValueForSearch(org.elasticsearch.index.mapper.BooleanFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValueForSearch(org.elasticsearch.index.mapper.BooleanFieldTypeTests)",
  "startTimestamp": 1474195617252,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testEquals(org.elasticsearch.index.mapper.BooleanFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEquals(org.elasticsearch.index.mapper.BooleanFieldTypeTests)",
  "startTimestamp": 1474195617256,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCheckCompatibility(org.elasticsearch.index.mapper.BooleanFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.BooleanFieldTypeTests)",
  "startTimestamp": 1474195617258,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testCheckTypeName(org.elasticsearch.index.mapper.BooleanFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckTypeName(org.elasticsearch.index.mapper.BooleanFieldTypeTests)",
  "startTimestamp": 1474195617262,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testTermQuery(org.elasticsearch.index.mapper.BooleanFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTermQuery(org.elasticsearch.index.mapper.BooleanFieldTypeTests)",
  "startTimestamp": 1474195617264,
  "executionTime": 10
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.BooleanFieldTypeTests",
  "startTimestamp": 1474195617220,
  "executionTime": 58
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.LegacyTokenCountFieldMapperTests",
   "displayName": "org.elasticsearch.index.mapper.LegacyTokenCountFieldMapperTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.LegacyTokenCountFieldMapperTests",
   "children": [
    {
     "id": "ID#testMerge(org.elasticsearch.index.mapper.LegacyTokenCountFieldMapperTests)",
     "displayName": "testMerge(org.elasticsearch.index.mapper.LegacyTokenCountFieldMapperTests)",
     "methodName": "testMerge",
     "className": "org.elasticsearch.index.mapper.LegacyTokenCountFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testCountPositions(org.elasticsearch.index.mapper.LegacyTokenCountFieldMapperTests)",
     "displayName": "testCountPositions(org.elasticsearch.index.mapper.LegacyTokenCountFieldMapperTests)",
     "methodName": "testCountPositions",
     "className": "org.elasticsearch.index.mapper.LegacyTokenCountFieldMapperTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195617291
 }
]

[
 "TEST_STARTED",
 "ID#testMerge(org.elasticsearch.index.mapper.LegacyTokenCountFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:46:57,396][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:46:57,459][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:46:57,459][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:46:57,467][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[7260], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:46:57,470][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:46:57,470][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.test.InternalSettingsPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:46:57,719][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:46:57,720][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:46:57,722][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[12]}, bound_addresses {local[12]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:46:57,749][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{6b4d4pPfQBu4WiEuVTraMg}{qxMRDLq_TbesgxZphWhTPg}{local}{local[12]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:46:57,750][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:46:57,810][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:46:57,831][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:46:58,030][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:46:58,089][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [LegacyTokenCountFieldMapperTests#testMerge]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMerge(org.elasticsearch.index.mapper.LegacyTokenCountFieldMapperTests)",
  "startTimestamp": 1474195617384,
  "executionTime": 737
 }
]

[
 "TEST_STARTED",
 "ID#testCountPositions(org.elasticsearch.index.mapper.LegacyTokenCountFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:46:58,125][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [LegacyTokenCountFieldMapperTests#testCountPositions]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCountPositions(org.elasticsearch.index.mapper.LegacyTokenCountFieldMapperTests)",
  "startTimestamp": 1474195618121,
  "executionTime": 5
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:46:58,127][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:46:58,127][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:46:58,127][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:46:58,129][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.LegacyTokenCountFieldMapperTests",
  "startTimestamp": 1474195617291,
  "executionTime": 845
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.fetch.subphase.NestedChildrenFilterTests",
   "displayName": "org.elasticsearch.search.fetch.subphase.NestedChildrenFilterTests",
   "methodName": null,
   "className": "org.elasticsearch.search.fetch.subphase.NestedChildrenFilterTests",
   "children": [
    {
     "id": "ID#testNestedChildrenFilter(org.elasticsearch.search.fetch.subphase.NestedChildrenFilterTests)",
     "displayName": "testNestedChildrenFilter(org.elasticsearch.search.fetch.subphase.NestedChildrenFilterTests)",
     "methodName": "testNestedChildrenFilter",
     "className": "org.elasticsearch.search.fetch.subphase.NestedChildrenFilterTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195618168
 }
]

[
 "TEST_STARTED",
 "ID#testNestedChildrenFilter(org.elasticsearch.search.fetch.subphase.NestedChildrenFilterTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNestedChildrenFilter(org.elasticsearch.search.fetch.subphase.NestedChildrenFilterTests)",
  "startTimestamp": 1474195618188,
  "executionTime": 82
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.fetch.subphase.NestedChildrenFilterTests",
  "startTimestamp": 1474195618168,
  "executionTime": 103
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.xcontent.json.JsonXContentTests",
   "displayName": "org.elasticsearch.common.xcontent.json.JsonXContentTests",
   "methodName": null,
   "className": "org.elasticsearch.common.xcontent.json.JsonXContentTests",
   "children": [
    {
     "id": "ID#testBigInteger(org.elasticsearch.common.xcontent.json.JsonXContentTests)",
     "displayName": "testBigInteger(org.elasticsearch.common.xcontent.json.JsonXContentTests)",
     "methodName": "testBigInteger",
     "className": "org.elasticsearch.common.xcontent.json.JsonXContentTests",
     "children": []
    },
    {
     "id": "ID#testMissingEndObject(org.elasticsearch.common.xcontent.json.JsonXContentTests)",
     "displayName": "testMissingEndObject(org.elasticsearch.common.xcontent.json.JsonXContentTests)",
     "methodName": "testMissingEndObject",
     "className": "org.elasticsearch.common.xcontent.json.JsonXContentTests",
     "children": []
    },
    {
     "id": "ID#testRawField(org.elasticsearch.common.xcontent.json.JsonXContentTests)",
     "displayName": "testRawField(org.elasticsearch.common.xcontent.json.JsonXContentTests)",
     "methodName": "testRawField",
     "className": "org.elasticsearch.common.xcontent.json.JsonXContentTests",
     "children": []
    },
    {
     "id": "ID#testBasics(org.elasticsearch.common.xcontent.json.JsonXContentTests)",
     "displayName": "testBasics(org.elasticsearch.common.xcontent.json.JsonXContentTests)",
     "methodName": "testBasics",
     "className": "org.elasticsearch.common.xcontent.json.JsonXContentTests",
     "children": []
    },
    {
     "id": "ID#testMissingEndArray(org.elasticsearch.common.xcontent.json.JsonXContentTests)",
     "displayName": "testMissingEndArray(org.elasticsearch.common.xcontent.json.JsonXContentTests)",
     "methodName": "testMissingEndArray",
     "className": "org.elasticsearch.common.xcontent.json.JsonXContentTests",
     "children": []
    },
    {
     "id": "ID#testRawValue(org.elasticsearch.common.xcontent.json.JsonXContentTests)",
     "displayName": "testRawValue(org.elasticsearch.common.xcontent.json.JsonXContentTests)",
     "methodName": "testRawValue",
     "className": "org.elasticsearch.common.xcontent.json.JsonXContentTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195618279
 }
]

[
 "TEST_STARTED",
 "ID#testBigInteger(org.elasticsearch.common.xcontent.json.JsonXContentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBigInteger(org.elasticsearch.common.xcontent.json.JsonXContentTests)",
  "startTimestamp": 1474195618306,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testMissingEndObject(org.elasticsearch.common.xcontent.json.JsonXContentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMissingEndObject(org.elasticsearch.common.xcontent.json.JsonXContentTests)",
  "startTimestamp": 1474195618308,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRawField(org.elasticsearch.common.xcontent.json.JsonXContentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRawField(org.elasticsearch.common.xcontent.json.JsonXContentTests)",
  "startTimestamp": 1474195618311,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testBasics(org.elasticsearch.common.xcontent.json.JsonXContentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBasics(org.elasticsearch.common.xcontent.json.JsonXContentTests)",
  "startTimestamp": 1474195618314,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testMissingEndArray(org.elasticsearch.common.xcontent.json.JsonXContentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMissingEndArray(org.elasticsearch.common.xcontent.json.JsonXContentTests)",
  "startTimestamp": 1474195618317,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRawValue(org.elasticsearch.common.xcontent.json.JsonXContentTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRawValue(org.elasticsearch.common.xcontent.json.JsonXContentTests)",
  "startTimestamp": 1474195618319,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.xcontent.json.JsonXContentTests",
  "startTimestamp": 1474195618279,
  "executionTime": 45
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.io.FileSystemUtilsTests",
   "displayName": "org.elasticsearch.common.io.FileSystemUtilsTests",
   "methodName": null,
   "className": "org.elasticsearch.common.io.FileSystemUtilsTests",
   "children": [
    {
     "id": "ID#testIsHidden(org.elasticsearch.common.io.FileSystemUtilsTests)",
     "displayName": "testIsHidden(org.elasticsearch.common.io.FileSystemUtilsTests)",
     "methodName": "testIsHidden",
     "className": "org.elasticsearch.common.io.FileSystemUtilsTests",
     "children": []
    },
    {
     "id": "ID#testAppend(org.elasticsearch.common.io.FileSystemUtilsTests)",
     "displayName": "testAppend(org.elasticsearch.common.io.FileSystemUtilsTests)",
     "methodName": "testAppend",
     "className": "org.elasticsearch.common.io.FileSystemUtilsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195618333
 }
]

[
 "TEST_STARTED",
 "ID#testIsHidden(org.elasticsearch.common.io.FileSystemUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsHidden(org.elasticsearch.common.io.FileSystemUtilsTests)",
  "startTimestamp": 1474195618387,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testAppend(org.elasticsearch.common.io.FileSystemUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAppend(org.elasticsearch.common.io.FileSystemUtilsTests)",
  "startTimestamp": 1474195618393,
  "executionTime": 5
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.io.FileSystemUtilsTests",
  "startTimestamp": 1474195618333,
  "executionTime": 69
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.script.FileScriptTests",
   "displayName": "org.elasticsearch.script.FileScriptTests",
   "methodName": null,
   "className": "org.elasticsearch.script.FileScriptTests",
   "children": [
    {
     "id": "ID#testFileScriptFound(org.elasticsearch.script.FileScriptTests)",
     "displayName": "testFileScriptFound(org.elasticsearch.script.FileScriptTests)",
     "methodName": "testFileScriptFound",
     "className": "org.elasticsearch.script.FileScriptTests",
     "children": []
    },
    {
     "id": "ID#testAllOpsDisabled(org.elasticsearch.script.FileScriptTests)",
     "displayName": "testAllOpsDisabled(org.elasticsearch.script.FileScriptTests)",
     "methodName": "testAllOpsDisabled",
     "className": "org.elasticsearch.script.FileScriptTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195618408
 }
]

[
 "TEST_STARTED",
 "ID#testFileScriptFound(org.elasticsearch.script.FileScriptTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:58,446][INFO ][org.elasticsearch.script ] [node_s_0] compiling script file [C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J2\\temp\\org.elasticsearch.script.FileScriptTests_FD13852EF36FC81C-001\\tempDir-001\\config\\scripts\\script1.mockscript]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFileScriptFound(org.elasticsearch.script.FileScriptTests)",
  "startTimestamp": 1474195618436,
  "executionTime": 16
 }
]

[
 "TEST_STARTED",
 "ID#testAllOpsDisabled(org.elasticsearch.script.FileScriptTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:46:58,483][WARN ][org.elasticsearch.script ] [node_s_0] skipping compile of script file [C:\\Users\\kmala\\workspace\\Team3\\core\\build\\testrun\\test\\J2\\temp\\org.elasticsearch.script.FileScriptTests_FD13852EF36FC81C-001\\tempDir-002\\config\\scripts\\script1.mockscript] as all scripted operations are disabled for file scripts%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAllOpsDisabled(org.elasticsearch.script.FileScriptTests)",
  "startTimestamp": 1474195618452,
  "executionTime": 32
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.script.FileScriptTests",
  "startTimestamp": 1474195618408,
  "executionTime": 81
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.serialization.ClusterSerializationTests",
   "displayName": "org.elasticsearch.cluster.serialization.ClusterSerializationTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.serialization.ClusterSerializationTests",
   "children": [
    {
     "id": "ID#testRoutingTableSerialization(org.elasticsearch.cluster.serialization.ClusterSerializationTests)",
     "displayName": "testRoutingTableSerialization(org.elasticsearch.cluster.serialization.ClusterSerializationTests)",
     "methodName": "testRoutingTableSerialization",
     "className": "org.elasticsearch.cluster.serialization.ClusterSerializationTests",
     "children": []
    },
    {
     "id": "ID#testClusterStateSerialization(org.elasticsearch.cluster.serialization.ClusterSerializationTests)",
     "displayName": "testClusterStateSerialization(org.elasticsearch.cluster.serialization.ClusterSerializationTests)",
     "methodName": "testClusterStateSerialization",
     "className": "org.elasticsearch.cluster.serialization.ClusterSerializationTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195618497
 }
]

[
 "TEST_STARTED",
 "ID#testRoutingTableSerialization(org.elasticsearch.cluster.serialization.ClusterSerializationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRoutingTableSerialization(org.elasticsearch.cluster.serialization.ClusterSerializationTests)",
  "startTimestamp": 1474195618523,
  "executionTime": 20
 }
]

[
 "TEST_STARTED",
 "ID#testClusterStateSerialization(org.elasticsearch.cluster.serialization.ClusterSerializationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClusterStateSerialization(org.elasticsearch.cluster.serialization.ClusterSerializationTests)",
  "startTimestamp": 1474195618543,
  "executionTime": 26
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.serialization.ClusterSerializationTests",
  "startTimestamp": 1474195618497,
  "executionTime": 75
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.unit.FuzzinessTests",
   "displayName": "org.elasticsearch.common.unit.FuzzinessTests",
   "methodName": null,
   "className": "org.elasticsearch.common.unit.FuzzinessTests",
   "children": [
    {
     "id": "ID#testSerializationAuto(org.elasticsearch.common.unit.FuzzinessTests)",
     "displayName": "testSerializationAuto(org.elasticsearch.common.unit.FuzzinessTests)",
     "methodName": "testSerializationAuto",
     "className": "org.elasticsearch.common.unit.FuzzinessTests",
     "children": []
    },
    {
     "id": "ID#testNumerics(org.elasticsearch.common.unit.FuzzinessTests)",
     "displayName": "testNumerics(org.elasticsearch.common.unit.FuzzinessTests)",
     "methodName": "testNumerics",
     "className": "org.elasticsearch.common.unit.FuzzinessTests",
     "children": []
    },
    {
     "id": "ID#testParseFromXContent(org.elasticsearch.common.unit.FuzzinessTests)",
     "displayName": "testParseFromXContent(org.elasticsearch.common.unit.FuzzinessTests)",
     "methodName": "testParseFromXContent",
     "className": "org.elasticsearch.common.unit.FuzzinessTests",
     "children": []
    },
    {
     "id": "ID#testAsDistance(org.elasticsearch.common.unit.FuzzinessTests)",
     "displayName": "testAsDistance(org.elasticsearch.common.unit.FuzzinessTests)",
     "methodName": "testAsDistance",
     "className": "org.elasticsearch.common.unit.FuzzinessTests",
     "children": []
    },
    {
     "id": "ID#testAuto(org.elasticsearch.common.unit.FuzzinessTests)",
     "displayName": "testAuto(org.elasticsearch.common.unit.FuzzinessTests)",
     "methodName": "testAuto",
     "className": "org.elasticsearch.common.unit.FuzzinessTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.common.unit.FuzzinessTests)",
     "displayName": "testSerialization(org.elasticsearch.common.unit.FuzzinessTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.common.unit.FuzzinessTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195618583
 }
]

[
 "TEST_STARTED",
 "ID#testSerializationAuto(org.elasticsearch.common.unit.FuzzinessTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerializationAuto(org.elasticsearch.common.unit.FuzzinessTests)",
  "startTimestamp": 1474195618621,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNumerics(org.elasticsearch.common.unit.FuzzinessTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNumerics(org.elasticsearch.common.unit.FuzzinessTests)",
  "startTimestamp": 1474195618623,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParseFromXContent(org.elasticsearch.common.unit.FuzzinessTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseFromXContent(org.elasticsearch.common.unit.FuzzinessTests)",
  "startTimestamp": 1474195618626,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testAsDistance(org.elasticsearch.common.unit.FuzzinessTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAsDistance(org.elasticsearch.common.unit.FuzzinessTests)",
  "startTimestamp": 1474195618630,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testAuto(org.elasticsearch.common.unit.FuzzinessTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAuto(org.elasticsearch.common.unit.FuzzinessTests)",
  "startTimestamp": 1474195618632,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.common.unit.FuzzinessTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.common.unit.FuzzinessTests)",
  "startTimestamp": 1474195618634,
  "executionTime": 1
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.unit.FuzzinessTests",
  "startTimestamp": 1474195618583,
  "executionTime": 55
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.settings.PropertyPlaceholderTests",
   "displayName": "org.elasticsearch.common.settings.PropertyPlaceholderTests",
   "methodName": null,
   "className": "org.elasticsearch.common.settings.PropertyPlaceholderTests",
   "children": [
    {
     "id": "ID#testSimple(org.elasticsearch.common.settings.PropertyPlaceholderTests)",
     "displayName": "testSimple(org.elasticsearch.common.settings.PropertyPlaceholderTests)",
     "methodName": "testSimple",
     "className": "org.elasticsearch.common.settings.PropertyPlaceholderTests",
     "children": []
    },
    {
     "id": "ID#testIgnoredUnresolvedPlaceholder(org.elasticsearch.common.settings.PropertyPlaceholderTests)",
     "displayName": "testIgnoredUnresolvedPlaceholder(org.elasticsearch.common.settings.PropertyPlaceholderTests)",
     "methodName": "testIgnoredUnresolvedPlaceholder",
     "className": "org.elasticsearch.common.settings.PropertyPlaceholderTests",
     "children": []
    },
    {
     "id": "ID#testNotIgnoredUnresolvedPlaceholder(org.elasticsearch.common.settings.PropertyPlaceholderTests)",
     "displayName": "testNotIgnoredUnresolvedPlaceholder(org.elasticsearch.common.settings.PropertyPlaceholderTests)",
     "methodName": "testNotIgnoredUnresolvedPlaceholder",
     "className": "org.elasticsearch.common.settings.PropertyPlaceholderTests",
     "children": []
    },
    {
     "id": "ID#testDefaultValue(org.elasticsearch.common.settings.PropertyPlaceholderTests)",
     "displayName": "testDefaultValue(org.elasticsearch.common.settings.PropertyPlaceholderTests)",
     "methodName": "testDefaultValue",
     "className": "org.elasticsearch.common.settings.PropertyPlaceholderTests",
     "children": []
    },
    {
     "id": "ID#testRecursive(org.elasticsearch.common.settings.PropertyPlaceholderTests)",
     "displayName": "testRecursive(org.elasticsearch.common.settings.PropertyPlaceholderTests)",
     "methodName": "testRecursive",
     "className": "org.elasticsearch.common.settings.PropertyPlaceholderTests",
     "children": []
    },
    {
     "id": "ID#testShouldIgnoreMissing(org.elasticsearch.common.settings.PropertyPlaceholderTests)",
     "displayName": "testShouldIgnoreMissing(org.elasticsearch.common.settings.PropertyPlaceholderTests)",
     "methodName": "testShouldIgnoreMissing",
     "className": "org.elasticsearch.common.settings.PropertyPlaceholderTests",
     "children": []
    },
    {
     "id": "ID#testVariousPrefixSuffix(org.elasticsearch.common.settings.PropertyPlaceholderTests)",
     "displayName": "testVariousPrefixSuffix(org.elasticsearch.common.settings.PropertyPlaceholderTests)",
     "methodName": "testVariousPrefixSuffix",
     "className": "org.elasticsearch.common.settings.PropertyPlaceholderTests",
     "children": []
    },
    {
     "id": "ID#testNestedLongerPrefix(org.elasticsearch.common.settings.PropertyPlaceholderTests)",
     "displayName": "testNestedLongerPrefix(org.elasticsearch.common.settings.PropertyPlaceholderTests)",
     "methodName": "testNestedLongerPrefix",
     "className": "org.elasticsearch.common.settings.PropertyPlaceholderTests",
     "children": []
    },
    {
     "id": "ID#testCircularReference(org.elasticsearch.common.settings.PropertyPlaceholderTests)",
     "displayName": "testCircularReference(org.elasticsearch.common.settings.PropertyPlaceholderTests)",
     "methodName": "testCircularReference",
     "className": "org.elasticsearch.common.settings.PropertyPlaceholderTests",
     "children": []
    },
    {
     "id": "ID#testShouldRemoveMissing(org.elasticsearch.common.settings.PropertyPlaceholderTests)",
     "displayName": "testShouldRemoveMissing(org.elasticsearch.common.settings.PropertyPlaceholderTests)",
     "methodName": "testShouldRemoveMissing",
     "className": "org.elasticsearch.common.settings.PropertyPlaceholderTests",
     "children": []
    },
    {
     "id": "ID#testNestedShorterPrefix(org.elasticsearch.common.settings.PropertyPlaceholderTests)",
     "displayName": "testNestedShorterPrefix(org.elasticsearch.common.settings.PropertyPlaceholderTests)",
     "methodName": "testNestedShorterPrefix",
     "className": "org.elasticsearch.common.settings.PropertyPlaceholderTests",
     "children": []
    },
    {
     "id": "ID#testNestedSameLengthPrefixSuffix(org.elasticsearch.common.settings.PropertyPlaceholderTests)",
     "displayName": "testNestedSameLengthPrefixSuffix(org.elasticsearch.common.settings.PropertyPlaceholderTests)",
     "methodName": "testNestedSameLengthPrefixSuffix",
     "className": "org.elasticsearch.common.settings.PropertyPlaceholderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195618646
 }
]

[
 "TEST_STARTED",
 "ID#testSimple(org.elasticsearch.common.settings.PropertyPlaceholderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimple(org.elasticsearch.common.settings.PropertyPlaceholderTests)",
  "startTimestamp": 1474195618726,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testIgnoredUnresolvedPlaceholder(org.elasticsearch.common.settings.PropertyPlaceholderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIgnoredUnresolvedPlaceholder(org.elasticsearch.common.settings.PropertyPlaceholderTests)",
  "startTimestamp": 1474195618731,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNotIgnoredUnresolvedPlaceholder(org.elasticsearch.common.settings.PropertyPlaceholderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNotIgnoredUnresolvedPlaceholder(org.elasticsearch.common.settings.PropertyPlaceholderTests)",
  "startTimestamp": 1474195618733,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultValue(org.elasticsearch.common.settings.PropertyPlaceholderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultValue(org.elasticsearch.common.settings.PropertyPlaceholderTests)",
  "startTimestamp": 1474195618736,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRecursive(org.elasticsearch.common.settings.PropertyPlaceholderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecursive(org.elasticsearch.common.settings.PropertyPlaceholderTests)",
  "startTimestamp": 1474195618738,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testShouldIgnoreMissing(org.elasticsearch.common.settings.PropertyPlaceholderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testShouldIgnoreMissing(org.elasticsearch.common.settings.PropertyPlaceholderTests)",
  "startTimestamp": 1474195618740,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testVariousPrefixSuffix(org.elasticsearch.common.settings.PropertyPlaceholderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVariousPrefixSuffix(org.elasticsearch.common.settings.PropertyPlaceholderTests)",
  "startTimestamp": 1474195618742,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNestedLongerPrefix(org.elasticsearch.common.settings.PropertyPlaceholderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNestedLongerPrefix(org.elasticsearch.common.settings.PropertyPlaceholderTests)",
  "startTimestamp": 1474195618744,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCircularReference(org.elasticsearch.common.settings.PropertyPlaceholderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCircularReference(org.elasticsearch.common.settings.PropertyPlaceholderTests)",
  "startTimestamp": 1474195618746,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testShouldRemoveMissing(org.elasticsearch.common.settings.PropertyPlaceholderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testShouldRemoveMissing(org.elasticsearch.common.settings.PropertyPlaceholderTests)",
  "startTimestamp": 1474195618748,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testNestedShorterPrefix(org.elasticsearch.common.settings.PropertyPlaceholderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNestedShorterPrefix(org.elasticsearch.common.settings.PropertyPlaceholderTests)",
  "startTimestamp": 1474195618757,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testNestedSameLengthPrefixSuffix(org.elasticsearch.common.settings.PropertyPlaceholderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNestedSameLengthPrefixSuffix(org.elasticsearch.common.settings.PropertyPlaceholderTests)",
  "startTimestamp": 1474195618762,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.settings.PropertyPlaceholderTests",
  "startTimestamp": 1474195618646,
  "executionTime": 120
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.util.concurrent.KeyedLockTests",
   "displayName": "org.elasticsearch.common.util.concurrent.KeyedLockTests",
   "methodName": null,
   "className": "org.elasticsearch.common.util.concurrent.KeyedLockTests",
   "children": [
    {
     "id": "ID#testIfMapEmptyAfterLotsOfAcquireAndReleases(org.elasticsearch.common.util.concurrent.KeyedLockTests)",
     "displayName": "testIfMapEmptyAfterLotsOfAcquireAndReleases(org.elasticsearch.common.util.concurrent.KeyedLockTests)",
     "methodName": "testIfMapEmptyAfterLotsOfAcquireAndReleases",
     "className": "org.elasticsearch.common.util.concurrent.KeyedLockTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195618772
 }
]

[
 "TEST_STARTED",
 "ID#testIfMapEmptyAfterLotsOfAcquireAndReleases(org.elasticsearch.common.util.concurrent.KeyedLockTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIfMapEmptyAfterLotsOfAcquireAndReleases(org.elasticsearch.common.util.concurrent.KeyedLockTests)",
  "startTimestamp": 1474195618807,
  "executionTime": 886
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.util.concurrent.KeyedLockTests",
  "startTimestamp": 1474195618772,
  "executionTime": 924
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests",
   "displayName": "org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests",
   "children": [
    {
     "id": "ID#testIdOrNameMatch(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
     "displayName": "testIdOrNameMatch(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
     "methodName": "testIdOrNameMatch",
     "className": "org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests",
     "children": []
    },
    {
     "id": "ID#testIpBindFilteringNotMatching(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
     "displayName": "testIpBindFilteringNotMatching(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
     "methodName": "testIpBindFilteringNotMatching",
     "className": "org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests",
     "children": []
    },
    {
     "id": "ID#testIdMatch(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
     "displayName": "testIdMatch(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
     "methodName": "testIdMatch",
     "className": "org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests",
     "children": []
    },
    {
     "id": "ID#testIpBindFilteringNotMatchingAnd(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
     "displayName": "testIpBindFilteringNotMatchingAnd(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
     "methodName": "testIpBindFilteringNotMatchingAnd",
     "className": "org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests",
     "children": []
    },
    {
     "id": "ID#testIpBindFilteringNotMatchingOr(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
     "displayName": "testIpBindFilteringNotMatchingOr(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
     "methodName": "testIpBindFilteringNotMatchingOr",
     "className": "org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests",
     "children": []
    },
    {
     "id": "ID#testIpPublishFilteringNotMatchingAnd(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
     "displayName": "testIpPublishFilteringNotMatchingAnd(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
     "methodName": "testIpPublishFilteringNotMatchingAnd",
     "className": "org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests",
     "children": []
    },
    {
     "id": "ID#testIpPublishFilteringNotMatchingOr(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
     "displayName": "testIpPublishFilteringNotMatchingOr(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
     "methodName": "testIpPublishFilteringNotMatchingOr",
     "className": "org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests",
     "children": []
    },
    {
     "id": "ID#testIpPublishFilteringMatchingAnd(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
     "displayName": "testIpPublishFilteringMatchingAnd(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
     "methodName": "testIpPublishFilteringMatchingAnd",
     "className": "org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests",
     "children": []
    },
    {
     "id": "ID#testIpPublishFilteringMatchingOr(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
     "displayName": "testIpPublishFilteringMatchingOr(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
     "methodName": "testIpPublishFilteringMatchingOr",
     "className": "org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests",
     "children": []
    },
    {
     "id": "ID#testTagAndGroupMatch(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
     "displayName": "testTagAndGroupMatch(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
     "methodName": "testTagAndGroupMatch",
     "className": "org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests",
     "children": []
    },
    {
     "id": "ID#testNameMatch(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
     "displayName": "testNameMatch(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
     "methodName": "testNameMatch",
     "className": "org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests",
     "children": []
    },
    {
     "id": "ID#testStarMatch(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
     "displayName": "testStarMatch(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
     "methodName": "testStarMatch",
     "className": "org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests",
     "children": []
    },
    {
     "id": "ID#testIpBindFilteringMatchingOr(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
     "displayName": "testIpBindFilteringMatchingOr(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
     "methodName": "testIpBindFilteringMatchingOr",
     "className": "org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests",
     "children": []
    },
    {
     "id": "ID#testIpBindFilteringMatchingAnd(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
     "displayName": "testIpBindFilteringMatchingAnd(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
     "methodName": "testIpBindFilteringMatchingAnd",
     "className": "org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195619705
 }
]

[
 "TEST_STARTED",
 "ID#testIdOrNameMatch(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIdOrNameMatch(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
  "startTimestamp": 1474195619739,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testIpBindFilteringNotMatching(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIpBindFilteringNotMatching(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
  "startTimestamp": 1474195619742,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testIdMatch(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIdMatch(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
  "startTimestamp": 1474195619749,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testIpBindFilteringNotMatchingAnd(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIpBindFilteringNotMatchingAnd(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
  "startTimestamp": 1474195619753,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIpBindFilteringNotMatchingOr(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIpBindFilteringNotMatchingOr(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
  "startTimestamp": 1474195619755,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIpPublishFilteringNotMatchingAnd(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIpPublishFilteringNotMatchingAnd(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
  "startTimestamp": 1474195619757,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIpPublishFilteringNotMatchingOr(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIpPublishFilteringNotMatchingOr(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
  "startTimestamp": 1474195619759,
  "executionTime": 14
 }
]

[
 "TEST_STARTED",
 "ID#testIpPublishFilteringMatchingAnd(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIpPublishFilteringMatchingAnd(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
  "startTimestamp": 1474195619773,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testIpPublishFilteringMatchingOr(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIpPublishFilteringMatchingOr(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
  "startTimestamp": 1474195619778,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testTagAndGroupMatch(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTagAndGroupMatch(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
  "startTimestamp": 1474195619780,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNameMatch(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNameMatch(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
  "startTimestamp": 1474195619782,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testStarMatch(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStarMatch(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
  "startTimestamp": 1474195619784,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIpBindFilteringMatchingOr(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIpBindFilteringMatchingOr(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
  "startTimestamp": 1474195619786,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIpBindFilteringMatchingAnd(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIpBindFilteringMatchingAnd(org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests)",
  "startTimestamp": 1474195619788,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.node.DiscoveryNodeFiltersTests",
  "startTimestamp": 1474195619705,
  "executionTime": 87
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.OperatorTests",
   "displayName": "org.elasticsearch.index.query.OperatorTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.OperatorTests",
   "children": [
    {
     "id": "ID#testWriteTo(org.elasticsearch.index.query.OperatorTests)",
     "displayName": "testWriteTo(org.elasticsearch.index.query.OperatorTests)",
     "methodName": "testWriteTo",
     "className": "org.elasticsearch.index.query.OperatorTests",
     "children": []
    },
    {
     "id": "ID#testToBooleanClauseOccur(org.elasticsearch.index.query.OperatorTests)",
     "displayName": "testToBooleanClauseOccur(org.elasticsearch.index.query.OperatorTests)",
     "methodName": "testToBooleanClauseOccur",
     "className": "org.elasticsearch.index.query.OperatorTests",
     "children": []
    },
    {
     "id": "ID#testToQueryParserOperator(org.elasticsearch.index.query.OperatorTests)",
     "displayName": "testToQueryParserOperator(org.elasticsearch.index.query.OperatorTests)",
     "methodName": "testToQueryParserOperator",
     "className": "org.elasticsearch.index.query.OperatorTests",
     "children": []
    },
    {
     "id": "ID#testFromString(org.elasticsearch.index.query.OperatorTests)",
     "displayName": "testFromString(org.elasticsearch.index.query.OperatorTests)",
     "methodName": "testFromString",
     "className": "org.elasticsearch.index.query.OperatorTests",
     "children": []
    },
    {
     "id": "ID#testReadFrom(org.elasticsearch.index.query.OperatorTests)",
     "displayName": "testReadFrom(org.elasticsearch.index.query.OperatorTests)",
     "methodName": "testReadFrom",
     "className": "org.elasticsearch.index.query.OperatorTests",
     "children": []
    },
    {
     "id": "ID#testValidOrdinals(org.elasticsearch.index.query.OperatorTests)",
     "displayName": "testValidOrdinals(org.elasticsearch.index.query.OperatorTests)",
     "methodName": "testValidOrdinals",
     "className": "org.elasticsearch.index.query.OperatorTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195619799
 }
]

[
 "TEST_STARTED",
 "ID#testWriteTo(org.elasticsearch.index.query.OperatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWriteTo(org.elasticsearch.index.query.OperatorTests)",
  "startTimestamp": 1474195619812,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testToBooleanClauseOccur(org.elasticsearch.index.query.OperatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToBooleanClauseOccur(org.elasticsearch.index.query.OperatorTests)",
  "startTimestamp": 1474195619815,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryParserOperator(org.elasticsearch.index.query.OperatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryParserOperator(org.elasticsearch.index.query.OperatorTests)",
  "startTimestamp": 1474195619818,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromString(org.elasticsearch.index.query.OperatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromString(org.elasticsearch.index.query.OperatorTests)",
  "startTimestamp": 1474195619820,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testReadFrom(org.elasticsearch.index.query.OperatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReadFrom(org.elasticsearch.index.query.OperatorTests)",
  "startTimestamp": 1474195619822,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testValidOrdinals(org.elasticsearch.index.query.OperatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidOrdinals(org.elasticsearch.index.query.OperatorTests)",
  "startTimestamp": 1474195619824,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.OperatorTests",
  "startTimestamp": 1474195619799,
  "executionTime": 28
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.bucket.IpRangeTests",
   "displayName": "org.elasticsearch.search.aggregations.bucket.IpRangeTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.bucket.IpRangeTests",
   "children": [
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.IpRangeTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.IpRangeTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.aggregations.bucket.IpRangeTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.aggregations.bucket.IpRangeTests)",
     "displayName": "testSerialization(org.elasticsearch.search.aggregations.bucket.IpRangeTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.aggregations.bucket.IpRangeTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.aggregations.bucket.IpRangeTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.aggregations.bucket.IpRangeTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.aggregations.bucket.IpRangeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195619833
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:46:59,852][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{korits4IQGmVAo_N2dqJpA}{local}{local[163]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.IpRangeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.IpRangeTests)",
  "startTimestamp": 1474195619867,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.aggregations.bucket.IpRangeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.aggregations.bucket.IpRangeTests)",
  "startTimestamp": 1474195619874,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.aggregations.bucket.IpRangeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.aggregations.bucket.IpRangeTests)",
  "startTimestamp": 1474195619876,
  "executionTime": 68
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.bucket.IpRangeTests",
  "startTimestamp": 1474195619833,
  "executionTime": 122
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.RoutingTableTests",
   "displayName": "org.elasticsearch.cluster.routing.RoutingTableTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.RoutingTableTests",
   "children": [
    {
     "id": "ID#testShardsWithState(org.elasticsearch.cluster.routing.RoutingTableTests)",
     "displayName": "testShardsWithState(org.elasticsearch.cluster.routing.RoutingTableTests)",
     "methodName": "testShardsWithState",
     "className": "org.elasticsearch.cluster.routing.RoutingTableTests",
     "children": []
    },
    {
     "id": "ID#testAllActiveShardsGrouped(org.elasticsearch.cluster.routing.RoutingTableTests)",
     "displayName": "testAllActiveShardsGrouped(org.elasticsearch.cluster.routing.RoutingTableTests)",
     "methodName": "testAllActiveShardsGrouped",
     "className": "org.elasticsearch.cluster.routing.RoutingTableTests",
     "children": []
    },
    {
     "id": "ID#testHasIndex(org.elasticsearch.cluster.routing.RoutingTableTests)",
     "displayName": "testHasIndex(org.elasticsearch.cluster.routing.RoutingTableTests)",
     "methodName": "testHasIndex",
     "className": "org.elasticsearch.cluster.routing.RoutingTableTests",
     "children": []
    },
    {
     "id": "ID#testIndicesRouting(org.elasticsearch.cluster.routing.RoutingTableTests)",
     "displayName": "testIndicesRouting(org.elasticsearch.cluster.routing.RoutingTableTests)",
     "methodName": "testIndicesRouting",
     "className": "org.elasticsearch.cluster.routing.RoutingTableTests",
     "children": []
    },
    {
     "id": "ID#testRoutingTableBuiltMoreThanOnce(org.elasticsearch.cluster.routing.RoutingTableTests)",
     "displayName": "testRoutingTableBuiltMoreThanOnce(org.elasticsearch.cluster.routing.RoutingTableTests)",
     "methodName": "testRoutingTableBuiltMoreThanOnce",
     "className": "org.elasticsearch.cluster.routing.RoutingTableTests",
     "children": []
    },
    {
     "id": "ID#testValidations(org.elasticsearch.cluster.routing.RoutingTableTests)",
     "displayName": "testValidations(org.elasticsearch.cluster.routing.RoutingTableTests)",
     "methodName": "testValidations",
     "className": "org.elasticsearch.cluster.routing.RoutingTableTests",
     "children": []
    },
    {
     "id": "ID#testAllShards(org.elasticsearch.cluster.routing.RoutingTableTests)",
     "displayName": "testAllShards(org.elasticsearch.cluster.routing.RoutingTableTests)",
     "methodName": "testAllShards",
     "className": "org.elasticsearch.cluster.routing.RoutingTableTests",
     "children": []
    },
    {
     "id": "ID#testAllShardsForMultipleIndices(org.elasticsearch.cluster.routing.RoutingTableTests)",
     "displayName": "testAllShardsForMultipleIndices(org.elasticsearch.cluster.routing.RoutingTableTests)",
     "methodName": "testAllShardsForMultipleIndices",
     "className": "org.elasticsearch.cluster.routing.RoutingTableTests",
     "children": []
    },
    {
     "id": "ID#testActivePrimaryShardsGrouped(org.elasticsearch.cluster.routing.RoutingTableTests)",
     "displayName": "testActivePrimaryShardsGrouped(org.elasticsearch.cluster.routing.RoutingTableTests)",
     "methodName": "testActivePrimaryShardsGrouped",
     "className": "org.elasticsearch.cluster.routing.RoutingTableTests",
     "children": []
    },
    {
     "id": "ID#testIndex(org.elasticsearch.cluster.routing.RoutingTableTests)",
     "displayName": "testIndex(org.elasticsearch.cluster.routing.RoutingTableTests)",
     "methodName": "testIndex",
     "className": "org.elasticsearch.cluster.routing.RoutingTableTests",
     "children": []
    },
    {
     "id": "ID#testAllAssignedShardsGrouped(org.elasticsearch.cluster.routing.RoutingTableTests)",
     "displayName": "testAllAssignedShardsGrouped(org.elasticsearch.cluster.routing.RoutingTableTests)",
     "methodName": "testAllAssignedShardsGrouped",
     "className": "org.elasticsearch.cluster.routing.RoutingTableTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195619964
 }
]

[
 "TEST_STARTED",
 "ID#testShardsWithState(org.elasticsearch.cluster.routing.RoutingTableTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T02:47:00,000][INFO ][org.elasticsearch.cluster.routing] [node_s_0] Setup test with 3 shards and 1 replicas.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T02:47:00,003][INFO ][org.elasticsearch.cluster.routing] [node_s_0] adding 2 nodes and performing rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T02:47:00,006][INFO ][org.elasticsearch.cluster.routing] [node_s_0] start primary shards for index test1%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T02:47:00,010][INFO ][org.elasticsearch.cluster.routing] [node_s_0] start primary shards for index test2%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T02:47:00,013][INFO ][org.elasticsearch.cluster.routing] [node_s_0] start primary shards for index test1%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T02:47:00,013][INFO ][org.elasticsearch.cluster.routing] [node_s_0] start primary shards for index test2%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T02:47:00,013][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test2][1], [test2][2], [test2][0]] ...]).%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testShardsWithState(org.elasticsearch.cluster.routing.RoutingTableTests)",
  "startTimestamp": 1474195619992,
  "executionTime": 22
 }
]

[
 "TEST_STARTED",
 "ID#testAllActiveShardsGrouped(org.elasticsearch.cluster.routing.RoutingTableTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T02:47:00,024][INFO ][org.elasticsearch.cluster.routing] [node_s_0] Setup test with 2 shards and 4 replicas.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T02:47:00,028][INFO ][org.elasticsearch.cluster.routing] [node_s_0] adding 5 nodes and performing rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T02:47:00,029][INFO ][org.elasticsearch.cluster.routing] [node_s_0] start primary shards for index test1%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T02:47:00,030][INFO ][org.elasticsearch.cluster.routing] [node_s_0] start primary shards for index test2%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAllActiveShardsGrouped(org.elasticsearch.cluster.routing.RoutingTableTests)",
  "startTimestamp": 1474195620014,
  "executionTime": 17
 }
]

[
 "TEST_STARTED",
 "ID#testHasIndex(org.elasticsearch.cluster.routing.RoutingTableTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T02:47:00,037][INFO ][org.elasticsearch.cluster.routing] [node_s_0] Setup test with 3 shards and 3 replicas.%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHasIndex(org.elasticsearch.cluster.routing.RoutingTableTests)",
  "startTimestamp": 1474195620031,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testIndicesRouting(org.elasticsearch.cluster.routing.RoutingTableTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T02:47:00,043][INFO ][org.elasticsearch.cluster.routing] [node_s_0] Setup test with 1 shards and 2 replicas.%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndicesRouting(org.elasticsearch.cluster.routing.RoutingTableTests)",
  "startTimestamp": 1474195620038,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testRoutingTableBuiltMoreThanOnce(org.elasticsearch.cluster.routing.RoutingTableTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T02:47:00,050][INFO ][org.elasticsearch.cluster.routing] [node_s_0] Setup test with 3 shards and 1 replicas.%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRoutingTableBuiltMoreThanOnce(org.elasticsearch.cluster.routing.RoutingTableTests)",
  "startTimestamp": 1474195620044,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testValidations(org.elasticsearch.cluster.routing.RoutingTableTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T02:47:00,059][INFO ][org.elasticsearch.cluster.routing] [node_s_0] Setup test with 4 shards and 1 replicas.%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidations(org.elasticsearch.cluster.routing.RoutingTableTests)",
  "startTimestamp": 1474195620051,
  "executionTime": 13
 }
]

[
 "TEST_STARTED",
 "ID#testAllShards(org.elasticsearch.cluster.routing.RoutingTableTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T02:47:00,070][INFO ][org.elasticsearch.cluster.routing] [node_s_0] Setup test with 2 shards and 1 replicas.%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAllShards(org.elasticsearch.cluster.routing.RoutingTableTests)",
  "startTimestamp": 1474195620064,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testAllShardsForMultipleIndices(org.elasticsearch.cluster.routing.RoutingTableTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T02:47:00,077][INFO ][org.elasticsearch.cluster.routing] [node_s_0] Setup test with 4 shards and 3 replicas.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T02:47:00,080][INFO ][org.elasticsearch.cluster.routing] [node_s_0] adding 4 nodes and performing rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T02:47:00,082][INFO ][org.elasticsearch.cluster.routing] [node_s_0] start primary shards for index test1%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T02:47:00,083][INFO ][org.elasticsearch.cluster.routing] [node_s_0] start primary shards for index test2%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAllShardsForMultipleIndices(org.elasticsearch.cluster.routing.RoutingTableTests)",
  "startTimestamp": 1474195620071,
  "executionTime": 14
 }
]

[
 "TEST_STARTED",
 "ID#testActivePrimaryShardsGrouped(org.elasticsearch.cluster.routing.RoutingTableTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T02:47:00,091][INFO ][org.elasticsearch.cluster.routing] [node_s_0] Setup test with 4 shards and 4 replicas.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T02:47:00,091][INFO ][org.elasticsearch.cluster.routing] [node_s_0] adding 5 nodes and performing rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T02:47:00,095][INFO ][org.elasticsearch.cluster.routing] [node_s_0] start primary shards for index test1%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T02:47:00,101][INFO ][org.elasticsearch.cluster.routing] [node_s_0] start primary shards for index test2%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testActivePrimaryShardsGrouped(org.elasticsearch.cluster.routing.RoutingTableTests)",
  "startTimestamp": 1474195620085,
  "executionTime": 19
 }
]

[
 "TEST_STARTED",
 "ID#testIndex(org.elasticsearch.cluster.routing.RoutingTableTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T02:47:00,110][INFO ][org.elasticsearch.cluster.routing] [node_s_0] Setup test with 5 shards and 2 replicas.%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndex(org.elasticsearch.cluster.routing.RoutingTableTests)",
  "startTimestamp": 1474195620104,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testAllAssignedShardsGrouped(org.elasticsearch.cluster.routing.RoutingTableTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T02:47:00,117][INFO ][org.elasticsearch.cluster.routing] [node_s_0] Setup test with 1 shards and 2 replicas.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T02:47:00,117][INFO ][org.elasticsearch.cluster.routing] [node_s_0] adding 3 nodes and performing rerouting%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAllAssignedShardsGrouped(org.elasticsearch.cluster.routing.RoutingTableTests)",
  "startTimestamp": 1474195620111,
  "executionTime": 7
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.RoutingTableTests",
  "startTimestamp": 1474195619964,
  "executionTime": 156
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.allocation.DecisionsImpactOnClusterHealthTests",
   "displayName": "org.elasticsearch.cluster.routing.allocation.DecisionsImpactOnClusterHealthTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.allocation.DecisionsImpactOnClusterHealthTests",
   "children": [
    {
     "id": "ID#testPrimaryShardNoDecisionOnIndexCreation(org.elasticsearch.cluster.routing.allocation.DecisionsImpactOnClusterHealthTests)",
     "displayName": "testPrimaryShardNoDecisionOnIndexCreation(org.elasticsearch.cluster.routing.allocation.DecisionsImpactOnClusterHealthTests)",
     "methodName": "testPrimaryShardNoDecisionOnIndexCreation",
     "className": "org.elasticsearch.cluster.routing.allocation.DecisionsImpactOnClusterHealthTests",
     "children": []
    },
    {
     "id": "ID#testPrimaryShardYesDecisionOnIndexCreation(org.elasticsearch.cluster.routing.allocation.DecisionsImpactOnClusterHealthTests)",
     "displayName": "testPrimaryShardYesDecisionOnIndexCreation(org.elasticsearch.cluster.routing.allocation.DecisionsImpactOnClusterHealthTests)",
     "methodName": "testPrimaryShardYesDecisionOnIndexCreation",
     "className": "org.elasticsearch.cluster.routing.allocation.DecisionsImpactOnClusterHealthTests",
     "children": []
    },
    {
     "id": "ID#testPrimaryShardThrottleDecisionOnIndexCreation(org.elasticsearch.cluster.routing.allocation.DecisionsImpactOnClusterHealthTests)",
     "displayName": "testPrimaryShardThrottleDecisionOnIndexCreation(org.elasticsearch.cluster.routing.allocation.DecisionsImpactOnClusterHealthTests)",
     "methodName": "testPrimaryShardThrottleDecisionOnIndexCreation",
     "className": "org.elasticsearch.cluster.routing.allocation.DecisionsImpactOnClusterHealthTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195620129
 }
]

[
 "TEST_STARTED",
 "ID#testPrimaryShardNoDecisionOnIndexCreation(org.elasticsearch.cluster.routing.allocation.DecisionsImpactOnClusterHealthTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:47:00,156][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Building initial routing table%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:47:00,166][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> adding nodes%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:47:00,166][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> do the reroute%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:47:00,166][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [RED] (reason: [reroute]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:47:00,166][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> assert cluster health%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPrimaryShardNoDecisionOnIndexCreation(org.elasticsearch.cluster.routing.allocation.DecisionsImpactOnClusterHealthTests)",
  "startTimestamp": 1474195620150,
  "executionTime": 17
 }
]

[
 "TEST_STARTED",
 "ID#testPrimaryShardYesDecisionOnIndexCreation(org.elasticsearch.cluster.routing.allocation.DecisionsImpactOnClusterHealthTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:47:00,172][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Building initial routing table%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:47:00,173][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> adding nodes%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:47:00,173][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> do the reroute%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:47:00,173][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> assert cluster health%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPrimaryShardYesDecisionOnIndexCreation(org.elasticsearch.cluster.routing.allocation.DecisionsImpactOnClusterHealthTests)",
  "startTimestamp": 1474195620167,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testPrimaryShardThrottleDecisionOnIndexCreation(org.elasticsearch.cluster.routing.allocation.DecisionsImpactOnClusterHealthTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:47:00,180][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Building initial routing table%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:47:00,180][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> adding nodes%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:47:00,180][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> do the reroute%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:47:00,181][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> assert cluster health%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPrimaryShardThrottleDecisionOnIndexCreation(org.elasticsearch.cluster.routing.allocation.DecisionsImpactOnClusterHealthTests)",
  "startTimestamp": 1474195620174,
  "executionTime": 7
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.allocation.DecisionsImpactOnClusterHealthTests",
  "startTimestamp": 1474195620129,
  "executionTime": 64
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.SpanWithinQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.SpanWithinQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.SpanWithinQueryBuilderTests",
   "children": [
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.SpanWithinQueryBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.SpanWithinQueryBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.SpanWithinQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.SpanWithinQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.SpanWithinQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.SpanWithinQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.SpanWithinQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.SpanWithinQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.SpanWithinQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIllegalArguments(org.elasticsearch.index.query.SpanWithinQueryBuilderTests)",
     "displayName": "testIllegalArguments(org.elasticsearch.index.query.SpanWithinQueryBuilderTests)",
     "methodName": "testIllegalArguments",
     "className": "org.elasticsearch.index.query.SpanWithinQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.SpanWithinQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.SpanWithinQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.SpanWithinQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.SpanWithinQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.SpanWithinQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.SpanWithinQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.SpanWithinQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.SpanWithinQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.SpanWithinQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.SpanWithinQueryBuilderTests)",
     "displayName": "testQueryWrappedInArray(org.elasticsearch.index.query.SpanWithinQueryBuilderTests)",
     "methodName": "testQueryWrappedInArray",
     "className": "org.elasticsearch.index.query.SpanWithinQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.SpanWithinQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.SpanWithinQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.SpanWithinQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMustRewrite(org.elasticsearch.index.query.SpanWithinQueryBuilderTests)",
     "displayName": "testMustRewrite(org.elasticsearch.index.query.SpanWithinQueryBuilderTests)",
     "methodName": "testMustRewrite",
     "className": "org.elasticsearch.index.query.SpanWithinQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195620200
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.SpanWithinQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:47:00,237][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{GRRybXzwQbSzkZ72iUuPpw}{local}{local[188]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:47:00,248][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:47:00,248][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:47:00,271][WARN ][org.elasticsearch.deprecation.index.mapper]  [mm] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:47:00,272][WARN ][org.elasticsearch.deprecation.index.mapper]  [mm] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:47:00,272][WARN ][org.elasticsearch.deprecation.index.mapper]  [mm] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:47:00,275][WARN ][org.elasticsearch.deprecation.index.mapper]  [mm] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:47:00,275][WARN ][org.elasticsearch.deprecation.index.mapper]  [mm] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:47:00,276][WARN ][org.elasticsearch.deprecation.index.mapper]  [mm] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:47:00,287][WARN ][org.elasticsearch.deprecation.index.mapper]  [mm] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:47:00,288][WARN ][org.elasticsearch.deprecation.index.mapper]  [mm] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:47:00,288][WARN ][org.elasticsearch.deprecation.index.mapper]  [mm] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:47:00,290][WARN ][org.elasticsearch.deprecation.index.mapper]  [mm] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:47:00,290][WARN ][org.elasticsearch.deprecation.index.mapper]  [mm] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:47:00,290][WARN ][org.elasticsearch.deprecation.index.mapper]  [mm] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:47:00,293][WARN ][org.elasticsearch.deprecation.index.mapper]  [mm] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:47:00,293][WARN ][org.elasticsearch.deprecation.index.mapper]  [mm] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:47:00,293][WARN ][org.elasticsearch.deprecation.index.mapper]  [mm] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:47:00,297][WARN ][org.elasticsearch.deprecation.index.mapper]  [mm] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:47:00,297][WARN ][org.elasticsearch.deprecation.index.mapper]  [mm] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:47:00,297][WARN ][org.elasticsearch.deprecation.index.mapper]  [mm] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.SpanWithinQueryBuilderTests)",
  "startTimestamp": 1474195620229,
  "executionTime": 76
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.SpanWithinQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.SpanWithinQueryBuilderTests)",
  "startTimestamp": 1474195620305,
  "executionTime": 24
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.SpanWithinQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.SpanWithinQueryBuilderTests)",
  "startTimestamp": 1474195620329,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalArguments(org.elasticsearch.index.query.SpanWithinQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalArguments(org.elasticsearch.index.query.SpanWithinQueryBuilderTests)",
  "startTimestamp": 1474195620340,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.SpanWithinQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.SpanWithinQueryBuilderTests)",
  "startTimestamp": 1474195620347,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.SpanWithinQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.SpanWithinQueryBuilderTests)",
  "startTimestamp": 1474195620352,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.SpanWithinQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.SpanWithinQueryBuilderTests)",
  "startTimestamp": 1474195620360,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testQueryWrappedInArray(org.elasticsearch.index.query.SpanWithinQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.SpanWithinQueryBuilderTests)",
  "startTimestamp": 1474195620364,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.SpanWithinQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.SpanWithinQueryBuilderTests)",
  "startTimestamp": 1474195620370,
  "executionTime": 63
 }
]

[
 "TEST_STARTED",
 "ID#testMustRewrite(org.elasticsearch.index.query.SpanWithinQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMustRewrite(org.elasticsearch.index.query.SpanWithinQueryBuilderTests)",
  "startTimestamp": 1474195620433,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.SpanWithinQueryBuilderTests",
  "startTimestamp": 1474195620200,
  "executionTime": 277
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.SpanNotQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.SpanNotQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.SpanNotQueryBuilderTests",
   "children": [
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.SpanNotQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIllegalArgument(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
     "displayName": "testIllegalArgument(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
     "methodName": "testIllegalArgument",
     "className": "org.elasticsearch.index.query.SpanNotQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
     "displayName": "testQueryWrappedInArray(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
     "methodName": "testQueryWrappedInArray",
     "className": "org.elasticsearch.index.query.SpanNotQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParseDist(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
     "displayName": "testParseDist(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
     "methodName": "testParseDist",
     "className": "org.elasticsearch.index.query.SpanNotQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParserExceptions(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
     "displayName": "testParserExceptions(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
     "methodName": "testParserExceptions",
     "className": "org.elasticsearch.index.query.SpanNotQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.SpanNotQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMustRewrite(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
     "displayName": "testMustRewrite(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
     "methodName": "testMustRewrite",
     "className": "org.elasticsearch.index.query.SpanNotQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testPrePost(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
     "displayName": "testPrePost(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
     "methodName": "testPrePost",
     "className": "org.elasticsearch.index.query.SpanNotQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.SpanNotQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.SpanNotQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.SpanNotQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.SpanNotQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.SpanNotQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testDist(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
     "displayName": "testDist(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
     "methodName": "testDist",
     "className": "org.elasticsearch.index.query.SpanNotQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195620485
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.SpanNotQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:00,552][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{20P_sE58TpqAzSnVaIe9gQ}{local}{local[189]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:00,563][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:00,574][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:00,732][WARN ][org.elasticsearch.deprecation.index.mapper]  [cBfF] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:00,735][WARN ][org.elasticsearch.deprecation.index.mapper]  [cBfF] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:00,736][WARN ][org.elasticsearch.deprecation.index.mapper]  [cBfF] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:00,749][WARN ][org.elasticsearch.deprecation.index.mapper]  [cBfF] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:00,749][WARN ][org.elasticsearch.deprecation.index.mapper]  [cBfF] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:00,751][WARN ][org.elasticsearch.deprecation.index.mapper]  [cBfF] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:00,760][WARN ][org.elasticsearch.deprecation.index.mapper]  [cBfF] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:00,760][WARN ][org.elasticsearch.deprecation.index.mapper]  [cBfF] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:00,760][WARN ][org.elasticsearch.deprecation.index.mapper]  [cBfF] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:00,764][WARN ][org.elasticsearch.deprecation.index.mapper]  [cBfF] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:00,764][WARN ][org.elasticsearch.deprecation.index.mapper]  [cBfF] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:00,765][WARN ][org.elasticsearch.deprecation.index.mapper]  [cBfF] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:00,768][WARN ][org.elasticsearch.deprecation.index.mapper]  [cBfF] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:00,768][WARN ][org.elasticsearch.deprecation.index.mapper]  [cBfF] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:00,768][WARN ][org.elasticsearch.deprecation.index.mapper]  [cBfF] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:00,773][WARN ][org.elasticsearch.deprecation.index.mapper]  [cBfF] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:00,773][WARN ][org.elasticsearch.deprecation.index.mapper]  [cBfF] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:00,773][WARN ][org.elasticsearch.deprecation.index.mapper]  [cBfF] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:00,777][WARN ][org.elasticsearch.deprecation.index.mapper]  [cBfF] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:00,778][WARN ][org.elasticsearch.deprecation.index.mapper]  [cBfF] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:00,778][WARN ][org.elasticsearch.deprecation.index.mapper]  [cBfF] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:00,782][WARN ][org.elasticsearch.deprecation.index.mapper]  [cBfF] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:00,782][WARN ][org.elasticsearch.deprecation.index.mapper]  [cBfF] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:00,782][WARN ][org.elasticsearch.deprecation.index.mapper]  [cBfF] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:00,797][WARN ][org.elasticsearch.deprecation.index.mapper]  [cBfF] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:00,797][WARN ][org.elasticsearch.deprecation.index.mapper]  [cBfF] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:00,797][WARN ][org.elasticsearch.deprecation.index.mapper]  [cBfF] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
  "startTimestamp": 1474195620537,
  "executionTime": 267
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalArgument(org.elasticsearch.index.query.SpanNotQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalArgument(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
  "startTimestamp": 1474195620804,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testQueryWrappedInArray(org.elasticsearch.index.query.SpanNotQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
  "startTimestamp": 1474195620807,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testParseDist(org.elasticsearch.index.query.SpanNotQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseDist(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
  "startTimestamp": 1474195620810,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testParserExceptions(org.elasticsearch.index.query.SpanNotQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParserExceptions(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
  "startTimestamp": 1474195620813,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.SpanNotQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
  "startTimestamp": 1474195620817,
  "executionTime": 43
 }
]

[
 "TEST_STARTED",
 "ID#testMustRewrite(org.elasticsearch.index.query.SpanNotQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMustRewrite(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
  "startTimestamp": 1474195620861,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testPrePost(org.elasticsearch.index.query.SpanNotQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPrePost(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
  "startTimestamp": 1474195620869,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.SpanNotQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
  "startTimestamp": 1474195620873,
  "executionTime": 20
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.SpanNotQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
  "startTimestamp": 1474195620893,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.SpanNotQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
  "startTimestamp": 1474195620896,
  "executionTime": 56
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.SpanNotQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
  "startTimestamp": 1474195620952,
  "executionTime": 72
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.SpanNotQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
  "startTimestamp": 1474195621025,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testDist(org.elasticsearch.index.query.SpanNotQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDist(org.elasticsearch.index.query.SpanNotQueryBuilderTests)",
  "startTimestamp": 1474195621027,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.SpanNotQueryBuilderTests",
  "startTimestamp": 1474195620485,
  "executionTime": 560
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.bucket.nested.ReverseNestedTests",
   "displayName": "org.elasticsearch.search.aggregations.bucket.nested.ReverseNestedTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.bucket.nested.ReverseNestedTests",
   "children": [
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.nested.ReverseNestedTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.nested.ReverseNestedTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.aggregations.bucket.nested.ReverseNestedTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.aggregations.bucket.nested.ReverseNestedTests)",
     "displayName": "testSerialization(org.elasticsearch.search.aggregations.bucket.nested.ReverseNestedTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.aggregations.bucket.nested.ReverseNestedTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.aggregations.bucket.nested.ReverseNestedTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.aggregations.bucket.nested.ReverseNestedTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.aggregations.bucket.nested.ReverseNestedTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195621053
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:01,262][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{4ST4XqJtSTylA7FsWQknfw}{local}{local[190]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.nested.ReverseNestedTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.nested.ReverseNestedTests)",
  "startTimestamp": 1474195621298,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.aggregations.bucket.nested.ReverseNestedTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.aggregations.bucket.nested.ReverseNestedTests)",
  "startTimestamp": 1474195621300,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.aggregations.bucket.nested.ReverseNestedTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.aggregations.bucket.nested.ReverseNestedTests)",
  "startTimestamp": 1474195621303,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.bucket.nested.ReverseNestedTests",
  "startTimestamp": 1474195621053,
  "executionTime": 262
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.geo.ShapeBuilderTests",
   "displayName": "org.elasticsearch.common.geo.ShapeBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.common.geo.ShapeBuilderTests",
   "children": [
    {
     "id": "ID#testPolygonWrapping(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "displayName": "testPolygonWrapping(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "methodName": "testPolygonWrapping",
     "className": "org.elasticsearch.common.geo.ShapeBuilderTests",
     "children": []
    },
    {
     "id": "ID#testNewPolygon(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "displayName": "testNewPolygon(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "methodName": "testNewPolygon",
     "className": "org.elasticsearch.common.geo.ShapeBuilderTests",
     "children": []
    },
    {
     "id": "ID#testShapeWithEdgeAlongDateline(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "displayName": "testShapeWithEdgeAlongDateline(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "methodName": "testShapeWithEdgeAlongDateline",
     "className": "org.elasticsearch.common.geo.ShapeBuilderTests",
     "children": []
    },
    {
     "id": "ID#testNewPoint(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "displayName": "testNewPoint(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "methodName": "testNewPoint",
     "className": "org.elasticsearch.common.geo.ShapeBuilderTests",
     "children": []
    },
    {
     "id": "ID#testBoundaryShape(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "displayName": "testBoundaryShape(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "methodName": "testBoundaryShape",
     "className": "org.elasticsearch.common.geo.ShapeBuilderTests",
     "children": []
    },
    {
     "id": "ID#testInvalidShapeWithConsecutiveDuplicatePoints(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "displayName": "testInvalidShapeWithConsecutiveDuplicatePoints(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "methodName": "testInvalidShapeWithConsecutiveDuplicatePoints",
     "className": "org.elasticsearch.common.geo.ShapeBuilderTests",
     "children": []
    },
    {
     "id": "ID#testLineStringBuilder(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "displayName": "testLineStringBuilder(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "methodName": "testLineStringBuilder",
     "className": "org.elasticsearch.common.geo.ShapeBuilderTests",
     "children": []
    },
    {
     "id": "ID#testNewRectangle(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "displayName": "testNewRectangle(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "methodName": "testNewRectangle",
     "className": "org.elasticsearch.common.geo.ShapeBuilderTests",
     "children": []
    },
    {
     "id": "ID#testShapeWithTangentialHole(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "displayName": "testShapeWithTangentialHole(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "methodName": "testShapeWithTangentialHole",
     "className": "org.elasticsearch.common.geo.ShapeBuilderTests",
     "children": []
    },
    {
     "id": "ID#testShapeWithBoundaryHoles(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "displayName": "testShapeWithBoundaryHoles(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "methodName": "testShapeWithBoundaryHoles",
     "className": "org.elasticsearch.common.geo.ShapeBuilderTests",
     "children": []
    },
    {
     "id": "ID#testShapeWithPointOnDateline(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "displayName": "testShapeWithPointOnDateline(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "methodName": "testShapeWithPointOnDateline",
     "className": "org.elasticsearch.common.geo.ShapeBuilderTests",
     "children": []
    },
    {
     "id": "ID#testDateline(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "displayName": "testDateline(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "methodName": "testDateline",
     "className": "org.elasticsearch.common.geo.ShapeBuilderTests",
     "children": []
    },
    {
     "id": "ID#testShapeWithAlternateOrientation(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "displayName": "testShapeWithAlternateOrientation(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "methodName": "testShapeWithAlternateOrientation",
     "className": "org.elasticsearch.common.geo.ShapeBuilderTests",
     "children": []
    },
    {
     "id": "ID#testDatelineOGC(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "displayName": "testDatelineOGC(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "methodName": "testDatelineOGC",
     "className": "org.elasticsearch.common.geo.ShapeBuilderTests",
     "children": []
    },
    {
     "id": "ID#testNewPolygon_coordinate(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "displayName": "testNewPolygon_coordinate(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "methodName": "testNewPolygon_coordinate",
     "className": "org.elasticsearch.common.geo.ShapeBuilderTests",
     "children": []
    },
    {
     "id": "ID#testLineStringWrapping(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "displayName": "testLineStringWrapping(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "methodName": "testLineStringWrapping",
     "className": "org.elasticsearch.common.geo.ShapeBuilderTests",
     "children": []
    },
    {
     "id": "ID#testShapeWithInvalidTangentialHole(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "displayName": "testShapeWithInvalidTangentialHole(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "methodName": "testShapeWithInvalidTangentialHole",
     "className": "org.elasticsearch.common.geo.ShapeBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMultiLineString(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "displayName": "testMultiLineString(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "methodName": "testMultiLineString",
     "className": "org.elasticsearch.common.geo.ShapeBuilderTests",
     "children": []
    },
    {
     "id": "ID#testBoundaryShapeWithTangentialHole(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "displayName": "testBoundaryShapeWithTangentialHole(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "methodName": "testBoundaryShapeWithTangentialHole",
     "className": "org.elasticsearch.common.geo.ShapeBuilderTests",
     "children": []
    },
    {
     "id": "ID#testGeoCircle(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "displayName": "testGeoCircle(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "methodName": "testGeoCircle",
     "className": "org.elasticsearch.common.geo.ShapeBuilderTests",
     "children": []
    },
    {
     "id": "ID#testShapeWithHoleAtEdgeEndPoints(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "displayName": "testShapeWithHoleAtEdgeEndPoints(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "methodName": "testShapeWithHoleAtEdgeEndPoints",
     "className": "org.elasticsearch.common.geo.ShapeBuilderTests",
     "children": []
    },
    {
     "id": "ID#testComplexShapeWithHole(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "displayName": "testComplexShapeWithHole(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "methodName": "testComplexShapeWithHole",
     "className": "org.elasticsearch.common.geo.ShapeBuilderTests",
     "children": []
    },
    {
     "id": "ID#testPolygonSelfIntersection(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "displayName": "testPolygonSelfIntersection(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "methodName": "testPolygonSelfIntersection",
     "className": "org.elasticsearch.common.geo.ShapeBuilderTests",
     "children": []
    },
    {
     "id": "ID#testNewPolygon_coordinates(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "displayName": "testNewPolygon_coordinates(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "methodName": "testNewPolygon_coordinates",
     "className": "org.elasticsearch.common.geo.ShapeBuilderTests",
     "children": []
    },
    {
     "id": "ID#testBoundaryShapeWithInvalidTangentialHole(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "displayName": "testBoundaryShapeWithInvalidTangentialHole(org.elasticsearch.common.geo.ShapeBuilderTests)",
     "methodName": "testBoundaryShapeWithInvalidTangentialHole",
     "className": "org.elasticsearch.common.geo.ShapeBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195621324
 }
]

[
 "TEST_STARTED",
 "ID#testPolygonWrapping(org.elasticsearch.common.geo.ShapeBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPolygonWrapping(org.elasticsearch.common.geo.ShapeBuilderTests)",
  "startTimestamp": 1474195621419,
  "executionTime": 28
 }
]

[
 "TEST_STARTED",
 "ID#testNewPolygon(org.elasticsearch.common.geo.ShapeBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNewPolygon(org.elasticsearch.common.geo.ShapeBuilderTests)",
  "startTimestamp": 1474195621447,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testShapeWithEdgeAlongDateline(org.elasticsearch.common.geo.ShapeBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testShapeWithEdgeAlongDateline(org.elasticsearch.common.geo.ShapeBuilderTests)",
  "startTimestamp": 1474195621450,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testNewPoint(org.elasticsearch.common.geo.ShapeBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNewPoint(org.elasticsearch.common.geo.ShapeBuilderTests)",
  "startTimestamp": 1474195621453,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testBoundaryShape(org.elasticsearch.common.geo.ShapeBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBoundaryShape(org.elasticsearch.common.geo.ShapeBuilderTests)",
  "startTimestamp": 1474195621456,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidShapeWithConsecutiveDuplicatePoints(org.elasticsearch.common.geo.ShapeBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidShapeWithConsecutiveDuplicatePoints(org.elasticsearch.common.geo.ShapeBuilderTests)",
  "startTimestamp": 1474195621458,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testLineStringBuilder(org.elasticsearch.common.geo.ShapeBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLineStringBuilder(org.elasticsearch.common.geo.ShapeBuilderTests)",
  "startTimestamp": 1474195621460,
  "executionTime": 179
 }
]

[
 "TEST_STARTED",
 "ID#testNewRectangle(org.elasticsearch.common.geo.ShapeBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNewRectangle(org.elasticsearch.common.geo.ShapeBuilderTests)",
  "startTimestamp": 1474195621639,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testShapeWithTangentialHole(org.elasticsearch.common.geo.ShapeBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testShapeWithTangentialHole(org.elasticsearch.common.geo.ShapeBuilderTests)",
  "startTimestamp": 1474195621645,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testShapeWithBoundaryHoles(org.elasticsearch.common.geo.ShapeBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testShapeWithBoundaryHoles(org.elasticsearch.common.geo.ShapeBuilderTests)",
  "startTimestamp": 1474195621652,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testShapeWithPointOnDateline(org.elasticsearch.common.geo.ShapeBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testShapeWithPointOnDateline(org.elasticsearch.common.geo.ShapeBuilderTests)",
  "startTimestamp": 1474195621656,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testDateline(org.elasticsearch.common.geo.ShapeBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDateline(org.elasticsearch.common.geo.ShapeBuilderTests)",
  "startTimestamp": 1474195621659,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testShapeWithAlternateOrientation(org.elasticsearch.common.geo.ShapeBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testShapeWithAlternateOrientation(org.elasticsearch.common.geo.ShapeBuilderTests)",
  "startTimestamp": 1474195621667,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testDatelineOGC(org.elasticsearch.common.geo.ShapeBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDatelineOGC(org.elasticsearch.common.geo.ShapeBuilderTests)",
  "startTimestamp": 1474195621670,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testNewPolygon_coordinate(org.elasticsearch.common.geo.ShapeBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNewPolygon_coordinate(org.elasticsearch.common.geo.ShapeBuilderTests)",
  "startTimestamp": 1474195621673,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testLineStringWrapping(org.elasticsearch.common.geo.ShapeBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLineStringWrapping(org.elasticsearch.common.geo.ShapeBuilderTests)",
  "startTimestamp": 1474195621675,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testShapeWithInvalidTangentialHole(org.elasticsearch.common.geo.ShapeBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testShapeWithInvalidTangentialHole(org.elasticsearch.common.geo.ShapeBuilderTests)",
  "startTimestamp": 1474195621684,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testMultiLineString(org.elasticsearch.common.geo.ShapeBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultiLineString(org.elasticsearch.common.geo.ShapeBuilderTests)",
  "startTimestamp": 1474195621686,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testBoundaryShapeWithTangentialHole(org.elasticsearch.common.geo.ShapeBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBoundaryShapeWithTangentialHole(org.elasticsearch.common.geo.ShapeBuilderTests)",
  "startTimestamp": 1474195621690,
  "executionTime": 14
 }
]

[
 "TEST_STARTED",
 "ID#testGeoCircle(org.elasticsearch.common.geo.ShapeBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGeoCircle(org.elasticsearch.common.geo.ShapeBuilderTests)",
  "startTimestamp": 1474195621704,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testShapeWithHoleAtEdgeEndPoints(org.elasticsearch.common.geo.ShapeBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testShapeWithHoleAtEdgeEndPoints(org.elasticsearch.common.geo.ShapeBuilderTests)",
  "startTimestamp": 1474195621713,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testComplexShapeWithHole(org.elasticsearch.common.geo.ShapeBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testComplexShapeWithHole(org.elasticsearch.common.geo.ShapeBuilderTests)",
  "startTimestamp": 1474195621716,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testPolygonSelfIntersection(org.elasticsearch.common.geo.ShapeBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPolygonSelfIntersection(org.elasticsearch.common.geo.ShapeBuilderTests)",
  "startTimestamp": 1474195621720,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testNewPolygon_coordinates(org.elasticsearch.common.geo.ShapeBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNewPolygon_coordinates(org.elasticsearch.common.geo.ShapeBuilderTests)",
  "startTimestamp": 1474195621731,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testBoundaryShapeWithInvalidTangentialHole(org.elasticsearch.common.geo.ShapeBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBoundaryShapeWithInvalidTangentialHole(org.elasticsearch.common.geo.ShapeBuilderTests)",
  "startTimestamp": 1474195621733,
  "executionTime": 4
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.geo.ShapeBuilderTests",
  "startTimestamp": 1474195621324,
  "executionTime": 416
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.ingest.SimulateDocumentSimpleResultTests",
   "displayName": "org.elasticsearch.action.ingest.SimulateDocumentSimpleResultTests",
   "methodName": null,
   "className": "org.elasticsearch.action.ingest.SimulateDocumentSimpleResultTests",
   "children": [
    {
     "id": "ID#testSerialization(org.elasticsearch.action.ingest.SimulateDocumentSimpleResultTests)",
     "displayName": "testSerialization(org.elasticsearch.action.ingest.SimulateDocumentSimpleResultTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.action.ingest.SimulateDocumentSimpleResultTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195621746
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.action.ingest.SimulateDocumentSimpleResultTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.action.ingest.SimulateDocumentSimpleResultTests)",
  "startTimestamp": 1474195621767,
  "executionTime": 49
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.ingest.SimulateDocumentSimpleResultTests",
  "startTimestamp": 1474195621746,
  "executionTime": 79
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.sort.SortOrderTests",
   "displayName": "org.elasticsearch.search.sort.SortOrderTests",
   "methodName": null,
   "className": "org.elasticsearch.search.sort.SortOrderTests",
   "children": [
    {
     "id": "ID#testDistanceUnitNames(org.elasticsearch.search.sort.SortOrderTests)",
     "displayName": "testDistanceUnitNames(org.elasticsearch.search.sort.SortOrderTests)",
     "methodName": "testDistanceUnitNames",
     "className": "org.elasticsearch.search.sort.SortOrderTests",
     "children": []
    },
    {
     "id": "ID#testReadWrite(org.elasticsearch.search.sort.SortOrderTests)",
     "displayName": "testReadWrite(org.elasticsearch.search.sort.SortOrderTests)",
     "methodName": "testReadWrite",
     "className": "org.elasticsearch.search.sort.SortOrderTests",
     "children": []
    },
    {
     "id": "ID#testFromString(org.elasticsearch.search.sort.SortOrderTests)",
     "displayName": "testFromString(org.elasticsearch.search.sort.SortOrderTests)",
     "methodName": "testFromString",
     "className": "org.elasticsearch.search.sort.SortOrderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195621833
 }
]

[
 "TEST_STARTED",
 "ID#testDistanceUnitNames(org.elasticsearch.search.sort.SortOrderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDistanceUnitNames(org.elasticsearch.search.sort.SortOrderTests)",
  "startTimestamp": 1474195622207,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testReadWrite(org.elasticsearch.search.sort.SortOrderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReadWrite(org.elasticsearch.search.sort.SortOrderTests)",
  "startTimestamp": 1474195622209,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromString(org.elasticsearch.search.sort.SortOrderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromString(org.elasticsearch.search.sort.SortOrderTests)",
  "startTimestamp": 1474195622211,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.sort.SortOrderTests",
  "startTimestamp": 1474195621833,
  "executionTime": 559
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.node.internal.InternalSettingsPreparerTests",
   "displayName": "org.elasticsearch.node.internal.InternalSettingsPreparerTests",
   "methodName": null,
   "className": "org.elasticsearch.node.internal.InternalSettingsPreparerTests",
   "children": [
    {
     "id": "ID#testEmptySettings(org.elasticsearch.node.internal.InternalSettingsPreparerTests)",
     "displayName": "testEmptySettings(org.elasticsearch.node.internal.InternalSettingsPreparerTests)",
     "methodName": "testEmptySettings",
     "className": "org.elasticsearch.node.internal.InternalSettingsPreparerTests",
     "children": []
    },
    {
     "id": "ID#testMultipleSettingsFileNotAllowed(org.elasticsearch.node.internal.InternalSettingsPreparerTests)",
     "displayName": "testMultipleSettingsFileNotAllowed(org.elasticsearch.node.internal.InternalSettingsPreparerTests)",
     "methodName": "testMultipleSettingsFileNotAllowed",
     "className": "org.elasticsearch.node.internal.InternalSettingsPreparerTests",
     "children": []
    },
    {
     "id": "ID#testDefaultClusterName(org.elasticsearch.node.internal.InternalSettingsPreparerTests)",
     "displayName": "testDefaultClusterName(org.elasticsearch.node.internal.InternalSettingsPreparerTests)",
     "methodName": "testDefaultClusterName",
     "className": "org.elasticsearch.node.internal.InternalSettingsPreparerTests",
     "children": []
    },
    {
     "id": "ID#testReplaceSecretPromptPlaceholderWithNullTerminal(org.elasticsearch.node.internal.InternalSettingsPreparerTests)",
     "displayName": "testReplaceSecretPromptPlaceholderWithNullTerminal(org.elasticsearch.node.internal.InternalSettingsPreparerTests)",
     "methodName": "testReplaceSecretPromptPlaceholderWithNullTerminal",
     "className": "org.elasticsearch.node.internal.InternalSettingsPreparerTests",
     "children": []
    },
    {
     "id": "ID#testReplacePromptPlaceholders(org.elasticsearch.node.internal.InternalSettingsPreparerTests)",
     "displayName": "testReplacePromptPlaceholders(org.elasticsearch.node.internal.InternalSettingsPreparerTests)",
     "methodName": "testReplacePromptPlaceholders",
     "className": "org.elasticsearch.node.internal.InternalSettingsPreparerTests",
     "children": []
    },
    {
     "id": "ID#testReplaceTextPromptPlaceholderWithNullTerminal(org.elasticsearch.node.internal.InternalSettingsPreparerTests)",
     "displayName": "testReplaceTextPromptPlaceholderWithNullTerminal(org.elasticsearch.node.internal.InternalSettingsPreparerTests)",
     "methodName": "testReplaceTextPromptPlaceholderWithNullTerminal",
     "className": "org.elasticsearch.node.internal.InternalSettingsPreparerTests",
     "children": []
    },
    {
     "id": "ID#testGarbageIsNotSwallowed(org.elasticsearch.node.internal.InternalSettingsPreparerTests)",
     "displayName": "testGarbageIsNotSwallowed(org.elasticsearch.node.internal.InternalSettingsPreparerTests)",
     "methodName": "testGarbageIsNotSwallowed",
     "className": "org.elasticsearch.node.internal.InternalSettingsPreparerTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195622501
 }
]

[
 "TEST_STARTED",
 "ID#testEmptySettings(org.elasticsearch.node.internal.InternalSettingsPreparerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptySettings(org.elasticsearch.node.internal.InternalSettingsPreparerTests)",
  "startTimestamp": 1474195622586,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testMultipleSettingsFileNotAllowed(org.elasticsearch.node.internal.InternalSettingsPreparerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultipleSettingsFileNotAllowed(org.elasticsearch.node.internal.InternalSettingsPreparerTests)",
  "startTimestamp": 1474195622593,
  "executionTime": 31
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultClusterName(org.elasticsearch.node.internal.InternalSettingsPreparerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultClusterName(org.elasticsearch.node.internal.InternalSettingsPreparerTests)",
  "startTimestamp": 1474195622624,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testReplaceSecretPromptPlaceholderWithNullTerminal(org.elasticsearch.node.internal.InternalSettingsPreparerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReplaceSecretPromptPlaceholderWithNullTerminal(org.elasticsearch.node.internal.InternalSettingsPreparerTests)",
  "startTimestamp": 1474195622628,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testReplacePromptPlaceholders(org.elasticsearch.node.internal.InternalSettingsPreparerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReplacePromptPlaceholders(org.elasticsearch.node.internal.InternalSettingsPreparerTests)",
  "startTimestamp": 1474195622638,
  "executionTime": 33
 }
]

[
 "TEST_STARTED",
 "ID#testReplaceTextPromptPlaceholderWithNullTerminal(org.elasticsearch.node.internal.InternalSettingsPreparerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReplaceTextPromptPlaceholderWithNullTerminal(org.elasticsearch.node.internal.InternalSettingsPreparerTests)",
  "startTimestamp": 1474195622672,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testGarbageIsNotSwallowed(org.elasticsearch.node.internal.InternalSettingsPreparerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGarbageIsNotSwallowed(org.elasticsearch.node.internal.InternalSettingsPreparerTests)",
  "startTimestamp": 1474195622681,
  "executionTime": 21
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.node.internal.InternalSettingsPreparerTests",
  "startTimestamp": 1474195622501,
  "executionTime": 210
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.snapshots.SnapshotUtilsTests",
   "displayName": "org.elasticsearch.snapshots.SnapshotUtilsTests",
   "methodName": null,
   "className": "org.elasticsearch.snapshots.SnapshotUtilsTests",
   "children": [
    {
     "id": "ID#testIndexNameFiltering(org.elasticsearch.snapshots.SnapshotUtilsTests)",
     "displayName": "testIndexNameFiltering(org.elasticsearch.snapshots.SnapshotUtilsTests)",
     "methodName": "testIndexNameFiltering",
     "className": "org.elasticsearch.snapshots.SnapshotUtilsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195622717
 }
]

[
 "TEST_STARTED",
 "ID#testIndexNameFiltering(org.elasticsearch.snapshots.SnapshotUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexNameFiltering(org.elasticsearch.snapshots.SnapshotUtilsTests)",
  "startTimestamp": 1474195622736,
  "executionTime": 32
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.snapshots.SnapshotUtilsTests",
  "startTimestamp": 1474195622717,
  "executionTime": 53
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.functionscore.FunctionScoreTests",
   "displayName": "org.elasticsearch.index.query.functionscore.FunctionScoreTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.functionscore.FunctionScoreTests",
   "children": [
    {
     "id": "ID#testMinScoreExplain(org.elasticsearch.index.query.functionscore.FunctionScoreTests)",
     "displayName": "testMinScoreExplain(org.elasticsearch.index.query.functionscore.FunctionScoreTests)",
     "methodName": "testMinScoreExplain",
     "className": "org.elasticsearch.index.query.functionscore.FunctionScoreTests",
     "children": []
    },
    {
     "id": "ID#testWeightOnlyCreatesBoostFunction(org.elasticsearch.index.query.functionscore.FunctionScoreTests)",
     "displayName": "testWeightOnlyCreatesBoostFunction(org.elasticsearch.index.query.functionscore.FunctionScoreTests)",
     "methodName": "testWeightOnlyCreatesBoostFunction",
     "className": "org.elasticsearch.index.query.functionscore.FunctionScoreTests",
     "children": []
    },
    {
     "id": "ID#testPropagatesApproximations(org.elasticsearch.index.query.functionscore.FunctionScoreTests)",
     "displayName": "testPropagatesApproximations(org.elasticsearch.index.query.functionscore.FunctionScoreTests)",
     "methodName": "testPropagatesApproximations",
     "className": "org.elasticsearch.index.query.functionscore.FunctionScoreTests",
     "children": []
    },
    {
     "id": "ID#testExplainFunctionScoreQuery(org.elasticsearch.index.query.functionscore.FunctionScoreTests)",
     "displayName": "testExplainFunctionScoreQuery(org.elasticsearch.index.query.functionscore.FunctionScoreTests)",
     "methodName": "testExplainFunctionScoreQuery",
     "className": "org.elasticsearch.index.query.functionscore.FunctionScoreTests",
     "children": []
    },
    {
     "id": "ID#testExplanationAndScoreEqualsEvenIfNoFunctionMatches(org.elasticsearch.index.query.functionscore.FunctionScoreTests)",
     "displayName": "testExplanationAndScoreEqualsEvenIfNoFunctionMatches(org.elasticsearch.index.query.functionscore.FunctionScoreTests)",
     "methodName": "testExplanationAndScoreEqualsEvenIfNoFunctionMatches",
     "className": "org.elasticsearch.index.query.functionscore.FunctionScoreTests",
     "children": []
    },
    {
     "id": "ID#testFilterFunctionScoreHashCodeAndEquals(org.elasticsearch.index.query.functionscore.FunctionScoreTests)",
     "displayName": "testFilterFunctionScoreHashCodeAndEquals(org.elasticsearch.index.query.functionscore.FunctionScoreTests)",
     "methodName": "testFilterFunctionScoreHashCodeAndEquals",
     "className": "org.elasticsearch.index.query.functionscore.FunctionScoreTests",
     "children": []
    },
    {
     "id": "ID#testExplainFiltersFunctionScoreQuery(org.elasticsearch.index.query.functionscore.FunctionScoreTests)",
     "displayName": "testExplainFiltersFunctionScoreQuery(org.elasticsearch.index.query.functionscore.FunctionScoreTests)",
     "methodName": "testExplainFiltersFunctionScoreQuery",
     "className": "org.elasticsearch.index.query.functionscore.FunctionScoreTests",
     "children": []
    },
    {
     "id": "ID#testSimpleWeightedFunction(org.elasticsearch.index.query.functionscore.FunctionScoreTests)",
     "displayName": "testSimpleWeightedFunction(org.elasticsearch.index.query.functionscore.FunctionScoreTests)",
     "methodName": "testSimpleWeightedFunction",
     "className": "org.elasticsearch.index.query.functionscore.FunctionScoreTests",
     "children": []
    },
    {
     "id": "ID#testFunctionScoreHashCodeAndEquals(org.elasticsearch.index.query.functionscore.FunctionScoreTests)",
     "displayName": "testFunctionScoreHashCodeAndEquals(org.elasticsearch.index.query.functionscore.FunctionScoreTests)",
     "methodName": "testFunctionScoreHashCodeAndEquals",
     "className": "org.elasticsearch.index.query.functionscore.FunctionScoreTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195622783
 }
]

[
 "TEST_STARTED",
 "ID#testMinScoreExplain(org.elasticsearch.index.query.functionscore.FunctionScoreTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMinScoreExplain(org.elasticsearch.index.query.functionscore.FunctionScoreTests)",
  "startTimestamp": 1474195622817,
  "executionTime": 138
 }
]

[
 "TEST_STARTED",
 "ID#testWeightOnlyCreatesBoostFunction(org.elasticsearch.index.query.functionscore.FunctionScoreTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWeightOnlyCreatesBoostFunction(org.elasticsearch.index.query.functionscore.FunctionScoreTests)",
  "startTimestamp": 1474195622955,
  "executionTime": 81
 }
]

[
 "TEST_STARTED",
 "ID#testPropagatesApproximations(org.elasticsearch.index.query.functionscore.FunctionScoreTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPropagatesApproximations(org.elasticsearch.index.query.functionscore.FunctionScoreTests)",
  "startTimestamp": 1474195623036,
  "executionTime": 57
 }
]

[
 "TEST_STARTED",
 "ID#testExplainFunctionScoreQuery(org.elasticsearch.index.query.functionscore.FunctionScoreTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExplainFunctionScoreQuery(org.elasticsearch.index.query.functionscore.FunctionScoreTests)",
  "startTimestamp": 1474195623093,
  "executionTime": 132
 }
]

[
 "TEST_STARTED",
 "ID#testExplanationAndScoreEqualsEvenIfNoFunctionMatches(org.elasticsearch.index.query.functionscore.FunctionScoreTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExplanationAndScoreEqualsEvenIfNoFunctionMatches(org.elasticsearch.index.query.functionscore.FunctionScoreTests)",
  "startTimestamp": 1474195623225,
  "executionTime": 29
 }
]

[
 "TEST_STARTED",
 "ID#testFilterFunctionScoreHashCodeAndEquals(org.elasticsearch.index.query.functionscore.FunctionScoreTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFilterFunctionScoreHashCodeAndEquals(org.elasticsearch.index.query.functionscore.FunctionScoreTests)",
  "startTimestamp": 1474195623256,
  "executionTime": 249
 }
]

[
 "TEST_STARTED",
 "ID#testExplainFiltersFunctionScoreQuery(org.elasticsearch.index.query.functionscore.FunctionScoreTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExplainFiltersFunctionScoreQuery(org.elasticsearch.index.query.functionscore.FunctionScoreTests)",
  "startTimestamp": 1474195623509,
  "executionTime": 90
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleWeightedFunction(org.elasticsearch.index.query.functionscore.FunctionScoreTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleWeightedFunction(org.elasticsearch.index.query.functionscore.FunctionScoreTests)",
  "startTimestamp": 1474195623599,
  "executionTime": 31
 }
]

[
 "TEST_STARTED",
 "ID#testFunctionScoreHashCodeAndEquals(org.elasticsearch.index.query.functionscore.FunctionScoreTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFunctionScoreHashCodeAndEquals(org.elasticsearch.index.query.functionscore.FunctionScoreTests)",
  "startTimestamp": 1474195623630,
  "executionTime": 14
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.functionscore.FunctionScoreTests",
  "startTimestamp": 1474195622783,
  "executionTime": 863
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.repositories.blobstore.BlobStoreRepositoryTests",
   "displayName": "org.elasticsearch.repositories.blobstore.BlobStoreRepositoryTests",
   "methodName": null,
   "className": "org.elasticsearch.repositories.blobstore.BlobStoreRepositoryTests",
   "children": [
    {
     "id": "ID#testIndexGenerationalFiles(org.elasticsearch.repositories.blobstore.BlobStoreRepositoryTests)",
     "displayName": "testIndexGenerationalFiles(org.elasticsearch.repositories.blobstore.BlobStoreRepositoryTests)",
     "methodName": "testIndexGenerationalFiles",
     "className": "org.elasticsearch.repositories.blobstore.BlobStoreRepositoryTests",
     "children": []
    },
    {
     "id": "ID#testRetrieveSnapshots(org.elasticsearch.repositories.blobstore.BlobStoreRepositoryTests)",
     "displayName": "testRetrieveSnapshots(org.elasticsearch.repositories.blobstore.BlobStoreRepositoryTests)",
     "methodName": "testRetrieveSnapshots",
     "className": "org.elasticsearch.repositories.blobstore.BlobStoreRepositoryTests",
     "children": []
    },
    {
     "id": "ID#testReadAndWriteSnapshotsThroughIndexFile(org.elasticsearch.repositories.blobstore.BlobStoreRepositoryTests)",
     "displayName": "testReadAndWriteSnapshotsThroughIndexFile(org.elasticsearch.repositories.blobstore.BlobStoreRepositoryTests)",
     "methodName": "testReadAndWriteSnapshotsThroughIndexFile",
     "className": "org.elasticsearch.repositories.blobstore.BlobStoreRepositoryTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195623654
 }
]

[
 "TEST_STARTED",
 "ID#testIndexGenerationalFiles(org.elasticsearch.repositories.blobstore.BlobStoreRepositoryTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:47:03,682][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:47:03,716][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:47:03,717][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:47:03,721][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[7260], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:47:03,723][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:47:03,723][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:47:03,895][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:47:03,895][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:47:03,895][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[13]}, bound_addresses {local[13]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:47:03,898][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{tMmchl9jRh6as50mkY-6Fg}{zbTvKwoFSaCGU6i5NI5hYw}{local}{local[13]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:47:03,899][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:47:03,922][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:47:04,056][INFO ][org.elasticsearch.repositories] [node_s_0] put repository [test-repo]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:47:04,286][INFO ][org.elasticsearch.repositories.blobstore] [BlobStoreRepositoryTests#testIndexGenerationalFiles]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexGenerationalFiles(org.elasticsearch.repositories.blobstore.BlobStoreRepositoryTests)",
  "startTimestamp": 1474195623674,
  "executionTime": 616
 }
]

[
 "TEST_STARTED",
 "ID#testRetrieveSnapshots(org.elasticsearch.repositories.blobstore.BlobStoreRepositoryTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:47:04,294][INFO ][org.elasticsearch.repositories.blobstore] -->  creating repository%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:47:04,296][INFO ][org.elasticsearch.repositories] [node_s_0] update repository [test-repo]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:47:04,321][INFO ][org.elasticsearch.repositories.blobstore] --> creating an index and indexing documents%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:47:04,324][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test-idx] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:47:04,375][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test-idx][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:47:04,408][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test-idx/FtvJM3hQSMeZ-fvf3xdKZA] create_mapping [type1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:47:04,811][INFO ][org.elasticsearch.repositories.blobstore] --> create first snapshot%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:47:05,063][INFO ][org.elasticsearch.snapshots] [node_s_0] snapshot [test-repo:test-snap-1/8itZKcxeSNex4J_r9reFuA] is done%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:47:05,084][INFO ][org.elasticsearch.repositories.blobstore] --> create second snapshot%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:47:05,145][INFO ][org.elasticsearch.snapshots] [node_s_0] snapshot [test-repo:test-snap-2/2AMvi4K9Qc2aJ8YshxPuig] is done%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:47:05,166][INFO ][org.elasticsearch.repositories.blobstore] --> make sure the node's repository can resolve the snapshots%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:47:05,168][INFO ][org.elasticsearch.repositories.blobstore] [BlobStoreRepositoryTests#testRetrieveSnapshots]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRetrieveSnapshots(org.elasticsearch.repositories.blobstore.BlobStoreRepositoryTests)",
  "startTimestamp": 1474195624290,
  "executionTime": 1016
 }
]

[
 "TEST_STARTED",
 "ID#testReadAndWriteSnapshotsThroughIndexFile(org.elasticsearch.repositories.blobstore.BlobStoreRepositoryTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:47:05,312][INFO ][org.elasticsearch.repositories] [node_s_0] update repository [test-repo]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:47:05,380][INFO ][org.elasticsearch.repositories.blobstore] [BlobStoreRepositoryTests#testReadAndWriteSnapshotsThroughIndexFile]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReadAndWriteSnapshotsThroughIndexFile(org.elasticsearch.repositories.blobstore.BlobStoreRepositoryTests)",
  "startTimestamp": 1474195625306,
  "executionTime": 75
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:47:05,382][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:47:05,382][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:47:05,383][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:47:05,384][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.repositories.blobstore.BlobStoreRepositoryTests",
  "startTimestamp": 1474195623654,
  "executionTime": 1763
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.GeoShapeQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.GeoShapeQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.GeoShapeQueryBuilderTests",
   "children": [
    {
     "id": "ID#testNoFieldName(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "displayName": "testNoFieldName(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "methodName": "testNoFieldName",
     "className": "org.elasticsearch.index.query.GeoShapeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "displayName": "testQueryWrappedInArray(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "methodName": "testQueryWrappedInArray",
     "className": "org.elasticsearch.index.query.GeoShapeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.GeoShapeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testThatXContentSerializationInsideOfArrayWorks(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "displayName": "testThatXContentSerializationInsideOfArrayWorks(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "methodName": "testThatXContentSerializationInsideOfArrayWorks",
     "className": "org.elasticsearch.index.query.GeoShapeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMustRewrite(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "displayName": "testMustRewrite(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "methodName": "testMustRewrite",
     "className": "org.elasticsearch.index.query.GeoShapeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testNoShape(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "displayName": "testNoShape(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "methodName": "testNoShape",
     "className": "org.elasticsearch.index.query.GeoShapeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testNoIndexedShape(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "displayName": "testNoIndexedShape(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "methodName": "testNoIndexedShape",
     "className": "org.elasticsearch.index.query.GeoShapeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.GeoShapeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.GeoShapeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.GeoShapeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIgnoreUnmapped(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "displayName": "testIgnoreUnmapped(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "methodName": "testIgnoreUnmapped",
     "className": "org.elasticsearch.index.query.GeoShapeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.GeoShapeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testInvalidRelation(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "displayName": "testInvalidRelation(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "methodName": "testInvalidRelation",
     "className": "org.elasticsearch.index.query.GeoShapeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.GeoShapeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testNoRelation(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "displayName": "testNoRelation(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "methodName": "testNoRelation",
     "className": "org.elasticsearch.index.query.GeoShapeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.GeoShapeQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testNoIndexedShapeType(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "displayName": "testNoIndexedShapeType(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
     "methodName": "testNoIndexedShapeType",
     "className": "org.elasticsearch.index.query.GeoShapeQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195625426
 }
]

[
 "TEST_STARTED",
 "ID#testNoFieldName(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:47:05,474][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{B-r8H0bNRTOXD3AvHEQGRQ}{local}{local[191]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:47:05,488][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:47:05,488][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:47:05,506][WARN ][org.elasticsearch.deprecation.index.mapper]  [MtDnp] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:47:05,506][WARN ][org.elasticsearch.deprecation.index.mapper]  [MtDnp] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:47:05,506][WARN ][org.elasticsearch.deprecation.index.mapper]  [MtDnp] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:47:05,508][WARN ][org.elasticsearch.deprecation.index.mapper]  [MtDnp] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:47:05,508][WARN ][org.elasticsearch.deprecation.index.mapper]  [MtDnp] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:47:05,508][WARN ][org.elasticsearch.deprecation.index.mapper]  [MtDnp] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:47:05,518][WARN ][org.elasticsearch.deprecation.index.mapper]  [MtDnp] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:47:05,518][WARN ][org.elasticsearch.deprecation.index.mapper]  [MtDnp] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:47:05,518][WARN ][org.elasticsearch.deprecation.index.mapper]  [MtDnp] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:47:05,532][WARN ][org.elasticsearch.deprecation.index.mapper]  [MtDnp] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:47:05,532][WARN ][org.elasticsearch.deprecation.index.mapper]  [MtDnp] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:47:05,532][WARN ][org.elasticsearch.deprecation.index.mapper]  [MtDnp] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:47:05,539][WARN ][org.elasticsearch.deprecation.index.mapper]  [MtDnp] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:47:05,539][WARN ][org.elasticsearch.deprecation.index.mapper]  [MtDnp] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:47:05,539][WARN ][org.elasticsearch.deprecation.index.mapper]  [MtDnp] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:47:05,547][WARN ][org.elasticsearch.deprecation.index.mapper]  [MtDnp] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:47:05,547][WARN ][org.elasticsearch.deprecation.index.mapper]  [MtDnp] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:47:05,547][WARN ][org.elasticsearch.deprecation.index.mapper]  [MtDnp] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:47:05,550][WARN ][org.elasticsearch.deprecation.index.mapper]  [MtDnp] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:47:05,550][WARN ][org.elasticsearch.deprecation.index.mapper]  [MtDnp] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:47:05,550][WARN ][org.elasticsearch.deprecation.index.mapper]  [MtDnp] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:47:05,553][WARN ][org.elasticsearch.deprecation.index.mapper]  [MtDnp] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:47:05,553][WARN ][org.elasticsearch.deprecation.index.mapper]  [MtDnp] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:47:05,553][WARN ][org.elasticsearch.deprecation.index.mapper]  [MtDnp] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:47:05,579][WARN ][org.elasticsearch.deprecation.index.mapper]  [MtDnp] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:47:05,579][WARN ][org.elasticsearch.deprecation.index.mapper]  [MtDnp] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:47:05,579][WARN ][org.elasticsearch.deprecation.index.mapper]  [MtDnp] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoFieldName(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
  "startTimestamp": 1474195625466,
  "executionTime": 115
 }
]

[
 "TEST_STARTED",
 "ID#testQueryWrappedInArray(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
  "startTimestamp": 1474195625581,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
  "startTimestamp": 1474195625585,
  "executionTime": 20
 }
]

[
 "TEST_STARTED",
 "ID#testThatXContentSerializationInsideOfArrayWorks(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatXContentSerializationInsideOfArrayWorks(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
  "startTimestamp": 1474195625605,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testMustRewrite(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMustRewrite(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
  "startTimestamp": 1474195625608,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testNoShape(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoShape(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
  "startTimestamp": 1474195625617,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testNoIndexedShape(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoIndexedShape(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
  "startTimestamp": 1474195625620,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
  "startTimestamp": 1474195625622,
  "executionTime": 9144
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
  "startTimestamp": 1474195634766,
  "executionTime": 39
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
  "startTimestamp": 1474195634805,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testIgnoreUnmapped(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIgnoreUnmapped(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
  "startTimestamp": 1474195634808,
  "executionTime": 33
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
  "startTimestamp": 1474195634841,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidRelation(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidRelation(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
  "startTimestamp": 1474195634844,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
  "startTimestamp": 1474195634847,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testNoRelation(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoRelation(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
  "startTimestamp": 1474195634852,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
  "startTimestamp": 1474195634854,
  "executionTime": 48
 }
]

[
 "TEST_STARTED",
 "ID#testNoIndexedShapeType(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoIndexedShapeType(org.elasticsearch.index.query.GeoShapeQueryBuilderTests)",
  "startTimestamp": 1474195634902,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.GeoShapeQueryBuilderTests",
  "startTimestamp": 1474195625426,
  "executionTime": 9684
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.pipeline.BucketSelectorTests",
   "displayName": "org.elasticsearch.search.aggregations.pipeline.BucketSelectorTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.pipeline.BucketSelectorTests",
   "children": [
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.BucketSelectorTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.BucketSelectorTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.aggregations.pipeline.BucketSelectorTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.aggregations.pipeline.BucketSelectorTests)",
     "displayName": "testSerialization(org.elasticsearch.search.aggregations.pipeline.BucketSelectorTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.aggregations.pipeline.BucketSelectorTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.aggregations.pipeline.BucketSelectorTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.aggregations.pipeline.BucketSelectorTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.aggregations.pipeline.BucketSelectorTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195635119
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:47:15,187][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{U8jmMNz8Qcu3jCHmrpYovQ}{local}{local[192]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.BucketSelectorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.BucketSelectorTests)",
  "startTimestamp": 1474195635197,
  "executionTime": 47
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.aggregations.pipeline.BucketSelectorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.aggregations.pipeline.BucketSelectorTests)",
  "startTimestamp": 1474195635245,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.aggregations.pipeline.BucketSelectorTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:47:15,249][INFO ][org.elasticsearch.search.aggregations.pipeline] Content string: {%0A  \"WojciOEBiPq\" : {%0A    \"bucket_selector\" : {%0A      \"buckets_path\" : {%0A        \"DcjPTWChxHKvcVmzrLeo\" : \"UBnFSwJnfcCZYmiEGOhLedtuoh\",%0A        \"qPKBSBHLEeHCQ\" : \"rTciLmBGryJlQVuJDGcsvpwuWzUklLwt\"%0A      },%0A      \"script\" : {%0A        \"file\" : \"script\",%0A        \"lang\" : \"my_lang\",%0A        \"params\" : {%0A          \"foo\" : \"bar\"%0A        }%0A      },%0A      \"gap_policy\" : \"insert_zeros\"%0A    }%0A  }%0A}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:47:15,250][INFO ][org.elasticsearch.search.aggregations.pipeline] Content string: {%0A  \"WojciOEBiPq\" : {%0A    \"bucket_selector\" : {%0A      \"buckets_path\" : {%0A        \"DcjPTWChxHKvcVmzrLeo\" : \"UBnFSwJnfcCZYmiEGOhLedtuoh\",%0A        \"qPKBSBHLEeHCQ\" : \"rTciLmBGryJlQVuJDGcsvpwuWzUklLwt\"%0A      },%0A      \"script\" : {%0A        \"file\" : \"script\",%0A        \"lang\" : \"my_lang\",%0A        \"params\" : {%0A          \"foo\" : \"bar\"%0A        }%0A      },%0A      \"gap_policy\" : \"insert_zeros\"%0A    }%0A  }%0A}%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.aggregations.pipeline.BucketSelectorTests)",
  "startTimestamp": 1474195635247,
  "executionTime": 4
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.pipeline.BucketSelectorTests",
  "startTimestamp": 1474195635119,
  "executionTime": 191
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.suggest.phrase.DirectCandidateGeneratorTests",
   "displayName": "org.elasticsearch.search.suggest.phrase.DirectCandidateGeneratorTests",
   "methodName": null,
   "className": "org.elasticsearch.search.suggest.phrase.DirectCandidateGeneratorTests",
   "children": [
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.suggest.phrase.DirectCandidateGeneratorTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.suggest.phrase.DirectCandidateGeneratorTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.suggest.phrase.DirectCandidateGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.suggest.phrase.DirectCandidateGeneratorTests)",
     "displayName": "testSerialization(org.elasticsearch.search.suggest.phrase.DirectCandidateGeneratorTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.suggest.phrase.DirectCandidateGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testIllegalXContent(org.elasticsearch.search.suggest.phrase.DirectCandidateGeneratorTests)",
     "displayName": "testIllegalXContent(org.elasticsearch.search.suggest.phrase.DirectCandidateGeneratorTests)",
     "methodName": "testIllegalXContent",
     "className": "org.elasticsearch.search.suggest.phrase.DirectCandidateGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.suggest.phrase.DirectCandidateGeneratorTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.suggest.phrase.DirectCandidateGeneratorTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.suggest.phrase.DirectCandidateGeneratorTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195635354
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.suggest.phrase.DirectCandidateGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.suggest.phrase.DirectCandidateGeneratorTests)",
  "startTimestamp": 1474195635374,
  "executionTime": 27
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.suggest.phrase.DirectCandidateGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.suggest.phrase.DirectCandidateGeneratorTests)",
  "startTimestamp": 1474195635401,
  "executionTime": 16
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalXContent(org.elasticsearch.search.suggest.phrase.DirectCandidateGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalXContent(org.elasticsearch.search.suggest.phrase.DirectCandidateGeneratorTests)",
  "startTimestamp": 1474195635417,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.suggest.phrase.DirectCandidateGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.suggest.phrase.DirectCandidateGeneratorTests)",
  "startTimestamp": 1474195635420,
  "executionTime": 11
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.suggest.phrase.DirectCandidateGeneratorTests",
  "startTimestamp": 1474195635354,
  "executionTime": 93
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.util.concurrent.AsyncIOProcessorTests",
   "displayName": "org.elasticsearch.common.util.concurrent.AsyncIOProcessorTests",
   "methodName": null,
   "className": "org.elasticsearch.common.util.concurrent.AsyncIOProcessorTests",
   "children": [
    {
     "id": "ID#testNullArguments(org.elasticsearch.common.util.concurrent.AsyncIOProcessorTests)",
     "displayName": "testNullArguments(org.elasticsearch.common.util.concurrent.AsyncIOProcessorTests)",
     "methodName": "testNullArguments",
     "className": "org.elasticsearch.common.util.concurrent.AsyncIOProcessorTests",
     "children": []
    },
    {
     "id": "ID#testRandomFail(org.elasticsearch.common.util.concurrent.AsyncIOProcessorTests)",
     "displayName": "testRandomFail(org.elasticsearch.common.util.concurrent.AsyncIOProcessorTests)",
     "methodName": "testRandomFail",
     "className": "org.elasticsearch.common.util.concurrent.AsyncIOProcessorTests",
     "children": []
    },
    {
     "id": "ID#testPut(org.elasticsearch.common.util.concurrent.AsyncIOProcessorTests)",
     "displayName": "testPut(org.elasticsearch.common.util.concurrent.AsyncIOProcessorTests)",
     "methodName": "testPut",
     "className": "org.elasticsearch.common.util.concurrent.AsyncIOProcessorTests",
     "children": []
    },
    {
     "id": "ID#testConsumerCanThrowExceptions(org.elasticsearch.common.util.concurrent.AsyncIOProcessorTests)",
     "displayName": "testConsumerCanThrowExceptions(org.elasticsearch.common.util.concurrent.AsyncIOProcessorTests)",
     "methodName": "testConsumerCanThrowExceptions",
     "className": "org.elasticsearch.common.util.concurrent.AsyncIOProcessorTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195635454
 }
]

[
 "TEST_STARTED",
 "ID#testNullArguments(org.elasticsearch.common.util.concurrent.AsyncIOProcessorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNullArguments(org.elasticsearch.common.util.concurrent.AsyncIOProcessorTests)",
  "startTimestamp": 1474195635484,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testRandomFail(org.elasticsearch.common.util.concurrent.AsyncIOProcessorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRandomFail(org.elasticsearch.common.util.concurrent.AsyncIOProcessorTests)",
  "startTimestamp": 1474195635488,
  "executionTime": 121
 }
]

[
 "TEST_STARTED",
 "ID#testPut(org.elasticsearch.common.util.concurrent.AsyncIOProcessorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPut(org.elasticsearch.common.util.concurrent.AsyncIOProcessorTests)",
  "startTimestamp": 1474195635609,
  "executionTime": 53
 }
]

[
 "TEST_STARTED",
 "ID#testConsumerCanThrowExceptions(org.elasticsearch.common.util.concurrent.AsyncIOProcessorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConsumerCanThrowExceptions(org.elasticsearch.common.util.concurrent.AsyncIOProcessorTests)",
  "startTimestamp": 1474195635663,
  "executionTime": 9
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.util.concurrent.AsyncIOProcessorTests",
  "startTimestamp": 1474195635454,
  "executionTime": 221
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.plugins.PluginsServiceTests",
   "displayName": "org.elasticsearch.plugins.PluginsServiceTests",
   "methodName": null,
   "className": "org.elasticsearch.plugins.PluginsServiceTests",
   "children": [
    {
     "id": "ID#testExistingPluginMissingDescriptor(org.elasticsearch.plugins.PluginsServiceTests)",
     "displayName": "testExistingPluginMissingDescriptor(org.elasticsearch.plugins.PluginsServiceTests)",
     "methodName": "testExistingPluginMissingDescriptor",
     "className": "org.elasticsearch.plugins.PluginsServiceTests",
     "children": []
    },
    {
     "id": "ID#testOnModuleExceptionsArePropagated(org.elasticsearch.plugins.PluginsServiceTests)",
     "displayName": "testOnModuleExceptionsArePropagated(org.elasticsearch.plugins.PluginsServiceTests)",
     "methodName": "testOnModuleExceptionsArePropagated",
     "className": "org.elasticsearch.plugins.PluginsServiceTests",
     "children": []
    },
    {
     "id": "ID#testAdditionalSettings(org.elasticsearch.plugins.PluginsServiceTests)",
     "displayName": "testAdditionalSettings(org.elasticsearch.plugins.PluginsServiceTests)",
     "methodName": "testAdditionalSettings",
     "className": "org.elasticsearch.plugins.PluginsServiceTests",
     "children": []
    },
    {
     "id": "ID#testFilterPlugins(org.elasticsearch.plugins.PluginsServiceTests)",
     "displayName": "testFilterPlugins(org.elasticsearch.plugins.PluginsServiceTests)",
     "methodName": "testFilterPlugins",
     "className": "org.elasticsearch.plugins.PluginsServiceTests",
     "children": []
    },
    {
     "id": "ID#testAdditionalSettingsClash(org.elasticsearch.plugins.PluginsServiceTests)",
     "displayName": "testAdditionalSettingsClash(org.elasticsearch.plugins.PluginsServiceTests)",
     "methodName": "testAdditionalSettingsClash",
     "className": "org.elasticsearch.plugins.PluginsServiceTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195635682
 }
]

[
 "TEST_STARTED",
 "ID#testExistingPluginMissingDescriptor(org.elasticsearch.plugins.PluginsServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExistingPluginMissingDescriptor(org.elasticsearch.plugins.PluginsServiceTests)",
  "startTimestamp": 1474195635730,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testOnModuleExceptionsArePropagated(org.elasticsearch.plugins.PluginsServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:15,743][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:15,744][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] loaded plugin [org.elasticsearch.plugins.PluginsServiceTests$FailOnModule]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:15,745][WARN ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] plugin java.lang.reflect.InvocationTargetException, failed to invoke custom onModule method%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOnModuleExceptionsArePropagated(org.elasticsearch.plugins.PluginsServiceTests)",
  "startTimestamp": 1474195635737,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testAdditionalSettings(org.elasticsearch.plugins.PluginsServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:15,751][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:15,751][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] loaded plugin [org.elasticsearch.plugins.PluginsServiceTests$AdditionalSettingsPlugin1]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAdditionalSettings(org.elasticsearch.plugins.PluginsServiceTests)",
  "startTimestamp": 1474195635745,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testFilterPlugins(org.elasticsearch.plugins.PluginsServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:15,758][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:15,758][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] loaded plugin [org.elasticsearch.plugins.PluginsServiceTests$AdditionalSettingsPlugin1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:15,758][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] loaded plugin [org.elasticsearch.plugins.PluginsServiceTests$FilterablePlugin]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFilterPlugins(org.elasticsearch.plugins.PluginsServiceTests)",
  "startTimestamp": 1474195635752,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testAdditionalSettingsClash(org.elasticsearch.plugins.PluginsServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:15,764][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:15,764][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] loaded plugin [org.elasticsearch.plugins.PluginsServiceTests$AdditionalSettingsPlugin1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:15,764][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] loaded plugin [org.elasticsearch.plugins.PluginsServiceTests$AdditionalSettingsPlugin2]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAdditionalSettingsClash(org.elasticsearch.plugins.PluginsServiceTests)",
  "startTimestamp": 1474195635759,
  "executionTime": 6
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.plugins.PluginsServiceTests",
  "startTimestamp": 1474195635682,
  "executionTime": 88
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.analysis.CharMatcherTests",
   "displayName": "org.elasticsearch.index.analysis.CharMatcherTests",
   "methodName": null,
   "className": "org.elasticsearch.index.analysis.CharMatcherTests",
   "children": [
    {
     "id": "ID#testPunctuation(org.elasticsearch.index.analysis.CharMatcherTests)",
     "displayName": "testPunctuation(org.elasticsearch.index.analysis.CharMatcherTests)",
     "methodName": "testPunctuation",
     "className": "org.elasticsearch.index.analysis.CharMatcherTests",
     "children": []
    },
    {
     "id": "ID#testSymbol(org.elasticsearch.index.analysis.CharMatcherTests)",
     "displayName": "testSymbol(org.elasticsearch.index.analysis.CharMatcherTests)",
     "methodName": "testSymbol",
     "className": "org.elasticsearch.index.analysis.CharMatcherTests",
     "children": []
    },
    {
     "id": "ID#testLetter(org.elasticsearch.index.analysis.CharMatcherTests)",
     "displayName": "testLetter(org.elasticsearch.index.analysis.CharMatcherTests)",
     "methodName": "testLetter",
     "className": "org.elasticsearch.index.analysis.CharMatcherTests",
     "children": []
    },
    {
     "id": "ID#testSpace(org.elasticsearch.index.analysis.CharMatcherTests)",
     "displayName": "testSpace(org.elasticsearch.index.analysis.CharMatcherTests)",
     "methodName": "testSpace",
     "className": "org.elasticsearch.index.analysis.CharMatcherTests",
     "children": []
    },
    {
     "id": "ID#testNumber(org.elasticsearch.index.analysis.CharMatcherTests)",
     "displayName": "testNumber(org.elasticsearch.index.analysis.CharMatcherTests)",
     "methodName": "testNumber",
     "className": "org.elasticsearch.index.analysis.CharMatcherTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195635776
 }
]

[
 "TEST_STARTED",
 "ID#testPunctuation(org.elasticsearch.index.analysis.CharMatcherTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPunctuation(org.elasticsearch.index.analysis.CharMatcherTests)",
  "startTimestamp": 1474195635794,
  "executionTime": 91
 }
]

[
 "TEST_STARTED",
 "ID#testSymbol(org.elasticsearch.index.analysis.CharMatcherTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSymbol(org.elasticsearch.index.analysis.CharMatcherTests)",
  "startTimestamp": 1474195635885,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testLetter(org.elasticsearch.index.analysis.CharMatcherTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLetter(org.elasticsearch.index.analysis.CharMatcherTests)",
  "startTimestamp": 1474195635887,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSpace(org.elasticsearch.index.analysis.CharMatcherTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSpace(org.elasticsearch.index.analysis.CharMatcherTests)",
  "startTimestamp": 1474195635889,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNumber(org.elasticsearch.index.analysis.CharMatcherTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNumber(org.elasticsearch.index.analysis.CharMatcherTests)",
  "startTimestamp": 1474195635891,
  "executionTime": 1
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.analysis.CharMatcherTests",
  "startTimestamp": 1474195635776,
  "executionTime": 118
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests",
   "displayName": "org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests",
   "children": [
    {
     "id": "ID#testUnassignedShardsWithUnbalancedZones(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)",
     "displayName": "testUnassignedShardsWithUnbalancedZones(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)",
     "methodName": "testUnassignedShardsWithUnbalancedZones",
     "className": "org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests",
     "children": []
    },
    {
     "id": "ID#testFullAwareness2(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)",
     "displayName": "testFullAwareness2(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)",
     "methodName": "testFullAwareness2",
     "className": "org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests",
     "children": []
    },
    {
     "id": "ID#testMoveShardOnceNewNodeWithAttributeAdded3(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)",
     "displayName": "testMoveShardOnceNewNodeWithAttributeAdded3(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)",
     "methodName": "testMoveShardOnceNewNodeWithAttributeAdded3",
     "className": "org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests",
     "children": []
    },
    {
     "id": "ID#testMoveShardOnceNewNodeWithAttributeAdded5(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)",
     "displayName": "testMoveShardOnceNewNodeWithAttributeAdded5(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)",
     "methodName": "testMoveShardOnceNewNodeWithAttributeAdded5",
     "className": "org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests",
     "children": []
    },
    {
     "id": "ID#testMoveShardOnceNewNodeWithAttributeAdded6(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)",
     "displayName": "testMoveShardOnceNewNodeWithAttributeAdded6(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)",
     "methodName": "testMoveShardOnceNewNodeWithAttributeAdded6",
     "className": "org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests",
     "children": []
    },
    {
     "id": "ID#testUnbalancedZones(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)",
     "displayName": "testUnbalancedZones(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)",
     "methodName": "testUnbalancedZones",
     "className": "org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests",
     "children": []
    },
    {
     "id": "ID#testMoveShardOnceNewNodeWithAttributeAdded1(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)",
     "displayName": "testMoveShardOnceNewNodeWithAttributeAdded1(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)",
     "methodName": "testMoveShardOnceNewNodeWithAttributeAdded1",
     "className": "org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests",
     "children": []
    },
    {
     "id": "ID#testMoveShardOnceNewNodeWithAttributeAdded2(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)",
     "displayName": "testMoveShardOnceNewNodeWithAttributeAdded2(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)",
     "methodName": "testMoveShardOnceNewNodeWithAttributeAdded2",
     "className": "org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests",
     "children": []
    },
    {
     "id": "ID#testFullAwareness1(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)",
     "displayName": "testFullAwareness1(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)",
     "methodName": "testFullAwareness1",
     "className": "org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests",
     "children": []
    },
    {
     "id": "ID#testMoveShardOnceNewNodeWithAttributeAdded4(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)",
     "displayName": "testMoveShardOnceNewNodeWithAttributeAdded4(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)",
     "methodName": "testMoveShardOnceNewNodeWithAttributeAdded4",
     "className": "org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests",
     "children": []
    },
    {
     "id": "ID#testFullAwareness3(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)",
     "displayName": "testFullAwareness3(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)",
     "methodName": "testFullAwareness3",
     "className": "org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195635904
 }
]

[
 "TEST_STARTED",
 "ID#testUnassignedShardsWithUnbalancedZones(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T23:47:15,924][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Building initial routing table for 'testUnassignedShardsWithUnbalancedZones'%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T23:47:15,925][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> adding 5 nodes in different zones and do rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T23:47:15,936][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> start the shard (primary)%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnassignedShardsWithUnbalancedZones(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)",
  "startTimestamp": 1474195635918,
  "executionTime": 21
 }
]

[
 "TEST_STARTED",
 "ID#testFullAwareness2(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T23:47:15,946][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Building initial routing table for 'fullAwareness2'%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T23:47:15,946][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> adding two nodes on same rack and do rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T23:47:15,947][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> start the shards (primaries)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T23:47:15,947][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> replica will not start because we have only one rack value%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T23:47:15,947][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> add a new node with a new rack and reroute%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T23:47:15,948][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> complete relocation%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T23:47:15,948][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T23:47:15,948][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> do another reroute, make sure nothing moves%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T23:47:15,948][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> add another node with a new rack, make sure nothing moves%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFullAwareness2(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)",
  "startTimestamp": 1474195635940,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testMoveShardOnceNewNodeWithAttributeAdded3(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T23:47:15,955][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Building initial routing table for 'moveShardOnceNewNodeWithAttributeAdded3'%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T23:47:15,955][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> adding two nodes on same rack and do rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T23:47:15,956][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Initializing shards: [[test][4], node[node2], [P], recovery_source[new shard recovery], s[INITIALIZING], a[id=WTCblYqtSQKaHgX-EG6N-Q], unassigned_info[[reason=INDEX_CREATED], at[2016-09-18T10:47:15.955Z], delayed=false, allocation_status[no_attempt]], [test][2], node[node2], [P], recovery_source[new shard recovery], s[INITIALIZING], a[id=vUjn1iZLTbSw1Z2DF2mQKA], unassigned_info[[reason=INDEX_CREATED], at[2016-09-18T10:47:15.955Z], delayed=false, allocation_status[no_attempt]], [test][0], node[node2], [P], recovery_source[new shard recovery], s[INITIALIZING], a[id=5MBSS4gRRvafRKDi3gV2cw], unassigned_info[[reason=INDEX_CREATED], at[2016-09-18T10:47:15.955Z], delayed=false, allocation_status[no_attempt]], [test][1], node[node1], [P], recovery_source[new shard recovery], s[INITIALIZING], a[id=X4V8gL-HRROQOx8fojd87Q], unassigned_info[[reason=INDEX_CREATED], at[2016-09-18T10:47:15.955Z], delayed=false, allocation_status[no_attempt]], [test][3], node[node1], [P], recovery_source[new shard recovery], s[INITIALIZING], a[id=2743j2ueRx6IbJU3xVBPnA], unassigned_info[[reason=INDEX_CREATED], at[2016-09-18T10:47:15.955Z], delayed=false, allocation_status[no_attempt]]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T23:47:15,957][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Started shards: []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T23:47:15,957][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Relocating shards: []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T23:47:15,957][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Unassigned shards: [[test][1], node[null], [R], recovery_source[peer recovery], s[UNASSIGNED], unassigned_info[[reason=INDEX_CREATED], at[2016-09-18T10:47:15.955Z], delayed=false, allocation_status[no_attempt]], [test][4], node[null], [R], recovery_source[peer recovery], s[UNASSIGNED], unassigned_info[[reason=INDEX_CREATED], at[2016-09-18T10:47:15.955Z], delayed=false, allocation_status[no_attempt]], [test][2], node[null], [R], recovery_source[peer recovery], s[UNASSIGNED], unassigned_info[[reason=INDEX_CREATED], at[2016-09-18T10:47:15.955Z], delayed=false, allocation_status[no_attempt]], [test][3], node[null], [R], recovery_source[peer recovery], s[UNASSIGNED], unassigned_info[[reason=INDEX_CREATED], at[2016-09-18T10:47:15.955Z], delayed=false, allocation_status[no_attempt]], [test][0], node[null], [R], recovery_source[peer recovery], s[UNASSIGNED], unassigned_info[[reason=INDEX_CREATED], at[2016-09-18T10:47:15.955Z], delayed=false, allocation_status[no_attempt]]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T23:47:15,957][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> start the shards (primaries)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T23:47:15,958][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> start the shards (replicas)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T23:47:15,958][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][1], [test][3], [test][4], [test][2], [test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T23:47:15,958][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> add a new node with a new rack and reroute%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T23:47:15,960][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> complete initializing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T23:47:15,961][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> run it again, since we still might have relocation%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T23:47:15,962][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> do another reroute, make sure nothing moves%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T23:47:15,962][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> add another node with a new rack, some more relocation should happen%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T23:47:15,963][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> complete relocation%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T23:47:15,964][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> do another reroute, make sure nothing moves%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMoveShardOnceNewNodeWithAttributeAdded3(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)",
  "startTimestamp": 1474195635949,
  "executionTime": 15
 }
]

[
 "TEST_STARTED",
 "ID#testMoveShardOnceNewNodeWithAttributeAdded5(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T23:47:15,970][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Building initial routing table for 'moveShardOnceNewNodeWithAttributeAdded5'%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T23:47:15,971][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> adding two nodes on same rack and do rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T23:47:15,971][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> start the shards (primaries)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T23:47:15,972][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> start the shards (replicas)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T23:47:15,973][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> add a new node with a new rack and reroute%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T23:47:15,973][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> complete relocation%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T23:47:15,974][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T23:47:15,974][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> do another reroute, make sure nothing moves%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T23:47:15,975][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> add another node with a new rack, we will have another relocation%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T23:47:15,975][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> complete relocation%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T23:47:15,975][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> make sure another reroute does not move things%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMoveShardOnceNewNodeWithAttributeAdded5(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)",
  "startTimestamp": 1474195635964,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testMoveShardOnceNewNodeWithAttributeAdded6(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T23:47:15,983][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Building initial routing table for 'moveShardOnceNewNodeWithAttributeAdded6'%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T23:47:15,983][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> adding two nodes on same rack and do rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T23:47:15,984][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> start the shards (primaries)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T23:47:15,984][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> start the shards (replicas)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T23:47:15,985][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0], [test][0], [test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T23:47:15,985][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> add a new node with a new rack and reroute%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T23:47:15,986][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> complete relocation%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T23:47:15,986][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> do another reroute, make sure nothing moves%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T23:47:15,986][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> add another node with a new rack, we will have another relocation%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T23:47:15,987][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> complete relocation%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T23:47:15,987][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> make sure another reroute does not move things%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMoveShardOnceNewNodeWithAttributeAdded6(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)",
  "startTimestamp": 1474195635976,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testUnbalancedZones(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T23:47:15,994][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Building initial routing table for 'testUnbalancedZones'%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T23:47:15,994][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> adding two nodes in different zones and do rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T23:47:15,995][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> start the shards (primaries)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T23:47:15,996][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][1], [test][3], [test][4], [test][2], [test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T23:47:15,996][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> all replicas are allocated and started since we have on node in each zone%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T23:47:15,996][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> add a new node in zone 'a' and reroute%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T23:47:15,998][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> starting initializing shards on the new node%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnbalancedZones(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)",
  "startTimestamp": 1474195635988,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testMoveShardOnceNewNodeWithAttributeAdded1(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T23:47:16,005][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Building initial routing table for 'moveShardOnceNewNodeWithAttributeAdded1'%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T23:47:16,005][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> adding two nodes on same rack and do rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T23:47:16,006][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> start the shards (primaries)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T23:47:16,006][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> start the shards (replicas)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T23:47:16,007][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T23:47:16,007][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> add a new node with a new rack and reroute%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T23:47:16,007][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> complete relocation%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T23:47:16,008][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> do another reroute, make sure nothing moves%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T23:47:16,008][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> add another node with a new rack, make sure nothing moves%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMoveShardOnceNewNodeWithAttributeAdded1(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)",
  "startTimestamp": 1474195635999,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testMoveShardOnceNewNodeWithAttributeAdded2(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T23:47:16,018][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Building initial routing table for 'moveShardOnceNewNodeWithAttributeAdded2'%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T23:47:16,018][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> adding two nodes on same rack and do rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T23:47:16,018][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> start the shards (primaries)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T23:47:16,019][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> start the shards (replicas)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T23:47:16,019][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T23:47:16,019][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> add a new node with a new rack and reroute%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T23:47:16,020][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> complete relocation%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T23:47:16,020][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> do another reroute, make sure nothing moves%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T23:47:16,020][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> add another node with a new rack, make sure nothing moves%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMoveShardOnceNewNodeWithAttributeAdded2(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)",
  "startTimestamp": 1474195636009,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testFullAwareness1(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T23:47:16,027][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Building initial routing table for 'fullAwareness1'%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T23:47:16,027][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> adding two nodes on same rack and do rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T23:47:16,027][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> start the shards (primaries)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T23:47:16,028][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> replica will not start because we have only one rack value%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T23:47:16,028][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> add a new node with a new rack and reroute%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T23:47:16,028][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> complete relocation%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T23:47:16,029][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T23:47:16,029][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> do another reroute, make sure nothing moves%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T23:47:16,029][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> add another node with a new rack, make sure nothing moves%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFullAwareness1(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)",
  "startTimestamp": 1474195636020,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testMoveShardOnceNewNodeWithAttributeAdded4(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T23:47:16,035][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Building initial routing table for 'moveShardOnceNewNodeWithAttributeAdded4'%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T23:47:16,036][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> adding two nodes on same rack and do rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T23:47:16,037][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> start the shards (primaries)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T23:47:16,038][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> start the shards (replicas)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T23:47:16,039][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test2][1], [test2][3], [test1][4], [test1][2], [test1][0], [test2][4], [test2][2], [test2][0], [test1][1], [test1][3]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T23:47:16,039][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> add a new node with a new rack and reroute%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T23:47:16,040][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> complete initializing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T23:47:16,040][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> complete initializing round: [0]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T23:47:16,059][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> complete initializing round: [1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T23:47:16,061][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> do another reroute, make sure nothing moves%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T23:47:16,062][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> add another node with a new rack, some more relocation should happen%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T23:47:16,063][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> complete relocation%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T23:47:16,063][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> complete initializing round: [0]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T23:47:16,064][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> complete initializing round: [1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T23:47:16,064][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> do another reroute, make sure nothing moves%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMoveShardOnceNewNodeWithAttributeAdded4(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)",
  "startTimestamp": 1474195636029,
  "executionTime": 36
 }
]

[
 "TEST_STARTED",
 "ID#testFullAwareness3(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T23:47:16,071][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Building initial routing table for 'fullAwareness3'%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T23:47:16,072][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> adding two nodes on same rack and do rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T23:47:16,073][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> start the shards (primaries)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T23:47:16,073][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> add a new node with a new rack and reroute%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T23:47:16,074][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> complete initializing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T23:47:16,075][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test2][1], [test2][4], [test2][2], [test2][3], [test2][0], [test1][1], [test1][4], [test1][2], [test1][3], [test1][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T23:47:16,075][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> run it again, since we still might have relocation%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T23:47:16,075][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> do another reroute, make sure nothing moves%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T23:47:16,076][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> add another node with a new rack, some more relocation should happen%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T23:47:16,077][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> complete relocation%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-17T23:47:16,078][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] --> do another reroute, make sure nothing moves%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFullAwareness3(org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests)",
  "startTimestamp": 1474195636065,
  "executionTime": 13
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.allocation.AwarenessAllocationTests",
  "startTimestamp": 1474195635904,
  "executionTime": 176
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.slice.DocValuesSliceQueryTests",
   "displayName": "org.elasticsearch.search.slice.DocValuesSliceQueryTests",
   "methodName": null,
   "className": "org.elasticsearch.search.slice.DocValuesSliceQueryTests",
   "children": [
    {
     "id": "ID#testSearch(org.elasticsearch.search.slice.DocValuesSliceQueryTests)",
     "displayName": "testSearch(org.elasticsearch.search.slice.DocValuesSliceQueryTests)",
     "methodName": "testSearch",
     "className": "org.elasticsearch.search.slice.DocValuesSliceQueryTests",
     "children": []
    },
    {
     "id": "ID#testBasics(org.elasticsearch.search.slice.DocValuesSliceQueryTests)",
     "displayName": "testBasics(org.elasticsearch.search.slice.DocValuesSliceQueryTests)",
     "methodName": "testBasics",
     "className": "org.elasticsearch.search.slice.DocValuesSliceQueryTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195636090
 }
]

[
 "TEST_STARTED",
 "ID#testSearch(org.elasticsearch.search.slice.DocValuesSliceQueryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSearch(org.elasticsearch.search.slice.DocValuesSliceQueryTests)",
  "startTimestamp": 1474195636119,
  "executionTime": 181
 }
]

[
 "TEST_STARTED",
 "ID#testBasics(org.elasticsearch.search.slice.DocValuesSliceQueryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBasics(org.elasticsearch.search.slice.DocValuesSliceQueryTests)",
  "startTimestamp": 1474195636301,
  "executionTime": 1
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.slice.DocValuesSliceQueryTests",
  "startTimestamp": 1474195636090,
  "executionTime": 214
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cli.CommandTests",
   "displayName": "org.elasticsearch.cli.CommandTests",
   "methodName": null,
   "className": "org.elasticsearch.cli.CommandTests",
   "children": [
    {
     "id": "ID#testNormalVerbosity(org.elasticsearch.cli.CommandTests)",
     "displayName": "testNormalVerbosity(org.elasticsearch.cli.CommandTests)",
     "methodName": "testNormalVerbosity",
     "className": "org.elasticsearch.cli.CommandTests",
     "children": []
    },
    {
     "id": "ID#testUsageError(org.elasticsearch.cli.CommandTests)",
     "displayName": "testUsageError(org.elasticsearch.cli.CommandTests)",
     "methodName": "testUsageError",
     "className": "org.elasticsearch.cli.CommandTests",
     "children": []
    },
    {
     "id": "ID#testHelp(org.elasticsearch.cli.CommandTests)",
     "displayName": "testHelp(org.elasticsearch.cli.CommandTests)",
     "methodName": "testHelp",
     "className": "org.elasticsearch.cli.CommandTests",
     "children": []
    },
    {
     "id": "ID#testVerboseVerbosity(org.elasticsearch.cli.CommandTests)",
     "displayName": "testVerboseVerbosity(org.elasticsearch.cli.CommandTests)",
     "methodName": "testVerboseVerbosity",
     "className": "org.elasticsearch.cli.CommandTests",
     "children": []
    },
    {
     "id": "ID#testUserError(org.elasticsearch.cli.CommandTests)",
     "displayName": "testUserError(org.elasticsearch.cli.CommandTests)",
     "methodName": "testUserError",
     "className": "org.elasticsearch.cli.CommandTests",
     "children": []
    },
    {
     "id": "ID#testVerbositySilentAndVerbose(org.elasticsearch.cli.CommandTests)",
     "displayName": "testVerbositySilentAndVerbose(org.elasticsearch.cli.CommandTests)",
     "methodName": "testVerbositySilentAndVerbose",
     "className": "org.elasticsearch.cli.CommandTests",
     "children": []
    },
    {
     "id": "ID#testSilentVerbosity(org.elasticsearch.cli.CommandTests)",
     "displayName": "testSilentVerbosity(org.elasticsearch.cli.CommandTests)",
     "methodName": "testSilentVerbosity",
     "className": "org.elasticsearch.cli.CommandTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195636334
 }
]

[
 "TEST_STARTED",
 "ID#testNormalVerbosity(org.elasticsearch.cli.CommandTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNormalVerbosity(org.elasticsearch.cli.CommandTests)",
  "startTimestamp": 1474195636374,
  "executionTime": 116
 }
]

[
 "TEST_STARTED",
 "ID#testUsageError(org.elasticsearch.cli.CommandTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUsageError(org.elasticsearch.cli.CommandTests)",
  "startTimestamp": 1474195636491,
  "executionTime": 40
 }
]

[
 "TEST_STARTED",
 "ID#testHelp(org.elasticsearch.cli.CommandTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHelp(org.elasticsearch.cli.CommandTests)",
  "startTimestamp": 1474195636531,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testVerboseVerbosity(org.elasticsearch.cli.CommandTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVerboseVerbosity(org.elasticsearch.cli.CommandTests)",
  "startTimestamp": 1474195636537,
  "executionTime": 25
 }
]

[
 "TEST_STARTED",
 "ID#testUserError(org.elasticsearch.cli.CommandTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUserError(org.elasticsearch.cli.CommandTests)",
  "startTimestamp": 1474195636562,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testVerbositySilentAndVerbose(org.elasticsearch.cli.CommandTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVerbositySilentAndVerbose(org.elasticsearch.cli.CommandTests)",
  "startTimestamp": 1474195636566,
  "executionTime": 83
 }
]

[
 "TEST_STARTED",
 "ID#testSilentVerbosity(org.elasticsearch.cli.CommandTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSilentVerbosity(org.elasticsearch.cli.CommandTests)",
  "startTimestamp": 1474195636649,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cli.CommandTests",
  "startTimestamp": 1474195636334,
  "executionTime": 387
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.bucket.terms.TermsAggregatorFactoryTests",
   "displayName": "org.elasticsearch.search.aggregations.bucket.terms.TermsAggregatorFactoryTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.bucket.terms.TermsAggregatorFactoryTests",
   "children": [
    {
     "id": "ID#testSubAggCollectMode(org.elasticsearch.search.aggregations.bucket.terms.TermsAggregatorFactoryTests)",
     "displayName": "testSubAggCollectMode(org.elasticsearch.search.aggregations.bucket.terms.TermsAggregatorFactoryTests)",
     "methodName": "testSubAggCollectMode",
     "className": "org.elasticsearch.search.aggregations.bucket.terms.TermsAggregatorFactoryTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195636727
 }
]

[
 "TEST_STARTED",
 "ID#testSubAggCollectMode(org.elasticsearch.search.aggregations.bucket.terms.TermsAggregatorFactoryTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:16,780][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:16,807][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:16,808][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:16,811][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[7260], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:16,813][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:16,813][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:16,919][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:16,919][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:16,920][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[14]}, bound_addresses {local[14]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:16,923][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{UnEAPat7ReiwXECQTOMK0A}{Fmm4Ybg8TT6Dgea_M9FUJA}{local}{local[14]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:16,924][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:16,955][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:16,970][INFO ][org.elasticsearch.search.aggregations.bucket.terms] [TermsAggregatorFactoryTests#testSubAggCollectMode]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSubAggCollectMode(org.elasticsearch.search.aggregations.bucket.terms.TermsAggregatorFactoryTests)",
  "startTimestamp": 1474195636772,
  "executionTime": 199
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:16,971][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:16,972][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:16,972][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:16,974][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.bucket.terms.TermsAggregatorFactoryTests",
  "startTimestamp": 1474195636727,
  "executionTime": 252
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.search.nested.LongNestedSortingTests",
   "displayName": "org.elasticsearch.index.search.nested.LongNestedSortingTests",
   "methodName": null,
   "className": "org.elasticsearch.index.search.nested.LongNestedSortingTests",
   "children": [
    {
     "id": "ID#testNestedSorting(org.elasticsearch.index.search.nested.LongNestedSortingTests)",
     "displayName": "testNestedSorting(org.elasticsearch.index.search.nested.LongNestedSortingTests)",
     "methodName": "testNestedSorting",
     "className": "org.elasticsearch.index.search.nested.LongNestedSortingTests",
     "children": []
    },
    {
     "id": "ID#testEmpty(org.elasticsearch.index.search.nested.LongNestedSortingTests)",
     "displayName": "testEmpty(org.elasticsearch.index.search.nested.LongNestedSortingTests)",
     "methodName": "testEmpty",
     "className": "org.elasticsearch.index.search.nested.LongNestedSortingTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195637038
 }
]

[
 "TEST_STARTED",
 "ID#testNestedSorting(org.elasticsearch.index.search.nested.LongNestedSortingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T02:47:17,075][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T02:47:17,117][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T02:47:17,117][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T02:47:17,121][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[7260], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T02:47:17,123][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T02:47:17,123][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.test.InternalSettingsPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T02:47:17,237][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T02:47:17,238][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T02:47:17,238][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[15]}, bound_addresses {local[15]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T02:47:17,243][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{Mgh3P-3IQj-13SALJMm0HA}{NY8iWAtmTFySmAzUxMvVDg}{local}{local[15]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T02:47:17,243][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T02:47:17,269][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T02:47:17,291][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T02:47:17,403][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T02:47:17,631][INFO ][org.elasticsearch.index.search.nested] [LongNestedSortingTests#testNestedSorting]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNestedSorting(org.elasticsearch.index.search.nested.LongNestedSortingTests)",
  "startTimestamp": 1474195637060,
  "executionTime": 610
 }
]

[
 "TEST_STARTED",
 "ID#testEmpty(org.elasticsearch.index.search.nested.LongNestedSortingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T02:47:17,678][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T02:47:17,959][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T02:47:17,989][INFO ][org.elasticsearch.index.search.nested] [LongNestedSortingTests#testEmpty]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmpty(org.elasticsearch.index.search.nested.LongNestedSortingTests)",
  "startTimestamp": 1474195637671,
  "executionTime": 402
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T02:47:18,073][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T02:47:18,091][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T02:47:18,091][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T02:47:18,093][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.search.nested.LongNestedSortingTests",
  "startTimestamp": 1474195637038,
  "executionTime": 1203
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.FieldNamesFieldMapperTests",
   "displayName": "org.elasticsearch.index.mapper.FieldNamesFieldMapperTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.FieldNamesFieldMapperTests",
   "children": [
    {
     "id": "ID#testExplicitEnabled(org.elasticsearch.index.mapper.FieldNamesFieldMapperTests)",
     "displayName": "testExplicitEnabled(org.elasticsearch.index.mapper.FieldNamesFieldMapperTests)",
     "methodName": "testExplicitEnabled",
     "className": "org.elasticsearch.index.mapper.FieldNamesFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testFieldType(org.elasticsearch.index.mapper.FieldNamesFieldMapperTests)",
     "displayName": "testFieldType(org.elasticsearch.index.mapper.FieldNamesFieldMapperTests)",
     "methodName": "testFieldType",
     "className": "org.elasticsearch.index.mapper.FieldNamesFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testDisabled(org.elasticsearch.index.mapper.FieldNamesFieldMapperTests)",
     "displayName": "testDisabled(org.elasticsearch.index.mapper.FieldNamesFieldMapperTests)",
     "methodName": "testDisabled",
     "className": "org.elasticsearch.index.mapper.FieldNamesFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testMergingMappings(org.elasticsearch.index.mapper.FieldNamesFieldMapperTests)",
     "displayName": "testMergingMappings(org.elasticsearch.index.mapper.FieldNamesFieldMapperTests)",
     "methodName": "testMergingMappings",
     "className": "org.elasticsearch.index.mapper.FieldNamesFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testInjectIntoDocDuringParsing(org.elasticsearch.index.mapper.FieldNamesFieldMapperTests)",
     "displayName": "testInjectIntoDocDuringParsing(org.elasticsearch.index.mapper.FieldNamesFieldMapperTests)",
     "methodName": "testInjectIntoDocDuringParsing",
     "className": "org.elasticsearch.index.mapper.FieldNamesFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testSeesFieldsFromPlugins(org.elasticsearch.index.mapper.FieldNamesFieldMapperTests)",
     "displayName": "testSeesFieldsFromPlugins(org.elasticsearch.index.mapper.FieldNamesFieldMapperTests)",
     "methodName": "testSeesFieldsFromPlugins",
     "className": "org.elasticsearch.index.mapper.FieldNamesFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testExtractFieldNames(org.elasticsearch.index.mapper.FieldNamesFieldMapperTests)",
     "displayName": "testExtractFieldNames(org.elasticsearch.index.mapper.FieldNamesFieldMapperTests)",
     "methodName": "testExtractFieldNames",
     "className": "org.elasticsearch.index.mapper.FieldNamesFieldMapperTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195638247
 }
]

[
 "TEST_STARTED",
 "ID#testExplicitEnabled(org.elasticsearch.index.mapper.FieldNamesFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:47:18,284][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:47:18,329][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:47:18,329][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:47:18,338][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[7260], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:47:18,340][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:47:18,340][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:47:18,559][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:47:18,559][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:47:18,559][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[16]}, bound_addresses {local[16]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:47:18,561][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{a8LypsIWR4iXvapIrbPlyQ}{3KPUwkjISGWs8mCR1iG2kw}{local}{local[16]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:47:18,562][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:47:18,574][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:47:18,591][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:47:18,655][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:47:18,669][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [FieldNamesFieldMapperTests#testExplicitEnabled]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExplicitEnabled(org.elasticsearch.index.mapper.FieldNamesFieldMapperTests)",
  "startTimestamp": 1474195638276,
  "executionTime": 427
 }
]

[
 "TEST_STARTED",
 "ID#testFieldType(org.elasticsearch.index.mapper.FieldNamesFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:47:18,713][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:47:18,796][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:47:18,850][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [FieldNamesFieldMapperTests#testFieldType]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFieldType(org.elasticsearch.index.mapper.FieldNamesFieldMapperTests)",
  "startTimestamp": 1474195638703,
  "executionTime": 193
 }
]

[
 "TEST_STARTED",
 "ID#testDisabled(org.elasticsearch.index.mapper.FieldNamesFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:47:18,904][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:47:18,964][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:47:18,985][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [FieldNamesFieldMapperTests#testDisabled]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDisabled(org.elasticsearch.index.mapper.FieldNamesFieldMapperTests)",
  "startTimestamp": 1474195638896,
  "executionTime": 117
 }
]

[
 "TEST_STARTED",
 "ID#testMergingMappings(org.elasticsearch.index.mapper.FieldNamesFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:47:19,020][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:47:19,448][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:47:19,465][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [FieldNamesFieldMapperTests#testMergingMappings]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMergingMappings(org.elasticsearch.index.mapper.FieldNamesFieldMapperTests)",
  "startTimestamp": 1474195639014,
  "executionTime": 826
 }
]

[
 "TEST_STARTED",
 "ID#testInjectIntoDocDuringParsing(org.elasticsearch.index.mapper.FieldNamesFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:47:19,845][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:47:19,986][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:47:20,004][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [FieldNamesFieldMapperTests#testInjectIntoDocDuringParsing]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInjectIntoDocDuringParsing(org.elasticsearch.index.mapper.FieldNamesFieldMapperTests)",
  "startTimestamp": 1474195639840,
  "executionTime": 205
 }
]

[
 "TEST_STARTED",
 "ID#testSeesFieldsFromPlugins(org.elasticsearch.index.mapper.FieldNamesFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:47:20,052][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:47:20,232][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:47:20,279][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [FieldNamesFieldMapperTests#testSeesFieldsFromPlugins]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSeesFieldsFromPlugins(org.elasticsearch.index.mapper.FieldNamesFieldMapperTests)",
  "startTimestamp": 1474195640045,
  "executionTime": 272
 }
]

[
 "TEST_STARTED",
 "ID#testExtractFieldNames(org.elasticsearch.index.mapper.FieldNamesFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:47:20,322][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [FieldNamesFieldMapperTests#testExtractFieldNames]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExtractFieldNames(org.elasticsearch.index.mapper.FieldNamesFieldMapperTests)",
  "startTimestamp": 1474195640318,
  "executionTime": 5
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:47:20,323][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:47:20,324][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:47:20,324][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:47:20,325][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.FieldNamesFieldMapperTests",
  "startTimestamp": 1474195638247,
  "executionTime": 2086
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests",
   "children": [
    {
     "id": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
     "displayName": "testQueryWrappedInArray(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
     "methodName": "testQueryWrappedInArray",
     "className": "org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMoreLikeThisBuilder(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
     "displayName": "testMoreLikeThisBuilder(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
     "methodName": "testMoreLikeThisBuilder",
     "className": "org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testItemFromXContent(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
     "displayName": "testItemFromXContent(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
     "methodName": "testItemFromXContent",
     "className": "org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMustRewrite(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
     "displayName": "testMustRewrite(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
     "methodName": "testMustRewrite",
     "className": "org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnsupportedFields(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
     "displayName": "testUnsupportedFields(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
     "methodName": "testUnsupportedFields",
     "className": "org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testValidateEmptyFields(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
     "displayName": "testValidateEmptyFields(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
     "methodName": "testValidateEmptyFields",
     "className": "org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testValidateEmptyLike(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
     "displayName": "testValidateEmptyLike(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
     "methodName": "testValidateEmptyLike",
     "className": "org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testItemSerialization(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
     "displayName": "testItemSerialization(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
     "methodName": "testItemSerialization",
     "className": "org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195640341
 }
]

[
 "TEST_STARTED",
 "ID#testQueryWrappedInArray(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:47:20,392][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{N0jZFVgCT9i7eOT5PtTEKw}{local}{local[242]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:47:20,402][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:47:20,402][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:47:20,430][WARN ][org.elasticsearch.deprecation.index.mapper]  [CJdLnI] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:47:20,430][WARN ][org.elasticsearch.deprecation.index.mapper]  [CJdLnI] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:47:20,430][WARN ][org.elasticsearch.deprecation.index.mapper]  [CJdLnI] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:47:20,432][WARN ][org.elasticsearch.deprecation.index.mapper]  [CJdLnI] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:47:20,432][WARN ][org.elasticsearch.deprecation.index.mapper]  [CJdLnI] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:47:20,433][WARN ][org.elasticsearch.deprecation.index.mapper]  [CJdLnI] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:47:20,441][WARN ][org.elasticsearch.deprecation.index.mapper]  [CJdLnI] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:47:20,441][WARN ][org.elasticsearch.deprecation.index.mapper]  [CJdLnI] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:47:20,441][WARN ][org.elasticsearch.deprecation.index.mapper]  [CJdLnI] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:47:20,453][WARN ][org.elasticsearch.deprecation.index.mapper]  [CJdLnI] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:47:20,453][WARN ][org.elasticsearch.deprecation.index.mapper]  [CJdLnI] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:47:20,453][WARN ][org.elasticsearch.deprecation.index.mapper]  [CJdLnI] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:47:20,455][WARN ][org.elasticsearch.deprecation.index.mapper]  [CJdLnI] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:47:20,456][WARN ][org.elasticsearch.deprecation.index.mapper]  [CJdLnI] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:47:20,456][WARN ][org.elasticsearch.deprecation.index.mapper]  [CJdLnI] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:47:20,459][WARN ][org.elasticsearch.deprecation.index.mapper]  [CJdLnI] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:47:20,459][WARN ][org.elasticsearch.deprecation.index.mapper]  [CJdLnI] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:47:20,459][WARN ][org.elasticsearch.deprecation.index.mapper]  [CJdLnI] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:47:20,461][WARN ][org.elasticsearch.deprecation.index.mapper]  [CJdLnI] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:47:20,461][WARN ][org.elasticsearch.deprecation.index.mapper]  [CJdLnI] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:47:20,461][WARN ][org.elasticsearch.deprecation.index.mapper]  [CJdLnI] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:47:20,466][WARN ][org.elasticsearch.deprecation.index.mapper]  [CJdLnI] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:47:20,466][WARN ][org.elasticsearch.deprecation.index.mapper]  [CJdLnI] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:47:20,466][WARN ][org.elasticsearch.deprecation.index.mapper]  [CJdLnI] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:47:20,470][WARN ][org.elasticsearch.deprecation.index.mapper]  [CJdLnI] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:47:20,470][WARN ][org.elasticsearch.deprecation.index.mapper]  [CJdLnI] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:47:20,470][WARN ][org.elasticsearch.deprecation.index.mapper]  [CJdLnI] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:47:20,474][WARN ][org.elasticsearch.deprecation.index.mapper]  [CJdLnI] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:47:20,474][WARN ][org.elasticsearch.deprecation.index.mapper]  [CJdLnI] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:47:20,474][WARN ][org.elasticsearch.deprecation.index.mapper]  [CJdLnI] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:47:20,477][WARN ][org.elasticsearch.deprecation.index.mapper]  [CJdLnI] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:47:20,477][WARN ][org.elasticsearch.deprecation.index.mapper]  [CJdLnI] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:47:20,477][WARN ][org.elasticsearch.deprecation.index.mapper]  [CJdLnI] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:47:20,482][WARN ][org.elasticsearch.deprecation.index.mapper]  [CJdLnI] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:47:20,482][WARN ][org.elasticsearch.deprecation.index.mapper]  [CJdLnI] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:47:20,482][WARN ][org.elasticsearch.deprecation.index.mapper]  [CJdLnI] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:47:20,484][WARN ][org.elasticsearch.deprecation.index.mapper]  [CJdLnI] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:47:20,484][WARN ][org.elasticsearch.deprecation.index.mapper]  [CJdLnI] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:47:20,484][WARN ][org.elasticsearch.deprecation.index.mapper]  [CJdLnI] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:47:20,490][WARN ][org.elasticsearch.deprecation.index.mapper]  [CJdLnI] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:47:20,491][WARN ][org.elasticsearch.deprecation.index.mapper]  [CJdLnI] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:47:20,491][WARN ][org.elasticsearch.deprecation.index.mapper]  [CJdLnI] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:47:20,496][WARN ][org.elasticsearch.deprecation.index.mapper]  [CJdLnI] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:47:20,496][WARN ][org.elasticsearch.deprecation.index.mapper]  [CJdLnI] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:47:20,496][WARN ][org.elasticsearch.deprecation.index.mapper]  [CJdLnI] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
  "startTimestamp": 1474195640386,
  "executionTime": 133
 }
]

[
 "TEST_STARTED",
 "ID#testMoreLikeThisBuilder(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMoreLikeThisBuilder(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
  "startTimestamp": 1474195640519,
  "executionTime": 18
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:47:20,540][WARN ][org.elasticsearch.deprecation.common] Deprecated field [mlt] used, expected [more_like_this] instead%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
  "startTimestamp": 1474195640537,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
  "startTimestamp": 1474195640541,
  "executionTime": 27
 }
]

[
 "TEST_STARTED",
 "ID#testItemFromXContent(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testItemFromXContent(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
  "startTimestamp": 1474195640568,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
  "startTimestamp": 1474195640570,
  "executionTime": 330
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
  "startTimestamp": 1474195640901,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
  "startTimestamp": 1474195640905,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testMustRewrite(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMustRewrite(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
  "startTimestamp": 1474195640908,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testUnsupportedFields(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnsupportedFields(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
  "startTimestamp": 1474195640911,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testValidateEmptyFields(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidateEmptyFields(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
  "startTimestamp": 1474195640914,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
  "startTimestamp": 1474195640918,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testValidateEmptyLike(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidateEmptyLike(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
  "startTimestamp": 1474195640927,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testItemSerialization(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testItemSerialization(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
  "startTimestamp": 1474195640931,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests)",
  "startTimestamp": 1474195640934,
  "executionTime": 6
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.MoreLikeThisQueryBuilderTests",
  "startTimestamp": 1474195640341,
  "executionTime": 606
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.RegexpQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.RegexpQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.RegexpQueryBuilderTests",
   "children": [
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.RegexpQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.RegexpQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.RegexpQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.RegexpQueryBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.RegexpQueryBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.RegexpQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.RegexpQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.RegexpQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.RegexpQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.RegexpQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.RegexpQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.RegexpQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.RegexpQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.RegexpQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.RegexpQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMustRewrite(org.elasticsearch.index.query.RegexpQueryBuilderTests)",
     "displayName": "testMustRewrite(org.elasticsearch.index.query.RegexpQueryBuilderTests)",
     "methodName": "testMustRewrite",
     "className": "org.elasticsearch.index.query.RegexpQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.RegexpQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.RegexpQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.RegexpQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIllegalArguments(org.elasticsearch.index.query.RegexpQueryBuilderTests)",
     "displayName": "testIllegalArguments(org.elasticsearch.index.query.RegexpQueryBuilderTests)",
     "methodName": "testIllegalArguments",
     "className": "org.elasticsearch.index.query.RegexpQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.RegexpQueryBuilderTests)",
     "displayName": "testQueryWrappedInArray(org.elasticsearch.index.query.RegexpQueryBuilderTests)",
     "methodName": "testQueryWrappedInArray",
     "className": "org.elasticsearch.index.query.RegexpQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.RegexpQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.RegexpQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.RegexpQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParseFailsWithMultipleFields(org.elasticsearch.index.query.RegexpQueryBuilderTests)",
     "displayName": "testParseFailsWithMultipleFields(org.elasticsearch.index.query.RegexpQueryBuilderTests)",
     "methodName": "testParseFailsWithMultipleFields",
     "className": "org.elasticsearch.index.query.RegexpQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testNumeric(org.elasticsearch.index.query.RegexpQueryBuilderTests)",
     "displayName": "testNumeric(org.elasticsearch.index.query.RegexpQueryBuilderTests)",
     "methodName": "testNumeric",
     "className": "org.elasticsearch.index.query.RegexpQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195640955
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.RegexpQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:47:20,997][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{PRi2WNEtQb28MrvRM53zTg}{local}{local[243]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:47:21,010][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:47:21,010][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no plugins loaded%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.RegexpQueryBuilderTests)",
  "startTimestamp": 1474195640992,
  "executionTime": 78
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.RegexpQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.RegexpQueryBuilderTests)",
  "startTimestamp": 1474195641070,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.RegexpQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.RegexpQueryBuilderTests)",
  "startTimestamp": 1474195641073,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.RegexpQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.RegexpQueryBuilderTests)",
  "startTimestamp": 1474195641079,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.RegexpQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.RegexpQueryBuilderTests)",
  "startTimestamp": 1474195641081,
  "executionTime": 15
 }
]

[
 "TEST_STARTED",
 "ID#testMustRewrite(org.elasticsearch.index.query.RegexpQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMustRewrite(org.elasticsearch.index.query.RegexpQueryBuilderTests)",
  "startTimestamp": 1474195641096,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.RegexpQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.RegexpQueryBuilderTests)",
  "startTimestamp": 1474195641099,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalArguments(org.elasticsearch.index.query.RegexpQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalArguments(org.elasticsearch.index.query.RegexpQueryBuilderTests)",
  "startTimestamp": 1474195641102,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testQueryWrappedInArray(org.elasticsearch.index.query.RegexpQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.RegexpQueryBuilderTests)",
  "startTimestamp": 1474195641105,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.RegexpQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.RegexpQueryBuilderTests)",
  "startTimestamp": 1474195641108,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParseFailsWithMultipleFields(org.elasticsearch.index.query.RegexpQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseFailsWithMultipleFields(org.elasticsearch.index.query.RegexpQueryBuilderTests)",
  "startTimestamp": 1474195641110,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testNumeric(org.elasticsearch.index.query.RegexpQueryBuilderTests)"
]

[
 "TEST_IGNORED_ASSUMPTION",
 {
  "description": "ID#testNumeric(org.elasticsearch.index.query.RegexpQueryBuilderTests)",
  "message": "test runs only when at least a type is registered",
  "trace": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException: test runs only when at least a type is registered\r\n\tat __randomizedtesting.SeedInfo.seed([FD13852EF36FC81C:BA0081210A8D01BD]:0)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedTest.assumeTrue(RandomizedTest.java:627)\r\n\tat org.apache.lucene.util.LuceneTestCase.assumeTrue(LuceneTestCase.java:845)\r\n\tat org.elasticsearch.index.query.RegexpQueryBuilderTests.testNumeric(RegexpQueryBuilderTests.java:116)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:49)\r\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n\tat org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:48)\r\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\r\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)\r\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:41)\r\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\r\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:53)\r\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\r\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\r\n\tat org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:54)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)\r\n\tat java.lang.Thread.run(Thread.java:745)\r\n",
  "throwableString": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException: test runs only when at least a type is registered",
  "throwableClass": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException",
  "assertionViolation": false,
  "assumptionViolation": true
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNumeric(org.elasticsearch.index.query.RegexpQueryBuilderTests)",
  "startTimestamp": 1474195641117,
  "executionTime": 5
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.RegexpQueryBuilderTests",
  "startTimestamp": 1474195640955,
  "executionTime": 195
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.xcontent.XContentParserTests",
   "displayName": "org.elasticsearch.common.xcontent.XContentParserTests",
   "methodName": null,
   "className": "org.elasticsearch.common.xcontent.XContentParserTests",
   "children": [
    {
     "id": "ID#testReadListThrowsException(org.elasticsearch.common.xcontent.XContentParserTests)",
     "displayName": "testReadListThrowsException(org.elasticsearch.common.xcontent.XContentParserTests)",
     "methodName": "testReadListThrowsException",
     "className": "org.elasticsearch.common.xcontent.XContentParserTests",
     "children": []
    },
    {
     "id": "ID#testReadList(org.elasticsearch.common.xcontent.XContentParserTests)",
     "displayName": "testReadList(org.elasticsearch.common.xcontent.XContentParserTests)",
     "methodName": "testReadList",
     "className": "org.elasticsearch.common.xcontent.XContentParserTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195641156
 }
]

[
 "TEST_STARTED",
 "ID#testReadListThrowsException(org.elasticsearch.common.xcontent.XContentParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReadListThrowsException(org.elasticsearch.common.xcontent.XContentParserTests)",
  "startTimestamp": 1474195641226,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testReadList(org.elasticsearch.common.xcontent.XContentParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReadList(org.elasticsearch.common.xcontent.XContentParserTests)",
  "startTimestamp": 1474195641229,
  "executionTime": 10
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.xcontent.XContentParserTests",
  "startTimestamp": 1474195641156,
  "executionTime": 101
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.bootstrap.BootstrapSettingsTests",
   "displayName": "org.elasticsearch.bootstrap.BootstrapSettingsTests",
   "methodName": null,
   "className": "org.elasticsearch.bootstrap.BootstrapSettingsTests",
   "children": [
    {
     "id": "ID#testDefaultSettings(org.elasticsearch.bootstrap.BootstrapSettingsTests)",
     "displayName": "testDefaultSettings(org.elasticsearch.bootstrap.BootstrapSettingsTests)",
     "methodName": "testDefaultSettings",
     "className": "org.elasticsearch.bootstrap.BootstrapSettingsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195641263
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultSettings(org.elasticsearch.bootstrap.BootstrapSettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultSettings(org.elasticsearch.bootstrap.BootstrapSettingsTests)",
  "startTimestamp": 1474195641290,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.bootstrap.BootstrapSettingsTests",
  "startTimestamp": 1474195641263,
  "executionTime": 31
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.util.ByteUtilsTests",
   "displayName": "org.elasticsearch.common.util.ByteUtilsTests",
   "methodName": null,
   "className": "org.elasticsearch.common.util.ByteUtilsTests",
   "children": [
    {
     "id": "ID#testFloat(org.elasticsearch.common.util.ByteUtilsTests)",
     "displayName": "testFloat(org.elasticsearch.common.util.ByteUtilsTests)",
     "methodName": "testFloat",
     "className": "org.elasticsearch.common.util.ByteUtilsTests",
     "children": []
    },
    {
     "id": "ID#testZigZag(org.elasticsearch.common.util.ByteUtilsTests)",
     "displayName": "testZigZag(org.elasticsearch.common.util.ByteUtilsTests)",
     "methodName": "testZigZag",
     "className": "org.elasticsearch.common.util.ByteUtilsTests",
     "children": []
    },
    {
     "id": "ID#testVLong(org.elasticsearch.common.util.ByteUtilsTests)",
     "displayName": "testVLong(org.elasticsearch.common.util.ByteUtilsTests)",
     "methodName": "testVLong",
     "className": "org.elasticsearch.common.util.ByteUtilsTests",
     "children": []
    },
    {
     "id": "ID#testDouble(org.elasticsearch.common.util.ByteUtilsTests)",
     "displayName": "testDouble(org.elasticsearch.common.util.ByteUtilsTests)",
     "methodName": "testDouble",
     "className": "org.elasticsearch.common.util.ByteUtilsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195641300
 }
]

[
 "TEST_STARTED",
 "ID#testFloat(org.elasticsearch.common.util.ByteUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFloat(org.elasticsearch.common.util.ByteUtilsTests)",
  "startTimestamp": 1474195641325,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testZigZag(org.elasticsearch.common.util.ByteUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testZigZag(org.elasticsearch.common.util.ByteUtilsTests)",
  "startTimestamp": 1474195641333,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testVLong(org.elasticsearch.common.util.ByteUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVLong(org.elasticsearch.common.util.ByteUtilsTests)",
  "startTimestamp": 1474195641336,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testDouble(org.elasticsearch.common.util.ByteUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDouble(org.elasticsearch.common.util.ByteUtilsTests)",
  "startTimestamp": 1474195641342,
  "executionTime": 7
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.util.ByteUtilsTests",
  "startTimestamp": 1474195641300,
  "executionTime": 51
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.util.CollectionUtilsTests",
   "displayName": "org.elasticsearch.common.util.CollectionUtilsTests",
   "methodName": null,
   "className": "org.elasticsearch.common.util.CollectionUtilsTests",
   "children": [
    {
     "id": "ID#testSimplePartition(org.elasticsearch.common.util.CollectionUtilsTests)",
     "displayName": "testSimplePartition(org.elasticsearch.common.util.CollectionUtilsTests)",
     "methodName": "testSimplePartition",
     "className": "org.elasticsearch.common.util.CollectionUtilsTests",
     "children": []
    },
    {
     "id": "ID#testSortByteRefArray(org.elasticsearch.common.util.CollectionUtilsTests)",
     "displayName": "testSortByteRefArray(org.elasticsearch.common.util.CollectionUtilsTests)",
     "methodName": "testSortByteRefArray",
     "className": "org.elasticsearch.common.util.CollectionUtilsTests",
     "children": []
    },
    {
     "id": "ID#testSingletonPartition(org.elasticsearch.common.util.CollectionUtilsTests)",
     "displayName": "testSingletonPartition(org.elasticsearch.common.util.CollectionUtilsTests)",
     "methodName": "testSingletonPartition",
     "className": "org.elasticsearch.common.util.CollectionUtilsTests",
     "children": []
    },
    {
     "id": "ID#testOversizedPartition(org.elasticsearch.common.util.CollectionUtilsTests)",
     "displayName": "testOversizedPartition(org.elasticsearch.common.util.CollectionUtilsTests)",
     "methodName": "testOversizedPartition",
     "className": "org.elasticsearch.common.util.CollectionUtilsTests",
     "children": []
    },
    {
     "id": "ID#testPerfectPartition(org.elasticsearch.common.util.CollectionUtilsTests)",
     "displayName": "testPerfectPartition(org.elasticsearch.common.util.CollectionUtilsTests)",
     "methodName": "testPerfectPartition",
     "className": "org.elasticsearch.common.util.CollectionUtilsTests",
     "children": []
    },
    {
     "id": "ID#testRotate(org.elasticsearch.common.util.CollectionUtilsTests)",
     "displayName": "testRotate(org.elasticsearch.common.util.CollectionUtilsTests)",
     "methodName": "testRotate",
     "className": "org.elasticsearch.common.util.CollectionUtilsTests",
     "children": []
    },
    {
     "id": "ID#testEmptyPartition(org.elasticsearch.common.util.CollectionUtilsTests)",
     "displayName": "testEmptyPartition(org.elasticsearch.common.util.CollectionUtilsTests)",
     "methodName": "testEmptyPartition",
     "className": "org.elasticsearch.common.util.CollectionUtilsTests",
     "children": []
    },
    {
     "id": "ID#testSortAndDedupByteRefArray(org.elasticsearch.common.util.CollectionUtilsTests)",
     "displayName": "testSortAndDedupByteRefArray(org.elasticsearch.common.util.CollectionUtilsTests)",
     "methodName": "testSortAndDedupByteRefArray",
     "className": "org.elasticsearch.common.util.CollectionUtilsTests",
     "children": []
    },
    {
     "id": "ID#testRotateEmpty(org.elasticsearch.common.util.CollectionUtilsTests)",
     "displayName": "testRotateEmpty(org.elasticsearch.common.util.CollectionUtilsTests)",
     "methodName": "testRotateEmpty",
     "className": "org.elasticsearch.common.util.CollectionUtilsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195641356
 }
]

[
 "TEST_STARTED",
 "ID#testSimplePartition(org.elasticsearch.common.util.CollectionUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimplePartition(org.elasticsearch.common.util.CollectionUtilsTests)",
  "startTimestamp": 1474195641377,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSortByteRefArray(org.elasticsearch.common.util.CollectionUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSortByteRefArray(org.elasticsearch.common.util.CollectionUtilsTests)",
  "startTimestamp": 1474195641379,
  "executionTime": 14
 }
]

[
 "TEST_STARTED",
 "ID#testSingletonPartition(org.elasticsearch.common.util.CollectionUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingletonPartition(org.elasticsearch.common.util.CollectionUtilsTests)",
  "startTimestamp": 1474195641393,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testOversizedPartition(org.elasticsearch.common.util.CollectionUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOversizedPartition(org.elasticsearch.common.util.CollectionUtilsTests)",
  "startTimestamp": 1474195641396,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testPerfectPartition(org.elasticsearch.common.util.CollectionUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPerfectPartition(org.elasticsearch.common.util.CollectionUtilsTests)",
  "startTimestamp": 1474195641398,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRotate(org.elasticsearch.common.util.CollectionUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRotate(org.elasticsearch.common.util.CollectionUtilsTests)",
  "startTimestamp": 1474195641400,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyPartition(org.elasticsearch.common.util.CollectionUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyPartition(org.elasticsearch.common.util.CollectionUtilsTests)",
  "startTimestamp": 1474195641412,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSortAndDedupByteRefArray(org.elasticsearch.common.util.CollectionUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSortAndDedupByteRefArray(org.elasticsearch.common.util.CollectionUtilsTests)",
  "startTimestamp": 1474195641415,
  "executionTime": 24
 }
]

[
 "TEST_STARTED",
 "ID#testRotateEmpty(org.elasticsearch.common.util.CollectionUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRotateEmpty(org.elasticsearch.common.util.CollectionUtilsTests)",
  "startTimestamp": 1474195641439,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.util.CollectionUtilsTests",
  "startTimestamp": 1474195641356,
  "executionTime": 87
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.ingest.SimulatePipelineRequestTests",
   "displayName": "org.elasticsearch.action.ingest.SimulatePipelineRequestTests",
   "methodName": null,
   "className": "org.elasticsearch.action.ingest.SimulatePipelineRequestTests",
   "children": [
    {
     "id": "ID#testSerialization(org.elasticsearch.action.ingest.SimulatePipelineRequestTests)",
     "displayName": "testSerialization(org.elasticsearch.action.ingest.SimulatePipelineRequestTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.action.ingest.SimulatePipelineRequestTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195641448
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.action.ingest.SimulatePipelineRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.action.ingest.SimulatePipelineRequestTests)",
  "startTimestamp": 1474195641486,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.ingest.SimulatePipelineRequestTests",
  "startTimestamp": 1474195641448,
  "executionTime": 42
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.support.AutoCreateIndexTests",
   "displayName": "org.elasticsearch.action.support.AutoCreateIndexTests",
   "methodName": null,
   "className": "org.elasticsearch.action.support.AutoCreateIndexTests",
   "children": [
    {
     "id": "ID#testAutoCreationDisabled(org.elasticsearch.action.support.AutoCreateIndexTests)",
     "displayName": "testAutoCreationDisabled(org.elasticsearch.action.support.AutoCreateIndexTests)",
     "methodName": "testAutoCreationDisabled",
     "className": "org.elasticsearch.action.support.AutoCreateIndexTests",
     "children": []
    },
    {
     "id": "ID#testAutoCreationMultiplePatternsNoWildcards(org.elasticsearch.action.support.AutoCreateIndexTests)",
     "displayName": "testAutoCreationMultiplePatternsNoWildcards(org.elasticsearch.action.support.AutoCreateIndexTests)",
     "methodName": "testAutoCreationMultiplePatternsNoWildcards",
     "className": "org.elasticsearch.action.support.AutoCreateIndexTests",
     "children": []
    },
    {
     "id": "ID#testAutoCreationConflictingPatternsFirstWins(org.elasticsearch.action.support.AutoCreateIndexTests)",
     "displayName": "testAutoCreationConflictingPatternsFirstWins(org.elasticsearch.action.support.AutoCreateIndexTests)",
     "methodName": "testAutoCreationConflictingPatternsFirstWins",
     "className": "org.elasticsearch.action.support.AutoCreateIndexTests",
     "children": []
    },
    {
     "id": "ID#testAutoCreationMultiplePatternsWithWildcards(org.elasticsearch.action.support.AutoCreateIndexTests)",
     "displayName": "testAutoCreationMultiplePatternsWithWildcards(org.elasticsearch.action.support.AutoCreateIndexTests)",
     "methodName": "testAutoCreationMultiplePatternsWithWildcards",
     "className": "org.elasticsearch.action.support.AutoCreateIndexTests",
     "children": []
    },
    {
     "id": "ID#testAutoCreationPatternDisabled(org.elasticsearch.action.support.AutoCreateIndexTests)",
     "displayName": "testAutoCreationPatternDisabled(org.elasticsearch.action.support.AutoCreateIndexTests)",
     "methodName": "testAutoCreationPatternDisabled",
     "className": "org.elasticsearch.action.support.AutoCreateIndexTests",
     "children": []
    },
    {
     "id": "ID#testDynamicMappingDisabled(org.elasticsearch.action.support.AutoCreateIndexTests)",
     "displayName": "testDynamicMappingDisabled(org.elasticsearch.action.support.AutoCreateIndexTests)",
     "methodName": "testDynamicMappingDisabled",
     "className": "org.elasticsearch.action.support.AutoCreateIndexTests",
     "children": []
    },
    {
     "id": "ID#testExistingIndex(org.elasticsearch.action.support.AutoCreateIndexTests)",
     "displayName": "testExistingIndex(org.elasticsearch.action.support.AutoCreateIndexTests)",
     "methodName": "testExistingIndex",
     "className": "org.elasticsearch.action.support.AutoCreateIndexTests",
     "children": []
    },
    {
     "id": "ID#testAutoCreationPatternEnabled(org.elasticsearch.action.support.AutoCreateIndexTests)",
     "displayName": "testAutoCreationPatternEnabled(org.elasticsearch.action.support.AutoCreateIndexTests)",
     "methodName": "testAutoCreationPatternEnabled",
     "className": "org.elasticsearch.action.support.AutoCreateIndexTests",
     "children": []
    },
    {
     "id": "ID#testDefaultAutoCreation(org.elasticsearch.action.support.AutoCreateIndexTests)",
     "displayName": "testDefaultAutoCreation(org.elasticsearch.action.support.AutoCreateIndexTests)",
     "methodName": "testDefaultAutoCreation",
     "className": "org.elasticsearch.action.support.AutoCreateIndexTests",
     "children": []
    },
    {
     "id": "ID#testUpdate(org.elasticsearch.action.support.AutoCreateIndexTests)",
     "displayName": "testUpdate(org.elasticsearch.action.support.AutoCreateIndexTests)",
     "methodName": "testUpdate",
     "className": "org.elasticsearch.action.support.AutoCreateIndexTests",
     "children": []
    },
    {
     "id": "ID#testParseFailed(org.elasticsearch.action.support.AutoCreateIndexTests)",
     "displayName": "testParseFailed(org.elasticsearch.action.support.AutoCreateIndexTests)",
     "methodName": "testParseFailed",
     "className": "org.elasticsearch.action.support.AutoCreateIndexTests",
     "children": []
    },
    {
     "id": "ID#testParseFailedMissingIndex(org.elasticsearch.action.support.AutoCreateIndexTests)",
     "displayName": "testParseFailedMissingIndex(org.elasticsearch.action.support.AutoCreateIndexTests)",
     "methodName": "testParseFailedMissingIndex",
     "className": "org.elasticsearch.action.support.AutoCreateIndexTests",
     "children": []
    },
    {
     "id": "ID#testAutoCreationMultipleIndexNames(org.elasticsearch.action.support.AutoCreateIndexTests)",
     "displayName": "testAutoCreationMultipleIndexNames(org.elasticsearch.action.support.AutoCreateIndexTests)",
     "methodName": "testAutoCreationMultipleIndexNames",
     "className": "org.elasticsearch.action.support.AutoCreateIndexTests",
     "children": []
    },
    {
     "id": "ID#testAutoCreationEnabled(org.elasticsearch.action.support.AutoCreateIndexTests)",
     "displayName": "testAutoCreationEnabled(org.elasticsearch.action.support.AutoCreateIndexTests)",
     "methodName": "testAutoCreationEnabled",
     "className": "org.elasticsearch.action.support.AutoCreateIndexTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195641497
 }
]

[
 "TEST_STARTED",
 "ID#testAutoCreationDisabled(org.elasticsearch.action.support.AutoCreateIndexTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAutoCreationDisabled(org.elasticsearch.action.support.AutoCreateIndexTests)",
  "startTimestamp": 1474195641523,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testAutoCreationMultiplePatternsNoWildcards(org.elasticsearch.action.support.AutoCreateIndexTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAutoCreationMultiplePatternsNoWildcards(org.elasticsearch.action.support.AutoCreateIndexTests)",
  "startTimestamp": 1474195641526,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testAutoCreationConflictingPatternsFirstWins(org.elasticsearch.action.support.AutoCreateIndexTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAutoCreationConflictingPatternsFirstWins(org.elasticsearch.action.support.AutoCreateIndexTests)",
  "startTimestamp": 1474195641529,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testAutoCreationMultiplePatternsWithWildcards(org.elasticsearch.action.support.AutoCreateIndexTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAutoCreationMultiplePatternsWithWildcards(org.elasticsearch.action.support.AutoCreateIndexTests)",
  "startTimestamp": 1474195641533,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testAutoCreationPatternDisabled(org.elasticsearch.action.support.AutoCreateIndexTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAutoCreationPatternDisabled(org.elasticsearch.action.support.AutoCreateIndexTests)",
  "startTimestamp": 1474195641536,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicMappingDisabled(org.elasticsearch.action.support.AutoCreateIndexTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicMappingDisabled(org.elasticsearch.action.support.AutoCreateIndexTests)",
  "startTimestamp": 1474195641539,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testExistingIndex(org.elasticsearch.action.support.AutoCreateIndexTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExistingIndex(org.elasticsearch.action.support.AutoCreateIndexTests)",
  "startTimestamp": 1474195641543,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testAutoCreationPatternEnabled(org.elasticsearch.action.support.AutoCreateIndexTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAutoCreationPatternEnabled(org.elasticsearch.action.support.AutoCreateIndexTests)",
  "startTimestamp": 1474195641546,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultAutoCreation(org.elasticsearch.action.support.AutoCreateIndexTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultAutoCreation(org.elasticsearch.action.support.AutoCreateIndexTests)",
  "startTimestamp": 1474195641550,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testUpdate(org.elasticsearch.action.support.AutoCreateIndexTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:21,559][INFO ][org.elasticsearch.common.settings] [class org.elasticsearch.test.AbstractQueryTestCase] updating [action.auto_create_index] from [false] to [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:21,559][INFO ][org.elasticsearch.common.settings] [class org.elasticsearch.test.AbstractQueryTestCase] updating [action.auto_create_index] from [true] to [logs-*]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUpdate(org.elasticsearch.action.support.AutoCreateIndexTests)",
  "startTimestamp": 1474195641553,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testParseFailed(org.elasticsearch.action.support.AutoCreateIndexTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseFailed(org.elasticsearch.action.support.AutoCreateIndexTests)",
  "startTimestamp": 1474195641560,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testParseFailedMissingIndex(org.elasticsearch.action.support.AutoCreateIndexTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseFailedMissingIndex(org.elasticsearch.action.support.AutoCreateIndexTests)",
  "startTimestamp": 1474195641563,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testAutoCreationMultipleIndexNames(org.elasticsearch.action.support.AutoCreateIndexTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAutoCreationMultipleIndexNames(org.elasticsearch.action.support.AutoCreateIndexTests)",
  "startTimestamp": 1474195641566,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testAutoCreationEnabled(org.elasticsearch.action.support.AutoCreateIndexTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAutoCreationEnabled(org.elasticsearch.action.support.AutoCreateIndexTests)",
  "startTimestamp": 1474195641569,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.support.AutoCreateIndexTests",
  "startTimestamp": 1474195641497,
  "executionTime": 79
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.DocWriteResponseTests",
   "displayName": "org.elasticsearch.action.DocWriteResponseTests",
   "methodName": null,
   "className": "org.elasticsearch.action.DocWriteResponseTests",
   "children": [
    {
     "id": "ID#testToXContentDoesntIncludeForcedRefreshUnlessForced(org.elasticsearch.action.DocWriteResponseTests)",
     "displayName": "testToXContentDoesntIncludeForcedRefreshUnlessForced(org.elasticsearch.action.DocWriteResponseTests)",
     "methodName": "testToXContentDoesntIncludeForcedRefreshUnlessForced",
     "className": "org.elasticsearch.action.DocWriteResponseTests",
     "children": []
    },
    {
     "id": "ID#testGetLocation(org.elasticsearch.action.DocWriteResponseTests)",
     "displayName": "testGetLocation(org.elasticsearch.action.DocWriteResponseTests)",
     "methodName": "testGetLocation",
     "className": "org.elasticsearch.action.DocWriteResponseTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195641583
 }
]

[
 "TEST_STARTED",
 "ID#testToXContentDoesntIncludeForcedRefreshUnlessForced(org.elasticsearch.action.DocWriteResponseTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToXContentDoesntIncludeForcedRefreshUnlessForced(org.elasticsearch.action.DocWriteResponseTests)",
  "startTimestamp": 1474195641613,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testGetLocation(org.elasticsearch.action.DocWriteResponseTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGetLocation(org.elasticsearch.action.DocWriteResponseTests)",
  "startTimestamp": 1474195641615,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.DocWriteResponseTests",
  "startTimestamp": 1474195641583,
  "executionTime": 36
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.discovery.zen.publish.PendingClusterStatesQueueTests",
   "displayName": "org.elasticsearch.discovery.zen.publish.PendingClusterStatesQueueTests",
   "methodName": null,
   "className": "org.elasticsearch.discovery.zen.publish.PendingClusterStatesQueueTests",
   "children": [
    {
     "id": "ID#testFailAllAndClear(org.elasticsearch.discovery.zen.publish.PendingClusterStatesQueueTests)",
     "displayName": "testFailAllAndClear(org.elasticsearch.discovery.zen.publish.PendingClusterStatesQueueTests)",
     "methodName": "testFailAllAndClear",
     "className": "org.elasticsearch.discovery.zen.publish.PendingClusterStatesQueueTests",
     "children": []
    },
    {
     "id": "ID#testProcessedStateCleansStatesFromOtherMasters(org.elasticsearch.discovery.zen.publish.PendingClusterStatesQueueTests)",
     "displayName": "testProcessedStateCleansStatesFromOtherMasters(org.elasticsearch.discovery.zen.publish.PendingClusterStatesQueueTests)",
     "methodName": "testProcessedStateCleansStatesFromOtherMasters",
     "className": "org.elasticsearch.discovery.zen.publish.PendingClusterStatesQueueTests",
     "children": []
    },
    {
     "id": "ID#testDroppingStatesAtCapacity(org.elasticsearch.discovery.zen.publish.PendingClusterStatesQueueTests)",
     "displayName": "testDroppingStatesAtCapacity(org.elasticsearch.discovery.zen.publish.PendingClusterStatesQueueTests)",
     "methodName": "testDroppingStatesAtCapacity",
     "className": "org.elasticsearch.discovery.zen.publish.PendingClusterStatesQueueTests",
     "children": []
    },
    {
     "id": "ID#testSelectNextStateToProcess_empty(org.elasticsearch.discovery.zen.publish.PendingClusterStatesQueueTests)",
     "displayName": "testSelectNextStateToProcess_empty(org.elasticsearch.discovery.zen.publish.PendingClusterStatesQueueTests)",
     "methodName": "testSelectNextStateToProcess_empty",
     "className": "org.elasticsearch.discovery.zen.publish.PendingClusterStatesQueueTests",
     "children": []
    },
    {
     "id": "ID#testQueueStats(org.elasticsearch.discovery.zen.publish.PendingClusterStatesQueueTests)",
     "displayName": "testQueueStats(org.elasticsearch.discovery.zen.publish.PendingClusterStatesQueueTests)",
     "methodName": "testQueueStats",
     "className": "org.elasticsearch.discovery.zen.publish.PendingClusterStatesQueueTests",
     "children": []
    },
    {
     "id": "ID#testSimpleQueueSameMaster(org.elasticsearch.discovery.zen.publish.PendingClusterStatesQueueTests)",
     "displayName": "testSimpleQueueSameMaster(org.elasticsearch.discovery.zen.publish.PendingClusterStatesQueueTests)",
     "methodName": "testSimpleQueueSameMaster",
     "className": "org.elasticsearch.discovery.zen.publish.PendingClusterStatesQueueTests",
     "children": []
    },
    {
     "id": "ID#testFailedStateCleansSupersededStatesOnly(org.elasticsearch.discovery.zen.publish.PendingClusterStatesQueueTests)",
     "displayName": "testFailedStateCleansSupersededStatesOnly(org.elasticsearch.discovery.zen.publish.PendingClusterStatesQueueTests)",
     "methodName": "testFailedStateCleansSupersededStatesOnly",
     "className": "org.elasticsearch.discovery.zen.publish.PendingClusterStatesQueueTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195641632
 }
]

[
 "TEST_STARTED",
 "ID#testFailAllAndClear(org.elasticsearch.discovery.zen.publish.PendingClusterStatesQueueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailAllAndClear(org.elasticsearch.discovery.zen.publish.PendingClusterStatesQueueTests)",
  "startTimestamp": 1474195641647,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testProcessedStateCleansStatesFromOtherMasters(org.elasticsearch.discovery.zen.publish.PendingClusterStatesQueueTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:47:21,654][WARN ][org.elasticsearch.discovery.zen.publish] received a cluster state (uuid[KleC-61GRbqgFCkUCyHiNg]/v[4]) from a different master than the current one, rejecting (received {master3}{La5mTdHfQSmb2u1267MN-w}{local}{local[249]}, current {master1}{l3JIRbbHQdGksl_6wutxSg}{local}{local[250]})%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:47:21,655][WARN ][org.elasticsearch.discovery.zen.publish] received a cluster state (uuid[e5oMJmk3RiirrmDYpNyBKA]/v[10]) from a different master than the current one, rejecting (received {master3}{La5mTdHfQSmb2u1267MN-w}{local}{local[249]}, current {master1}{l3JIRbbHQdGksl_6wutxSg}{local}{local[250]})%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:47:21,655][WARN ][org.elasticsearch.discovery.zen.publish] received a cluster state (uuid[e8rgaj-dTIa2M3aBXOhsXQ]/v[2]) from a different master than the current one, rejecting (received {master4}{M5XDiYdeQwCxypvuaR7xqg}{local}{local[248]}, current {master1}{l3JIRbbHQdGksl_6wutxSg}{local}{local[250]})%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:47:21,655][WARN ][org.elasticsearch.discovery.zen.publish] received a cluster state (uuid[GIpU0GMjScK-ZxulSZT6qQ]/v[16]) from a different master than the current one, rejecting (received {master3}{La5mTdHfQSmb2u1267MN-w}{local}{local[249]}, current {master1}{l3JIRbbHQdGksl_6wutxSg}{local}{local[250]})%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:47:21,656][WARN ][org.elasticsearch.discovery.zen.publish] received a cluster state (uuid[XnEYfdsqTvuHfj1O0j0n7Q]/v[21]) from a different master than the current one, rejecting (received {master3}{La5mTdHfQSmb2u1267MN-w}{local}{local[249]}, current {master1}{l3JIRbbHQdGksl_6wutxSg}{local}{local[250]})%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:47:21,656][WARN ][org.elasticsearch.discovery.zen.publish] received a cluster state (uuid[_o5tbsr8TWuRFDQQ6PS-9w]/v[1]) from a different master than the current one, rejecting (received {master2}{E2J6MbYrTCG5GwPn4idrjA}{local}{local[251]}, current {master1}{l3JIRbbHQdGksl_6wutxSg}{local}{local[250]})%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:47:21,656][WARN ][org.elasticsearch.discovery.zen.publish] received a cluster state (uuid[L0JAaeG_TjWvTfuaJr_7JQ]/v[3]) from a different master than the current one, rejecting (received {master2}{E2J6MbYrTCG5GwPn4idrjA}{local}{local[251]}, current {master1}{l3JIRbbHQdGksl_6wutxSg}{local}{local[250]})%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:47:21,656][WARN ][org.elasticsearch.discovery.zen.publish] received a cluster state (uuid[P2j_yujMQd-cjkBvTjPtZg]/v[8]) from a different master than the current one, rejecting (received {master4}{M5XDiYdeQwCxypvuaR7xqg}{local}{local[248]}, current {master1}{l3JIRbbHQdGksl_6wutxSg}{local}{local[250]})%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:47:21,656][WARN ][org.elasticsearch.discovery.zen.publish] received a cluster state (uuid[N-u0mlABTB63yiXvrQw1-g]/v[6]) from a different master than the current one, rejecting (received {master2}{E2J6MbYrTCG5GwPn4idrjA}{local}{local[251]}, current {master1}{l3JIRbbHQdGksl_6wutxSg}{local}{local[250]})%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:47:21,656][WARN ][org.elasticsearch.discovery.zen.publish] received a cluster state (uuid[vbS6ok4uSz-fE2xFH1UFeQ]/v[24]) from a different master than the current one, rejecting (received {master3}{La5mTdHfQSmb2u1267MN-w}{local}{local[249]}, current {master1}{l3JIRbbHQdGksl_6wutxSg}{local}{local[250]})%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:47:21,656][WARN ][org.elasticsearch.discovery.zen.publish] received a cluster state (uuid[T_1wZyISRp2_HBLSM0QGlA]/v[11]) from a different master than the current one, rejecting (received {master4}{M5XDiYdeQwCxypvuaR7xqg}{local}{local[248]}, current {master1}{l3JIRbbHQdGksl_6wutxSg}{local}{local[250]})%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:47:21,656][WARN ][org.elasticsearch.discovery.zen.publish] received a cluster state (uuid[UcYXzVOWQz6nFQcc1QCL1Q]/v[26]) from a different master than the current one, rejecting (received {master3}{La5mTdHfQSmb2u1267MN-w}{local}{local[249]}, current {master1}{l3JIRbbHQdGksl_6wutxSg}{local}{local[250]})%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:47:21,656][WARN ][org.elasticsearch.discovery.zen.publish] received a cluster state (uuid[4t6EvkKVSNKwQOngqees6A]/v[9]) from a different master than the current one, rejecting (received {master2}{E2J6MbYrTCG5GwPn4idrjA}{local}{local[251]}, current {master1}{l3JIRbbHQdGksl_6wutxSg}{local}{local[250]})%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:47:21,656][WARN ][org.elasticsearch.discovery.zen.publish] received a cluster state (uuid[ApvsRo0dTLKkmeRsq4b3kA]/v[15]) from a different master than the current one, rejecting (received {master4}{M5XDiYdeQwCxypvuaR7xqg}{local}{local[248]}, current {master1}{l3JIRbbHQdGksl_6wutxSg}{local}{local[250]})%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testProcessedStateCleansStatesFromOtherMasters(org.elasticsearch.discovery.zen.publish.PendingClusterStatesQueueTests)",
  "startTimestamp": 1474195641651,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testDroppingStatesAtCapacity(org.elasticsearch.discovery.zen.publish.PendingClusterStatesQueueTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:47:21,659][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[98BgoxPmRXGAqbIVAzJSfw], v[2], m[master4]]]. more than [8] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:47:21,659][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[9xffpsKnT72fhYwL-AcriA], v[0], m[master3]]]. more than [8] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:47:21,659][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[Qss5qDGnSKm2KM0IMuTX1Q], v[1], m[master2]]]. more than [8] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:47:21,659][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[PuY1O95_R4iLUwA2dYOOWA], v[1], m[master1]]]. more than [8] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:47:21,659][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[-r7gWSX8R0CaUUVBbxOfPw], v[1], m[master4]]]. more than [8] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:47:21,659][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[L_yWTx2XQjO7m5ks9ZpNNw], v[2], m[master1]]]. more than [8] pending states.%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T20:47:21,659][WARN ][org.elasticsearch.discovery.zen.publish] dropping pending state [[uuid[CMC8ygENQ0-570bcM9BwGg], v[1], m[master3]]]. more than [8] pending states.%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDroppingStatesAtCapacity(org.elasticsearch.discovery.zen.publish.PendingClusterStatesQueueTests)",
  "startTimestamp": 1474195641657,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSelectNextStateToProcess_empty(org.elasticsearch.discovery.zen.publish.PendingClusterStatesQueueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSelectNextStateToProcess_empty(org.elasticsearch.discovery.zen.publish.PendingClusterStatesQueueTests)",
  "startTimestamp": 1474195641660,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testQueueStats(org.elasticsearch.discovery.zen.publish.PendingClusterStatesQueueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueueStats(org.elasticsearch.discovery.zen.publish.PendingClusterStatesQueueTests)",
  "startTimestamp": 1474195641661,
  "executionTime": 20
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleQueueSameMaster(org.elasticsearch.discovery.zen.publish.PendingClusterStatesQueueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleQueueSameMaster(org.elasticsearch.discovery.zen.publish.PendingClusterStatesQueueTests)",
  "startTimestamp": 1474195641681,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFailedStateCleansSupersededStatesOnly(org.elasticsearch.discovery.zen.publish.PendingClusterStatesQueueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailedStateCleansSupersededStatesOnly(org.elasticsearch.discovery.zen.publish.PendingClusterStatesQueueTests)",
  "startTimestamp": 1474195641685,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.discovery.zen.publish.PendingClusterStatesQueueTests",
  "startTimestamp": 1474195641632,
  "executionTime": 57
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.fielddata.GeoFieldDataTests",
   "displayName": "org.elasticsearch.index.fielddata.GeoFieldDataTests",
   "methodName": null,
   "className": "org.elasticsearch.index.fielddata.GeoFieldDataTests",
   "children": [
    {
     "id": "ID#testSingleValueWithMissing(org.elasticsearch.index.fielddata.GeoFieldDataTests)",
     "displayName": "testSingleValueWithMissing(org.elasticsearch.index.fielddata.GeoFieldDataTests)",
     "methodName": "testSingleValueWithMissing",
     "className": "org.elasticsearch.index.fielddata.GeoFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testMultiValueWithMissing(org.elasticsearch.index.fielddata.GeoFieldDataTests)",
     "displayName": "testMultiValueWithMissing(org.elasticsearch.index.fielddata.GeoFieldDataTests)",
     "methodName": "testMultiValueWithMissing",
     "className": "org.elasticsearch.index.fielddata.GeoFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testEmpty(org.elasticsearch.index.fielddata.GeoFieldDataTests)",
     "displayName": "testEmpty(org.elasticsearch.index.fielddata.GeoFieldDataTests)",
     "methodName": "testEmpty",
     "className": "org.elasticsearch.index.fielddata.GeoFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testMissingValueForAll(org.elasticsearch.index.fielddata.GeoFieldDataTests)",
     "displayName": "testMissingValueForAll(org.elasticsearch.index.fielddata.GeoFieldDataTests)",
     "methodName": "testMissingValueForAll",
     "className": "org.elasticsearch.index.fielddata.GeoFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testSingleValueAllSet(org.elasticsearch.index.fielddata.GeoFieldDataTests)",
     "displayName": "testSingleValueAllSet(org.elasticsearch.index.fielddata.GeoFieldDataTests)",
     "methodName": "testSingleValueAllSet",
     "className": "org.elasticsearch.index.fielddata.GeoFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testSortMultiValuesFields(org.elasticsearch.index.fielddata.GeoFieldDataTests)",
     "displayName": "testSortMultiValuesFields(org.elasticsearch.index.fielddata.GeoFieldDataTests)",
     "methodName": "testSortMultiValuesFields",
     "className": "org.elasticsearch.index.fielddata.GeoFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testMultiValueAllSet(org.elasticsearch.index.fielddata.GeoFieldDataTests)",
     "displayName": "testMultiValueAllSet(org.elasticsearch.index.fielddata.GeoFieldDataTests)",
     "methodName": "testMultiValueAllSet",
     "className": "org.elasticsearch.index.fielddata.GeoFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testDeletedDocs(org.elasticsearch.index.fielddata.GeoFieldDataTests)",
     "displayName": "testDeletedDocs(org.elasticsearch.index.fielddata.GeoFieldDataTests)",
     "methodName": "testDeletedDocs",
     "className": "org.elasticsearch.index.fielddata.GeoFieldDataTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195641698
 }
]

[
 "TEST_STARTED",
 "ID#testSingleValueWithMissing(org.elasticsearch.index.fielddata.GeoFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:21,730][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:21,751][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:21,752][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:21,755][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[7260], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:21,758][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:21,758][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.test.InternalSettingsPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:22,030][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:22,031][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:22,031][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[17]}, bound_addresses {local[17]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:22,034][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{jOiNV7UHSFiwt7kQ3-euQg}{EFQ42vtDQoe9lvpPRp3EaQ}{local}{local[17]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:22,035][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:22,090][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:22,113][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:22,307][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:22,481][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [GeoFieldDataTests#testSingleValueWithMissing]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleValueWithMissing(org.elasticsearch.index.fielddata.GeoFieldDataTests)",
  "startTimestamp": 1474195641721,
  "executionTime": 794
 }
]

[
 "TEST_STARTED",
 "ID#testMultiValueWithMissing(org.elasticsearch.index.fielddata.GeoFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:22,527][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:22,631][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:22,710][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [GeoFieldDataTests#testMultiValueWithMissing]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultiValueWithMissing(org.elasticsearch.index.fielddata.GeoFieldDataTests)",
  "startTimestamp": 1474195642515,
  "executionTime": 685
 }
]

[
 "TEST_STARTED",
 "ID#testEmpty(org.elasticsearch.index.fielddata.GeoFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:23,206][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:23,280][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:23,299][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [GeoFieldDataTests#testEmpty]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmpty(org.elasticsearch.index.fielddata.GeoFieldDataTests)",
  "startTimestamp": 1474195643200,
  "executionTime": 141
 }
]

[
 "TEST_STARTED",
 "ID#testMissingValueForAll(org.elasticsearch.index.fielddata.GeoFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:23,348][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:23,404][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:23,424][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [GeoFieldDataTests#testMissingValueForAll]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMissingValueForAll(org.elasticsearch.index.fielddata.GeoFieldDataTests)",
  "startTimestamp": 1474195643341,
  "executionTime": 128
 }
]

[
 "TEST_STARTED",
 "ID#testSingleValueAllSet(org.elasticsearch.index.fielddata.GeoFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:23,476][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:23,688][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:23,714][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [GeoFieldDataTests#testSingleValueAllSet]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleValueAllSet(org.elasticsearch.index.fielddata.GeoFieldDataTests)",
  "startTimestamp": 1474195643470,
  "executionTime": 283
 }
]

[
 "TEST_STARTED",
 "ID#testSortMultiValuesFields(org.elasticsearch.index.fielddata.GeoFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:23,760][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:23,837][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:23,852][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [GeoFieldDataTests#testSortMultiValuesFields]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_IGNORED_ASSUMPTION",
 {
  "description": "ID#testSortMultiValuesFields(org.elasticsearch.index.fielddata.GeoFieldDataTests)",
  "message": "Only test on non geo_point fields",
  "trace": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException: Only test on non geo_point fields\r\n\tat __randomizedtesting.SeedInfo.seed([FD13852EF36FC81C:AB7587A03821060A]:0)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedTest.assumeTrue(RandomizedTest.java:627)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedTest.assumeFalse(RandomizedTest.java:635)\r\n\tat org.apache.lucene.util.LuceneTestCase.assumeFalse(LuceneTestCase.java:849)\r\n\tat org.elasticsearch.index.fielddata.AbstractGeoFieldDataTestCase.testSortMultiValuesFields(AbstractGeoFieldDataTestCase.java:88)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.invoke(RandomizedRunner.java:1764)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$8.evaluate(RandomizedRunner.java:871)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$9.evaluate(RandomizedRunner.java:907)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$10.evaluate(RandomizedRunner.java:921)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleSetupTeardownChained$1.evaluate(TestRuleSetupTeardownChained.java:49)\r\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n\tat org.apache.lucene.util.TestRuleThreadAndTestName$1.evaluate(TestRuleThreadAndTestName.java:48)\r\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\r\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl.forkTimeoutingTask(ThreadLeakControl.java:809)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$3.evaluate(ThreadLeakControl.java:460)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSingleTest(RandomizedRunner.java:880)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$5.evaluate(RandomizedRunner.java:781)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$6.evaluate(RandomizedRunner.java:816)\r\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$7.evaluate(RandomizedRunner.java:827)\r\n\tat org.apache.lucene.util.AbstractBeforeAfterRule$1.evaluate(AbstractBeforeAfterRule.java:45)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleStoreClassName$1.evaluate(TestRuleStoreClassName.java:41)\r\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\r\n\tat com.carrotsearch.randomizedtesting.rules.NoShadowingOrOverridesOnMethodsRule$1.evaluate(NoShadowingOrOverridesOnMethodsRule.java:40)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat org.apache.lucene.util.TestRuleAssertionsRequired$1.evaluate(TestRuleAssertionsRequired.java:53)\r\n\tat org.apache.lucene.util.TestRuleMarkFailure$1.evaluate(TestRuleMarkFailure.java:47)\r\n\tat org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures$1.evaluate(TestRuleIgnoreAfterMaxFailures.java:64)\r\n\tat org.apache.lucene.util.TestRuleIgnoreTestSuites$1.evaluate(TestRuleIgnoreTestSuites.java:54)\r\n\tat com.carrotsearch.randomizedtesting.rules.StatementAdapter.evaluate(StatementAdapter.java:36)\r\n\tat com.carrotsearch.randomizedtesting.ThreadLeakControl$StatementRunner.run(ThreadLeakControl.java:367)\r\n\tat java.lang.Thread.run(Thread.java:745)\r\n",
  "throwableString": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException: Only test on non geo_point fields",
  "throwableClass": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException",
  "assertionViolation": false,
  "assumptionViolation": true
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSortMultiValuesFields(org.elasticsearch.index.fielddata.GeoFieldDataTests)",
  "startTimestamp": 1474195643753,
  "executionTime": 125
 }
]

[
 "TEST_STARTED",
 "ID#testMultiValueAllSet(org.elasticsearch.index.fielddata.GeoFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:23,885][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:23,982][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:24,057][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [GeoFieldDataTests#testMultiValueAllSet]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultiValueAllSet(org.elasticsearch.index.fielddata.GeoFieldDataTests)",
  "startTimestamp": 1474195643879,
  "executionTime": 251
 }
]

[
 "TEST_STARTED",
 "ID#testDeletedDocs(org.elasticsearch.index.fielddata.GeoFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:24,137][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:24,205][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:24,223][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [GeoFieldDataTests#testDeletedDocs]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDeletedDocs(org.elasticsearch.index.fielddata.GeoFieldDataTests)",
  "startTimestamp": 1474195644131,
  "executionTime": 234
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:24,366][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:24,366][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:24,367][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:24,368][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.fielddata.GeoFieldDataTests",
  "startTimestamp": 1474195641698,
  "executionTime": 2998
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.discovery.ZenFaultDetectionTests",
   "displayName": "org.elasticsearch.discovery.ZenFaultDetectionTests",
   "methodName": null,
   "className": "org.elasticsearch.discovery.ZenFaultDetectionTests",
   "children": [
    {
     "id": "ID#testMasterFaultDetectionConnectOnDisconnect(org.elasticsearch.discovery.ZenFaultDetectionTests)",
     "displayName": "testMasterFaultDetectionConnectOnDisconnect(org.elasticsearch.discovery.ZenFaultDetectionTests)",
     "methodName": "testMasterFaultDetectionConnectOnDisconnect",
     "className": "org.elasticsearch.discovery.ZenFaultDetectionTests",
     "children": []
    },
    {
     "id": "ID#testNodesFaultDetectionConnectOnDisconnect(org.elasticsearch.discovery.ZenFaultDetectionTests)",
     "displayName": "testNodesFaultDetectionConnectOnDisconnect(org.elasticsearch.discovery.ZenFaultDetectionTests)",
     "methodName": "testNodesFaultDetectionConnectOnDisconnect",
     "className": "org.elasticsearch.discovery.ZenFaultDetectionTests",
     "children": []
    },
    {
     "id": "ID#testMasterFaultDetectionNotSizeLimited(org.elasticsearch.discovery.ZenFaultDetectionTests)",
     "displayName": "testMasterFaultDetectionNotSizeLimited(org.elasticsearch.discovery.ZenFaultDetectionTests)",
     "methodName": "testMasterFaultDetectionNotSizeLimited",
     "className": "org.elasticsearch.discovery.ZenFaultDetectionTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195644712
 }
]

[
 "TEST_STARTED",
 "ID#testMasterFaultDetectionConnectOnDisconnect(org.elasticsearch.discovery.ZenFaultDetectionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:47:24,798][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{fOxxAh4VQpaI3-RoqPKIlg}{local}{local[262]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:47:24,804][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{86Ww088XQAyJJADaoSwEgQ}{local}{local[263]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:47:24,835][INFO ][org.elasticsearch.test.transport] publish_address {local[18]}, bound_addresses {local[18]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:47:24,836][INFO ][org.elasticsearch.test.transport] publish_address {local[19]}, bound_addresses {local[19]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:47:24,850][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {TS_B}{TS_B}{2ayXZ6WtTA2JcsBR3ve1vA}{local}{local[19]}, previous {node}{fOxxAh4VQpaI3-RoqPKIlg}{local}{local[262]}}, removed {{node}{fOxxAh4VQpaI3-RoqPKIlg}{local}{local[262]},}, added {{TS_B}{TS_B}{2ayXZ6WtTA2JcsBR3ve1vA}{local}{local[19]},}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMasterFaultDetectionConnectOnDisconnect(org.elasticsearch.discovery.ZenFaultDetectionTests)",
  "startTimestamp": 1474195644750,
  "executionTime": 164
 }
]

[
 "TEST_STARTED",
 "ID#testNodesFaultDetectionConnectOnDisconnect(org.elasticsearch.discovery.ZenFaultDetectionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:47:24,978][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{-R0eXvruRrGBQoj1u1Xt8A}{local}{local[264]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:47:24,988][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{nACQXBAzTkKNmCungb2QPg}{local}{local[265]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:47:24,991][INFO ][org.elasticsearch.test.transport] publish_address {local[20]}, bound_addresses {local[20]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:47:24,992][INFO ][org.elasticsearch.test.transport] publish_address {local[21]}, bound_addresses {local[21]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:47:25,111][WARN ][org.elasticsearch.test.transport] Transport response handler not found of id [0]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNodesFaultDetectionConnectOnDisconnect(org.elasticsearch.discovery.ZenFaultDetectionTests)",
  "startTimestamp": 1474195644915,
  "executionTime": 201
 }
]

[
 "TEST_STARTED",
 "ID#testMasterFaultDetectionNotSizeLimited(org.elasticsearch.discovery.ZenFaultDetectionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:47:25,180][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{KpCfEnJdRSqvHvG-lft21w}{local}{local[266]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:47:25,190][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{VHk3D8hsRHKyeCpqxWPG-Q}{local}{local[267]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:47:25,192][INFO ][org.elasticsearch.test.transport] publish_address {local[22]}, bound_addresses {local[22]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:47:25,193][INFO ][org.elasticsearch.test.transport] publish_address {local[23]}, bound_addresses {local[23]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:47:25,213][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {TS_B}{TS_B}{if0Vk0LBTf2sdM_yCAKZJg}{local}{local[23]}, previous {node}{KpCfEnJdRSqvHvG-lft21w}{local}{local[266]}}, removed {{node}{KpCfEnJdRSqvHvG-lft21w}{local}{local[266]},}, added {{TS_B}{TS_B}{if0Vk0LBTf2sdM_yCAKZJg}{local}{local[23]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:47:25,220][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {TS_B}{TS_B}{if0Vk0LBTf2sdM_yCAKZJg}{local}{local[23]}, previous {node}{VHk3D8hsRHKyeCpqxWPG-Q}{local}{local[267]}}, removed {{node}{VHk3D8hsRHKyeCpqxWPG-Q}{local}{local[267]},}, added {{TS_A}{TS_A}{RWFU5pmzQoizvHrI9AaH2w}{local}{local[22]},}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMasterFaultDetectionNotSizeLimited(org.elasticsearch.discovery.ZenFaultDetectionTests)",
  "startTimestamp": 1474195645117,
  "executionTime": 2155
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.discovery.ZenFaultDetectionTests",
  "startTimestamp": 1474195644712,
  "executionTime": 2562
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.discovery.zen.NodeRemovalClusterStateTaskExecutorTests",
   "displayName": "org.elasticsearch.discovery.zen.NodeRemovalClusterStateTaskExecutorTests",
   "methodName": null,
   "className": "org.elasticsearch.discovery.zen.NodeRemovalClusterStateTaskExecutorTests",
   "children": [
    {
     "id": "ID#testNotEnoughMasterNodesAfterRemove(org.elasticsearch.discovery.zen.NodeRemovalClusterStateTaskExecutorTests)",
     "displayName": "testNotEnoughMasterNodesAfterRemove(org.elasticsearch.discovery.zen.NodeRemovalClusterStateTaskExecutorTests)",
     "methodName": "testNotEnoughMasterNodesAfterRemove",
     "className": "org.elasticsearch.discovery.zen.NodeRemovalClusterStateTaskExecutorTests",
     "children": []
    },
    {
     "id": "ID#testRerouteAfterRemovingNodes(org.elasticsearch.discovery.zen.NodeRemovalClusterStateTaskExecutorTests)",
     "displayName": "testRerouteAfterRemovingNodes(org.elasticsearch.discovery.zen.NodeRemovalClusterStateTaskExecutorTests)",
     "methodName": "testRerouteAfterRemovingNodes",
     "className": "org.elasticsearch.discovery.zen.NodeRemovalClusterStateTaskExecutorTests",
     "children": []
    },
    {
     "id": "ID#testRemovingNonExistentNodes(org.elasticsearch.discovery.zen.NodeRemovalClusterStateTaskExecutorTests)",
     "displayName": "testRemovingNonExistentNodes(org.elasticsearch.discovery.zen.NodeRemovalClusterStateTaskExecutorTests)",
     "methodName": "testRemovingNonExistentNodes",
     "className": "org.elasticsearch.discovery.zen.NodeRemovalClusterStateTaskExecutorTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195647398
 }
]

[
 "TEST_STARTED",
 "ID#testNotEnoughMasterNodesAfterRemove(org.elasticsearch.discovery.zen.NodeRemovalClusterStateTaskExecutorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNotEnoughMasterNodesAfterRemove(org.elasticsearch.discovery.zen.NodeRemovalClusterStateTaskExecutorTests)",
  "startTimestamp": 1474195647455,
  "executionTime": 21
 }
]

[
 "TEST_STARTED",
 "ID#testRerouteAfterRemovingNodes(org.elasticsearch.discovery.zen.NodeRemovalClusterStateTaskExecutorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRerouteAfterRemovingNodes(org.elasticsearch.discovery.zen.NodeRemovalClusterStateTaskExecutorTests)",
  "startTimestamp": 1474195647476,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testRemovingNonExistentNodes(org.elasticsearch.discovery.zen.NodeRemovalClusterStateTaskExecutorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRemovingNonExistentNodes(org.elasticsearch.discovery.zen.NodeRemovalClusterStateTaskExecutorTests)",
  "startTimestamp": 1474195647485,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.discovery.zen.NodeRemovalClusterStateTaskExecutorTests",
  "startTimestamp": 1474195647398,
  "executionTime": 91
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.shard.SearchOperationListenerTests",
   "displayName": "org.elasticsearch.index.shard.SearchOperationListenerTests",
   "methodName": null,
   "className": "org.elasticsearch.index.shard.SearchOperationListenerTests",
   "children": [
    {
     "id": "ID#testListenersAreExecuted(org.elasticsearch.index.shard.SearchOperationListenerTests)",
     "displayName": "testListenersAreExecuted(org.elasticsearch.index.shard.SearchOperationListenerTests)",
     "methodName": "testListenersAreExecuted",
     "className": "org.elasticsearch.index.shard.SearchOperationListenerTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195647496
 }
]

[
 "TEST_STARTED",
 "ID#testListenersAreExecuted(org.elasticsearch.index.shard.SearchOperationListenerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testListenersAreExecuted(org.elasticsearch.index.shard.SearchOperationListenerTests)",
  "startTimestamp": 1474195647510,
  "executionTime": 5
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.shard.SearchOperationListenerTests",
  "startTimestamp": 1474195647496,
  "executionTime": 22
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.util.URIPatternTests",
   "displayName": "org.elasticsearch.common.util.URIPatternTests",
   "methodName": null,
   "className": "org.elasticsearch.common.util.URIPatternTests",
   "children": [
    {
     "id": "ID#testURIPattern(org.elasticsearch.common.util.URIPatternTests)",
     "displayName": "testURIPattern(org.elasticsearch.common.util.URIPatternTests)",
     "methodName": "testURIPattern",
     "className": "org.elasticsearch.common.util.URIPatternTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195647523
 }
]

[
 "TEST_STARTED",
 "ID#testURIPattern(org.elasticsearch.common.util.URIPatternTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testURIPattern(org.elasticsearch.common.util.URIPatternTests)",
  "startTimestamp": 1474195647542,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.util.URIPatternTests",
  "startTimestamp": 1474195647523,
  "executionTime": 23
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.analysis.synonyms.SynonymsAnalysisTests",
   "displayName": "org.elasticsearch.index.analysis.synonyms.SynonymsAnalysisTests",
   "methodName": null,
   "className": "org.elasticsearch.index.analysis.synonyms.SynonymsAnalysisTests",
   "children": [
    {
     "id": "ID#testSynonymsAnalysis(org.elasticsearch.index.analysis.synonyms.SynonymsAnalysisTests)",
     "displayName": "testSynonymsAnalysis(org.elasticsearch.index.analysis.synonyms.SynonymsAnalysisTests)",
     "methodName": "testSynonymsAnalysis",
     "className": "org.elasticsearch.index.analysis.synonyms.SynonymsAnalysisTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195647553
 }
]

[
 "TEST_STARTED",
 "ID#testSynonymsAnalysis(org.elasticsearch.index.analysis.synonyms.SynonymsAnalysisTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSynonymsAnalysis(org.elasticsearch.index.analysis.synonyms.SynonymsAnalysisTests)",
  "startTimestamp": 1474195647603,
  "executionTime": 101
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.analysis.synonyms.SynonymsAnalysisTests",
  "startTimestamp": 1474195647553,
  "executionTime": 208
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.indices.recovery.StartRecoveryRequestTests",
   "displayName": "org.elasticsearch.indices.recovery.StartRecoveryRequestTests",
   "methodName": null,
   "className": "org.elasticsearch.indices.recovery.StartRecoveryRequestTests",
   "children": [
    {
     "id": "ID#testSerialization(org.elasticsearch.indices.recovery.StartRecoveryRequestTests)",
     "displayName": "testSerialization(org.elasticsearch.indices.recovery.StartRecoveryRequestTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.indices.recovery.StartRecoveryRequestTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195647767
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.indices.recovery.StartRecoveryRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.indices.recovery.StartRecoveryRequestTests)",
  "startTimestamp": 1474195647855,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.indices.recovery.StartRecoveryRequestTests",
  "startTimestamp": 1474195647767,
  "executionTime": 92
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.metrics.GeoCentroidTests",
   "displayName": "org.elasticsearch.search.aggregations.metrics.GeoCentroidTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.metrics.GeoCentroidTests",
   "children": [
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.GeoCentroidTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.GeoCentroidTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.aggregations.metrics.GeoCentroidTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.aggregations.metrics.GeoCentroidTests)",
     "displayName": "testSerialization(org.elasticsearch.search.aggregations.metrics.GeoCentroidTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.aggregations.metrics.GeoCentroidTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.aggregations.metrics.GeoCentroidTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.aggregations.metrics.GeoCentroidTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.aggregations.metrics.GeoCentroidTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195647865
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:27,919][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{U0Ms39PcRyW7gn2Jj3u46A}{local}{local[309]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.GeoCentroidTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.GeoCentroidTests)",
  "startTimestamp": 1474195647933,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.aggregations.metrics.GeoCentroidTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.aggregations.metrics.GeoCentroidTests)",
  "startTimestamp": 1474195647937,
  "executionTime": 39
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.aggregations.metrics.GeoCentroidTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.aggregations.metrics.GeoCentroidTests)",
  "startTimestamp": 1474195647977,
  "executionTime": 9
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.metrics.GeoCentroidTests",
  "startTimestamp": 1474195647865,
  "executionTime": 225
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.GeohashMappingGeoPointTests",
   "displayName": "org.elasticsearch.index.mapper.GeohashMappingGeoPointTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.GeohashMappingGeoPointTests",
   "children": [
    {
     "id": "ID#testNullValue(org.elasticsearch.index.mapper.GeohashMappingGeoPointTests)",
     "displayName": "testNullValue(org.elasticsearch.index.mapper.GeohashMappingGeoPointTests)",
     "methodName": "testNullValue",
     "className": "org.elasticsearch.index.mapper.GeohashMappingGeoPointTests",
     "children": []
    },
    {
     "id": "ID#testGeoHashValue(org.elasticsearch.index.mapper.GeohashMappingGeoPointTests)",
     "displayName": "testGeoHashValue(org.elasticsearch.index.mapper.GeohashMappingGeoPointTests)",
     "methodName": "testGeoHashValue",
     "className": "org.elasticsearch.index.mapper.GeohashMappingGeoPointTests",
     "children": []
    },
    {
     "id": "ID#testLatLonInOneValue(org.elasticsearch.index.mapper.GeohashMappingGeoPointTests)",
     "displayName": "testLatLonInOneValue(org.elasticsearch.index.mapper.GeohashMappingGeoPointTests)",
     "methodName": "testLatLonInOneValue",
     "className": "org.elasticsearch.index.mapper.GeohashMappingGeoPointTests",
     "children": []
    },
    {
     "id": "ID#testGeoHashPrecisionAsInteger(org.elasticsearch.index.mapper.GeohashMappingGeoPointTests)",
     "displayName": "testGeoHashPrecisionAsInteger(org.elasticsearch.index.mapper.GeohashMappingGeoPointTests)",
     "methodName": "testGeoHashPrecisionAsInteger",
     "className": "org.elasticsearch.index.mapper.GeohashMappingGeoPointTests",
     "children": []
    },
    {
     "id": "ID#testGeoHashPrecisionAsLength(org.elasticsearch.index.mapper.GeohashMappingGeoPointTests)",
     "displayName": "testGeoHashPrecisionAsLength(org.elasticsearch.index.mapper.GeohashMappingGeoPointTests)",
     "methodName": "testGeoHashPrecisionAsLength",
     "className": "org.elasticsearch.index.mapper.GeohashMappingGeoPointTests",
     "children": []
    },
    {
     "id": "ID#testLatLonValues(org.elasticsearch.index.mapper.GeohashMappingGeoPointTests)",
     "displayName": "testLatLonValues(org.elasticsearch.index.mapper.GeohashMappingGeoPointTests)",
     "methodName": "testLatLonValues",
     "className": "org.elasticsearch.index.mapper.GeohashMappingGeoPointTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195648097
 }
]

[
 "TEST_STARTED",
 "ID#testNullValue(org.elasticsearch.index.mapper.GeohashMappingGeoPointTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:28,129][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:28,159][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:28,159][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:28,165][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[7260], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:28,168][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:28,168][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.test.InternalSettingsPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:28,329][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:28,329][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:28,330][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[24]}, bound_addresses {local[24]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:28,376][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{nZLQvNyRQVGXePuLfg-O9w}{5nmYse6uS1q9DOoQHu9VTA}{local}{local[24]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:28,377][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:28,388][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:28,421][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:28,806][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:28,958][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [GeohashMappingGeoPointTests#testNullValue]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNullValue(org.elasticsearch.index.mapper.GeohashMappingGeoPointTests)",
  "startTimestamp": 1474195648120,
  "executionTime": 881
 }
]

[
 "TEST_STARTED",
 "ID#testGeoHashValue(org.elasticsearch.index.mapper.GeohashMappingGeoPointTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:29,018][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:29,207][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:29,363][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:29,366][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [GeohashMappingGeoPointTests#testGeoHashValue]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGeoHashValue(org.elasticsearch.index.mapper.GeohashMappingGeoPointTests)",
  "startTimestamp": 1474195649002,
  "executionTime": 396
 }
]

[
 "TEST_STARTED",
 "ID#testLatLonInOneValue(org.elasticsearch.index.mapper.GeohashMappingGeoPointTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:29,483][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:29,972][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:29,985][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:29,986][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [GeohashMappingGeoPointTests#testLatLonInOneValue]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLatLonInOneValue(org.elasticsearch.index.mapper.GeohashMappingGeoPointTests)",
  "startTimestamp": 1474195649398,
  "executionTime": 703
 }
]

[
 "TEST_STARTED",
 "ID#testGeoHashPrecisionAsInteger(org.elasticsearch.index.mapper.GeohashMappingGeoPointTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:30,108][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:30,295][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:30,308][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:30,308][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point geohash_precision parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:30,309][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [GeohashMappingGeoPointTests#testGeoHashPrecisionAsInteger]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGeoHashPrecisionAsInteger(org.elasticsearch.index.mapper.GeohashMappingGeoPointTests)",
  "startTimestamp": 1474195650101,
  "executionTime": 274
 }
]

[
 "TEST_STARTED",
 "ID#testGeoHashPrecisionAsLength(org.elasticsearch.index.mapper.GeohashMappingGeoPointTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:30,381][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:30,546][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:30,559][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:30,559][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point geohash_precision parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:30,559][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [GeohashMappingGeoPointTests#testGeoHashPrecisionAsLength]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGeoHashPrecisionAsLength(org.elasticsearch.index.mapper.GeohashMappingGeoPointTests)",
  "startTimestamp": 1474195650375,
  "executionTime": 214
 }
]

[
 "TEST_STARTED",
 "ID#testLatLonValues(org.elasticsearch.index.mapper.GeohashMappingGeoPointTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:30,594][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:30,702][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:30,752][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:30,753][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [GeohashMappingGeoPointTests#testLatLonValues]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLatLonValues(org.elasticsearch.index.mapper.GeohashMappingGeoPointTests)",
  "startTimestamp": 1474195650589,
  "executionTime": 197
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:30,786][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:30,787][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:30,787][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:30,788][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.GeohashMappingGeoPointTests",
  "startTimestamp": 1474195648097,
  "executionTime": 2697
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.fielddata.ordinals.SingleOrdinalsTests",
   "displayName": "org.elasticsearch.index.fielddata.ordinals.SingleOrdinalsTests",
   "methodName": null,
   "className": "org.elasticsearch.index.fielddata.ordinals.SingleOrdinalsTests",
   "children": [
    {
     "id": "ID#testSvValues(org.elasticsearch.index.fielddata.ordinals.SingleOrdinalsTests)",
     "displayName": "testSvValues(org.elasticsearch.index.fielddata.ordinals.SingleOrdinalsTests)",
     "methodName": "testSvValues",
     "className": "org.elasticsearch.index.fielddata.ordinals.SingleOrdinalsTests",
     "children": []
    },
    {
     "id": "ID#testMvOrdinalsTrigger(org.elasticsearch.index.fielddata.ordinals.SingleOrdinalsTests)",
     "displayName": "testMvOrdinalsTrigger(org.elasticsearch.index.fielddata.ordinals.SingleOrdinalsTests)",
     "methodName": "testMvOrdinalsTrigger",
     "className": "org.elasticsearch.index.fielddata.ordinals.SingleOrdinalsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195650817
 }
]

[
 "TEST_STARTED",
 "ID#testSvValues(org.elasticsearch.index.fielddata.ordinals.SingleOrdinalsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSvValues(org.elasticsearch.index.fielddata.ordinals.SingleOrdinalsTests)",
  "startTimestamp": 1474195650845,
  "executionTime": 249
 }
]

[
 "TEST_STARTED",
 "ID#testMvOrdinalsTrigger(org.elasticsearch.index.fielddata.ordinals.SingleOrdinalsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMvOrdinalsTrigger(org.elasticsearch.index.fielddata.ordinals.SingleOrdinalsTests)",
  "startTimestamp": 1474195651094,
  "executionTime": 237
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.fielddata.ordinals.SingleOrdinalsTests",
  "startTimestamp": 1474195650817,
  "executionTime": 516
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.SimpleQueryParserTests",
   "displayName": "org.elasticsearch.index.query.SimpleQueryParserTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.SimpleQueryParserTests",
   "children": [
    {
     "id": "ID#testAnalyzerWildcardWithSynonyms(org.elasticsearch.index.query.SimpleQueryParserTests)",
     "displayName": "testAnalyzerWildcardWithSynonyms(org.elasticsearch.index.query.SimpleQueryParserTests)",
     "methodName": "testAnalyzerWildcardWithSynonyms",
     "className": "org.elasticsearch.index.query.SimpleQueryParserTests",
     "children": []
    },
    {
     "id": "ID#testAnalyzeWildcard(org.elasticsearch.index.query.SimpleQueryParserTests)",
     "displayName": "testAnalyzeWildcard(org.elasticsearch.index.query.SimpleQueryParserTests)",
     "methodName": "testAnalyzeWildcard",
     "className": "org.elasticsearch.index.query.SimpleQueryParserTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195651401
 }
]

[
 "TEST_STARTED",
 "ID#testAnalyzerWildcardWithSynonyms(org.elasticsearch.index.query.SimpleQueryParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAnalyzerWildcardWithSynonyms(org.elasticsearch.index.query.SimpleQueryParserTests)",
  "startTimestamp": 1474195651417,
  "executionTime": 35
 }
]

[
 "TEST_STARTED",
 "ID#testAnalyzeWildcard(org.elasticsearch.index.query.SimpleQueryParserTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAnalyzeWildcard(org.elasticsearch.index.query.SimpleQueryParserTests)",
  "startTimestamp": 1474195651453,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.SimpleQueryParserTests",
  "startTimestamp": 1474195651401,
  "executionTime": 80
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.GeoDistanceQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.GeoDistanceQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.GeoDistanceQueryBuilderTests",
   "children": [
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.GeoDistanceQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParsingAndToQuery6(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "displayName": "testParsingAndToQuery6(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "methodName": "testParsingAndToQuery6",
     "className": "org.elasticsearch.index.query.GeoDistanceQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParsingAndToQuery1(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "displayName": "testParsingAndToQuery1(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "methodName": "testParsingAndToQuery1",
     "className": "org.elasticsearch.index.query.GeoDistanceQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParsingAndToQuery2(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "displayName": "testParsingAndToQuery2(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "methodName": "testParsingAndToQuery2",
     "className": "org.elasticsearch.index.query.GeoDistanceQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.GeoDistanceQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromCoerceFails(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "displayName": "testFromCoerceFails(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "methodName": "testFromCoerceFails",
     "className": "org.elasticsearch.index.query.GeoDistanceQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParsingAndToQuery12(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "displayName": "testParsingAndToQuery12(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "methodName": "testParsingAndToQuery12",
     "className": "org.elasticsearch.index.query.GeoDistanceQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParsingAndToQuery3(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "displayName": "testParsingAndToQuery3(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "methodName": "testParsingAndToQuery3",
     "className": "org.elasticsearch.index.query.GeoDistanceQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMustRewrite(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "displayName": "testMustRewrite(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "methodName": "testMustRewrite",
     "className": "org.elasticsearch.index.query.GeoDistanceQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParsingAndToQuery11(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "displayName": "testParsingAndToQuery11(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "methodName": "testParsingAndToQuery11",
     "className": "org.elasticsearch.index.query.GeoDistanceQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.GeoDistanceQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "displayName": "testQueryWrappedInArray(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "methodName": "testQueryWrappedInArray",
     "className": "org.elasticsearch.index.query.GeoDistanceQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.GeoDistanceQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParsingAndToQuery5(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "displayName": "testParsingAndToQuery5(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "methodName": "testParsingAndToQuery5",
     "className": "org.elasticsearch.index.query.GeoDistanceQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParsingAndToQuery7(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "displayName": "testParsingAndToQuery7(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "methodName": "testParsingAndToQuery7",
     "className": "org.elasticsearch.index.query.GeoDistanceQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.GeoDistanceQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParsingAndToQuery10(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "displayName": "testParsingAndToQuery10(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "methodName": "testParsingAndToQuery10",
     "className": "org.elasticsearch.index.query.GeoDistanceQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.GeoDistanceQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIgnoreUnmapped(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "displayName": "testIgnoreUnmapped(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "methodName": "testIgnoreUnmapped",
     "className": "org.elasticsearch.index.query.GeoDistanceQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testOptimizeBboxFails(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "displayName": "testOptimizeBboxFails(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "methodName": "testOptimizeBboxFails",
     "className": "org.elasticsearch.index.query.GeoDistanceQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParsingAndToQuery9(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "displayName": "testParsingAndToQuery9(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "methodName": "testParsingAndToQuery9",
     "className": "org.elasticsearch.index.query.GeoDistanceQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIllegalValues(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "displayName": "testIllegalValues(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "methodName": "testIllegalValues",
     "className": "org.elasticsearch.index.query.GeoDistanceQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParsingAndToQuery8(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "displayName": "testParsingAndToQuery8(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "methodName": "testParsingAndToQuery8",
     "className": "org.elasticsearch.index.query.GeoDistanceQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParseFailsWithMultipleFields(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "displayName": "testParseFailsWithMultipleFields(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "methodName": "testParseFailsWithMultipleFields",
     "className": "org.elasticsearch.index.query.GeoDistanceQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.GeoDistanceQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParsingAndToQuery4(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "displayName": "testParsingAndToQuery4(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "methodName": "testParsingAndToQuery4",
     "className": "org.elasticsearch.index.query.GeoDistanceQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJsonIgnoreMalformedFails(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "displayName": "testFromJsonIgnoreMalformedFails(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
     "methodName": "testFromJsonIgnoreMalformedFails",
     "className": "org.elasticsearch.index.query.GeoDistanceQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195651492
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:31,522][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{qS9svnzOTqW1uEYZu-0JqQ}{local}{local[310]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:31,528][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:31,529][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:31,543][WARN ][org.elasticsearch.deprecation.index.mapper]  [guZVH] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:31,543][WARN ][org.elasticsearch.deprecation.index.mapper]  [guZVH] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:31,543][WARN ][org.elasticsearch.deprecation.index.mapper]  [guZVH] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:31,545][WARN ][org.elasticsearch.deprecation.index.mapper]  [guZVH] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:31,545][WARN ][org.elasticsearch.deprecation.index.mapper]  [guZVH] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:31,545][WARN ][org.elasticsearch.deprecation.index.mapper]  [guZVH] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:31,548][WARN ][org.elasticsearch.deprecation.index.mapper]  [guZVH] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:31,548][WARN ][org.elasticsearch.deprecation.index.mapper]  [guZVH] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:31,548][WARN ][org.elasticsearch.deprecation.index.mapper]  [guZVH] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:31,553][WARN ][org.elasticsearch.deprecation.index.mapper]  [guZVH] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:31,553][WARN ][org.elasticsearch.deprecation.index.mapper]  [guZVH] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:31,554][WARN ][org.elasticsearch.deprecation.index.mapper]  [guZVH] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:31,555][WARN ][org.elasticsearch.deprecation.index.mapper]  [guZVH] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:31,555][WARN ][org.elasticsearch.deprecation.index.mapper]  [guZVH] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:31,556][WARN ][org.elasticsearch.deprecation.index.mapper]  [guZVH] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:31,559][WARN ][org.elasticsearch.deprecation.index.mapper]  [guZVH] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:31,559][WARN ][org.elasticsearch.deprecation.index.mapper]  [guZVH] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:31,559][WARN ][org.elasticsearch.deprecation.index.mapper]  [guZVH] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:31,561][WARN ][org.elasticsearch.deprecation.index.mapper]  [guZVH] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:31,561][WARN ][org.elasticsearch.deprecation.index.mapper]  [guZVH] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:31,561][WARN ][org.elasticsearch.deprecation.index.mapper]  [guZVH] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:31,564][WARN ][org.elasticsearch.deprecation.index.mapper]  [guZVH] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:31,564][WARN ][org.elasticsearch.deprecation.index.mapper]  [guZVH] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:31,564][WARN ][org.elasticsearch.deprecation.index.mapper]  [guZVH] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:31,569][WARN ][org.elasticsearch.deprecation.index.mapper]  [guZVH] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:31,569][WARN ][org.elasticsearch.deprecation.index.mapper]  [guZVH] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:31,569][WARN ][org.elasticsearch.deprecation.index.mapper]  [guZVH] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:31,572][WARN ][org.elasticsearch.deprecation.index.mapper]  [guZVH] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:31,572][WARN ][org.elasticsearch.deprecation.index.mapper]  [guZVH] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:31,572][WARN ][org.elasticsearch.deprecation.index.mapper]  [guZVH] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:31,576][WARN ][org.elasticsearch.deprecation.index.mapper]  [guZVH] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:31,577][WARN ][org.elasticsearch.deprecation.index.mapper]  [guZVH] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:31,577][WARN ][org.elasticsearch.deprecation.index.mapper]  [guZVH] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:31,581][WARN ][org.elasticsearch.deprecation.index.mapper]  [guZVH] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:31,581][WARN ][org.elasticsearch.deprecation.index.mapper]  [guZVH] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:31,581][WARN ][org.elasticsearch.deprecation.index.mapper]  [guZVH] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
  "startTimestamp": 1474195651516,
  "executionTime": 68
 }
]

[
 "TEST_STARTED",
 "ID#testParsingAndToQuery6(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsingAndToQuery6(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
  "startTimestamp": 1474195651585,
  "executionTime": 14
 }
]

[
 "TEST_STARTED",
 "ID#testParsingAndToQuery1(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsingAndToQuery1(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
  "startTimestamp": 1474195651599,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParsingAndToQuery2(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsingAndToQuery2(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
  "startTimestamp": 1474195651602,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
  "startTimestamp": 1474195651606,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFromCoerceFails(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromCoerceFails(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
  "startTimestamp": 1474195651609,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testParsingAndToQuery12(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsingAndToQuery12(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
  "startTimestamp": 1474195651612,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testParsingAndToQuery3(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsingAndToQuery3(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
  "startTimestamp": 1474195651615,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testMustRewrite(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMustRewrite(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
  "startTimestamp": 1474195651619,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testParsingAndToQuery11(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsingAndToQuery11(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
  "startTimestamp": 1474195651624,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
  "startTimestamp": 1474195651626,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testQueryWrappedInArray(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
  "startTimestamp": 1474195651629,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
  "startTimestamp": 1474195651632,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testParsingAndToQuery5(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsingAndToQuery5(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
  "startTimestamp": 1474195651640,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testParsingAndToQuery7(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsingAndToQuery7(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
  "startTimestamp": 1474195651643,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
  "startTimestamp": 1474195651652,
  "executionTime": 75
 }
]

[
 "TEST_STARTED",
 "ID#testParsingAndToQuery10(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsingAndToQuery10(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
  "startTimestamp": 1474195651728,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
  "startTimestamp": 1474195651736,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testIgnoreUnmapped(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIgnoreUnmapped(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
  "startTimestamp": 1474195651739,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testOptimizeBboxFails(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOptimizeBboxFails(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
  "startTimestamp": 1474195651742,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testParsingAndToQuery9(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsingAndToQuery9(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
  "startTimestamp": 1474195651745,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalValues(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalValues(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
  "startTimestamp": 1474195651748,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testParsingAndToQuery8(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsingAndToQuery8(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
  "startTimestamp": 1474195651754,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testParseFailsWithMultipleFields(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseFailsWithMultipleFields(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
  "startTimestamp": 1474195651757,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
  "startTimestamp": 1474195651760,
  "executionTime": 15
 }
]

[
 "TEST_STARTED",
 "ID#testParsingAndToQuery4(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsingAndToQuery4(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
  "startTimestamp": 1474195651775,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFromJsonIgnoreMalformedFails(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJsonIgnoreMalformedFails(org.elasticsearch.index.query.GeoDistanceQueryBuilderTests)",
  "startTimestamp": 1474195651778,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.GeoDistanceQueryBuilderTests",
  "startTimestamp": 1474195651492,
  "executionTime": 295
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.DocumentMapperParserTests",
   "displayName": "org.elasticsearch.index.mapper.DocumentMapperParserTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.DocumentMapperParserTests",
   "children": [
    {
     "id": "ID#testFieldNameWithDots(org.elasticsearch.index.mapper.DocumentMapperParserTests)",
     "displayName": "testFieldNameWithDots(org.elasticsearch.index.mapper.DocumentMapperParserTests)",
     "methodName": "testFieldNameWithDots",
     "className": "org.elasticsearch.index.mapper.DocumentMapperParserTests",
     "children": []
    },
    {
     "id": "ID#testTypeLevel(org.elasticsearch.index.mapper.DocumentMapperParserTests)",
     "displayName": "testTypeLevel(org.elasticsearch.index.mapper.DocumentMapperParserTests)",
     "methodName": "testTypeLevel",
     "className": "org.elasticsearch.index.mapper.DocumentMapperParserTests",
     "children": []
    },
    {
     "id": "ID#testFieldNameWithDotsConflict(org.elasticsearch.index.mapper.DocumentMapperParserTests)",
     "displayName": "testFieldNameWithDotsConflict(org.elasticsearch.index.mapper.DocumentMapperParserTests)",
     "methodName": "testFieldNameWithDotsConflict",
     "className": "org.elasticsearch.index.mapper.DocumentMapperParserTests",
     "children": []
    },
    {
     "id": "ID#testFieldNameWithDeepDots(org.elasticsearch.index.mapper.DocumentMapperParserTests)",
     "displayName": "testFieldNameWithDeepDots(org.elasticsearch.index.mapper.DocumentMapperParserTests)",
     "methodName": "testFieldNameWithDeepDots",
     "className": "org.elasticsearch.index.mapper.DocumentMapperParserTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195651792
 }
]

[
 "TEST_STARTED",
 "ID#testFieldNameWithDots(org.elasticsearch.index.mapper.DocumentMapperParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T23:47:31,931][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T23:47:31,970][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T23:47:31,970][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T23:47:31,975][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[7260], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T23:47:31,978][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T23:47:31,978][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T23:47:32,097][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T23:47:32,098][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T23:47:32,098][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[25]}, bound_addresses {local[25]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T23:47:32,100][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{nScEvLvPR1u-VIbxs7Sm6w}{VTVbnHMHT_yx5Bd0Ge67Ig}{local}{local[25]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T23:47:32,101][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T23:47:32,113][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T23:47:32,129][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T23:47:32,188][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T23:47:32,201][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentMapperParserTests#testFieldNameWithDots]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFieldNameWithDots(org.elasticsearch.index.mapper.DocumentMapperParserTests)",
  "startTimestamp": 1474195651923,
  "executionTime": 313
 }
]

[
 "TEST_STARTED",
 "ID#testTypeLevel(org.elasticsearch.index.mapper.DocumentMapperParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T23:47:32,241][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T23:47:32,290][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T23:47:32,305][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentMapperParserTests#testTypeLevel]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTypeLevel(org.elasticsearch.index.mapper.DocumentMapperParserTests)",
  "startTimestamp": 1474195652237,
  "executionTime": 99
 }
]

[
 "TEST_STARTED",
 "ID#testFieldNameWithDotsConflict(org.elasticsearch.index.mapper.DocumentMapperParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T23:47:32,342][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T23:47:32,404][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T23:47:32,429][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentMapperParserTests#testFieldNameWithDotsConflict]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFieldNameWithDotsConflict(org.elasticsearch.index.mapper.DocumentMapperParserTests)",
  "startTimestamp": 1474195652336,
  "executionTime": 137
 }
]

[
 "TEST_STARTED",
 "ID#testFieldNameWithDeepDots(org.elasticsearch.index.mapper.DocumentMapperParserTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T23:47:32,480][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T23:47:32,563][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T23:47:32,601][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DocumentMapperParserTests#testFieldNameWithDeepDots]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFieldNameWithDeepDots(org.elasticsearch.index.mapper.DocumentMapperParserTests)",
  "startTimestamp": 1474195652473,
  "executionTime": 155
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T23:47:32,629][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T23:47:32,629][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T23:47:32,629][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T23:47:32,631][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.DocumentMapperParserTests",
  "startTimestamp": 1474195651792,
  "executionTime": 845
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.UidFieldTypeTests",
   "displayName": "org.elasticsearch.index.mapper.UidFieldTypeTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.UidFieldTypeTests",
   "children": [
    {
     "id": "ID#testRangeQuery(org.elasticsearch.index.mapper.UidFieldTypeTests)",
     "displayName": "testRangeQuery(org.elasticsearch.index.mapper.UidFieldTypeTests)",
     "methodName": "testRangeQuery",
     "className": "org.elasticsearch.index.mapper.UidFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testClone(org.elasticsearch.index.mapper.UidFieldTypeTests)",
     "displayName": "testClone(org.elasticsearch.index.mapper.UidFieldTypeTests)",
     "methodName": "testClone",
     "className": "org.elasticsearch.index.mapper.UidFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testEquals(org.elasticsearch.index.mapper.UidFieldTypeTests)",
     "displayName": "testEquals(org.elasticsearch.index.mapper.UidFieldTypeTests)",
     "methodName": "testEquals",
     "className": "org.elasticsearch.index.mapper.UidFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.UidFieldTypeTests)",
     "displayName": "testCheckCompatibility(org.elasticsearch.index.mapper.UidFieldTypeTests)",
     "methodName": "testCheckCompatibility",
     "className": "org.elasticsearch.index.mapper.UidFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckTypeName(org.elasticsearch.index.mapper.UidFieldTypeTests)",
     "displayName": "testCheckTypeName(org.elasticsearch.index.mapper.UidFieldTypeTests)",
     "methodName": "testCheckTypeName",
     "className": "org.elasticsearch.index.mapper.UidFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testFreeze(org.elasticsearch.index.mapper.UidFieldTypeTests)",
     "displayName": "testFreeze(org.elasticsearch.index.mapper.UidFieldTypeTests)",
     "methodName": "testFreeze",
     "className": "org.elasticsearch.index.mapper.UidFieldTypeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195652643
 }
]

[
 "TEST_STARTED",
 "ID#testRangeQuery(org.elasticsearch.index.mapper.UidFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRangeQuery(org.elasticsearch.index.mapper.UidFieldTypeTests)",
  "startTimestamp": 1474195652656,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testClone(org.elasticsearch.index.mapper.UidFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClone(org.elasticsearch.index.mapper.UidFieldTypeTests)",
  "startTimestamp": 1474195652659,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testEquals(org.elasticsearch.index.mapper.UidFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEquals(org.elasticsearch.index.mapper.UidFieldTypeTests)",
  "startTimestamp": 1474195652661,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCheckCompatibility(org.elasticsearch.index.mapper.UidFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.UidFieldTypeTests)",
  "startTimestamp": 1474195652663,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCheckTypeName(org.elasticsearch.index.mapper.UidFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckTypeName(org.elasticsearch.index.mapper.UidFieldTypeTests)",
  "startTimestamp": 1474195652666,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFreeze(org.elasticsearch.index.mapper.UidFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFreeze(org.elasticsearch.index.mapper.UidFieldTypeTests)",
  "startTimestamp": 1474195652668,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.UidFieldTypeTests",
  "startTimestamp": 1474195652643,
  "executionTime": 29
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.PidFileTests",
   "displayName": "org.elasticsearch.common.PidFileTests",
   "methodName": null,
   "className": "org.elasticsearch.common.PidFileTests",
   "children": [
    {
     "id": "ID#testPidFile(org.elasticsearch.common.PidFileTests)",
     "displayName": "testPidFile(org.elasticsearch.common.PidFileTests)",
     "methodName": "testPidFile",
     "className": "org.elasticsearch.common.PidFileTests",
     "children": []
    },
    {
     "id": "ID#testParentIsFile(org.elasticsearch.common.PidFileTests)",
     "displayName": "testParentIsFile(org.elasticsearch.common.PidFileTests)",
     "methodName": "testParentIsFile",
     "className": "org.elasticsearch.common.PidFileTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195652678
 }
]

[
 "TEST_STARTED",
 "ID#testPidFile(org.elasticsearch.common.PidFileTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPidFile(org.elasticsearch.common.PidFileTests)",
  "startTimestamp": 1474195652692,
  "executionTime": 27
 }
]

[
 "TEST_STARTED",
 "ID#testParentIsFile(org.elasticsearch.common.PidFileTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParentIsFile(org.elasticsearch.common.PidFileTests)",
  "startTimestamp": 1474195652719,
  "executionTime": 4
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.PidFileTests",
  "startTimestamp": 1474195652678,
  "executionTime": 50
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.replication.RecoveryDuringReplicationTests",
   "displayName": "org.elasticsearch.index.replication.RecoveryDuringReplicationTests",
   "methodName": null,
   "className": "org.elasticsearch.index.replication.RecoveryDuringReplicationTests",
   "children": [
    {
     "id": "ID#testIndexingDuringFileRecovery(org.elasticsearch.index.replication.RecoveryDuringReplicationTests)",
     "displayName": "testIndexingDuringFileRecovery(org.elasticsearch.index.replication.RecoveryDuringReplicationTests)",
     "methodName": "testIndexingDuringFileRecovery",
     "className": "org.elasticsearch.index.replication.RecoveryDuringReplicationTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195652741
 }
]

[
 "TEST_STARTED",
 "ID#testIndexingDuringFileRecovery(org.elasticsearch.index.replication.RecoveryDuringReplicationTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:33,617][INFO ][org.elasticsearch.index.replication] [s2] [test][0] --> blocking recovery on stage [INDEX]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:33,637][INFO ][org.elasticsearch.index.replication] [s2] [test][0] --> recovery continues from stage [INDEX]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexingDuringFileRecovery(org.elasticsearch.index.replication.RecoveryDuringReplicationTests)",
  "startTimestamp": 1474195652759,
  "executionTime": 2018
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.replication.RecoveryDuringReplicationTests",
  "startTimestamp": 1474195652741,
  "executionTime": 2093
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.bucket.BucketUtilsTests",
   "displayName": "org.elasticsearch.search.aggregations.bucket.BucketUtilsTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.bucket.BucketUtilsTests",
   "children": [
    {
     "id": "ID#testOptimizesSingleShard(org.elasticsearch.search.aggregations.bucket.BucketUtilsTests)",
     "displayName": "testOptimizesSingleShard(org.elasticsearch.search.aggregations.bucket.BucketUtilsTests)",
     "methodName": "testOptimizesSingleShard",
     "className": "org.elasticsearch.search.aggregations.bucket.BucketUtilsTests",
     "children": []
    },
    {
     "id": "ID#testShardSizeIsGreaterThanGlobalSize(org.elasticsearch.search.aggregations.bucket.BucketUtilsTests)",
     "displayName": "testShardSizeIsGreaterThanGlobalSize(org.elasticsearch.search.aggregations.bucket.BucketUtilsTests)",
     "methodName": "testShardSizeIsGreaterThanGlobalSize",
     "className": "org.elasticsearch.search.aggregations.bucket.BucketUtilsTests",
     "children": []
    },
    {
     "id": "ID#testOverFlow(org.elasticsearch.search.aggregations.bucket.BucketUtilsTests)",
     "displayName": "testOverFlow(org.elasticsearch.search.aggregations.bucket.BucketUtilsTests)",
     "methodName": "testOverFlow",
     "className": "org.elasticsearch.search.aggregations.bucket.BucketUtilsTests",
     "children": []
    },
    {
     "id": "ID#testBadInput(org.elasticsearch.search.aggregations.bucket.BucketUtilsTests)",
     "displayName": "testBadInput(org.elasticsearch.search.aggregations.bucket.BucketUtilsTests)",
     "methodName": "testBadInput",
     "className": "org.elasticsearch.search.aggregations.bucket.BucketUtilsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195654841
 }
]

[
 "TEST_STARTED",
 "ID#testOptimizesSingleShard(org.elasticsearch.search.aggregations.bucket.BucketUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOptimizesSingleShard(org.elasticsearch.search.aggregations.bucket.BucketUtilsTests)",
  "startTimestamp": 1474195654861,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testShardSizeIsGreaterThanGlobalSize(org.elasticsearch.search.aggregations.bucket.BucketUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testShardSizeIsGreaterThanGlobalSize(org.elasticsearch.search.aggregations.bucket.BucketUtilsTests)",
  "startTimestamp": 1474195654863,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testOverFlow(org.elasticsearch.search.aggregations.bucket.BucketUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOverFlow(org.elasticsearch.search.aggregations.bucket.BucketUtilsTests)",
  "startTimestamp": 1474195654865,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testBadInput(org.elasticsearch.search.aggregations.bucket.BucketUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBadInput(org.elasticsearch.search.aggregations.bucket.BucketUtilsTests)",
  "startTimestamp": 1474195654867,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.bucket.BucketUtilsTests",
  "startTimestamp": 1474195654841,
  "executionTime": 30
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.RoutingFieldMapperTests",
   "displayName": "org.elasticsearch.index.mapper.RoutingFieldMapperTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.RoutingFieldMapperTests",
   "children": [
    {
     "id": "ID#testRoutingMapper(org.elasticsearch.index.mapper.RoutingFieldMapperTests)",
     "displayName": "testRoutingMapper(org.elasticsearch.index.mapper.RoutingFieldMapperTests)",
     "methodName": "testRoutingMapper",
     "className": "org.elasticsearch.index.mapper.RoutingFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testIncludeInObjectNotAllowed(org.elasticsearch.index.mapper.RoutingFieldMapperTests)",
     "displayName": "testIncludeInObjectNotAllowed(org.elasticsearch.index.mapper.RoutingFieldMapperTests)",
     "methodName": "testIncludeInObjectNotAllowed",
     "className": "org.elasticsearch.index.mapper.RoutingFieldMapperTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195654876
 }
]

[
 "TEST_STARTED",
 "ID#testRoutingMapper(org.elasticsearch.index.mapper.RoutingFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:34,898][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:34,948][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:34,948][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:34,952][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[7260], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:34,955][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:34,955][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:35,126][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:35,126][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:35,127][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[26]}, bound_addresses {local[26]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:35,209][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{sV5MKI_aQ5y3GLgTRNe-zA}{yW64nkc1Q6mhCJniMnEuwg}{local}{local[26]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:35,210][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:35,373][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:35,394][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:35,946][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:35,959][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [RoutingFieldMapperTests#testRoutingMapper]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRoutingMapper(org.elasticsearch.index.mapper.RoutingFieldMapperTests)",
  "startTimestamp": 1474195654890,
  "executionTime": 1097
 }
]

[
 "TEST_STARTED",
 "ID#testIncludeInObjectNotAllowed(org.elasticsearch.index.mapper.RoutingFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:35,997][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:36,161][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:36,173][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [RoutingFieldMapperTests#testIncludeInObjectNotAllowed]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIncludeInObjectNotAllowed(org.elasticsearch.index.mapper.RoutingFieldMapperTests)",
  "startTimestamp": 1474195655987,
  "executionTime": 213
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:36,200][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:36,201][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:36,201][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:36,202][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.RoutingFieldMapperTests",
  "startTimestamp": 1474195654876,
  "executionTime": 1333
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests",
   "displayName": "org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests",
   "children": [
    {
     "id": "ID#testTermsQuery(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)",
     "displayName": "testTermsQuery(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)",
     "methodName": "testTermsQuery",
     "className": "org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckTypeName(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)",
     "displayName": "testCheckTypeName(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)",
     "methodName": "testCheckTypeName",
     "className": "org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testFieldData(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)",
     "displayName": "testFieldData(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)",
     "methodName": "testFieldData",
     "className": "org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testStats(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)",
     "displayName": "testStats(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)",
     "methodName": "testStats",
     "className": "org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testTermQuery(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)",
     "displayName": "testTermQuery(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)",
     "methodName": "testTermQuery",
     "className": "org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testValueForSearch(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)",
     "displayName": "testValueForSearch(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)",
     "methodName": "testValueForSearch",
     "className": "org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testEquals(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)",
     "displayName": "testEquals(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)",
     "methodName": "testEquals",
     "className": "org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testFreeze(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)",
     "displayName": "testFreeze(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)",
     "methodName": "testFreeze",
     "className": "org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)",
     "displayName": "testCheckCompatibility(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)",
     "methodName": "testCheckCompatibility",
     "className": "org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testRangeQuery(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)",
     "displayName": "testRangeQuery(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)",
     "methodName": "testRangeQuery",
     "className": "org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testClone(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)",
     "displayName": "testClone(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)",
     "methodName": "testClone",
     "className": "org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195656258
 }
]

[
 "TEST_STARTED",
 "ID#testTermsQuery(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTermsQuery(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)",
  "startTimestamp": 1474195656275,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testCheckTypeName(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckTypeName(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)",
  "startTimestamp": 1474195656281,
  "executionTime": 15
 }
]

[
 "TEST_STARTED",
 "ID#testFieldData(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFieldData(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)",
  "startTimestamp": 1474195656296,
  "executionTime": 15
 }
]

[
 "TEST_STARTED",
 "ID#testStats(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStats(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)",
  "startTimestamp": 1474195656311,
  "executionTime": 22
 }
]

[
 "TEST_STARTED",
 "ID#testTermQuery(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTermQuery(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)",
  "startTimestamp": 1474195656333,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testValueForSearch(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValueForSearch(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)",
  "startTimestamp": 1474195656335,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testEquals(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEquals(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)",
  "startTimestamp": 1474195656336,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFreeze(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFreeze(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)",
  "startTimestamp": 1474195656338,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCheckCompatibility(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)",
  "startTimestamp": 1474195656340,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRangeQuery(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRangeQuery(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)",
  "startTimestamp": 1474195656342,
  "executionTime": 1131
 }
]

[
 "TEST_STARTED",
 "ID#testClone(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClone(org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests)",
  "startTimestamp": 1474195657473,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.ScaledFloatFieldTypeTests",
  "startTimestamp": 1474195656258,
  "executionTime": 1222
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.allocation.ShardVersioningTests",
   "displayName": "org.elasticsearch.cluster.routing.allocation.ShardVersioningTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.allocation.ShardVersioningTests",
   "children": [
    {
     "id": "ID#testSimple(org.elasticsearch.cluster.routing.allocation.ShardVersioningTests)",
     "displayName": "testSimple(org.elasticsearch.cluster.routing.allocation.ShardVersioningTests)",
     "methodName": "testSimple",
     "className": "org.elasticsearch.cluster.routing.allocation.ShardVersioningTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195657486
 }
]

[
 "TEST_STARTED",
 "ID#testSimple(org.elasticsearch.cluster.routing.allocation.ShardVersioningTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:47:37,549][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start two nodes%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-19T00:47:37,550][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start all the primary shards for test1, replicas will start initializing%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimple(org.elasticsearch.cluster.routing.allocation.ShardVersioningTests)",
  "startTimestamp": 1474195657541,
  "executionTime": 10
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.allocation.ShardVersioningTests",
  "startTimestamp": 1474195657486,
  "executionTime": 67
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.admin.indices.segments.IndicesSegmentsRequestTests",
   "displayName": "org.elasticsearch.action.admin.indices.segments.IndicesSegmentsRequestTests",
   "methodName": null,
   "className": "org.elasticsearch.action.admin.indices.segments.IndicesSegmentsRequestTests",
   "children": [
    {
     "id": "ID#testRequestOnClosedIndex(org.elasticsearch.action.admin.indices.segments.IndicesSegmentsRequestTests)",
     "displayName": "testRequestOnClosedIndex(org.elasticsearch.action.admin.indices.segments.IndicesSegmentsRequestTests)",
     "methodName": "testRequestOnClosedIndex",
     "className": "org.elasticsearch.action.admin.indices.segments.IndicesSegmentsRequestTests",
     "children": []
    },
    {
     "id": "ID#testVerbose(org.elasticsearch.action.admin.indices.segments.IndicesSegmentsRequestTests)",
     "displayName": "testVerbose(org.elasticsearch.action.admin.indices.segments.IndicesSegmentsRequestTests)",
     "methodName": "testVerbose",
     "className": "org.elasticsearch.action.admin.indices.segments.IndicesSegmentsRequestTests",
     "children": []
    },
    {
     "id": "ID#testAllowNoIndex(org.elasticsearch.action.admin.indices.segments.IndicesSegmentsRequestTests)",
     "displayName": "testAllowNoIndex(org.elasticsearch.action.admin.indices.segments.IndicesSegmentsRequestTests)",
     "methodName": "testAllowNoIndex",
     "className": "org.elasticsearch.action.admin.indices.segments.IndicesSegmentsRequestTests",
     "children": []
    },
    {
     "id": "ID#testRequestOnClosedIndexIgnoreUnavailable(org.elasticsearch.action.admin.indices.segments.IndicesSegmentsRequestTests)",
     "displayName": "testRequestOnClosedIndexIgnoreUnavailable(org.elasticsearch.action.admin.indices.segments.IndicesSegmentsRequestTests)",
     "methodName": "testRequestOnClosedIndexIgnoreUnavailable",
     "className": "org.elasticsearch.action.admin.indices.segments.IndicesSegmentsRequestTests",
     "children": []
    },
    {
     "id": "ID#testBasic(org.elasticsearch.action.admin.indices.segments.IndicesSegmentsRequestTests)",
     "displayName": "testBasic(org.elasticsearch.action.admin.indices.segments.IndicesSegmentsRequestTests)",
     "methodName": "testBasic",
     "className": "org.elasticsearch.action.admin.indices.segments.IndicesSegmentsRequestTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195657560
 }
]

[
 "TEST_STARTED",
 "ID#testRequestOnClosedIndex(org.elasticsearch.action.admin.indices.segments.IndicesSegmentsRequestTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:37,588][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:37,657][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:37,658][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:37,662][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[7260], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:37,665][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:37,665][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.test.InternalSettingsPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:37,768][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:37,768][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:37,769][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[27]}, bound_addresses {local[27]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:37,770][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{EjaiCwi4T1mM29DDOyrzHA}{ZXYearVoSImtxr-FjdJLtA}{local}{local[27]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:37,771][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:37,784][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:37,798][WARN ][org.elasticsearch.index  ] [node_s_0] [test] [index.merge.enabled] is set to false, this should only be used in tests and can cause serious problems in production environments%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:37,803][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:37,805][WARN ][org.elasticsearch.index  ] [node_s_0] [test] [index.merge.enabled] is set to false, this should only be used in tests and can cause serious problems in production environments%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:37,930][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:37,952][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/UIplnRasRruHcujwc6vQeA] create_mapping [type1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:39,479][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] closing indices [[[test/UIplnRasRruHcujwc6vQeA]]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:39,501][INFO ][org.elasticsearch.action.admin.indices.segments] [node_s_0] [IndicesSegmentsRequestTests#testRequestOnClosedIndex]: cleaning up after test%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:39,502][WARN ][org.elasticsearch.index  ] [node_s_0] [test] [index.merge.enabled] is set to false, this should only be used in tests and can cause serious problems in production environments%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:39,503][WARN ][org.elasticsearch.index  ] [node_s_0] [test] [index.merge.enabled] is set to false, this should only be used in tests and can cause serious problems in production environments%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRequestOnClosedIndex(org.elasticsearch.action.admin.indices.segments.IndicesSegmentsRequestTests)",
  "startTimestamp": 1474195657579,
  "executionTime": 1943
 }
]

[
 "TEST_STARTED",
 "ID#testVerbose(org.elasticsearch.action.admin.indices.segments.IndicesSegmentsRequestTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:39,527][WARN ][org.elasticsearch.index  ] [node_s_0] [test] [index.merge.enabled] is set to false, this should only be used in tests and can cause serious problems in production environments%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:39,528][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:39,529][WARN ][org.elasticsearch.index  ] [node_s_0] [test] [index.merge.enabled] is set to false, this should only be used in tests and can cause serious problems in production environments%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:39,572][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:39,586][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/sqWP58iqRxW1bWVO8PuFqw] create_mapping [type1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:41,471][INFO ][org.elasticsearch.action.admin.indices.segments] [node_s_0] [IndicesSegmentsRequestTests#testVerbose]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVerbose(org.elasticsearch.action.admin.indices.segments.IndicesSegmentsRequestTests)",
  "startTimestamp": 1474195659522,
  "executionTime": 1980
 }
]

[
 "TEST_STARTED",
 "ID#testAllowNoIndex(org.elasticsearch.action.admin.indices.segments.IndicesSegmentsRequestTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:41,505][WARN ][org.elasticsearch.index  ] [node_s_0] [test] [index.merge.enabled] is set to false, this should only be used in tests and can cause serious problems in production environments%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:41,507][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:41,508][WARN ][org.elasticsearch.index  ] [node_s_0] [test] [index.merge.enabled] is set to false, this should only be used in tests and can cause serious problems in production environments%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:41,556][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:41,575][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/Um6xSeYZRuadtsOcrLas_Q] create_mapping [type1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:43,429][INFO ][org.elasticsearch.action.admin.indices.segments] [node_s_0] [IndicesSegmentsRequestTests#testAllowNoIndex]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAllowNoIndex(org.elasticsearch.action.admin.indices.segments.IndicesSegmentsRequestTests)",
  "startTimestamp": 1474195661502,
  "executionTime": 1928
 }
]

[
 "TEST_STARTED",
 "ID#testRequestOnClosedIndexIgnoreUnavailable(org.elasticsearch.action.admin.indices.segments.IndicesSegmentsRequestTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:43,434][WARN ][org.elasticsearch.index  ] [node_s_0] [test] [index.merge.enabled] is set to false, this should only be used in tests and can cause serious problems in production environments%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:43,437][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:43,438][WARN ][org.elasticsearch.index  ] [node_s_0] [test] [index.merge.enabled] is set to false, this should only be used in tests and can cause serious problems in production environments%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:43,482][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:43,496][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/j9pyiECITViGpmTzfChU1Q] create_mapping [type1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:44,138][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] closing indices [[[test/j9pyiECITViGpmTzfChU1Q]]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:44,167][INFO ][org.elasticsearch.action.admin.indices.segments] [node_s_0] [IndicesSegmentsRequestTests#testRequestOnClosedIndexIgnoreUnavailable]: cleaning up after test%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:44,168][WARN ][org.elasticsearch.index  ] [node_s_0] [test] [index.merge.enabled] is set to false, this should only be used in tests and can cause serious problems in production environments%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:44,168][WARN ][org.elasticsearch.index  ] [node_s_0] [test] [index.merge.enabled] is set to false, this should only be used in tests and can cause serious problems in production environments%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRequestOnClosedIndexIgnoreUnavailable(org.elasticsearch.action.admin.indices.segments.IndicesSegmentsRequestTests)",
  "startTimestamp": 1474195663430,
  "executionTime": 759
 }
]

[
 "TEST_STARTED",
 "ID#testBasic(org.elasticsearch.action.admin.indices.segments.IndicesSegmentsRequestTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:44,193][WARN ][org.elasticsearch.index  ] [node_s_0] [test] [index.merge.enabled] is set to false, this should only be used in tests and can cause serious problems in production environments%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:44,196][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:44,197][WARN ][org.elasticsearch.index  ] [node_s_0] [test] [index.merge.enabled] is set to false, this should only be used in tests and can cause serious problems in production environments%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:44,325][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:44,345][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/FZ-CdDGoRQK8_w0svnG2ug] create_mapping [type1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:45,241][INFO ][org.elasticsearch.action.admin.indices.segments] [node_s_0] [IndicesSegmentsRequestTests#testBasic]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBasic(org.elasticsearch.action.admin.indices.segments.IndicesSegmentsRequestTests)",
  "startTimestamp": 1474195664189,
  "executionTime": 1080
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:45,269][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:45,269][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:45,270][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:45,271][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.admin.indices.segments.IndicesSegmentsRequestTests",
  "startTimestamp": 1474195657560,
  "executionTime": 7721
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.geo.GeoDistanceTests",
   "displayName": "org.elasticsearch.common.geo.GeoDistanceTests",
   "methodName": null,
   "className": "org.elasticsearch.common.geo.GeoDistanceTests",
   "children": [
    {
     "id": "ID#testDistanceCheck(org.elasticsearch.common.geo.GeoDistanceTests)",
     "displayName": "testDistanceCheck(org.elasticsearch.common.geo.GeoDistanceTests)",
     "methodName": "testDistanceCheck",
     "className": "org.elasticsearch.common.geo.GeoDistanceTests",
     "children": []
    },
    {
     "id": "ID#testInvalidReadFrom(org.elasticsearch.common.geo.GeoDistanceTests)",
     "displayName": "testInvalidReadFrom(org.elasticsearch.common.geo.GeoDistanceTests)",
     "methodName": "testInvalidReadFrom",
     "className": "org.elasticsearch.common.geo.GeoDistanceTests",
     "children": []
    },
    {
     "id": "ID#testGeoDistanceSerialization(org.elasticsearch.common.geo.GeoDistanceTests)",
     "displayName": "testGeoDistanceSerialization(org.elasticsearch.common.geo.GeoDistanceTests)",
     "methodName": "testGeoDistanceSerialization",
     "className": "org.elasticsearch.common.geo.GeoDistanceTests",
     "children": []
    },
    {
     "id": "ID#testArcDistanceVsPlaneInEllipsis(org.elasticsearch.common.geo.GeoDistanceTests)",
     "displayName": "testArcDistanceVsPlaneInEllipsis(org.elasticsearch.common.geo.GeoDistanceTests)",
     "methodName": "testArcDistanceVsPlaneInEllipsis",
     "className": "org.elasticsearch.common.geo.GeoDistanceTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195665287
 }
]

[
 "TEST_STARTED",
 "ID#testDistanceCheck(org.elasticsearch.common.geo.GeoDistanceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDistanceCheck(org.elasticsearch.common.geo.GeoDistanceTests)",
  "startTimestamp": 1474195665308,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidReadFrom(org.elasticsearch.common.geo.GeoDistanceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidReadFrom(org.elasticsearch.common.geo.GeoDistanceTests)",
  "startTimestamp": 1474195665312,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testGeoDistanceSerialization(org.elasticsearch.common.geo.GeoDistanceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGeoDistanceSerialization(org.elasticsearch.common.geo.GeoDistanceTests)",
  "startTimestamp": 1474195665313,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testArcDistanceVsPlaneInEllipsis(org.elasticsearch.common.geo.GeoDistanceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testArcDistanceVsPlaneInEllipsis(org.elasticsearch.common.geo.GeoDistanceTests)",
  "startTimestamp": 1474195665315,
  "executionTime": 151
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.geo.GeoDistanceTests",
  "startTimestamp": 1474195665287,
  "executionTime": 181
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.admin.cluster.storedscripts.GetStoredScriptRequestTests",
   "displayName": "org.elasticsearch.action.admin.cluster.storedscripts.GetStoredScriptRequestTests",
   "methodName": null,
   "className": "org.elasticsearch.action.admin.cluster.storedscripts.GetStoredScriptRequestTests",
   "children": [
    {
     "id": "ID#testGetIndexedScriptRequestSerialization(org.elasticsearch.action.admin.cluster.storedscripts.GetStoredScriptRequestTests)",
     "displayName": "testGetIndexedScriptRequestSerialization(org.elasticsearch.action.admin.cluster.storedscripts.GetStoredScriptRequestTests)",
     "methodName": "testGetIndexedScriptRequestSerialization",
     "className": "org.elasticsearch.action.admin.cluster.storedscripts.GetStoredScriptRequestTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195665473
 }
]

[
 "TEST_STARTED",
 "ID#testGetIndexedScriptRequestSerialization(org.elasticsearch.action.admin.cluster.storedscripts.GetStoredScriptRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGetIndexedScriptRequestSerialization(org.elasticsearch.action.admin.cluster.storedscripts.GetStoredScriptRequestTests)",
  "startTimestamp": 1474195665505,
  "executionTime": 1
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.admin.cluster.storedscripts.GetStoredScriptRequestTests",
  "startTimestamp": 1474195665473,
  "executionTime": 39
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.transport.local.SimpleLocalTransportTests",
   "displayName": "org.elasticsearch.transport.local.SimpleLocalTransportTests",
   "methodName": null,
   "className": "org.elasticsearch.transport.local.SimpleLocalTransportTests",
   "children": [
    {
     "id": "ID#testHelloWorldCompressed(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "displayName": "testHelloWorldCompressed(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "methodName": "testHelloWorldCompressed",
     "className": "org.elasticsearch.transport.local.SimpleLocalTransportTests",
     "children": []
    },
    {
     "id": "ID#testMockFailToSendNoConnectRule(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "displayName": "testMockFailToSendNoConnectRule(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "methodName": "testMockFailToSendNoConnectRule",
     "className": "org.elasticsearch.transport.local.SimpleLocalTransportTests",
     "children": []
    },
    {
     "id": "ID#testConcurrentSendRespondAndDisconnect(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "displayName": "testConcurrentSendRespondAndDisconnect(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "methodName": "testConcurrentSendRespondAndDisconnect",
     "className": "org.elasticsearch.transport.local.SimpleLocalTransportTests",
     "children": []
    },
    {
     "id": "ID#testVoidMessageCompressed(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "displayName": "testVoidMessageCompressed(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "methodName": "testVoidMessageCompressed",
     "className": "org.elasticsearch.transport.local.SimpleLocalTransportTests",
     "children": []
    },
    {
     "id": "ID#testThreadContext(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "displayName": "testThreadContext(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "methodName": "testThreadContext",
     "className": "org.elasticsearch.transport.local.SimpleLocalTransportTests",
     "children": []
    },
    {
     "id": "ID#testTimeoutSendExceptionWithNeverSendingBackResponse(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "displayName": "testTimeoutSendExceptionWithNeverSendingBackResponse(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "methodName": "testTimeoutSendExceptionWithNeverSendingBackResponse",
     "className": "org.elasticsearch.transport.local.SimpleLocalTransportTests",
     "children": []
    },
    {
     "id": "ID#testVersionFrom0to1(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "displayName": "testVersionFrom0to1(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "methodName": "testVersionFrom0to1",
     "className": "org.elasticsearch.transport.local.SimpleLocalTransportTests",
     "children": []
    },
    {
     "id": "ID#testSendRandomRequests(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "displayName": "testSendRandomRequests(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "methodName": "testSendRandomRequests",
     "className": "org.elasticsearch.transport.local.SimpleLocalTransportTests",
     "children": []
    },
    {
     "id": "ID#testTimeoutSendExceptionWithDelayedResponse(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "displayName": "testTimeoutSendExceptionWithDelayedResponse(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "methodName": "testTimeoutSendExceptionWithDelayedResponse",
     "className": "org.elasticsearch.transport.local.SimpleLocalTransportTests",
     "children": []
    },
    {
     "id": "ID#testErrorMessage(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "displayName": "testErrorMessage(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "methodName": "testErrorMessage",
     "className": "org.elasticsearch.transport.local.SimpleLocalTransportTests",
     "children": []
    },
    {
     "id": "ID#testDisconnectListener(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "displayName": "testDisconnectListener(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "methodName": "testDisconnectListener",
     "className": "org.elasticsearch.transport.local.SimpleLocalTransportTests",
     "children": []
    },
    {
     "id": "ID#testHelloWorld(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "displayName": "testHelloWorld(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "methodName": "testHelloWorld",
     "className": "org.elasticsearch.transport.local.SimpleLocalTransportTests",
     "children": []
    },
    {
     "id": "ID#testVersionFrom1to0(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "displayName": "testVersionFrom1to0(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "methodName": "testVersionFrom1to0",
     "className": "org.elasticsearch.transport.local.SimpleLocalTransportTests",
     "children": []
    },
    {
     "id": "ID#testNotifyOnShutdown(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "displayName": "testNotifyOnShutdown(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "methodName": "testNotifyOnShutdown",
     "className": "org.elasticsearch.transport.local.SimpleLocalTransportTests",
     "children": []
    },
    {
     "id": "ID#testBlockingIncomingRequests(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "displayName": "testBlockingIncomingRequests(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "methodName": "testBlockingIncomingRequests",
     "className": "org.elasticsearch.transport.local.SimpleLocalTransportTests",
     "children": []
    },
    {
     "id": "ID#testVersionFrom1to1(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "displayName": "testVersionFrom1to1(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "methodName": "testVersionFrom1to1",
     "className": "org.elasticsearch.transport.local.SimpleLocalTransportTests",
     "children": []
    },
    {
     "id": "ID#testLocalNodeConnection(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "displayName": "testLocalNodeConnection(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "methodName": "testLocalNodeConnection",
     "className": "org.elasticsearch.transport.local.SimpleLocalTransportTests",
     "children": []
    },
    {
     "id": "ID#testMockUnresponsiveRule(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "displayName": "testMockUnresponsiveRule(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "methodName": "testMockUnresponsiveRule",
     "className": "org.elasticsearch.transport.local.SimpleLocalTransportTests",
     "children": []
    },
    {
     "id": "ID#testTracerLog(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "displayName": "testTracerLog(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "methodName": "testTracerLog",
     "className": "org.elasticsearch.transport.local.SimpleLocalTransportTests",
     "children": []
    },
    {
     "id": "ID#testHostOnMessages(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "displayName": "testHostOnMessages(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "methodName": "testHostOnMessages",
     "className": "org.elasticsearch.transport.local.SimpleLocalTransportTests",
     "children": []
    },
    {
     "id": "ID#testVersionFrom0to0(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "displayName": "testVersionFrom0to0(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
     "methodName": "testVersionFrom0to0",
     "className": "org.elasticsearch.transport.local.SimpleLocalTransportTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195665548
 }
]

[
 "TEST_STARTED",
 "ID#testHelloWorldCompressed(org.elasticsearch.transport.local.SimpleLocalTransportTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:45,575][INFO ][org.elasticsearch.test.transport] [TS_A] publish_address {local[28]}, bound_addresses {local[28]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:45,576][INFO ][org.elasticsearch.test.transport] [TS_B] publish_address {local[29]}, bound_addresses {local[29]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:45,579][INFO ][org.elasticsearch.transport.local] [node_s_0] --> using local node optimization%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHelloWorldCompressed(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
  "startTimestamp": 1474195665567,
  "executionTime": 55
 }
]

[
 "TEST_STARTED",
 "ID#testMockFailToSendNoConnectRule(org.elasticsearch.transport.local.SimpleLocalTransportTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:45,626][INFO ][org.elasticsearch.test.transport] [TS_A] publish_address {local[30]}, bound_addresses {local[30]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:45,627][INFO ][org.elasticsearch.test.transport] [TS_B] publish_address {local[31]}, bound_addresses {local[31]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:45,627][INFO ][org.elasticsearch.transport.local] [node_s_0] --> using local node optimization%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMockFailToSendNoConnectRule(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
  "startTimestamp": 1474195665623,
  "executionTime": 13
 }
]

[
 "TEST_STARTED",
 "ID#testConcurrentSendRespondAndDisconnect(org.elasticsearch.transport.local.SimpleLocalTransportTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:45,640][INFO ][org.elasticsearch.test.transport] [TS_A] publish_address {local[32]}, bound_addresses {local[32]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:45,640][INFO ][org.elasticsearch.test.transport] [TS_B] publish_address {local[33]}, bound_addresses {local[33]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:45,641][INFO ][org.elasticsearch.transport.local] [node_s_0] --> using local node optimization%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:45,656][INFO ][org.elasticsearch.test.transport] [TS_B_0] publish_address {local[34]}, bound_addresses {local[34]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:45,658][INFO ][org.elasticsearch.test.transport] [TS_B_3] publish_address {local[35]}, bound_addresses {local[35]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:45,660][INFO ][org.elasticsearch.test.transport] [TS_B_6] publish_address {local[36]}, bound_addresses {local[36]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:45,661][INFO ][org.elasticsearch.test.transport] [TS_B_9] publish_address {local[37]}, bound_addresses {local[37]}%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConcurrentSendRespondAndDisconnect(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
  "startTimestamp": 1474195665636,
  "executionTime": 57
 }
]

[
 "TEST_STARTED",
 "ID#testVoidMessageCompressed(org.elasticsearch.transport.local.SimpleLocalTransportTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:45,696][INFO ][org.elasticsearch.test.transport] [TS_A] publish_address {local[38]}, bound_addresses {local[38]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:45,697][INFO ][org.elasticsearch.test.transport] [TS_B] publish_address {local[39]}, bound_addresses {local[39]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:45,697][INFO ][org.elasticsearch.transport.local] [node_s_0] --> actively connecting to local node%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVoidMessageCompressed(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
  "startTimestamp": 1474195665693,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testThreadContext(org.elasticsearch.transport.local.SimpleLocalTransportTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:45,708][INFO ][org.elasticsearch.test.transport] [TS_A] publish_address {local[40]}, bound_addresses {local[40]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:45,709][INFO ][org.elasticsearch.test.transport] [TS_B] publish_address {local[41]}, bound_addresses {local[41]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:45,709][INFO ][org.elasticsearch.transport.local] [node_s_0] --> using local node optimization%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThreadContext(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
  "startTimestamp": 1474195665705,
  "executionTime": 17
 }
]

[
 "TEST_STARTED",
 "ID#testTimeoutSendExceptionWithNeverSendingBackResponse(org.elasticsearch.transport.local.SimpleLocalTransportTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:45,726][INFO ][org.elasticsearch.test.transport] [TS_A] publish_address {local[42]}, bound_addresses {local[42]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:45,727][INFO ][org.elasticsearch.test.transport] [TS_B] publish_address {local[43]}, bound_addresses {local[43]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:45,727][INFO ][org.elasticsearch.transport.local] [node_s_0] --> actively connecting to local node%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTimeoutSendExceptionWithNeverSendingBackResponse(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
  "startTimestamp": 1474195665722,
  "executionTime": 119
 }
]

[
 "TEST_STARTED",
 "ID#testVersionFrom0to1(org.elasticsearch.transport.local.SimpleLocalTransportTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:45,848][INFO ][org.elasticsearch.test.transport] [TS_A] publish_address {local[44]}, bound_addresses {local[44]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:45,849][INFO ][org.elasticsearch.test.transport] [TS_B] publish_address {local[45]}, bound_addresses {local[45]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:45,849][INFO ][org.elasticsearch.transport.local] [node_s_0] --> using local node optimization%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVersionFrom0to1(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
  "startTimestamp": 1474195665842,
  "executionTime": 19
 }
]

[
 "TEST_STARTED",
 "ID#testSendRandomRequests(org.elasticsearch.transport.local.SimpleLocalTransportTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:45,864][INFO ][org.elasticsearch.test.transport] [TS_A] publish_address {local[46]}, bound_addresses {local[46]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:45,865][INFO ][org.elasticsearch.test.transport] [TS_B] publish_address {local[47]}, bound_addresses {local[47]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:45,865][INFO ][org.elasticsearch.transport.local] [node_s_0] --> actively connecting to local node%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:45,867][INFO ][org.elasticsearch.test.transport] [TS_B] publish_address {local[48]}, bound_addresses {local[48]}%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSendRandomRequests(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
  "startTimestamp": 1474195665861,
  "executionTime": 251
 }
]

[
 "TEST_STARTED",
 "ID#testTimeoutSendExceptionWithDelayedResponse(org.elasticsearch.transport.local.SimpleLocalTransportTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:46,116][INFO ][org.elasticsearch.test.transport] [TS_A] publish_address {local[49]}, bound_addresses {local[49]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:46,117][INFO ][org.elasticsearch.test.transport] [TS_B] publish_address {local[50]}, bound_addresses {local[50]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:46,117][INFO ][org.elasticsearch.transport.local] [node_s_0] --> actively connecting to local node%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:46,251][WARN ][org.elasticsearch.test.transport] [TS_B] Received response for a request that has timed out, sent [128ms] ago, timed out [16ms] ago, action [sayHelloTimeoutDelayedResponse], node [{TS_A}{cz7g5Sp_RiGh7YApNoyfqQ}{local}{local[49]}], id [0]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTimeoutSendExceptionWithDelayedResponse(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
  "startTimestamp": 1474195666113,
  "executionTime": 142
 }
]

[
 "TEST_STARTED",
 "ID#testErrorMessage(org.elasticsearch.transport.local.SimpleLocalTransportTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:46,259][INFO ][org.elasticsearch.test.transport] [TS_A] publish_address {local[51]}, bound_addresses {local[51]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:46,260][INFO ][org.elasticsearch.test.transport] [TS_B] publish_address {local[52]}, bound_addresses {local[52]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:46,260][INFO ][org.elasticsearch.transport.local] [node_s_0] --> actively connecting to local node%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testErrorMessage(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
  "startTimestamp": 1474195666255,
  "executionTime": 22
 }
]

[
 "TEST_STARTED",
 "ID#testDisconnectListener(org.elasticsearch.transport.local.SimpleLocalTransportTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:46,280][INFO ][org.elasticsearch.test.transport] [TS_A] publish_address {local[53]}, bound_addresses {local[53]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:46,281][INFO ][org.elasticsearch.test.transport] [TS_B] publish_address {local[54]}, bound_addresses {local[54]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:46,282][INFO ][org.elasticsearch.transport.local] [node_s_0] --> actively connecting to local node%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDisconnectListener(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
  "startTimestamp": 1474195666277,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testHelloWorld(org.elasticsearch.transport.local.SimpleLocalTransportTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:46,293][INFO ][org.elasticsearch.test.transport] [TS_A] publish_address {local[55]}, bound_addresses {local[55]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:46,294][INFO ][org.elasticsearch.test.transport] [TS_B] publish_address {local[56]}, bound_addresses {local[56]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:46,294][INFO ][org.elasticsearch.transport.local] [node_s_0] --> using local node optimization%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHelloWorld(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
  "startTimestamp": 1474195666289,
  "executionTime": 34
 }
]

[
 "TEST_STARTED",
 "ID#testVersionFrom1to0(org.elasticsearch.transport.local.SimpleLocalTransportTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:46,326][INFO ][org.elasticsearch.test.transport] [TS_A] publish_address {local[57]}, bound_addresses {local[57]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:46,327][INFO ][org.elasticsearch.test.transport] [TS_B] publish_address {local[58]}, bound_addresses {local[58]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:46,327][INFO ][org.elasticsearch.transport.local] [node_s_0] --> actively connecting to local node%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVersionFrom1to0(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
  "startTimestamp": 1474195666323,
  "executionTime": 13
 }
]

[
 "TEST_STARTED",
 "ID#testNotifyOnShutdown(org.elasticsearch.transport.local.SimpleLocalTransportTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:46,339][INFO ][org.elasticsearch.test.transport] [TS_A] publish_address {local[59]}, bound_addresses {local[59]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:46,340][INFO ][org.elasticsearch.test.transport] [TS_B] publish_address {local[60]}, bound_addresses {local[60]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:46,340][INFO ][org.elasticsearch.transport.local] [node_s_0] --> using local node optimization%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:46,345][INFO ][org.elasticsearch.transport.local] [node_s_0] Stop ServiceB now%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNotifyOnShutdown(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
  "startTimestamp": 1474195666336,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testBlockingIncomingRequests(org.elasticsearch.transport.local.SimpleLocalTransportTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:46,352][INFO ][org.elasticsearch.test.transport] [TS_A] publish_address {local[61]}, bound_addresses {local[61]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:46,353][INFO ][org.elasticsearch.test.transport] [TS_B] publish_address {local[62]}, bound_addresses {local[62]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:46,353][INFO ][org.elasticsearch.transport.local] [node_s_0] --> using local node optimization%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:46,355][INFO ][org.elasticsearch.test.transport] [TS_B] publish_address {local[63]}, bound_addresses {local[63]}%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBlockingIncomingRequests(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
  "startTimestamp": 1474195666349,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testVersionFrom1to1(org.elasticsearch.transport.local.SimpleLocalTransportTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:46,364][INFO ][org.elasticsearch.test.transport] [TS_A] publish_address {local[64]}, bound_addresses {local[64]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:46,365][INFO ][org.elasticsearch.test.transport] [TS_B] publish_address {local[65]}, bound_addresses {local[65]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:46,365][INFO ][org.elasticsearch.transport.local] [node_s_0] --> using local node optimization%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVersionFrom1to1(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
  "startTimestamp": 1474195666360,
  "executionTime": 13
 }
]

[
 "TEST_STARTED",
 "ID#testLocalNodeConnection(org.elasticsearch.transport.local.SimpleLocalTransportTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:46,376][INFO ][org.elasticsearch.test.transport] [TS_A] publish_address {local[66]}, bound_addresses {local[66]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:46,377][INFO ][org.elasticsearch.test.transport] [TS_B] publish_address {local[67]}, bound_addresses {local[67]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:46,377][INFO ][org.elasticsearch.transport.local] [node_s_0] --> using local node optimization%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLocalNodeConnection(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
  "startTimestamp": 1474195666373,
  "executionTime": 20
 }
]

[
 "TEST_STARTED",
 "ID#testMockUnresponsiveRule(org.elasticsearch.transport.local.SimpleLocalTransportTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:46,397][INFO ][org.elasticsearch.test.transport] [TS_A] publish_address {local[68]}, bound_addresses {local[68]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:46,407][INFO ][org.elasticsearch.test.transport] [TS_B] publish_address {local[69]}, bound_addresses {local[69]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:46,408][INFO ][org.elasticsearch.transport.local] [node_s_0] --> using local node optimization%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMockUnresponsiveRule(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
  "startTimestamp": 1474195666393,
  "executionTime": 160
 }
]

[
 "TEST_STARTED",
 "ID#testTracerLog(org.elasticsearch.transport.local.SimpleLocalTransportTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:46,558][INFO ][org.elasticsearch.test.transport] [TS_A] publish_address {local[70]}, bound_addresses {local[70]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:46,558][INFO ][org.elasticsearch.test.transport] [TS_B] publish_address {local[71]}, bound_addresses {local[71]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:46,559][INFO ][org.elasticsearch.transport.local] [node_s_0] --> using local node optimization%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:46,582][TRACE][org.elasticsearch.test.transport.tracer] [TS_B] [0][test] sent to [{TS_B}{YShAua2oTde22kzfv4qbSA}{local}{local[71]}] (timeout: [1ms])%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:46,584][TRACE][org.elasticsearch.test.transport.tracer] [TS_B] [0][test] received request%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:46,585][TRACE][org.elasticsearch.test.transport.tracer] [TS_B] [0][test] sent response%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:46,586][WARN ][org.elasticsearch.test.transport] [TS_B] Received response for a request that has timed out, sent [4ms] ago, timed out [1ms] ago, action [test], node [{TS_B}{YShAua2oTde22kzfv4qbSA}{local}{local[71]}], id [0]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:46,586][TRACE][org.elasticsearch.test.transport.tracer] [TS_B] [0][test] received response from [{TS_B}{YShAua2oTde22kzfv4qbSA}{local}{local[71]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:46,587][TRACE][org.elasticsearch.test.transport.tracer] [TS_B] [1][testError] sent to [{TS_B}{YShAua2oTde22kzfv4qbSA}{local}{local[71]}] (timeout: [null])%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:46,587][TRACE][org.elasticsearch.test.transport.tracer] [TS_B] [1][testError] received request%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:46,588][TRACE][org.elasticsearch.test.transport.tracer] [1][testError] sent error response%0D%0Ajava.lang.RuntimeException: %0A%09at org.elasticsearch.transport.AbstractSimpleTransportTestCase$23.messageReceived(AbstractSimpleTransportTestCase.java:809) ~[framework-5.0.0-alpha6-SNAPSHOT.jar:?]%0A%09at org.elasticsearch.transport.AbstractSimpleTransportTestCase$23.messageReceived(AbstractSimpleTransportTestCase.java:803) ~[framework-5.0.0-alpha6-SNAPSHOT.jar:?]%0A%09at org.elasticsearch.transport.TransportRequestHandler.messageReceived(TransportRequestHandler.java:33) ~[main/:?]%0A%09at org.elasticsearch.transport.RequestHandlerRegistry.processMessageReceived(RequestHandlerRegistry.java:69) ~[main/:?]%0A%09at org.elasticsearch.transport.local.LocalTransport.handleRequest(LocalTransport.java:335) ~[main/:?]%0A%09at org.elasticsearch.transport.local.LocalTransport.processReceivedMessage(LocalTransport.java:283) ~[main/:?]%0A%09at org.elasticsearch.transport.local.LocalTransport.lambda$receiveMessage$0(LocalTransport.java:251) ~[main/:?]%0A%09at org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingRunnable.run(ThreadContext.java:444) [main/:?]%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_102]%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_102]%0A%09at java.lang.Thread.run(Thread.java:745) [?:1.8.0_102]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:46,589][TRACE][org.elasticsearch.test.transport.tracer] [TS_B] [1][testError] received response from [{TS_B}{YShAua2oTde22kzfv4qbSA}{local}{local[71]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:46,591][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [transport.tracer.include] from [[]] to [[\"test\"]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:46,591][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [transport.tracer.exclude] from [[\"internal:discovery/zen/fd*\",\"cluster:monitor/nodes/liveness\"]] to [[\"DOESN'T_MATCH\"]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:46,591][TRACE][org.elasticsearch.test.transport.tracer] [TS_B] [2][test] sent to [{TS_B}{YShAua2oTde22kzfv4qbSA}{local}{local[71]}] (timeout: [null])%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:46,597][TRACE][org.elasticsearch.test.transport.tracer] [TS_B] [2][test] received request%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:46,597][TRACE][org.elasticsearch.test.transport.tracer] [TS_B] [2][test] sent response%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:46,598][TRACE][org.elasticsearch.test.transport.tracer] [TS_B] [2][test] received response from [{TS_B}{YShAua2oTde22kzfv4qbSA}{local}{local[71]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:46,615][TRACE][org.elasticsearch.test.transport.tracer] [TS_B] [3][testError] received request%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:46,616][TRACE][org.elasticsearch.test.transport.tracer] [3][testError] sent error response%0D%0Ajava.lang.RuntimeException: %0A%09at org.elasticsearch.transport.AbstractSimpleTransportTestCase$23.messageReceived(AbstractSimpleTransportTestCase.java:809) ~[framework-5.0.0-alpha6-SNAPSHOT.jar:?]%0A%09at org.elasticsearch.transport.AbstractSimpleTransportTestCase$23.messageReceived(AbstractSimpleTransportTestCase.java:803) ~[framework-5.0.0-alpha6-SNAPSHOT.jar:?]%0A%09at org.elasticsearch.transport.TransportRequestHandler.messageReceived(TransportRequestHandler.java:33) ~[main/:?]%0A%09at org.elasticsearch.transport.RequestHandlerRegistry.processMessageReceived(RequestHandlerRegistry.java:69) ~[main/:?]%0A%09at org.elasticsearch.transport.local.LocalTransport.handleRequest(LocalTransport.java:335) ~[main/:?]%0A%09at org.elasticsearch.transport.local.LocalTransport.processReceivedMessage(LocalTransport.java:283) ~[main/:?]%0A%09at org.elasticsearch.transport.local.LocalTransport.lambda$receiveMessage$0(LocalTransport.java:251) ~[main/:?]%0A%09at org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingRunnable.run(ThreadContext.java:444) [main/:?]%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_102]%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_102]%0A%09at java.lang.Thread.run(Thread.java:745) [?:1.8.0_102]%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTracerLog(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
  "startTimestamp": 1474195666554,
  "executionTime": 65
 }
]

[
 "TEST_STARTED",
 "ID#testHostOnMessages(org.elasticsearch.transport.local.SimpleLocalTransportTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:46,624][INFO ][org.elasticsearch.test.transport] [TS_A] publish_address {local[72]}, bound_addresses {local[72]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:46,625][INFO ][org.elasticsearch.test.transport] [TS_B] publish_address {local[73]}, bound_addresses {local[73]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:46,625][INFO ][org.elasticsearch.transport.local] [node_s_0] --> using local node optimization%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHostOnMessages(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
  "startTimestamp": 1474195666620,
  "executionTime": 27
 }
]

[
 "TEST_STARTED",
 "ID#testVersionFrom0to0(org.elasticsearch.transport.local.SimpleLocalTransportTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:46,651][INFO ][org.elasticsearch.test.transport] [TS_A] publish_address {local[74]}, bound_addresses {local[74]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:46,652][INFO ][org.elasticsearch.test.transport] [TS_B] publish_address {local[75]}, bound_addresses {local[75]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:46,652][INFO ][org.elasticsearch.transport.local] [node_s_0] --> actively connecting to local node%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVersionFrom0to0(org.elasticsearch.transport.local.SimpleLocalTransportTests)",
  "startTimestamp": 1474195666647,
  "executionTime": 10
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.transport.local.SimpleLocalTransportTests",
  "startTimestamp": 1474195665548,
  "executionTime": 1111
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.main.MainActionTests",
   "displayName": "org.elasticsearch.action.main.MainActionTests",
   "methodName": null,
   "className": "org.elasticsearch.action.main.MainActionTests",
   "children": [
    {
     "id": "ID#testMainActionClusterAvailable(org.elasticsearch.action.main.MainActionTests)",
     "displayName": "testMainActionClusterAvailable(org.elasticsearch.action.main.MainActionTests)",
     "methodName": "testMainActionClusterAvailable",
     "className": "org.elasticsearch.action.main.MainActionTests",
     "children": []
    },
    {
     "id": "ID#testMainResponseXContent(org.elasticsearch.action.main.MainActionTests)",
     "displayName": "testMainResponseXContent(org.elasticsearch.action.main.MainActionTests)",
     "methodName": "testMainResponseXContent",
     "className": "org.elasticsearch.action.main.MainActionTests",
     "children": []
    },
    {
     "id": "ID#testMainResponseSerialization(org.elasticsearch.action.main.MainActionTests)",
     "displayName": "testMainResponseSerialization(org.elasticsearch.action.main.MainActionTests)",
     "methodName": "testMainResponseSerialization",
     "className": "org.elasticsearch.action.main.MainActionTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195666666
 }
]

[
 "TEST_STARTED",
 "ID#testMainActionClusterAvailable(org.elasticsearch.action.main.MainActionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMainActionClusterAvailable(org.elasticsearch.action.main.MainActionTests)",
  "startTimestamp": 1474195666693,
  "executionTime": 48
 }
]

[
 "TEST_STARTED",
 "ID#testMainResponseXContent(org.elasticsearch.action.main.MainActionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMainResponseXContent(org.elasticsearch.action.main.MainActionTests)",
  "startTimestamp": 1474195666741,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testMainResponseSerialization(org.elasticsearch.action.main.MainActionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMainResponseSerialization(org.elasticsearch.action.main.MainActionTests)",
  "startTimestamp": 1474195666744,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.main.MainActionTests",
  "startTimestamp": 1474195666666,
  "executionTime": 82
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.internal.ShardSearchTransportRequestTests",
   "displayName": "org.elasticsearch.search.internal.ShardSearchTransportRequestTests",
   "methodName": null,
   "className": "org.elasticsearch.search.internal.ShardSearchTransportRequestTests",
   "children": [
    {
     "id": "ID#testSerialization(org.elasticsearch.search.internal.ShardSearchTransportRequestTests)",
     "displayName": "testSerialization(org.elasticsearch.search.internal.ShardSearchTransportRequestTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.internal.ShardSearchTransportRequestTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195666756
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.internal.ShardSearchTransportRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.internal.ShardSearchTransportRequestTests)",
  "startTimestamp": 1474195666776,
  "executionTime": 84
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.internal.ShardSearchTransportRequestTests",
  "startTimestamp": 1474195666756,
  "executionTime": 106
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.StoredNumericValuesTests",
   "displayName": "org.elasticsearch.index.mapper.StoredNumericValuesTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.StoredNumericValuesTests",
   "children": [
    {
     "id": "ID#testBytesAndNumericRepresentation(org.elasticsearch.index.mapper.StoredNumericValuesTests)",
     "displayName": "testBytesAndNumericRepresentation(org.elasticsearch.index.mapper.StoredNumericValuesTests)",
     "methodName": "testBytesAndNumericRepresentation",
     "className": "org.elasticsearch.index.mapper.StoredNumericValuesTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195666868
 }
]

[
 "TEST_STARTED",
 "ID#testBytesAndNumericRepresentation(org.elasticsearch.index.mapper.StoredNumericValuesTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:47:46,906][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:47:46,927][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:47:46,927][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:47:46,930][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[7260], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:47:46,933][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:47:46,933][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:47:47,024][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:47:47,025][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:47:47,025][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[76]}, bound_addresses {local[76]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:47:47,029][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{wepbERHiRgKCs1NgVx1_2g}{TwclE_XyTbObMVPcPD-Ucg}{local}{local[76]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:47:47,029][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:47:47,042][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:47:47,062][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:47:47,117][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:47:47,168][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [StoredNumericValuesTests#testBytesAndNumericRepresentation]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBytesAndNumericRepresentation(org.elasticsearch.index.mapper.StoredNumericValuesTests)",
  "startTimestamp": 1474195666898,
  "executionTime": 297
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:47:47,195][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:47:47,196][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:47:47,196][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:47:47,198][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.StoredNumericValuesTests",
  "startTimestamp": 1474195666868,
  "executionTime": 336
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.HasParentQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.HasParentQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.HasParentQueryBuilderTests",
   "children": [
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.HasParentQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJsonEmptyQueryBody(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
     "displayName": "testFromJsonEmptyQueryBody(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
     "methodName": "testFromJsonEmptyQueryBody",
     "className": "org.elasticsearch.index.query.HasParentQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
     "displayName": "testQueryWrappedInArray(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
     "methodName": "testQueryWrappedInArray",
     "className": "org.elasticsearch.index.query.HasParentQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIgnoreUnmapped(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
     "displayName": "testIgnoreUnmapped(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
     "methodName": "testIgnoreUnmapped",
     "className": "org.elasticsearch.index.query.HasParentQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIllegalValues(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
     "displayName": "testIllegalValues(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
     "methodName": "testIllegalValues",
     "className": "org.elasticsearch.index.query.HasParentQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.HasParentQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.HasParentQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMustRewrite(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
     "displayName": "testMustRewrite(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
     "methodName": "testMustRewrite",
     "className": "org.elasticsearch.index.query.HasParentQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryInnerQueryType(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
     "displayName": "testToQueryInnerQueryType(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
     "methodName": "testToQueryInnerQueryType",
     "className": "org.elasticsearch.index.query.HasParentQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.HasParentQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.HasParentQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.HasParentQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.HasParentQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testDeprecatedXContent(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
     "displayName": "testDeprecatedXContent(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
     "methodName": "testDeprecatedXContent",
     "className": "org.elasticsearch.index.query.HasParentQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195667211
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.HasParentQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:47:47,244][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{Jo6FFrBIQOmggmVSxwjWHw}{local}{local[313]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:47:47,252][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:47:47,252][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:47:47,279][WARN ][org.elasticsearch.deprecation.index.mapper]  [xLYDy] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:47:47,280][WARN ][org.elasticsearch.deprecation.index.mapper]  [xLYDy] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:47:47,280][WARN ][org.elasticsearch.deprecation.index.mapper]  [xLYDy] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:47:47,281][WARN ][org.elasticsearch.deprecation.index.mapper]  [xLYDy] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:47:47,281][WARN ][org.elasticsearch.deprecation.index.mapper]  [xLYDy] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:47:47,281][WARN ][org.elasticsearch.deprecation.index.mapper]  [xLYDy] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:47:47,284][WARN ][org.elasticsearch.deprecation.index.mapper]  [xLYDy] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:47:47,284][WARN ][org.elasticsearch.deprecation.index.mapper]  [xLYDy] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:47:47,284][WARN ][org.elasticsearch.deprecation.index.mapper]  [xLYDy] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
  "startTimestamp": 1474195667240,
  "executionTime": 57
 }
]

[
 "TEST_STARTED",
 "ID#testFromJsonEmptyQueryBody(org.elasticsearch.index.query.HasParentQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:47:47,300][WARN ][org.elasticsearch.deprecation.index.query] query malformed, empty clause found at [3:17]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:47:47,301][WARN ][org.elasticsearch.deprecation.index.query] query malformed, empty clause found at [3:17]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJsonEmptyQueryBody(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
  "startTimestamp": 1474195667297,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testQueryWrappedInArray(org.elasticsearch.index.query.HasParentQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
  "startTimestamp": 1474195667302,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testIgnoreUnmapped(org.elasticsearch.index.query.HasParentQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIgnoreUnmapped(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
  "startTimestamp": 1474195667309,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalValues(org.elasticsearch.index.query.HasParentQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalValues(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
  "startTimestamp": 1474195667314,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.HasParentQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
  "startTimestamp": 1474195667318,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.HasParentQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
  "startTimestamp": 1474195667330,
  "executionTime": 24
 }
]

[
 "TEST_STARTED",
 "ID#testMustRewrite(org.elasticsearch.index.query.HasParentQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMustRewrite(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
  "startTimestamp": 1474195667354,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryInnerQueryType(org.elasticsearch.index.query.HasParentQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryInnerQueryType(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
  "startTimestamp": 1474195667358,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.HasParentQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
  "startTimestamp": 1474195667363,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.HasParentQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
  "startTimestamp": 1474195667366,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.HasParentQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
  "startTimestamp": 1474195667373,
  "executionTime": 180
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.HasParentQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
  "startTimestamp": 1474195667553,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testDeprecatedXContent(org.elasticsearch.index.query.HasParentQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:47:47,558][WARN ][org.elasticsearch.deprecation.common] Deprecated field [type] used, expected [parent_type] instead%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDeprecatedXContent(org.elasticsearch.index.query.HasParentQueryBuilderTests)",
  "startTimestamp": 1474195667555,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.HasParentQueryBuilderTests",
  "startTimestamp": 1474195667211,
  "executionTime": 354
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.support.replication.TransportReplicationActionTests",
   "displayName": "org.elasticsearch.action.support.replication.TransportReplicationActionTests",
   "methodName": null,
   "className": "org.elasticsearch.action.support.replication.TransportReplicationActionTests",
   "children": [
    {
     "id": "ID#testCounterOnPrimary(org.elasticsearch.action.support.replication.TransportReplicationActionTests)",
     "displayName": "testCounterOnPrimary(org.elasticsearch.action.support.replication.TransportReplicationActionTests)",
     "methodName": "testCounterOnPrimary",
     "className": "org.elasticsearch.action.support.replication.TransportReplicationActionTests",
     "children": []
    },
    {
     "id": "ID#testNotStartedPrimary(org.elasticsearch.action.support.replication.TransportReplicationActionTests)",
     "displayName": "testNotStartedPrimary(org.elasticsearch.action.support.replication.TransportReplicationActionTests)",
     "methodName": "testNotStartedPrimary",
     "className": "org.elasticsearch.action.support.replication.TransportReplicationActionTests",
     "children": []
    },
    {
     "id": "ID#testBlocks(org.elasticsearch.action.support.replication.TransportReplicationActionTests)",
     "displayName": "testBlocks(org.elasticsearch.action.support.replication.TransportReplicationActionTests)",
     "methodName": "testBlocks",
     "className": "org.elasticsearch.action.support.replication.TransportReplicationActionTests",
     "children": []
    },
    {
     "id": "ID#testPrimaryPhaseExecutesDelegatedRequestOnRelocationTarget(org.elasticsearch.action.support.replication.TransportReplicationActionTests)",
     "displayName": "testPrimaryPhaseExecutesDelegatedRequestOnRelocationTarget(org.elasticsearch.action.support.replication.TransportReplicationActionTests)",
     "methodName": "testPrimaryPhaseExecutesDelegatedRequestOnRelocationTarget",
     "className": "org.elasticsearch.action.support.replication.TransportReplicationActionTests",
     "children": []
    },
    {
     "id": "ID#testPrimaryPhaseExecutesOrDelegatesRequestToRelocationTarget(org.elasticsearch.action.support.replication.TransportReplicationActionTests)",
     "displayName": "testPrimaryPhaseExecutesOrDelegatesRequestToRelocationTarget(org.elasticsearch.action.support.replication.TransportReplicationActionTests)",
     "methodName": "testPrimaryPhaseExecutesOrDelegatesRequestToRelocationTarget",
     "className": "org.elasticsearch.action.support.replication.TransportReplicationActionTests",
     "children": []
    },
    {
     "id": "ID#testReplicasCounter(org.elasticsearch.action.support.replication.TransportReplicationActionTests)",
     "displayName": "testReplicasCounter(org.elasticsearch.action.support.replication.TransportReplicationActionTests)",
     "methodName": "testReplicasCounter",
     "className": "org.elasticsearch.action.support.replication.TransportReplicationActionTests",
     "children": []
    },
    {
     "id": "ID#testRoutePhaseExecutesRequest(org.elasticsearch.action.support.replication.TransportReplicationActionTests)",
     "displayName": "testRoutePhaseExecutesRequest(org.elasticsearch.action.support.replication.TransportReplicationActionTests)",
     "methodName": "testRoutePhaseExecutesRequest",
     "className": "org.elasticsearch.action.support.replication.TransportReplicationActionTests",
     "children": []
    },
    {
     "id": "ID#testPrimaryReference(org.elasticsearch.action.support.replication.TransportReplicationActionTests)",
     "displayName": "testPrimaryReference(org.elasticsearch.action.support.replication.TransportReplicationActionTests)",
     "methodName": "testPrimaryReference",
     "className": "org.elasticsearch.action.support.replication.TransportReplicationActionTests",
     "children": []
    },
    {
     "id": "ID#testReplicaProxy(org.elasticsearch.action.support.replication.TransportReplicationActionTests)",
     "displayName": "testReplicaProxy(org.elasticsearch.action.support.replication.TransportReplicationActionTests)",
     "methodName": "testReplicaProxy",
     "className": "org.elasticsearch.action.support.replication.TransportReplicationActionTests",
     "children": []
    },
    {
     "id": "ID#testUnknownIndexOrShardOnReroute(org.elasticsearch.action.support.replication.TransportReplicationActionTests)",
     "displayName": "testUnknownIndexOrShardOnReroute(org.elasticsearch.action.support.replication.TransportReplicationActionTests)",
     "methodName": "testUnknownIndexOrShardOnReroute",
     "className": "org.elasticsearch.action.support.replication.TransportReplicationActionTests",
     "children": []
    },
    {
     "id": "ID#testShadowIndexDisablesReplication(org.elasticsearch.action.support.replication.TransportReplicationActionTests)",
     "displayName": "testShadowIndexDisablesReplication(org.elasticsearch.action.support.replication.TransportReplicationActionTests)",
     "methodName": "testShadowIndexDisablesReplication",
     "className": "org.elasticsearch.action.support.replication.TransportReplicationActionTests",
     "children": []
    },
    {
     "id": "ID#testStalePrimaryShardOnReroute(org.elasticsearch.action.support.replication.TransportReplicationActionTests)",
     "displayName": "testStalePrimaryShardOnReroute(org.elasticsearch.action.support.replication.TransportReplicationActionTests)",
     "methodName": "testStalePrimaryShardOnReroute",
     "className": "org.elasticsearch.action.support.replication.TransportReplicationActionTests",
     "children": []
    },
    {
     "id": "ID#testNoRerouteOnStaleClusterState(org.elasticsearch.action.support.replication.TransportReplicationActionTests)",
     "displayName": "testNoRerouteOnStaleClusterState(org.elasticsearch.action.support.replication.TransportReplicationActionTests)",
     "methodName": "testNoRerouteOnStaleClusterState",
     "className": "org.elasticsearch.action.support.replication.TransportReplicationActionTests",
     "children": []
    },
    {
     "id": "ID#testDefaultWaitForActiveShardsUsesIndexSetting(org.elasticsearch.action.support.replication.TransportReplicationActionTests)",
     "displayName": "testDefaultWaitForActiveShardsUsesIndexSetting(org.elasticsearch.action.support.replication.TransportReplicationActionTests)",
     "methodName": "testDefaultWaitForActiveShardsUsesIndexSetting",
     "className": "org.elasticsearch.action.support.replication.TransportReplicationActionTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195667580
 }
]

[
 "TEST_STARTED",
 "ID#testCounterOnPrimary(org.elasticsearch.action.support.replication.TransportReplicationActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:47:47,719][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{l_Z-PdWAQuqPdhQczOOW5g}{local}{local[314]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:47:47,722][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node_1}{3QGfCVPPQ3egflxA3Q0M-g}{local}{local[316]}, previous {node}{l_Z-PdWAQuqPdhQczOOW5g}{local}{local[314]}}, removed {{node}{l_Z-PdWAQuqPdhQczOOW5g}{local}{local[314]},}, added {{node_1}{3QGfCVPPQ3egflxA3Q0M-g}{local}{local[316]},{node_2}{NYUafLf3QCazvUGekkSRqA}{local}{local[317]},}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCounterOnPrimary(org.elasticsearch.action.support.replication.TransportReplicationActionTests)",
  "startTimestamp": 1474195667653,
  "executionTime": 78
 }
]

[
 "TEST_STARTED",
 "ID#testNotStartedPrimary(org.elasticsearch.action.support.replication.TransportReplicationActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:47:47,769][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{OAHioEJ8RG6gsXURqDdiQQ}{local}{local[321]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:47:47,772][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node_1}{5ipNACRQQyO_RsuqCoj3mg}{local}{local[323]}, previous {node}{OAHioEJ8RG6gsXURqDdiQQ}{local}{local[321]}}, removed {{node}{OAHioEJ8RG6gsXURqDdiQQ}{local}{local[321]},}, added {{node_1}{5ipNACRQQyO_RsuqCoj3mg}{local}{local[323]},{node_2}{z34C1OnQQOq2puAihqyPQQ}{local}{local[324]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:47:47,776][INFO ][org.elasticsearch.cluster.service] [node_s_0] removed {{node_0}{blrDxfLnR-KuWfROYdSfXg}{local}{local[322]},{node_1}{5ipNACRQQyO_RsuqCoj3mg}{local}{local[323]},{node_2}{z34C1OnQQOq2puAihqyPQQ}{local}{local[324]},}, added {{node_1}{sJyc0_jDRSeLXzTV8sVe_w}{local}{local[329]},{node_2}{IBj5xrKdRaaKmYs_wAao3Q}{local}{local[330]},}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNotStartedPrimary(org.elasticsearch.action.support.replication.TransportReplicationActionTests)",
  "startTimestamp": 1474195667731,
  "executionTime": 46
 }
]

[
 "TEST_STARTED",
 "ID#testBlocks(org.elasticsearch.action.support.replication.TransportReplicationActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:47:47,782][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{EU4mcJ1hRj25vgKxqUudKA}{local}{local[334]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBlocks(org.elasticsearch.action.support.replication.TransportReplicationActionTests)",
  "startTimestamp": 1474195667777,
  "executionTime": 34
 }
]

[
 "TEST_STARTED",
 "ID#testPrimaryPhaseExecutesDelegatedRequestOnRelocationTarget(org.elasticsearch.action.support.replication.TransportReplicationActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:47:47,816][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{tMBiWewjQiawAlsJxhMjCw}{local}{local[335]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:47:47,818][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node_1}{MyftaG1zR1OG0rENQML7CA}{local}{local[337]}, previous {node}{tMBiWewjQiawAlsJxhMjCw}{local}{local[335]}}, removed {{node}{tMBiWewjQiawAlsJxhMjCw}{local}{local[335]},}, added {{node_0}{lOwuij-DQUKNlEc5EYfXbA}{local}{local[336]},{node_2}{rrCuhNUwTV26xLBG0owbKg}{local}{local[338]},}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPrimaryPhaseExecutesDelegatedRequestOnRelocationTarget(org.elasticsearch.action.support.replication.TransportReplicationActionTests)",
  "startTimestamp": 1474195667811,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testPrimaryPhaseExecutesOrDelegatesRequestToRelocationTarget(org.elasticsearch.action.support.replication.TransportReplicationActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:47:47,825][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{xuPj9JG9TSWBJLAVa-6kdg}{local}{local[342]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:47:47,827][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node_1}{ALk-moXRR0CZnhKm62jOKw}{local}{local[344]}, previous {node}{xuPj9JG9TSWBJLAVa-6kdg}{local}{local[342]}}, removed {{node}{xuPj9JG9TSWBJLAVa-6kdg}{local}{local[342]},}, added {{node_1}{ALk-moXRR0CZnhKm62jOKw}{local}{local[344]},{node_2}{2W9j33sDQDGTDVRV3SANnw}{local}{local[345]},}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPrimaryPhaseExecutesOrDelegatesRequestToRelocationTarget(org.elasticsearch.action.support.replication.TransportReplicationActionTests)",
  "startTimestamp": 1474195667820,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testReplicasCounter(org.elasticsearch.action.support.replication.TransportReplicationActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:47:47,837][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{7HVgE_CARIuyfDrYaAtLRA}{local}{local[349]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:47:47,839][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node_1}{XQLWPMhURvqDL3JNYfS2jQ}{local}{local[351]}, previous {node}{7HVgE_CARIuyfDrYaAtLRA}{local}{local[349]}}, removed {{node}{7HVgE_CARIuyfDrYaAtLRA}{local}{local[349]},}, added {{node_1}{XQLWPMhURvqDL3JNYfS2jQ}{local}{local[351]},{node_2}{Hr3mCwn1RKygo-BCY-3rCw}{local}{local[352]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:47:47,840][WARN ][org.elasticsearch.transport] [node_s_0] registered two transport handlers for action internal:cluster/shard/started, handlers: org.elasticsearch.cluster.action.shard.ShardStateAction$ShardStartedTransportHandler@2d70a21d, org.elasticsearch.cluster.action.shard.ShardStateAction$ShardStartedTransportHandler@56a49835%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:47:47,840][WARN ][org.elasticsearch.transport] [node_s_0] registered two transport handlers for action internal:cluster/shard/failure, handlers: org.elasticsearch.cluster.action.shard.ShardStateAction$ShardFailedTransportHandler@46cffd9d, org.elasticsearch.cluster.action.shard.ShardStateAction$ShardFailedTransportHandler@2a6e77ca%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReplicasCounter(org.elasticsearch.action.support.replication.TransportReplicationActionTests)",
  "startTimestamp": 1474195667829,
  "executionTime": 16
 }
]

[
 "TEST_STARTED",
 "ID#testRoutePhaseExecutesRequest(org.elasticsearch.action.support.replication.TransportReplicationActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:47:47,857][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{f6YcChrPTUiqosN5N3wVuw}{local}{local[356]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:47:47,859][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node_1}{ZvuSiUmnQoKEV6kjhewQqQ}{local}{local[358]}, previous {node}{f6YcChrPTUiqosN5N3wVuw}{local}{local[356]}}, removed {{node}{f6YcChrPTUiqosN5N3wVuw}{local}{local[356]},}, added {{node_4}{NctMY4Z5SoeEytFzKri5aA}{local}{local[361]},{node_5}{1cpU8ScIQweBi6PSSdn_eg}{local}{local[362]},{node_1}{ZvuSiUmnQoKEV6kjhewQqQ}{local}{local[358]},{node_3}{9yCNMYq3TimxtYKZpahVgQ}{local}{local[360]},{node_2}{GOevEiqeQvOSQ0XihRHgYQ}{local}{local[359]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:47:47,859][INFO ][org.elasticsearch.action.support.replication] --> primary is assigned to [node_4], checking request forwarded%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRoutePhaseExecutesRequest(org.elasticsearch.action.support.replication.TransportReplicationActionTests)",
  "startTimestamp": 1474195667845,
  "executionTime": 15
 }
]

[
 "TEST_STARTED",
 "ID#testPrimaryReference(org.elasticsearch.action.support.replication.TransportReplicationActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:47:47,864][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{jpQxxH_hQISf_ySQs9LUig}{local}{local[366]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPrimaryReference(org.elasticsearch.action.support.replication.TransportReplicationActionTests)",
  "startTimestamp": 1474195667860,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testReplicaProxy(org.elasticsearch.action.support.replication.TransportReplicationActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:47:47,874][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{LSfLE9kfSF2mldUQTbknWg}{local}{local[367]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:47:47,876][INFO ][org.elasticsearch.action.support.replication] using state: cluster uuid: RqXVcAIBTRWSxXuZWy_iGQ%0Aversion: 0%0Astate uuid: 6sot0OarTk6j_EqWM-BPNQ%0Afrom_diff: false%0Ameta data version: 0%0A   [test]: v[1]%0A      0: p_term [17], a_ids []%0Anodes: %0A   {node_6}{_QLij5KIRNOdrKHQg7A-jQ}{local}{local[374]}%0A   {node_1}{l0E7u9-KQPWK0KUiY8d3Ug}{local}{local[369]}, master%0A   {node_3}{3If7MV3BRheUXFqshYwC-g}{local}{local[371]}%0A   {node_0}{niPplEPCQ9O1zjuONUCnUw}{local}{local[368]}, local%0A   {node_5}{0PuKV4WiQkaZo7h1JLNgQw}{local}{local[373]}%0A   {node_2}{dww8K1NQT4ePwjMYkhZaNQ}{local}{local[370]}%0A   {node_7}{9MzphMu6Sa2PuNXA7YLlkA}{local}{local[375]}%0A   {node_4}{KfbIk5rAR-yoUE6Whm8T5A}{local}{local[372]}%0Arouting_table (version 0):%0A-- index [[test]]%0A----shard_id [test][0]%0A--------[test][0], node[node_0], relocating [node_5], [P], s[RELOCATING], a[id=zANpSzmQQ_qXkt4vQDOYZA, rId=O35IA5WYSXKG9fXkg8rm5g]%0A--------[test][0], node[node_6], [R], s[STARTED], a[id=G2F27YzOQZK7Uv8FcemIUg]%0A--------[test][0], node[node_1], [R], s[STARTED], a[id=z3bjpzikQ32VJBhM9DpM_w]%0A--------[test][0], node[node_3], [R], s[STARTED], a[id=fEj4dCB2SLeXgzcBVTQ5BA]%0A--------[test][0], node[null], [R], recovery_source[peer recovery], s[UNASSIGNED], unassigned_info[[reason=INDEX_CREATED], at[2016-09-18T10:47:47.875Z], delayed=false, allocation_status[no_attempt]]%0A--------[test][0], node[null], [R], recovery_source[peer recovery], s[UNASSIGNED], unassigned_info[[reason=INDEX_CREATED], at[2016-09-18T10:47:47.875Z], delayed=false, allocation_status[no_attempt]]%0A%0Arouting_nodes:%0A-----node_id[node_0][V]%0A--------[test][0], node[node_0], relocating [node_5], [P], s[RELOCATING], a[id=zANpSzmQQ_qXkt4vQDOYZA, rId=O35IA5WYSXKG9fXkg8rm5g]%0A-----node_id[node_1][V]%0A--------[test][0], node[node_1], [R], s[STARTED], a[id=z3bjpzikQ32VJBhM9DpM_w]%0A-----node_id[node_2][V]%0A-----node_id[node_3][V]%0A--------[test][0], node[node_3], [R], s[STARTED], a[id=fEj4dCB2SLeXgzcBVTQ5BA]%0A-----node_id[node_4][V]%0A-----node_id[node_5][V]%0A--------[test][0], node[node_5], relocating [node_0], [P], recovery_source[peer recovery], s[INITIALIZING], a[id=O35IA5WYSXKG9fXkg8rm5g, rId=zANpSzmQQ_qXkt4vQDOYZA]%0A-----node_id[node_6][V]%0A--------[test][0], node[node_6], [R], s[STARTED], a[id=G2F27YzOQZK7Uv8FcemIUg]%0A-----node_id[node_7][V]%0A---- unassigned%0A--------[test][0], node[null], [R], recovery_source[peer recovery], s[UNASSIGNED], unassigned_info[[reason=INDEX_CREATED], at[2016-09-18T10:47:47.875Z], delayed=false, allocation_status[no_attempt]]%0A--------[test][0], node[null], [R], recovery_source[peer recovery], s[UNASSIGNED], unassigned_info[[reason=INDEX_CREATED], at[2016-09-18T10:47:47.875Z], delayed=false, allocation_status[no_attempt]]%0A%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:47:47,876][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node_1}{l0E7u9-KQPWK0KUiY8d3Ug}{local}{local[369]}, previous {node}{LSfLE9kfSF2mldUQTbknWg}{local}{local[367]}}, removed {{node}{LSfLE9kfSF2mldUQTbknWg}{local}{local[367]},}, added {{node_6}{_QLij5KIRNOdrKHQg7A-jQ}{local}{local[374]},{node_1}{l0E7u9-KQPWK0KUiY8d3Ug}{local}{local[369]},{node_3}{3If7MV3BRheUXFqshYwC-g}{local}{local[371]},{node_5}{0PuKV4WiQkaZo7h1JLNgQw}{local}{local[373]},{node_2}{dww8K1NQT4ePwjMYkhZaNQ}{local}{local[370]},{node_7}{9MzphMu6Sa2PuNXA7YLlkA}{local}{local[375]},{node_4}{KfbIk5rAR-yoUE6Whm8T5A}{local}{local[372]},}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReplicaProxy(org.elasticsearch.action.support.replication.TransportReplicationActionTests)",
  "startTimestamp": 1474195667870,
  "executionTime": 16
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownIndexOrShardOnReroute(org.elasticsearch.action.support.replication.TransportReplicationActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:47:47,890][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{aUckA0qDQFS2EmKsO77Z_Q}{local}{local[379]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:47:47,892][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node_1}{aSod258RQWai7PSbpweGVA}{local}{local[381]}, previous {node}{aUckA0qDQFS2EmKsO77Z_Q}{local}{local[379]}}, removed {{node}{aUckA0qDQFS2EmKsO77Z_Q}{local}{local[379]},}, added {{node_1}{aSod258RQWai7PSbpweGVA}{local}{local[381]},{node_2}{GisY9Dv6SyyrP5teNhaWYQ}{local}{local[382]},}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownIndexOrShardOnReroute(org.elasticsearch.action.support.replication.TransportReplicationActionTests)",
  "startTimestamp": 1474195667886,
  "executionTime": 15
 }
]

[
 "TEST_STARTED",
 "ID#testShadowIndexDisablesReplication(org.elasticsearch.action.support.replication.TransportReplicationActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:47:47,906][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{-lEVkE-pT1i9keUJGg4FsQ}{local}{local[386]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:47:47,908][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node_1}{7H-Li5ePSxGVp2vWx7oofg}{local}{local[388]}, previous {node}{-lEVkE-pT1i9keUJGg4FsQ}{local}{local[386]}}, removed {{node}{-lEVkE-pT1i9keUJGg4FsQ}{local}{local[386]},}, added {{node_1}{7H-Li5ePSxGVp2vWx7oofg}{local}{local[388]},{node_2}{vKbCCyPqTHS0Z5x-h6_17A}{local}{local[389]},}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testShadowIndexDisablesReplication(org.elasticsearch.action.support.replication.TransportReplicationActionTests)",
  "startTimestamp": 1474195667902,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testStalePrimaryShardOnReroute(org.elasticsearch.action.support.replication.TransportReplicationActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:47:47,915][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{JIx0eRpjRgWNM3URm6x4gA}{local}{local[393]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:47:47,916][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node_1}{38xz0JMgQ5udUWO2Dh5e1Q}{local}{local[395]}, previous {node}{JIx0eRpjRgWNM3URm6x4gA}{local}{local[393]}}, removed {{node}{JIx0eRpjRgWNM3URm6x4gA}{local}{local[393]},}, added {{node_1}{38xz0JMgQ5udUWO2Dh5e1Q}{local}{local[395]},{node_2}{UAh_V7YZQwGw6fD8HrueBg}{local}{local[396]},}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStalePrimaryShardOnReroute(org.elasticsearch.action.support.replication.TransportReplicationActionTests)",
  "startTimestamp": 1474195667909,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testNoRerouteOnStaleClusterState(org.elasticsearch.action.support.replication.TransportReplicationActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:47:47,924][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{jecndX21SzKKZTawSe417Q}{local}{local[400]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:47:47,926][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node_1}{71-DpykmSNmWiUnNl490CA}{local}{local[402]}, previous {node}{jecndX21SzKKZTawSe417Q}{local}{local[400]}}, removed {{node}{jecndX21SzKKZTawSe417Q}{local}{local[400]},}, added {{node_0}{w384YLcSR1q4x-7GEgguFA}{local}{local[401]},{node_2}{ExOYzF-BQkqFjGDeClWCzg}{local}{local[403]},}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoRerouteOnStaleClusterState(org.elasticsearch.action.support.replication.TransportReplicationActionTests)",
  "startTimestamp": 1474195667919,
  "executionTime": 18
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultWaitForActiveShardsUsesIndexSetting(org.elasticsearch.action.support.replication.TransportReplicationActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:47:47,941][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{1Qs23zpVQ8CzIo0hhBSDmw}{local}{local[407]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:47:47,946][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node_1}{V5eYA_JhTIqazJsACy3kZg}{local}{local[409]}, previous {node}{1Qs23zpVQ8CzIo0hhBSDmw}{local}{local[407]}}, removed {{node}{1Qs23zpVQ8CzIo0hhBSDmw}{local}{local[407]},}, added {{node_1}{V5eYA_JhTIqazJsACy3kZg}{local}{local[409]},{node_2}{cV42hTPxQZWaAo9sV5J8kg}{local}{local[410]},}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultWaitForActiveShardsUsesIndexSetting(org.elasticsearch.action.support.replication.TransportReplicationActionTests)",
  "startTimestamp": 1474195667937,
  "executionTime": 10
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.support.replication.TransportReplicationActionTests",
  "startTimestamp": 1474195667580,
  "executionTime": 370
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests",
   "displayName": "org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests",
   "children": [
    {
     "id": "ID#testTermVectorsBackCompat(org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests)",
     "displayName": "testTermVectorsBackCompat(org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests)",
     "methodName": "testTermVectorsBackCompat",
     "className": "org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testCoerceOption(org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests)",
     "displayName": "testCoerceOption(org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests)",
     "methodName": "testCoerceOption",
     "className": "org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testIgnoreMalformedOption(org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests)",
     "displayName": "testIgnoreMalformedOption(org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests)",
     "methodName": "testIgnoreMalformedOption",
     "className": "org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testBwCompatIndex(org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests)",
     "displayName": "testBwCompatIndex(org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests)",
     "methodName": "testBwCompatIndex",
     "className": "org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testPrecisionStepDefaultsDetected(org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests)",
     "displayName": "testPrecisionStepDefaultsDetected(org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests)",
     "methodName": "testPrecisionStepDefaultsDetected",
     "className": "org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testPrecisionStepDefaultsMapped(org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests)",
     "displayName": "testPrecisionStepDefaultsMapped(org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests)",
     "methodName": "testPrecisionStepDefaultsMapped",
     "className": "org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testUnIndex(org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests)",
     "displayName": "testUnIndex(org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests)",
     "methodName": "testUnIndex",
     "className": "org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testDocValues(org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests)",
     "displayName": "testDocValues(org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests)",
     "methodName": "testDocValues",
     "className": "org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testAnalyzerBackCompat(org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests)",
     "displayName": "testAnalyzerBackCompat(org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests)",
     "methodName": "testAnalyzerBackCompat",
     "className": "org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testPrecisionStepExplicit(org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests)",
     "displayName": "testPrecisionStepExplicit(org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests)",
     "methodName": "testPrecisionStepExplicit",
     "className": "org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testIgnoreFielddata(org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests)",
     "displayName": "testIgnoreFielddata(org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests)",
     "methodName": "testIgnoreFielddata",
     "className": "org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testDocValuesOnNested(org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests)",
     "displayName": "testDocValuesOnNested(org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests)",
     "methodName": "testDocValuesOnNested",
     "className": "org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195667958
 }
]

[
 "TEST_STARTED",
 "ID#testTermVectorsBackCompat(org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:47,988][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:48,010][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:48,011][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:48,014][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[7260], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:48,017][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:48,017][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.test.InternalSettingsPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:48,120][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:48,120][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:48,121][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[77]}, bound_addresses {local[77]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:48,122][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{wCYBuUJsQ3yuxgzt7bFlzA}{eRwrMSDyRrq9b70_Tx5jRg}{local}{local[77]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:48,123][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:48,134][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:48,160][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index-byte] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:48,229][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[index-byte][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:48,246][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index2-byte] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:48,316][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[index2-byte][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:48,390][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index-short] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:48,448][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[index-short][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:48,476][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index2-short] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:48,528][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[index2-short][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:48,574][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index-integer] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:48,621][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[index-integer][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:48,641][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index2-integer] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:48,701][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[index2-integer][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:48,718][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index-long] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:48,785][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[index-long][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:48,840][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index2-long] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:48,977][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[index2-long][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:49,010][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index-float] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:49,088][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[index-float][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:49,104][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index2-float] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:49,178][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[index2-float][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:49,199][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index-double] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:49,264][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[index-double][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:49,282][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index2-double] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:49,384][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[index2-double][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:49,396][INFO ][org.elasticsearch.index.mapper] [node_s_0] [index2-double] [LegacyNumberFieldMapperTests#testTermVectorsBackCompat]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTermVectorsBackCompat(org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests)",
  "startTimestamp": 1474195667980,
  "executionTime": 1912
 }
]

[
 "TEST_STARTED",
 "ID#testCoerceOption(org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:49,899][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:50,043][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:50,089][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [LegacyNumberFieldMapperTests#testCoerceOption]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCoerceOption(org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests)",
  "startTimestamp": 1474195669892,
  "executionTime": 223
 }
]

[
 "TEST_STARTED",
 "ID#testIgnoreMalformedOption(org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:50,122][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:50,186][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:50,227][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test2] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:50,290][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test2][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:50,302][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test2] [LegacyNumberFieldMapperTests#testIgnoreMalformedOption]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIgnoreMalformedOption(org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests)",
  "startTimestamp": 1474195670115,
  "executionTime": 231
 }
]

[
 "TEST_STARTED",
 "ID#testBwCompatIndex(org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:50,353][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:50,425][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:50,441][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] Expected a boolean for property [index] but got [no]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:50,441][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] Expected a boolean for property [index] but got [not_analyzed]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:50,442][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [LegacyNumberFieldMapperTests#testBwCompatIndex]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBwCompatIndex(org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests)",
  "startTimestamp": 1474195670346,
  "executionTime": 124
 }
]

[
 "TEST_STARTED",
 "ID#testPrecisionStepDefaultsDetected(org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:50,477][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:50,595][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:50,610][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [LegacyNumberFieldMapperTests#testPrecisionStepDefaultsDetected]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPrecisionStepDefaultsDetected(org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests)",
  "startTimestamp": 1474195670471,
  "executionTime": 328
 }
]

[
 "TEST_STARTED",
 "ID#testPrecisionStepDefaultsMapped(org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:50,806][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:50,901][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:50,968][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [LegacyNumberFieldMapperTests#testPrecisionStepDefaultsMapped]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPrecisionStepDefaultsMapped(org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests)",
  "startTimestamp": 1474195670800,
  "executionTime": 201
 }
]

[
 "TEST_STARTED",
 "ID#testUnIndex(org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:51,007][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:51,074][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:51,086][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [LegacyNumberFieldMapperTests#testUnIndex]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnIndex(org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests)",
  "startTimestamp": 1474195671001,
  "executionTime": 109
 }
]

[
 "TEST_STARTED",
 "ID#testDocValues(org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:51,116][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:51,441][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:51,529][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] Expected a boolean for property [index] but got [no]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:51,530][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] Expected a boolean for property [index] but got [no]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:51,536][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [LegacyNumberFieldMapperTests#testDocValues]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDocValues(org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests)",
  "startTimestamp": 1474195671110,
  "executionTime": 1935
 }
]

[
 "TEST_STARTED",
 "ID#testAnalyzerBackCompat(org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:53,051][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index-byte] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:53,101][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[index-byte][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:53,116][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index2-byte] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:53,167][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[index2-byte][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:53,192][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index-short] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:53,278][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[index-short][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:53,295][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index2-short] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:53,342][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[index2-short][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:53,361][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index-integer] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:53,420][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[index-integer][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:53,442][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index2-integer] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:53,804][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[index2-integer][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:54,082][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index-long] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:54,219][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[index-long][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:54,234][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index2-long] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:54,302][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[index2-long][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:54,318][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index-float] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:54,370][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[index-float][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:54,385][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index2-float] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:54,429][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[index2-float][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:54,444][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index-double] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:54,488][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[index-double][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:54,526][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index2-double] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:54,593][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[index2-double][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:54,612][INFO ][org.elasticsearch.index.mapper] [node_s_0] [index2-double] [LegacyNumberFieldMapperTests#testAnalyzerBackCompat]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAnalyzerBackCompat(org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests)",
  "startTimestamp": 1474195673045,
  "executionTime": 1827
 }
]

[
 "TEST_STARTED",
 "ID#testPrecisionStepExplicit(org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:54,878][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:54,938][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:54,950][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [LegacyNumberFieldMapperTests#testPrecisionStepExplicit]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPrecisionStepExplicit(org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests)",
  "startTimestamp": 1474195674872,
  "executionTime": 132
 }
]

[
 "TEST_STARTED",
 "ID#testIgnoreFielddata(org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:55,010][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index-byte] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:55,051][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[index-byte][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:55,066][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index-short] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:55,107][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[index-short][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:55,121][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index-integer] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:55,163][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[index-integer][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:55,177][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index-long] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:55,217][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[index-long][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:55,231][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index-float] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:55,273][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[index-float][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:55,288][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [index-double] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:55,329][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[index-double][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:55,340][INFO ][org.elasticsearch.index.mapper] [node_s_0] [index-double] [LegacyNumberFieldMapperTests#testIgnoreFielddata]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIgnoreFielddata(org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests)",
  "startTimestamp": 1474195675004,
  "executionTime": 435
 }
]

[
 "TEST_STARTED",
 "ID#testDocValuesOnNested(org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:55,445][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:55,488][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:55,500][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [LegacyNumberFieldMapperTests#testDocValuesOnNested]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDocValuesOnNested(org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests)",
  "startTimestamp": 1474195675439,
  "executionTime": 84
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:55,524][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:55,524][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:55,524][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:55,525][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.LegacyNumberFieldMapperTests",
  "startTimestamp": 1474195667958,
  "executionTime": 7578
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.analysis.ASCIIFoldingTokenFilterFactoryTests",
   "displayName": "org.elasticsearch.index.analysis.ASCIIFoldingTokenFilterFactoryTests",
   "methodName": null,
   "className": "org.elasticsearch.index.analysis.ASCIIFoldingTokenFilterFactoryTests",
   "children": [
    {
     "id": "ID#testPreserveOriginal(org.elasticsearch.index.analysis.ASCIIFoldingTokenFilterFactoryTests)",
     "displayName": "testPreserveOriginal(org.elasticsearch.index.analysis.ASCIIFoldingTokenFilterFactoryTests)",
     "methodName": "testPreserveOriginal",
     "className": "org.elasticsearch.index.analysis.ASCIIFoldingTokenFilterFactoryTests",
     "children": []
    },
    {
     "id": "ID#testDefault(org.elasticsearch.index.analysis.ASCIIFoldingTokenFilterFactoryTests)",
     "displayName": "testDefault(org.elasticsearch.index.analysis.ASCIIFoldingTokenFilterFactoryTests)",
     "methodName": "testDefault",
     "className": "org.elasticsearch.index.analysis.ASCIIFoldingTokenFilterFactoryTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195675541
 }
]

[
 "TEST_STARTED",
 "ID#testPreserveOriginal(org.elasticsearch.index.analysis.ASCIIFoldingTokenFilterFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPreserveOriginal(org.elasticsearch.index.analysis.ASCIIFoldingTokenFilterFactoryTests)",
  "startTimestamp": 1474195675556,
  "executionTime": 15
 }
]

[
 "TEST_STARTED",
 "ID#testDefault(org.elasticsearch.index.analysis.ASCIIFoldingTokenFilterFactoryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefault(org.elasticsearch.index.analysis.ASCIIFoldingTokenFilterFactoryTests)",
  "startTimestamp": 1474195675572,
  "executionTime": 6
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.analysis.ASCIIFoldingTokenFilterFactoryTests",
  "startTimestamp": 1474195675541,
  "executionTime": 41
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.allocation.IndexBalanceTests",
   "displayName": "org.elasticsearch.cluster.routing.allocation.IndexBalanceTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.allocation.IndexBalanceTests",
   "children": [
    {
     "id": "ID#testBalanceAllNodesStarted(org.elasticsearch.cluster.routing.allocation.IndexBalanceTests)",
     "displayName": "testBalanceAllNodesStarted(org.elasticsearch.cluster.routing.allocation.IndexBalanceTests)",
     "methodName": "testBalanceAllNodesStarted",
     "className": "org.elasticsearch.cluster.routing.allocation.IndexBalanceTests",
     "children": []
    },
    {
     "id": "ID#testBalanceIncrementallyStartNodes(org.elasticsearch.cluster.routing.allocation.IndexBalanceTests)",
     "displayName": "testBalanceIncrementallyStartNodes(org.elasticsearch.cluster.routing.allocation.IndexBalanceTests)",
     "methodName": "testBalanceIncrementallyStartNodes",
     "className": "org.elasticsearch.cluster.routing.allocation.IndexBalanceTests",
     "children": []
    },
    {
     "id": "ID#testBalanceAllNodesStartedAddIndex(org.elasticsearch.cluster.routing.allocation.IndexBalanceTests)",
     "displayName": "testBalanceAllNodesStartedAddIndex(org.elasticsearch.cluster.routing.allocation.IndexBalanceTests)",
     "methodName": "testBalanceAllNodesStartedAddIndex",
     "className": "org.elasticsearch.cluster.routing.allocation.IndexBalanceTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195675589
 }
]

[
 "TEST_STARTED",
 "ID#testBalanceAllNodesStarted(org.elasticsearch.cluster.routing.allocation.IndexBalanceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:47:55,609][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Building initial routing table%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:47:55,610][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Adding three node and performing rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:47:55,611][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Another round of rebalancing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:47:55,612][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Reroute, nothing should change%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:47:55,612][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Start the more shards%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:47:55,612][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test1][2], [test][2], [test1][0], [test][0], [test1][1], [test][1]] ...]).%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBalanceAllNodesStarted(org.elasticsearch.cluster.routing.allocation.IndexBalanceTests)",
  "startTimestamp": 1474195675603,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testBalanceIncrementallyStartNodes(org.elasticsearch.cluster.routing.allocation.IndexBalanceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:47:55,619][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Building initial routing table%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:47:55,619][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Adding one node and performing rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:47:55,619][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Add another node and perform rerouting, nothing will happen since primary not started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:47:55,620][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Start the primary shard%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:47:55,620][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Reroute, nothing should change%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:47:55,620][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Start the backup shard%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:47:55,621][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test1][1], [test1][2], [test1][0], [test][1], [test][2], [test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:47:55,621][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Add another node and perform rerouting, nothing will happen since primary not started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:47:55,623][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Reroute, nothing should change%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:47:55,623][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Start the backup shard%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBalanceIncrementallyStartNodes(org.elasticsearch.cluster.routing.allocation.IndexBalanceTests)",
  "startTimestamp": 1474195675613,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testBalanceAllNodesStartedAddIndex(org.elasticsearch.cluster.routing.allocation.IndexBalanceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:47:55,632][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Building initial routing table%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:47:55,632][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Adding three node and performing rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:47:55,632][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Another round of rebalancing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:47:55,633][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Reroute, nothing should change%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:47:55,633][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Start the more shards%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:47:55,633][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][2], [test][0], [test][1]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:47:55,633][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Add new index 3 shards 1 replica%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:47:55,634][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Another round of rebalancing%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:47:55,634][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Reroute, nothing should change%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:47:55,634][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Start the more shards%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:47:55,635][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test1][2], [test1][0], [test1][1]] ...]).%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBalanceAllNodesStartedAddIndex(org.elasticsearch.cluster.routing.allocation.IndexBalanceTests)",
  "startTimestamp": 1474195675624,
  "executionTime": 11
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.allocation.IndexBalanceTests",
  "startTimestamp": 1474195675589,
  "executionTime": 48
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.metrics.FilterTests",
   "displayName": "org.elasticsearch.search.aggregations.metrics.FilterTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.metrics.FilterTests",
   "children": [
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.FilterTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.FilterTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.aggregations.metrics.FilterTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.aggregations.metrics.FilterTests)",
     "displayName": "testSerialization(org.elasticsearch.search.aggregations.metrics.FilterTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.aggregations.metrics.FilterTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.aggregations.metrics.FilterTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.aggregations.metrics.FilterTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.aggregations.metrics.FilterTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195675642
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:47:55,662][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{Fjdnt-JkQ-GclQQBpRM4Zw}{local}{local[423]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.FilterTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.FilterTests)",
  "startTimestamp": 1474195675676,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.aggregations.metrics.FilterTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.aggregations.metrics.FilterTests)",
  "startTimestamp": 1474195675678,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.aggregations.metrics.FilterTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.aggregations.metrics.FilterTests)",
  "startTimestamp": 1474195675681,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.metrics.FilterTests",
  "startTimestamp": 1474195675642,
  "executionTime": 51
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.suggest.term.TermSuggestionBuilderTests",
   "displayName": "org.elasticsearch.search.suggest.term.TermSuggestionBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.search.suggest.term.TermSuggestionBuilderTests",
   "children": [
    {
     "id": "ID#testMalformedJson(org.elasticsearch.search.suggest.term.TermSuggestionBuilderTests)",
     "displayName": "testMalformedJson(org.elasticsearch.search.suggest.term.TermSuggestionBuilderTests)",
     "methodName": "testMalformedJson",
     "className": "org.elasticsearch.search.suggest.term.TermSuggestionBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.suggest.term.TermSuggestionBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.search.suggest.term.TermSuggestionBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.suggest.term.TermSuggestionBuilderTests",
     "children": []
    },
    {
     "id": "ID#testDefaultValuesSet(org.elasticsearch.search.suggest.term.TermSuggestionBuilderTests)",
     "displayName": "testDefaultValuesSet(org.elasticsearch.search.suggest.term.TermSuggestionBuilderTests)",
     "methodName": "testDefaultValuesSet",
     "className": "org.elasticsearch.search.suggest.term.TermSuggestionBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.suggest.term.TermSuggestionBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.suggest.term.TermSuggestionBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.suggest.term.TermSuggestionBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.suggest.term.TermSuggestionBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.suggest.term.TermSuggestionBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.suggest.term.TermSuggestionBuilderTests",
     "children": []
    },
    {
     "id": "ID#testInvalidParameters(org.elasticsearch.search.suggest.term.TermSuggestionBuilderTests)",
     "displayName": "testInvalidParameters(org.elasticsearch.search.suggest.term.TermSuggestionBuilderTests)",
     "methodName": "testInvalidParameters",
     "className": "org.elasticsearch.search.suggest.term.TermSuggestionBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195675757
 }
]

[
 "TEST_STARTED",
 "ID#testMalformedJson(org.elasticsearch.search.suggest.term.TermSuggestionBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMalformedJson(org.elasticsearch.search.suggest.term.TermSuggestionBuilderTests)",
  "startTimestamp": 1474195675796,
  "executionTime": 34
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.suggest.term.TermSuggestionBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.suggest.term.TermSuggestionBuilderTests)",
  "startTimestamp": 1474195675830,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultValuesSet(org.elasticsearch.search.suggest.term.TermSuggestionBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultValuesSet(org.elasticsearch.search.suggest.term.TermSuggestionBuilderTests)",
  "startTimestamp": 1474195675838,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.suggest.term.TermSuggestionBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.suggest.term.TermSuggestionBuilderTests)",
  "startTimestamp": 1474195675839,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.suggest.term.TermSuggestionBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.suggest.term.TermSuggestionBuilderTests)",
  "startTimestamp": 1474195675846,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidParameters(org.elasticsearch.search.suggest.term.TermSuggestionBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidParameters(org.elasticsearch.search.suggest.term.TermSuggestionBuilderTests)",
  "startTimestamp": 1474195675857,
  "executionTime": 6
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.suggest.term.TermSuggestionBuilderTests",
  "startTimestamp": 1474195675757,
  "executionTime": 108
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.allocation.SingleShardOneReplicaRoutingTests",
   "displayName": "org.elasticsearch.cluster.routing.allocation.SingleShardOneReplicaRoutingTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.allocation.SingleShardOneReplicaRoutingTests",
   "children": [
    {
     "id": "ID#testSingleIndexFirstStartPrimaryThenBackups(org.elasticsearch.cluster.routing.allocation.SingleShardOneReplicaRoutingTests)",
     "displayName": "testSingleIndexFirstStartPrimaryThenBackups(org.elasticsearch.cluster.routing.allocation.SingleShardOneReplicaRoutingTests)",
     "methodName": "testSingleIndexFirstStartPrimaryThenBackups",
     "className": "org.elasticsearch.cluster.routing.allocation.SingleShardOneReplicaRoutingTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195675871
 }
]

[
 "TEST_STARTED",
 "ID#testSingleIndexFirstStartPrimaryThenBackups(org.elasticsearch.cluster.routing.allocation.SingleShardOneReplicaRoutingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:55,891][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Building initial routing table%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:55,892][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Adding one node and performing rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:55,892][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Add another node and perform rerouting, nothing will happen since primary shards not started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:55,892][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Start the primary shard (on node1)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:55,893][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Reroute, nothing should change%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:55,893][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Start the backup shard%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:55,893][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:55,893][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Kill node1, backup shard should become primary%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:55,893][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [GREEN] to [YELLOW] (reason: [reroute]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:55,893][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Start another node, backup shard should start initializing%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleIndexFirstStartPrimaryThenBackups(org.elasticsearch.cluster.routing.allocation.SingleShardOneReplicaRoutingTests)",
  "startTimestamp": 1474195675885,
  "executionTime": 9
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.allocation.SingleShardOneReplicaRoutingTests",
  "startTimestamp": 1474195675871,
  "executionTime": 51
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.ingest.BulkRequestModifierTests",
   "displayName": "org.elasticsearch.action.ingest.BulkRequestModifierTests",
   "methodName": null,
   "className": "org.elasticsearch.action.ingest.BulkRequestModifierTests",
   "children": [
    {
     "id": "ID#testBulkRequestModifier(org.elasticsearch.action.ingest.BulkRequestModifierTests)",
     "displayName": "testBulkRequestModifier(org.elasticsearch.action.ingest.BulkRequestModifierTests)",
     "methodName": "testBulkRequestModifier",
     "className": "org.elasticsearch.action.ingest.BulkRequestModifierTests",
     "children": []
    },
    {
     "id": "ID#testPipelineFailures(org.elasticsearch.action.ingest.BulkRequestModifierTests)",
     "displayName": "testPipelineFailures(org.elasticsearch.action.ingest.BulkRequestModifierTests)",
     "methodName": "testPipelineFailures",
     "className": "org.elasticsearch.action.ingest.BulkRequestModifierTests",
     "children": []
    },
    {
     "id": "ID#testNoFailures(org.elasticsearch.action.ingest.BulkRequestModifierTests)",
     "displayName": "testNoFailures(org.elasticsearch.action.ingest.BulkRequestModifierTests)",
     "methodName": "testNoFailures",
     "className": "org.elasticsearch.action.ingest.BulkRequestModifierTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195675928
 }
]

[
 "TEST_STARTED",
 "ID#testBulkRequestModifier(org.elasticsearch.action.ingest.BulkRequestModifierTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBulkRequestModifier(org.elasticsearch.action.ingest.BulkRequestModifierTests)",
  "startTimestamp": 1474195676075,
  "executionTime": 54
 }
]

[
 "TEST_STARTED",
 "ID#testPipelineFailures(org.elasticsearch.action.ingest.BulkRequestModifierTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPipelineFailures(org.elasticsearch.action.ingest.BulkRequestModifierTests)",
  "startTimestamp": 1474195676129,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testNoFailures(org.elasticsearch.action.ingest.BulkRequestModifierTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoFailures(org.elasticsearch.action.ingest.BulkRequestModifierTests)",
  "startTimestamp": 1474195676133,
  "executionTime": 8
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.ingest.BulkRequestModifierTests",
  "startTimestamp": 1474195675928,
  "executionTime": 214
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.IpFieldTypeTests",
   "displayName": "org.elasticsearch.index.mapper.IpFieldTypeTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.IpFieldTypeTests",
   "children": [
    {
     "id": "ID#testRangeQuery(org.elasticsearch.index.mapper.IpFieldTypeTests)",
     "displayName": "testRangeQuery(org.elasticsearch.index.mapper.IpFieldTypeTests)",
     "methodName": "testRangeQuery",
     "className": "org.elasticsearch.index.mapper.IpFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testValueFormat(org.elasticsearch.index.mapper.IpFieldTypeTests)",
     "displayName": "testValueFormat(org.elasticsearch.index.mapper.IpFieldTypeTests)",
     "methodName": "testValueFormat",
     "className": "org.elasticsearch.index.mapper.IpFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testTermQuery(org.elasticsearch.index.mapper.IpFieldTypeTests)",
     "displayName": "testTermQuery(org.elasticsearch.index.mapper.IpFieldTypeTests)",
     "methodName": "testTermQuery",
     "className": "org.elasticsearch.index.mapper.IpFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckTypeName(org.elasticsearch.index.mapper.IpFieldTypeTests)",
     "displayName": "testCheckTypeName(org.elasticsearch.index.mapper.IpFieldTypeTests)",
     "methodName": "testCheckTypeName",
     "className": "org.elasticsearch.index.mapper.IpFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testClone(org.elasticsearch.index.mapper.IpFieldTypeTests)",
     "displayName": "testClone(org.elasticsearch.index.mapper.IpFieldTypeTests)",
     "methodName": "testClone",
     "className": "org.elasticsearch.index.mapper.IpFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testEquals(org.elasticsearch.index.mapper.IpFieldTypeTests)",
     "displayName": "testEquals(org.elasticsearch.index.mapper.IpFieldTypeTests)",
     "methodName": "testEquals",
     "className": "org.elasticsearch.index.mapper.IpFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.IpFieldTypeTests)",
     "displayName": "testCheckCompatibility(org.elasticsearch.index.mapper.IpFieldTypeTests)",
     "methodName": "testCheckCompatibility",
     "className": "org.elasticsearch.index.mapper.IpFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testValueForSearch(org.elasticsearch.index.mapper.IpFieldTypeTests)",
     "displayName": "testValueForSearch(org.elasticsearch.index.mapper.IpFieldTypeTests)",
     "methodName": "testValueForSearch",
     "className": "org.elasticsearch.index.mapper.IpFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testFreeze(org.elasticsearch.index.mapper.IpFieldTypeTests)",
     "displayName": "testFreeze(org.elasticsearch.index.mapper.IpFieldTypeTests)",
     "methodName": "testFreeze",
     "className": "org.elasticsearch.index.mapper.IpFieldTypeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195676148
 }
]

[
 "TEST_STARTED",
 "ID#testRangeQuery(org.elasticsearch.index.mapper.IpFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRangeQuery(org.elasticsearch.index.mapper.IpFieldTypeTests)",
  "startTimestamp": 1474195676166,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testValueFormat(org.elasticsearch.index.mapper.IpFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValueFormat(org.elasticsearch.index.mapper.IpFieldTypeTests)",
  "startTimestamp": 1474195676169,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testTermQuery(org.elasticsearch.index.mapper.IpFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTermQuery(org.elasticsearch.index.mapper.IpFieldTypeTests)",
  "startTimestamp": 1474195676171,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCheckTypeName(org.elasticsearch.index.mapper.IpFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckTypeName(org.elasticsearch.index.mapper.IpFieldTypeTests)",
  "startTimestamp": 1474195676173,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testClone(org.elasticsearch.index.mapper.IpFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClone(org.elasticsearch.index.mapper.IpFieldTypeTests)",
  "startTimestamp": 1474195676175,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEquals(org.elasticsearch.index.mapper.IpFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEquals(org.elasticsearch.index.mapper.IpFieldTypeTests)",
  "startTimestamp": 1474195676177,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCheckCompatibility(org.elasticsearch.index.mapper.IpFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.IpFieldTypeTests)",
  "startTimestamp": 1474195676179,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testValueForSearch(org.elasticsearch.index.mapper.IpFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValueForSearch(org.elasticsearch.index.mapper.IpFieldTypeTests)",
  "startTimestamp": 1474195676181,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testFreeze(org.elasticsearch.index.mapper.IpFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFreeze(org.elasticsearch.index.mapper.IpFieldTypeTests)",
  "startTimestamp": 1474195676182,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.IpFieldTypeTests",
  "startTimestamp": 1474195676148,
  "executionTime": 38
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.suggest.completion.CompletionSuggesterBuilderTests",
   "displayName": "org.elasticsearch.search.suggest.completion.CompletionSuggesterBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.search.suggest.completion.CompletionSuggesterBuilderTests",
   "children": [
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.suggest.completion.CompletionSuggesterBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.suggest.completion.CompletionSuggesterBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.suggest.completion.CompletionSuggesterBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.suggest.completion.CompletionSuggesterBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.search.suggest.completion.CompletionSuggesterBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.suggest.completion.CompletionSuggesterBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.suggest.completion.CompletionSuggesterBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.suggest.completion.CompletionSuggesterBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.suggest.completion.CompletionSuggesterBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195676191
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.suggest.completion.CompletionSuggesterBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.suggest.completion.CompletionSuggesterBuilderTests)",
  "startTimestamp": 1474195676333,
  "executionTime": 68
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.suggest.completion.CompletionSuggesterBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.suggest.completion.CompletionSuggesterBuilderTests)",
  "startTimestamp": 1474195676401,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.suggest.completion.CompletionSuggesterBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.suggest.completion.CompletionSuggesterBuilderTests)",
  "startTimestamp": 1474195676405,
  "executionTime": 17
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.suggest.completion.CompletionSuggesterBuilderTests",
  "startTimestamp": 1474195676191,
  "executionTime": 233
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.ObjectMapperTests",
   "displayName": "org.elasticsearch.index.mapper.ObjectMapperTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.ObjectMapperTests",
   "children": [
    {
     "id": "ID#testFieldPropertiesArray(org.elasticsearch.index.mapper.ObjectMapperTests)",
     "displayName": "testFieldPropertiesArray(org.elasticsearch.index.mapper.ObjectMapperTests)",
     "methodName": "testFieldPropertiesArray",
     "className": "org.elasticsearch.index.mapper.ObjectMapperTests",
     "children": []
    },
    {
     "id": "ID#testMerge(org.elasticsearch.index.mapper.ObjectMapperTests)",
     "displayName": "testMerge(org.elasticsearch.index.mapper.ObjectMapperTests)",
     "methodName": "testMerge",
     "className": "org.elasticsearch.index.mapper.ObjectMapperTests",
     "children": []
    },
    {
     "id": "ID#testFieldsArrayMultiFieldsShouldThrowException(org.elasticsearch.index.mapper.ObjectMapperTests)",
     "displayName": "testFieldsArrayMultiFieldsShouldThrowException(org.elasticsearch.index.mapper.ObjectMapperTests)",
     "methodName": "testFieldsArrayMultiFieldsShouldThrowException",
     "className": "org.elasticsearch.index.mapper.ObjectMapperTests",
     "children": []
    },
    {
     "id": "ID#testEmptyArrayProperties(org.elasticsearch.index.mapper.ObjectMapperTests)",
     "displayName": "testEmptyArrayProperties(org.elasticsearch.index.mapper.ObjectMapperTests)",
     "methodName": "testEmptyArrayProperties",
     "className": "org.elasticsearch.index.mapper.ObjectMapperTests",
     "children": []
    },
    {
     "id": "ID#testEmptyFieldsArray(org.elasticsearch.index.mapper.ObjectMapperTests)",
     "displayName": "testEmptyFieldsArray(org.elasticsearch.index.mapper.ObjectMapperTests)",
     "methodName": "testEmptyFieldsArray",
     "className": "org.elasticsearch.index.mapper.ObjectMapperTests",
     "children": []
    },
    {
     "id": "ID#testEmptyFieldsArrayMultiFields(org.elasticsearch.index.mapper.ObjectMapperTests)",
     "displayName": "testEmptyFieldsArrayMultiFields(org.elasticsearch.index.mapper.ObjectMapperTests)",
     "methodName": "testEmptyFieldsArrayMultiFields",
     "className": "org.elasticsearch.index.mapper.ObjectMapperTests",
     "children": []
    },
    {
     "id": "ID#testDifferentInnerObjectTokenFailure(org.elasticsearch.index.mapper.ObjectMapperTests)",
     "displayName": "testDifferentInnerObjectTokenFailure(org.elasticsearch.index.mapper.ObjectMapperTests)",
     "methodName": "testDifferentInnerObjectTokenFailure",
     "className": "org.elasticsearch.index.mapper.ObjectMapperTests",
     "children": []
    },
    {
     "id": "ID#testFieldsWithFilledArrayShouldThrowException(org.elasticsearch.index.mapper.ObjectMapperTests)",
     "displayName": "testFieldsWithFilledArrayShouldThrowException(org.elasticsearch.index.mapper.ObjectMapperTests)",
     "methodName": "testFieldsWithFilledArrayShouldThrowException",
     "className": "org.elasticsearch.index.mapper.ObjectMapperTests",
     "children": []
    },
    {
     "id": "ID#testEmptyName(org.elasticsearch.index.mapper.ObjectMapperTests)",
     "displayName": "testEmptyName(org.elasticsearch.index.mapper.ObjectMapperTests)",
     "methodName": "testEmptyName",
     "className": "org.elasticsearch.index.mapper.ObjectMapperTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195676431
 }
]

[
 "TEST_STARTED",
 "ID#testFieldPropertiesArray(org.elasticsearch.index.mapper.ObjectMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:56,468][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:56,488][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:56,488][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:56,491][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[7260], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:56,493][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:56,494][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.test.InternalSettingsPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:56,594][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:56,598][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:56,598][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[78]}, bound_addresses {local[78]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:56,604][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{zHy9Fp6wRGiHlNvz8U1qjQ}{rUWWpIy0TKiVFKziB4vDAA}{local}{local[78]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:56,605][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:56,631][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:56,648][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:56,779][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:56,849][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [ObjectMapperTests#testFieldPropertiesArray]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFieldPropertiesArray(org.elasticsearch.index.mapper.ObjectMapperTests)",
  "startTimestamp": 1474195676461,
  "executionTime": 422
 }
]

[
 "TEST_STARTED",
 "ID#testMerge(org.elasticsearch.index.mapper.ObjectMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:56,890][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:56,951][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:57,012][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [ObjectMapperTests#testMerge]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMerge(org.elasticsearch.index.mapper.ObjectMapperTests)",
  "startTimestamp": 1474195676883,
  "executionTime": 157
 }
]

[
 "TEST_STARTED",
 "ID#testFieldsArrayMultiFieldsShouldThrowException(org.elasticsearch.index.mapper.ObjectMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:57,048][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:57,112][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:57,135][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [ObjectMapperTests#testFieldsArrayMultiFieldsShouldThrowException]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFieldsArrayMultiFieldsShouldThrowException(org.elasticsearch.index.mapper.ObjectMapperTests)",
  "startTimestamp": 1474195677040,
  "executionTime": 138
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyArrayProperties(org.elasticsearch.index.mapper.ObjectMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:57,184][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:57,250][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:57,265][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [ObjectMapperTests#testEmptyArrayProperties]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyArrayProperties(org.elasticsearch.index.mapper.ObjectMapperTests)",
  "startTimestamp": 1474195677178,
  "executionTime": 137
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyFieldsArray(org.elasticsearch.index.mapper.ObjectMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:57,322][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:57,389][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:57,400][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [ObjectMapperTests#testEmptyFieldsArray]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyFieldsArray(org.elasticsearch.index.mapper.ObjectMapperTests)",
  "startTimestamp": 1474195677315,
  "executionTime": 122
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyFieldsArrayMultiFields(org.elasticsearch.index.mapper.ObjectMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:57,443][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:57,486][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:57,505][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [ObjectMapperTests#testEmptyFieldsArrayMultiFields]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyFieldsArrayMultiFields(org.elasticsearch.index.mapper.ObjectMapperTests)",
  "startTimestamp": 1474195677438,
  "executionTime": 94
 }
]

[
 "TEST_STARTED",
 "ID#testDifferentInnerObjectTokenFailure(org.elasticsearch.index.mapper.ObjectMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:57,538][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:57,591][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:57,606][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [ObjectMapperTests#testDifferentInnerObjectTokenFailure]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDifferentInnerObjectTokenFailure(org.elasticsearch.index.mapper.ObjectMapperTests)",
  "startTimestamp": 1474195677532,
  "executionTime": 101
 }
]

[
 "TEST_STARTED",
 "ID#testFieldsWithFilledArrayShouldThrowException(org.elasticsearch.index.mapper.ObjectMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:57,639][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:57,683][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:57,696][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [ObjectMapperTests#testFieldsWithFilledArrayShouldThrowException]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFieldsWithFilledArrayShouldThrowException(org.elasticsearch.index.mapper.ObjectMapperTests)",
  "startTimestamp": 1474195677633,
  "executionTime": 90
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyName(org.elasticsearch.index.mapper.ObjectMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:57,729][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:57,790][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:57,805][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test_old] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:57,863][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test_old][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:57,879][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test_old] [ObjectMapperTests#testEmptyName]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyName(org.elasticsearch.index.mapper.ObjectMapperTests)",
  "startTimestamp": 1474195677723,
  "executionTime": 220
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:57,943][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:57,944][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:57,944][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:47:57,945][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.ObjectMapperTests",
  "startTimestamp": 1474195676431,
  "executionTime": 1526
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.SpecialPermissionTests",
   "displayName": "org.elasticsearch.SpecialPermissionTests",
   "methodName": null,
   "className": "org.elasticsearch.SpecialPermissionTests",
   "children": [
    {
     "id": "ID#testImplies(org.elasticsearch.SpecialPermissionTests)",
     "displayName": "testImplies(org.elasticsearch.SpecialPermissionTests)",
     "methodName": "testImplies",
     "className": "org.elasticsearch.SpecialPermissionTests",
     "children": []
    },
    {
     "id": "ID#testEquals(org.elasticsearch.SpecialPermissionTests)",
     "displayName": "testEquals(org.elasticsearch.SpecialPermissionTests)",
     "methodName": "testEquals",
     "className": "org.elasticsearch.SpecialPermissionTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195677974
 }
]

[
 "TEST_STARTED",
 "ID#testImplies(org.elasticsearch.SpecialPermissionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testImplies(org.elasticsearch.SpecialPermissionTests)",
  "startTimestamp": 1474195677990,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testEquals(org.elasticsearch.SpecialPermissionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEquals(org.elasticsearch.SpecialPermissionTests)",
  "startTimestamp": 1474195677997,
  "executionTime": 1
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.SpecialPermissionTests",
  "startTimestamp": 1474195677974,
  "executionTime": 26
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.DynamicTemplatesTests",
   "displayName": "org.elasticsearch.index.mapper.DynamicTemplatesTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.DynamicTemplatesTests",
   "children": [
    {
     "id": "ID#testMatchTypeOnly(org.elasticsearch.index.mapper.DynamicTemplatesTests)",
     "displayName": "testMatchTypeOnly(org.elasticsearch.index.mapper.DynamicTemplatesTests)",
     "methodName": "testMatchTypeOnly",
     "className": "org.elasticsearch.index.mapper.DynamicTemplatesTests",
     "children": []
    },
    {
     "id": "ID#testSimpleWithXContentTraverse(org.elasticsearch.index.mapper.DynamicTemplatesTests)",
     "displayName": "testSimpleWithXContentTraverse(org.elasticsearch.index.mapper.DynamicTemplatesTests)",
     "methodName": "testSimpleWithXContentTraverse",
     "className": "org.elasticsearch.index.mapper.DynamicTemplatesTests",
     "children": []
    },
    {
     "id": "ID#testSimple(org.elasticsearch.index.mapper.DynamicTemplatesTests)",
     "displayName": "testSimple(org.elasticsearch.index.mapper.DynamicTemplatesTests)",
     "methodName": "testSimple",
     "className": "org.elasticsearch.index.mapper.DynamicTemplatesTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195678006
 }
]

[
 "TEST_STARTED",
 "ID#testMatchTypeOnly(org.elasticsearch.index.mapper.DynamicTemplatesTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:47:58,033][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:47:58,093][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:47:58,093][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:47:58,097][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[7260], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:47:58,102][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:47:58,102][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:47:58,210][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:47:58,210][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:47:58,210][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[79]}, bound_addresses {local[79]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:47:58,211][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{m_BlMUmtRLi7vimRtIoLMw}{AV6LkmFNSwyG91tRA4riWA}{local}{local[79]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:47:58,212][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:47:58,227][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:47:58,260][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:47:58,412][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:47:58,440][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/RfrWIXkTRfqAH7us2pJZsg] create_mapping [person]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:47:58,461][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/RfrWIXkTRfqAH7us2pJZsg] update_mapping [person]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:47:58,472][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DynamicTemplatesTests#testMatchTypeOnly]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMatchTypeOnly(org.elasticsearch.index.mapper.DynamicTemplatesTests)",
  "startTimestamp": 1474195678022,
  "executionTime": 528
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleWithXContentTraverse(org.elasticsearch.index.mapper.DynamicTemplatesTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:47:58,585][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:47:58,638][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:47:58,653][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/aMRq2zjpRpqdNB3kTcRh2g] create_mapping [person]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:47:58,697][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/aMRq2zjpRpqdNB3kTcRh2g] update_mapping [person]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:47:58,715][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DynamicTemplatesTests#testSimpleWithXContentTraverse]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleWithXContentTraverse(org.elasticsearch.index.mapper.DynamicTemplatesTests)",
  "startTimestamp": 1474195678550,
  "executionTime": 252
 }
]

[
 "TEST_STARTED",
 "ID#testSimple(org.elasticsearch.index.mapper.DynamicTemplatesTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:47:58,809][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:47:58,943][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:47:58,958][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/p7_KV8OUQ4qZ2O8tAZamCA] create_mapping [person]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:47:58,982][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/p7_KV8OUQ4qZ2O8tAZamCA] update_mapping [person]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:47:58,998][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DynamicTemplatesTests#testSimple]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimple(org.elasticsearch.index.mapper.DynamicTemplatesTests)",
  "startTimestamp": 1474195678802,
  "executionTime": 284
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:47:59,087][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:47:59,087][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:47:59,087][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:47:59,089][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.DynamicTemplatesTests",
  "startTimestamp": 1474195678006,
  "executionTime": 1092
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.admin.cluster.node.tasks.CancellableTasksTests",
   "displayName": "org.elasticsearch.action.admin.cluster.node.tasks.CancellableTasksTests",
   "methodName": null,
   "className": "org.elasticsearch.action.admin.cluster.node.tasks.CancellableTasksTests",
   "children": [
    {
     "id": "ID#testTaskCancellationOnCoordinatingNodeLeavingTheCluster(org.elasticsearch.action.admin.cluster.node.tasks.CancellableTasksTests)",
     "displayName": "testTaskCancellationOnCoordinatingNodeLeavingTheCluster(org.elasticsearch.action.admin.cluster.node.tasks.CancellableTasksTests)",
     "methodName": "testTaskCancellationOnCoordinatingNodeLeavingTheCluster",
     "className": "org.elasticsearch.action.admin.cluster.node.tasks.CancellableTasksTests",
     "children": []
    },
    {
     "id": "ID#testBasicTaskCancellation(org.elasticsearch.action.admin.cluster.node.tasks.CancellableTasksTests)",
     "displayName": "testBasicTaskCancellation(org.elasticsearch.action.admin.cluster.node.tasks.CancellableTasksTests)",
     "methodName": "testBasicTaskCancellation",
     "className": "org.elasticsearch.action.admin.cluster.node.tasks.CancellableTasksTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195679116
 }
]

[
 "TEST_STARTED",
 "ID#testTaskCancellationOnCoordinatingNodeLeavingTheCluster(org.elasticsearch.action.admin.cluster.node.tasks.CancellableTasksTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:59,198][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{yfgWjEbeQzaonJsPgNDqcg}{local}{local[427]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:59,200][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[80]}, bound_addresses {local[80]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:59,203][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{afrmkTK2RIWf8fj2MRw7AQ}{local}{local[428]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:59,205][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[81]}, bound_addresses {local[81]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:59,206][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{HzPvFPoTShSIkTr0NLv09A}{local}{local[80]}, previous {node}{yfgWjEbeQzaonJsPgNDqcg}{local}{local[427]}}, removed {{node}{yfgWjEbeQzaonJsPgNDqcg}{local}{local[427]},}, added {{node1}{YbjOtODLTFOHa5ZKoSPteg}{local}{local[81]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:59,206][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{HzPvFPoTShSIkTr0NLv09A}{local}{local[80]}, previous {node}{afrmkTK2RIWf8fj2MRw7AQ}{local}{local[428]}}, removed {{node}{afrmkTK2RIWf8fj2MRw7AQ}{local}{local[428]},}, added {{node0}{HzPvFPoTShSIkTr0NLv09A}{local}{local[80]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:59,210][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] The action in the node [node0] should block: [false]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:59,213][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] The action in the node [node1] should block: [false]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:59,217][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Awaiting for all actions to start%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:59,228][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] Done waiting for all actions to start%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:59,239][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node1}{YbjOtODLTFOHa5ZKoSPteg}{local}{local[81]}, previous {node0}{HzPvFPoTShSIkTr0NLv09A}{local}{local[80]}}, removed {{node0}{HzPvFPoTShSIkTr0NLv09A}{local}{local[80]},}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTaskCancellationOnCoordinatingNodeLeavingTheCluster(org.elasticsearch.action.admin.cluster.node.tasks.CancellableTasksTests)",
  "startTimestamp": 1474195679153,
  "executionTime": 87
 }
]

[
 "TEST_STARTED",
 "ID#testBasicTaskCancellation(org.elasticsearch.action.admin.cluster.node.tasks.CancellableTasksTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:59,250][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{kHHE-YmLSD-JqqglISM8GQ}{local}{local[429]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:59,251][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[82]}, bound_addresses {local[82]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:59,255][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{WooDxN7_QLWZXGclYLKCEQ}{local}{local[430]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:59,256][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[83]}, bound_addresses {local[83]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:59,259][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{nAS11acKRfKQ9O2BRPGNkg}{local}{local[431]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:59,261][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[84]}, bound_addresses {local[84]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:59,266][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{G5ZZ_QlLSVi2ErOci5ll7g}{local}{local[432]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:59,268][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[85]}, bound_addresses {local[85]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:59,278][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{_dJLmG0kRX-r4kiV0ab5RQ}{local}{local[433]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:59,279][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[86]}, bound_addresses {local[86]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:59,301][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{AYvh2D3BQRyimiosttbdWQ}{local}{local[434]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:59,303][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[87]}, bound_addresses {local[87]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:59,314][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{SgAFMB25Q9KjbWw_KBfNmA}{local}{local[435]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:59,315][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[88]}, bound_addresses {local[88]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:59,321][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{5-qPxAh6Sz-kLTzx4LkAGA}{local}{local[436]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:59,323][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[89]}, bound_addresses {local[89]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:59,326][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{abENk570TZiWCEMvblCiqw}{local}{local[437]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:59,327][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[90]}, bound_addresses {local[90]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:59,346][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{PyF5qYLLRsijn-XYXgIAIQ}{local}{local[438]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:59,347][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] publish_address {local[91]}, bound_addresses {local[91]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:59,348][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{MjYInxwGS8eIto2tVUzHYg}{local}{local[82]}, previous {node}{kHHE-YmLSD-JqqglISM8GQ}{local}{local[429]}}, removed {{node}{kHHE-YmLSD-JqqglISM8GQ}{local}{local[429]},}, added {{node5}{L_d2kbcRTsGLdmelisTOnQ}{local}{local[87]},{node9}{J5wtqGYuQJCJpGlAjYbGDQ}{local}{local[91]},{node3}{uwvl0h8rSPGNC8NHKzdJcA}{local}{local[85]},{node4}{jpiVOvcnRMGPHLxsq72nMw}{local}{local[86]},{node8}{ncgWVawGRaKprZElUILefg}{local}{local[90]},{node7}{4PZ4dAKwRHyIi2dhiyZz8w}{local}{local[89]},{node2}{qdd547qAT5aQcIEfQS9Oyg}{local}{local[84]},{node1}{4oKPODtsTByauom32teMyA}{local}{local[83]},{node6}{keLpD4DtT1Sx-BtILSTSWg}{local}{local[88]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:59,348][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{MjYInxwGS8eIto2tVUzHYg}{local}{local[82]}, previous {node}{WooDxN7_QLWZXGclYLKCEQ}{local}{local[430]}}, removed {{node}{WooDxN7_QLWZXGclYLKCEQ}{local}{local[430]},}, added {{node5}{L_d2kbcRTsGLdmelisTOnQ}{local}{local[87]},{node2}{qdd547qAT5aQcIEfQS9Oyg}{local}{local[84]},{node8}{ncgWVawGRaKprZElUILefg}{local}{local[90]},{node9}{J5wtqGYuQJCJpGlAjYbGDQ}{local}{local[91]},{node0}{MjYInxwGS8eIto2tVUzHYg}{local}{local[82]},{node4}{jpiVOvcnRMGPHLxsq72nMw}{local}{local[86]},{node3}{uwvl0h8rSPGNC8NHKzdJcA}{local}{local[85]},{node6}{keLpD4DtT1Sx-BtILSTSWg}{local}{local[88]},{node7}{4PZ4dAKwRHyIi2dhiyZz8w}{local}{local[89]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:59,349][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{MjYInxwGS8eIto2tVUzHYg}{local}{local[82]}, previous {node}{nAS11acKRfKQ9O2BRPGNkg}{local}{local[431]}}, removed {{node}{nAS11acKRfKQ9O2BRPGNkg}{local}{local[431]},}, added {{node1}{4oKPODtsTByauom32teMyA}{local}{local[83]},{node4}{jpiVOvcnRMGPHLxsq72nMw}{local}{local[86]},{node6}{keLpD4DtT1Sx-BtILSTSWg}{local}{local[88]},{node8}{ncgWVawGRaKprZElUILefg}{local}{local[90]},{node5}{L_d2kbcRTsGLdmelisTOnQ}{local}{local[87]},{node9}{J5wtqGYuQJCJpGlAjYbGDQ}{local}{local[91]},{node7}{4PZ4dAKwRHyIi2dhiyZz8w}{local}{local[89]},{node0}{MjYInxwGS8eIto2tVUzHYg}{local}{local[82]},{node3}{uwvl0h8rSPGNC8NHKzdJcA}{local}{local[85]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:59,349][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{MjYInxwGS8eIto2tVUzHYg}{local}{local[82]}, previous {node}{G5ZZ_QlLSVi2ErOci5ll7g}{local}{local[432]}}, removed {{node}{G5ZZ_QlLSVi2ErOci5ll7g}{local}{local[432]},}, added {{node0}{MjYInxwGS8eIto2tVUzHYg}{local}{local[82]},{node7}{4PZ4dAKwRHyIi2dhiyZz8w}{local}{local[89]},{node4}{jpiVOvcnRMGPHLxsq72nMw}{local}{local[86]},{node5}{L_d2kbcRTsGLdmelisTOnQ}{local}{local[87]},{node1}{4oKPODtsTByauom32teMyA}{local}{local[83]},{node9}{J5wtqGYuQJCJpGlAjYbGDQ}{local}{local[91]},{node2}{qdd547qAT5aQcIEfQS9Oyg}{local}{local[84]},{node8}{ncgWVawGRaKprZElUILefg}{local}{local[90]},{node6}{keLpD4DtT1Sx-BtILSTSWg}{local}{local[88]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:59,350][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{MjYInxwGS8eIto2tVUzHYg}{local}{local[82]}, previous {node}{_dJLmG0kRX-r4kiV0ab5RQ}{local}{local[433]}}, removed {{node}{_dJLmG0kRX-r4kiV0ab5RQ}{local}{local[433]},}, added {{node3}{uwvl0h8rSPGNC8NHKzdJcA}{local}{local[85]},{node6}{keLpD4DtT1Sx-BtILSTSWg}{local}{local[88]},{node9}{J5wtqGYuQJCJpGlAjYbGDQ}{local}{local[91]},{node5}{L_d2kbcRTsGLdmelisTOnQ}{local}{local[87]},{node0}{MjYInxwGS8eIto2tVUzHYg}{local}{local[82]},{node7}{4PZ4dAKwRHyIi2dhiyZz8w}{local}{local[89]},{node2}{qdd547qAT5aQcIEfQS9Oyg}{local}{local[84]},{node1}{4oKPODtsTByauom32teMyA}{local}{local[83]},{node8}{ncgWVawGRaKprZElUILefg}{local}{local[90]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:59,351][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{MjYInxwGS8eIto2tVUzHYg}{local}{local[82]}, previous {node}{AYvh2D3BQRyimiosttbdWQ}{local}{local[434]}}, removed {{node}{AYvh2D3BQRyimiosttbdWQ}{local}{local[434]},}, added {{node0}{MjYInxwGS8eIto2tVUzHYg}{local}{local[82]},{node2}{qdd547qAT5aQcIEfQS9Oyg}{local}{local[84]},{node6}{keLpD4DtT1Sx-BtILSTSWg}{local}{local[88]},{node4}{jpiVOvcnRMGPHLxsq72nMw}{local}{local[86]},{node7}{4PZ4dAKwRHyIi2dhiyZz8w}{local}{local[89]},{node8}{ncgWVawGRaKprZElUILefg}{local}{local[90]},{node1}{4oKPODtsTByauom32teMyA}{local}{local[83]},{node9}{J5wtqGYuQJCJpGlAjYbGDQ}{local}{local[91]},{node3}{uwvl0h8rSPGNC8NHKzdJcA}{local}{local[85]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:59,351][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{MjYInxwGS8eIto2tVUzHYg}{local}{local[82]}, previous {node}{SgAFMB25Q9KjbWw_KBfNmA}{local}{local[435]}}, removed {{node}{SgAFMB25Q9KjbWw_KBfNmA}{local}{local[435]},}, added {{node3}{uwvl0h8rSPGNC8NHKzdJcA}{local}{local[85]},{node1}{4oKPODtsTByauom32teMyA}{local}{local[83]},{node4}{jpiVOvcnRMGPHLxsq72nMw}{local}{local[86]},{node2}{qdd547qAT5aQcIEfQS9Oyg}{local}{local[84]},{node7}{4PZ4dAKwRHyIi2dhiyZz8w}{local}{local[89]},{node9}{J5wtqGYuQJCJpGlAjYbGDQ}{local}{local[91]},{node0}{MjYInxwGS8eIto2tVUzHYg}{local}{local[82]},{node8}{ncgWVawGRaKprZElUILefg}{local}{local[90]},{node5}{L_d2kbcRTsGLdmelisTOnQ}{local}{local[87]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:59,352][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{MjYInxwGS8eIto2tVUzHYg}{local}{local[82]}, previous {node}{5-qPxAh6Sz-kLTzx4LkAGA}{local}{local[436]}}, removed {{node}{5-qPxAh6Sz-kLTzx4LkAGA}{local}{local[436]},}, added {{node0}{MjYInxwGS8eIto2tVUzHYg}{local}{local[82]},{node1}{4oKPODtsTByauom32teMyA}{local}{local[83]},{node4}{jpiVOvcnRMGPHLxsq72nMw}{local}{local[86]},{node5}{L_d2kbcRTsGLdmelisTOnQ}{local}{local[87]},{node8}{ncgWVawGRaKprZElUILefg}{local}{local[90]},{node9}{J5wtqGYuQJCJpGlAjYbGDQ}{local}{local[91]},{node3}{uwvl0h8rSPGNC8NHKzdJcA}{local}{local[85]},{node6}{keLpD4DtT1Sx-BtILSTSWg}{local}{local[88]},{node2}{qdd547qAT5aQcIEfQS9Oyg}{local}{local[84]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:59,353][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{MjYInxwGS8eIto2tVUzHYg}{local}{local[82]}, previous {node}{abENk570TZiWCEMvblCiqw}{local}{local[437]}}, removed {{node}{abENk570TZiWCEMvblCiqw}{local}{local[437]},}, added {{node5}{L_d2kbcRTsGLdmelisTOnQ}{local}{local[87]},{node3}{uwvl0h8rSPGNC8NHKzdJcA}{local}{local[85]},{node1}{4oKPODtsTByauom32teMyA}{local}{local[83]},{node2}{qdd547qAT5aQcIEfQS9Oyg}{local}{local[84]},{node6}{keLpD4DtT1Sx-BtILSTSWg}{local}{local[88]},{node7}{4PZ4dAKwRHyIi2dhiyZz8w}{local}{local[89]},{node9}{J5wtqGYuQJCJpGlAjYbGDQ}{local}{local[91]},{node0}{MjYInxwGS8eIto2tVUzHYg}{local}{local[82]},{node4}{jpiVOvcnRMGPHLxsq72nMw}{local}{local[86]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:59,353][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {node0}{MjYInxwGS8eIto2tVUzHYg}{local}{local[82]}, previous {node}{PyF5qYLLRsijn-XYXgIAIQ}{local}{local[438]}}, removed {{node}{PyF5qYLLRsijn-XYXgIAIQ}{local}{local[438]},}, added {{node4}{jpiVOvcnRMGPHLxsq72nMw}{local}{local[86]},{node8}{ncgWVawGRaKprZElUILefg}{local}{local[90]},{node1}{4oKPODtsTByauom32teMyA}{local}{local[83]},{node3}{uwvl0h8rSPGNC8NHKzdJcA}{local}{local[85]},{node2}{qdd547qAT5aQcIEfQS9Oyg}{local}{local[84]},{node0}{MjYInxwGS8eIto2tVUzHYg}{local}{local[82]},{node6}{keLpD4DtT1Sx-BtILSTSWg}{local}{local[88]},{node7}{4PZ4dAKwRHyIi2dhiyZz8w}{local}{local[89]},{node5}{L_d2kbcRTsGLdmelisTOnQ}{local}{local[87]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:59,362][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] waitForActionToStart is set to false%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:59,362][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] The action in the node [node0] should block: [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:59,363][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] The action in the node [node1] should block: [false]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:59,364][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] The action in the node [node2] should block: [false]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:59,364][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] The action in the node [node3] should block: [false]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:59,365][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] The action in the node [node4] should block: [false]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:59,365][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] The action in the node [node5] should block: [false]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:59,366][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] The action in the node [node6] should block: [false]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:59,366][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] The action in the node [node7] should block: [false]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:59,367][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] The action in the node [node8] should block: [false]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:47:59,367][INFO ][org.elasticsearch.action.admin.cluster.node.tasks] The action in the node [node9] should block: [false]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBasicTaskCancellation(org.elasticsearch.action.admin.cluster.node.tasks.CancellableTasksTests)",
  "startTimestamp": 1474195679240,
  "executionTime": 209
 }
]

[
 "APPEND_STDERR",
 {
  "chunk": "Sep 18, 2016 12:47:59 PM com.carrotsearch.randomizedtesting.ThreadLeakControl checkThreadLeaks%0D%0AWARNING: Will linger awaiting termination of 6 leaked thread(s).%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.admin.cluster.node.tasks.CancellableTasksTests",
  "startTimestamp": 1474195679116,
  "executionTime": 602
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests",
   "displayName": "org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests",
   "methodName": null,
   "className": "org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests",
   "children": [
    {
     "id": "ID#testDeletedDocs(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
     "displayName": "testDeletedDocs(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
     "methodName": "testDeletedDocs",
     "className": "org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testMultiValueAllSet(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
     "displayName": "testMultiValueAllSet(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
     "methodName": "testMultiValueAllSet",
     "className": "org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testActualMissingValueReverse(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
     "displayName": "testActualMissingValueReverse(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
     "methodName": "testActualMissingValueReverse",
     "className": "org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testMissingValueForAll(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
     "displayName": "testMissingValueForAll(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
     "methodName": "testMissingValueForAll",
     "className": "org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testSortMultiValuesFields(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
     "displayName": "testSortMultiValuesFields(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
     "methodName": "testSortMultiValuesFields",
     "className": "org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testGlobalOrdinalsGetRemovedOnceIndexReaderCloses(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
     "displayName": "testGlobalOrdinalsGetRemovedOnceIndexReaderCloses(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
     "methodName": "testGlobalOrdinalsGetRemovedOnceIndexReaderCloses",
     "className": "org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testSingleValueWithMissing(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
     "displayName": "testSingleValueWithMissing(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
     "methodName": "testSingleValueWithMissing",
     "className": "org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testSortMissingLast(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
     "displayName": "testSortMissingLast(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
     "methodName": "testSortMissingLast",
     "className": "org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testEmpty(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
     "displayName": "testEmpty(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
     "methodName": "testEmpty",
     "className": "org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testSortMissingFirstReverse(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
     "displayName": "testSortMissingFirstReverse(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
     "methodName": "testSortMissingFirstReverse",
     "className": "org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testMultiValueWithMissing(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
     "displayName": "testMultiValueWithMissing(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
     "methodName": "testMultiValueWithMissing",
     "className": "org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testNestedSortingMin(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
     "displayName": "testNestedSortingMin(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
     "methodName": "testNestedSortingMin",
     "className": "org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testGlobalOrdinals(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
     "displayName": "testGlobalOrdinals(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
     "methodName": "testGlobalOrdinals",
     "className": "org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testSingleValueAllSet(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
     "displayName": "testSingleValueAllSet(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
     "methodName": "testSingleValueAllSet",
     "className": "org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testNestedSortingMax(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
     "displayName": "testNestedSortingMax(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
     "methodName": "testNestedSortingMax",
     "className": "org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testSortMissingLastReverse(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
     "displayName": "testSortMissingLastReverse(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
     "methodName": "testSortMissingLastReverse",
     "className": "org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testSortMissingFirst(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
     "displayName": "testSortMissingFirst(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
     "methodName": "testSortMissingFirst",
     "className": "org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testTermsEnum(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
     "displayName": "testTermsEnum(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
     "methodName": "testTermsEnum",
     "className": "org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testActualMissingValue(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
     "displayName": "testActualMissingValue(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
     "methodName": "testActualMissingValue",
     "className": "org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195679728
 }
]

[
 "TEST_STARTED",
 "ID#testDeletedDocs(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:59,775][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:59,803][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:59,803][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:59,806][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[7260], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:59,809][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:59,809][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.test.InternalSettingsPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:59,903][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:59,904][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:59,904][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[92]}, bound_addresses {local[92]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:59,906][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{kybQur5SQEKgghfQvSV8XA}{F9NC-hUBRaWUCxtTNKhXWQ}{local}{local[92]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:59,907][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:59,918][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:47:59,936][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:48:00,002][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:48:00,031][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [SortedSetDVStringFieldDataTests#testDeletedDocs]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDeletedDocs(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
  "startTimestamp": 1474195679764,
  "executionTime": 303
 }
]

[
 "TEST_STARTED",
 "ID#testMultiValueAllSet(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:48:00,074][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:48:00,180][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:48:00,215][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [SortedSetDVStringFieldDataTests#testMultiValueAllSet]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultiValueAllSet(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
  "startTimestamp": 1474195680067,
  "executionTime": 196
 }
]

[
 "TEST_STARTED",
 "ID#testActualMissingValueReverse(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:48:00,270][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:48:00,327][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:48:00,497][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [SortedSetDVStringFieldDataTests#testActualMissingValueReverse]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testActualMissingValueReverse(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
  "startTimestamp": 1474195680264,
  "executionTime": 279
 }
]

[
 "TEST_STARTED",
 "ID#testMissingValueForAll(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:48:00,551][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:48:00,621][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:48:00,637][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [SortedSetDVStringFieldDataTests#testMissingValueForAll]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMissingValueForAll(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
  "startTimestamp": 1474195680543,
  "executionTime": 124
 }
]

[
 "TEST_STARTED",
 "ID#testSortMultiValuesFields(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:48:00,673][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:48:00,742][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:48:00,764][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [SortedSetDVStringFieldDataTests#testSortMultiValuesFields]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSortMultiValuesFields(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
  "startTimestamp": 1474195680667,
  "executionTime": 458
 }
]

[
 "TEST_STARTED",
 "ID#testGlobalOrdinalsGetRemovedOnceIndexReaderCloses(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:48:01,131][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:48:01,244][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:48:01,344][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [SortedSetDVStringFieldDataTests#testGlobalOrdinalsGetRemovedOnceIndexReaderCloses]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGlobalOrdinalsGetRemovedOnceIndexReaderCloses(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
  "startTimestamp": 1474195681125,
  "executionTime": 254
 }
]

[
 "TEST_STARTED",
 "ID#testSingleValueWithMissing(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:48:01,385][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:48:01,499][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:48:01,539][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [SortedSetDVStringFieldDataTests#testSingleValueWithMissing]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleValueWithMissing(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
  "startTimestamp": 1474195681379,
  "executionTime": 318
 }
]

[
 "TEST_STARTED",
 "ID#testSortMissingLast(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:48:01,704][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:48:01,764][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:48:02,426][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [SortedSetDVStringFieldDataTests#testSortMissingLast]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSortMissingLast(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
  "startTimestamp": 1474195681697,
  "executionTime": 867
 }
]

[
 "TEST_STARTED",
 "ID#testEmpty(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:48:02,570][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:48:02,619][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:48:02,634][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [SortedSetDVStringFieldDataTests#testEmpty]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmpty(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
  "startTimestamp": 1474195682564,
  "executionTime": 98
 }
]

[
 "TEST_STARTED",
 "ID#testSortMissingFirstReverse(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:48:02,666][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:48:02,714][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:48:02,949][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [SortedSetDVStringFieldDataTests#testSortMissingFirstReverse]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSortMissingFirstReverse(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
  "startTimestamp": 1474195682662,
  "executionTime": 362
 }
]

[
 "TEST_STARTED",
 "ID#testMultiValueWithMissing(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:48:03,029][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:48:03,137][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:48:03,153][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [SortedSetDVStringFieldDataTests#testMultiValueWithMissing]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultiValueWithMissing(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
  "startTimestamp": 1474195683024,
  "executionTime": 162
 }
]

[
 "TEST_STARTED",
 "ID#testNestedSortingMin(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:48:03,191][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:48:03,237][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:48:03,326][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [SortedSetDVStringFieldDataTests#testNestedSortingMin]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNestedSortingMin(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
  "startTimestamp": 1474195683187,
  "executionTime": 472
 }
]

[
 "TEST_STARTED",
 "ID#testGlobalOrdinals(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:48:03,727][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:48:03,804][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:48:03,849][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [SortedSetDVStringFieldDataTests#testGlobalOrdinals]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGlobalOrdinals(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
  "startTimestamp": 1474195683659,
  "executionTime": 235
 }
]

[
 "TEST_STARTED",
 "ID#testSingleValueAllSet(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:48:03,900][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:48:03,952][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:48:03,966][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [SortedSetDVStringFieldDataTests#testSingleValueAllSet]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleValueAllSet(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
  "startTimestamp": 1474195683894,
  "executionTime": 100
 }
]

[
 "TEST_STARTED",
 "ID#testNestedSortingMax(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:48:04,000][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:48:04,080][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:48:04,140][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [SortedSetDVStringFieldDataTests#testNestedSortingMax]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNestedSortingMax(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
  "startTimestamp": 1474195683994,
  "executionTime": 645
 }
]

[
 "TEST_STARTED",
 "ID#testSortMissingLastReverse(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:48:04,649][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:48:04,845][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:48:05,116][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [SortedSetDVStringFieldDataTests#testSortMissingLastReverse]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSortMissingLastReverse(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
  "startTimestamp": 1474195684639,
  "executionTime": 581
 }
]

[
 "TEST_STARTED",
 "ID#testSortMissingFirst(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:48:05,225][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:48:05,270][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:48:05,313][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [SortedSetDVStringFieldDataTests#testSortMissingFirst]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSortMissingFirst(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
  "startTimestamp": 1474195685220,
  "executionTime": 370
 }
]

[
 "TEST_STARTED",
 "ID#testTermsEnum(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:48:05,595][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:48:05,890][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:48:05,908][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [SortedSetDVStringFieldDataTests#testTermsEnum]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTermsEnum(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
  "startTimestamp": 1474195685590,
  "executionTime": 348
 }
]

[
 "TEST_STARTED",
 "ID#testActualMissingValue(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:48:05,943][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:48:06,158][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:48:06,250][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [SortedSetDVStringFieldDataTests#testActualMissingValue]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testActualMissingValue(org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests)",
  "startTimestamp": 1474195685938,
  "executionTime": 359
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:48:06,298][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:48:06,298][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:48:06,298][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:48:06,300][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.fielddata.SortedSetDVStringFieldDataTests",
  "startTimestamp": 1474195679728,
  "executionTime": 6588
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.deps.jackson.JacksonLocationTests",
   "displayName": "org.elasticsearch.deps.jackson.JacksonLocationTests",
   "methodName": null,
   "className": "org.elasticsearch.deps.jackson.JacksonLocationTests",
   "children": [
    {
     "id": "ID#testLocationExtraction(org.elasticsearch.deps.jackson.JacksonLocationTests)",
     "displayName": "testLocationExtraction(org.elasticsearch.deps.jackson.JacksonLocationTests)",
     "methodName": "testLocationExtraction",
     "className": "org.elasticsearch.deps.jackson.JacksonLocationTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195686322
 }
]

[
 "TEST_STARTED",
 "ID#testLocationExtraction(org.elasticsearch.deps.jackson.JacksonLocationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLocationExtraction(org.elasticsearch.deps.jackson.JacksonLocationTests)",
  "startTimestamp": 1474195686334,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.deps.jackson.JacksonLocationTests",
  "startTimestamp": 1474195686322,
  "executionTime": 15
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.metrics.MissingTests",
   "displayName": "org.elasticsearch.search.aggregations.metrics.MissingTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.metrics.MissingTests",
   "children": [
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.MissingTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.MissingTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.aggregations.metrics.MissingTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.aggregations.metrics.MissingTests)",
     "displayName": "testSerialization(org.elasticsearch.search.aggregations.metrics.MissingTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.aggregations.metrics.MissingTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.aggregations.metrics.MissingTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.aggregations.metrics.MissingTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.aggregations.metrics.MissingTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195686342
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:48:06,358][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{wMrGf-IYTGevhYJvf005eg}{local}{local[439]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.MissingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.MissingTests)",
  "startTimestamp": 1474195686366,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.aggregations.metrics.MissingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.aggregations.metrics.MissingTests)",
  "startTimestamp": 1474195686367,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.aggregations.metrics.MissingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.aggregations.metrics.MissingTests)",
  "startTimestamp": 1474195686369,
  "executionTime": 1
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.metrics.MissingTests",
  "startTimestamp": 1474195686342,
  "executionTime": 31
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.ingest.IngestServiceTests",
   "displayName": "org.elasticsearch.ingest.IngestServiceTests",
   "methodName": null,
   "className": "org.elasticsearch.ingest.IngestServiceTests",
   "children": [
    {
     "id": "ID#testIngestPluginDuplicate(org.elasticsearch.ingest.IngestServiceTests)",
     "displayName": "testIngestPluginDuplicate(org.elasticsearch.ingest.IngestServiceTests)",
     "methodName": "testIngestPluginDuplicate",
     "className": "org.elasticsearch.ingest.IngestServiceTests",
     "children": []
    },
    {
     "id": "ID#testIngestPlugin(org.elasticsearch.ingest.IngestServiceTests)",
     "displayName": "testIngestPlugin(org.elasticsearch.ingest.IngestServiceTests)",
     "methodName": "testIngestPlugin",
     "className": "org.elasticsearch.ingest.IngestServiceTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195686379
 }
]

[
 "TEST_STARTED",
 "ID#testIngestPluginDuplicate(org.elasticsearch.ingest.IngestServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIngestPluginDuplicate(org.elasticsearch.ingest.IngestServiceTests)",
  "startTimestamp": 1474195686390,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testIngestPlugin(org.elasticsearch.ingest.IngestServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIngestPlugin(org.elasticsearch.ingest.IngestServiceTests)",
  "startTimestamp": 1474195686396,
  "executionTime": 1
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.ingest.IngestServiceTests",
  "startTimestamp": 1474195686379,
  "executionTime": 20
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.logging.DeprecationLoggerTests",
   "displayName": "org.elasticsearch.common.logging.DeprecationLoggerTests",
   "methodName": null,
   "className": "org.elasticsearch.common.logging.DeprecationLoggerTests",
   "children": [
    {
     "id": "ID#testSafeWithoutThreadContext(org.elasticsearch.common.logging.DeprecationLoggerTests)",
     "displayName": "testSafeWithoutThreadContext(org.elasticsearch.common.logging.DeprecationLoggerTests)",
     "methodName": "testSafeWithoutThreadContext",
     "className": "org.elasticsearch.common.logging.DeprecationLoggerTests",
     "children": []
    },
    {
     "id": "ID#testFailsWithoutThreadContextSet(org.elasticsearch.common.logging.DeprecationLoggerTests)",
     "displayName": "testFailsWithoutThreadContextSet(org.elasticsearch.common.logging.DeprecationLoggerTests)",
     "methodName": "testFailsWithoutThreadContextSet",
     "className": "org.elasticsearch.common.logging.DeprecationLoggerTests",
     "children": []
    },
    {
     "id": "ID#testCanRemoveThreadContext(org.elasticsearch.common.logging.DeprecationLoggerTests)",
     "displayName": "testCanRemoveThreadContext(org.elasticsearch.common.logging.DeprecationLoggerTests)",
     "methodName": "testCanRemoveThreadContext",
     "className": "org.elasticsearch.common.logging.DeprecationLoggerTests",
     "children": []
    },
    {
     "id": "ID#testAddsHeaderWithThreadContext(org.elasticsearch.common.logging.DeprecationLoggerTests)",
     "displayName": "testAddsHeaderWithThreadContext(org.elasticsearch.common.logging.DeprecationLoggerTests)",
     "methodName": "testAddsHeaderWithThreadContext",
     "className": "org.elasticsearch.common.logging.DeprecationLoggerTests",
     "children": []
    },
    {
     "id": "ID#testIgnoresClosedThreadContext(org.elasticsearch.common.logging.DeprecationLoggerTests)",
     "displayName": "testIgnoresClosedThreadContext(org.elasticsearch.common.logging.DeprecationLoggerTests)",
     "methodName": "testIgnoresClosedThreadContext",
     "className": "org.elasticsearch.common.logging.DeprecationLoggerTests",
     "children": []
    },
    {
     "id": "ID#testFailsWhenDoubleSettingSameThreadContext(org.elasticsearch.common.logging.DeprecationLoggerTests)",
     "displayName": "testFailsWhenDoubleSettingSameThreadContext(org.elasticsearch.common.logging.DeprecationLoggerTests)",
     "methodName": "testFailsWhenDoubleSettingSameThreadContext",
     "className": "org.elasticsearch.common.logging.DeprecationLoggerTests",
     "children": []
    },
    {
     "id": "ID#testFailsWhenRemovingUnknownThreadContext(org.elasticsearch.common.logging.DeprecationLoggerTests)",
     "displayName": "testFailsWhenRemovingUnknownThreadContext(org.elasticsearch.common.logging.DeprecationLoggerTests)",
     "methodName": "testFailsWhenRemovingUnknownThreadContext",
     "className": "org.elasticsearch.common.logging.DeprecationLoggerTests",
     "children": []
    },
    {
     "id": "ID#testAddsCombinedHeaderWithThreadContext(org.elasticsearch.common.logging.DeprecationLoggerTests)",
     "displayName": "testAddsCombinedHeaderWithThreadContext(org.elasticsearch.common.logging.DeprecationLoggerTests)",
     "methodName": "testAddsCombinedHeaderWithThreadContext",
     "className": "org.elasticsearch.common.logging.DeprecationLoggerTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195686406
 }
]

[
 "TEST_STARTED",
 "ID#testSafeWithoutThreadContext(org.elasticsearch.common.logging.DeprecationLoggerTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:48:06,420][WARN ][org.elasticsearch.deprecation.common.logging] Ignored%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSafeWithoutThreadContext(org.elasticsearch.common.logging.DeprecationLoggerTests)",
  "startTimestamp": 1474195686418,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFailsWithoutThreadContextSet(org.elasticsearch.common.logging.DeprecationLoggerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailsWithoutThreadContextSet(org.elasticsearch.common.logging.DeprecationLoggerTests)",
  "startTimestamp": 1474195686421,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCanRemoveThreadContext(org.elasticsearch.common.logging.DeprecationLoggerTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:48:06,424][WARN ][org.elasticsearch.deprecation.common.logging] testCanRemoveThreadContext%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:48:06,427][WARN ][org.elasticsearch.deprecation.common.logging] testCannotRemoveThreadContext%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCanRemoveThreadContext(org.elasticsearch.common.logging.DeprecationLoggerTests)",
  "startTimestamp": 1474195686423,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testAddsHeaderWithThreadContext(org.elasticsearch.common.logging.DeprecationLoggerTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:48:06,428][WARN ][org.elasticsearch.deprecation.common.logging] A simple message [rU]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAddsHeaderWithThreadContext(org.elasticsearch.common.logging.DeprecationLoggerTests)",
  "startTimestamp": 1474195686427,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIgnoresClosedThreadContext(org.elasticsearch.common.logging.DeprecationLoggerTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:48:06,430][WARN ][org.elasticsearch.deprecation.common.logging] Ignored logger message%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIgnoresClosedThreadContext(org.elasticsearch.common.logging.DeprecationLoggerTests)",
  "startTimestamp": 1474195686429,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testFailsWhenDoubleSettingSameThreadContext(org.elasticsearch.common.logging.DeprecationLoggerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailsWhenDoubleSettingSameThreadContext(org.elasticsearch.common.logging.DeprecationLoggerTests)",
  "startTimestamp": 1474195686430,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFailsWhenRemovingUnknownThreadContext(org.elasticsearch.common.logging.DeprecationLoggerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailsWhenRemovingUnknownThreadContext(org.elasticsearch.common.logging.DeprecationLoggerTests)",
  "startTimestamp": 1474195686432,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testAddsCombinedHeaderWithThreadContext(org.elasticsearch.common.logging.DeprecationLoggerTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:48:06,436][WARN ][org.elasticsearch.deprecation.common.logging] A simple message [SdRcU]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:48:06,436][WARN ][org.elasticsearch.deprecation.common.logging] OxgwNfCxcY%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAddsCombinedHeaderWithThreadContext(org.elasticsearch.common.logging.DeprecationLoggerTests)",
  "startTimestamp": 1474195686434,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.logging.DeprecationLoggerTests",
  "startTimestamp": 1474195686406,
  "executionTime": 32
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.DelayedAllocationServiceTests",
   "displayName": "org.elasticsearch.cluster.routing.DelayedAllocationServiceTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.DelayedAllocationServiceTests",
   "children": [
    {
     "id": "ID#testDelayedUnassignedScheduleRerouteAfterDelayedReroute(org.elasticsearch.cluster.routing.DelayedAllocationServiceTests)",
     "displayName": "testDelayedUnassignedScheduleRerouteAfterDelayedReroute(org.elasticsearch.cluster.routing.DelayedAllocationServiceTests)",
     "methodName": "testDelayedUnassignedScheduleRerouteAfterDelayedReroute",
     "className": "org.elasticsearch.cluster.routing.DelayedAllocationServiceTests",
     "children": []
    },
    {
     "id": "ID#testNoDelayedUnassigned(org.elasticsearch.cluster.routing.DelayedAllocationServiceTests)",
     "displayName": "testNoDelayedUnassigned(org.elasticsearch.cluster.routing.DelayedAllocationServiceTests)",
     "methodName": "testNoDelayedUnassigned",
     "className": "org.elasticsearch.cluster.routing.DelayedAllocationServiceTests",
     "children": []
    },
    {
     "id": "ID#testDelayedUnassignedScheduleRerouteRescheduledOnShorterDelay(org.elasticsearch.cluster.routing.DelayedAllocationServiceTests)",
     "displayName": "testDelayedUnassignedScheduleRerouteRescheduledOnShorterDelay(org.elasticsearch.cluster.routing.DelayedAllocationServiceTests)",
     "methodName": "testDelayedUnassignedScheduleRerouteRescheduledOnShorterDelay",
     "className": "org.elasticsearch.cluster.routing.DelayedAllocationServiceTests",
     "children": []
    },
    {
     "id": "ID#testDelayedUnassignedScheduleReroute(org.elasticsearch.cluster.routing.DelayedAllocationServiceTests)",
     "displayName": "testDelayedUnassignedScheduleReroute(org.elasticsearch.cluster.routing.DelayedAllocationServiceTests)",
     "methodName": "testDelayedUnassignedScheduleReroute",
     "className": "org.elasticsearch.cluster.routing.DelayedAllocationServiceTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195686448
 }
]

[
 "TEST_STARTED",
 "ID#testDelayedUnassignedScheduleRerouteAfterDelayedReroute(org.elasticsearch.cluster.routing.DelayedAllocationServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:48:06,473][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[short_delay][0], [long_delay][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:48:06,475][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [GREEN] to [YELLOW] (reason: [reroute]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:48:06,504][INFO ][org.elasticsearch.cluster.routing] [node_s_0] scheduling reroute for delayed shards in [85.3ms] (2 delayed shards)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:48:06,608][INFO ][org.elasticsearch.cluster.routing] [node_s_0] scheduling reroute for delayed shards in [801.3ms] (1 delayed shards)%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDelayedUnassignedScheduleRerouteAfterDelayedReroute(org.elasticsearch.cluster.routing.DelayedAllocationServiceTests)",
  "startTimestamp": 1474195686460,
  "executionTime": 960
 }
]

[
 "TEST_STARTED",
 "ID#testNoDelayedUnassigned(org.elasticsearch.cluster.routing.DelayedAllocationServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:48:07,429][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:48:07,430][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [GREEN] to [YELLOW] (reason: [reroute]).%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoDelayedUnassigned(org.elasticsearch.cluster.routing.DelayedAllocationServiceTests)",
  "startTimestamp": 1474195687421,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testDelayedUnassignedScheduleRerouteRescheduledOnShorterDelay(org.elasticsearch.cluster.routing.DelayedAllocationServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:48:07,439][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[foo][0], [bar][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:48:07,440][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [GREEN] to [YELLOW] (reason: [fake node left]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:48:07,440][INFO ][org.elasticsearch.cluster.routing] [node_s_0] scheduling reroute for delayed shards in [29.9s] (1 delayed shards)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:48:07,441][INFO ][org.elasticsearch.cluster.routing] [node_s_0] scheduling reroute for delayed shards in [96.9ms] (2 delayed shards)%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDelayedUnassignedScheduleRerouteRescheduledOnShorterDelay(org.elasticsearch.cluster.routing.DelayedAllocationServiceTests)",
  "startTimestamp": 1474195687430,
  "executionTime": 16
 }
]

[
 "TEST_STARTED",
 "ID#testDelayedUnassignedScheduleReroute(org.elasticsearch.cluster.routing.DelayedAllocationServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:48:07,455][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:48:07,455][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [GREEN] to [YELLOW] (reason: [reroute]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:48:07,456][INFO ][org.elasticsearch.cluster.routing] [node_s_0] scheduling reroute for delayed shards in [39.1ms] (1 delayed shards)%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDelayedUnassignedScheduleReroute(org.elasticsearch.cluster.routing.DelayedAllocationServiceTests)",
  "startTimestamp": 1474195687446,
  "executionTime": 53
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.DelayedAllocationServiceTests",
  "startTimestamp": 1474195686448,
  "executionTime": 1053
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.BuildTests",
   "displayName": "org.elasticsearch.BuildTests",
   "methodName": null,
   "className": "org.elasticsearch.BuildTests",
   "children": [
    {
     "id": "ID#testJarMetadata(org.elasticsearch.BuildTests)",
     "displayName": "testJarMetadata(org.elasticsearch.BuildTests)",
     "methodName": "testJarMetadata",
     "className": "org.elasticsearch.BuildTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashCode(org.elasticsearch.BuildTests)",
     "displayName": "testEqualsAndHashCode(org.elasticsearch.BuildTests)",
     "methodName": "testEqualsAndHashCode",
     "className": "org.elasticsearch.BuildTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195687505
 }
]

[
 "TEST_STARTED",
 "ID#testJarMetadata(org.elasticsearch.BuildTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testJarMetadata(org.elasticsearch.BuildTests)",
  "startTimestamp": 1474195687520,
  "executionTime": 40
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashCode(org.elasticsearch.BuildTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashCode(org.elasticsearch.BuildTests)",
  "startTimestamp": 1474195687560,
  "executionTime": 1
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.BuildTests",
  "startTimestamp": 1474195687505,
  "executionTime": 58
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.xcontent.support.XContentHelperTests",
   "displayName": "org.elasticsearch.common.xcontent.support.XContentHelperTests",
   "methodName": null,
   "className": "org.elasticsearch.common.xcontent.support.XContentHelperTests",
   "children": [
    {
     "id": "ID#testMergingListValuesAreMapsOfOne(org.elasticsearch.common.xcontent.support.XContentHelperTests)",
     "displayName": "testMergingListValuesAreMapsOfOne(org.elasticsearch.common.xcontent.support.XContentHelperTests)",
     "methodName": "testMergingListValuesAreMapsOfOne",
     "className": "org.elasticsearch.common.xcontent.support.XContentHelperTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195687569
 }
]

[
 "TEST_STARTED",
 "ID#testMergingListValuesAreMapsOfOne(org.elasticsearch.common.xcontent.support.XContentHelperTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMergingListValuesAreMapsOfOne(org.elasticsearch.common.xcontent.support.XContentHelperTests)",
  "startTimestamp": 1474195687599,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.xcontent.support.XContentHelperTests",
  "startTimestamp": 1474195687569,
  "executionTime": 33
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.deps.lucene.VectorHighlighterTests",
   "displayName": "org.elasticsearch.deps.lucene.VectorHighlighterTests",
   "methodName": null,
   "className": "org.elasticsearch.deps.lucene.VectorHighlighterTests",
   "children": [
    {
     "id": "ID#testVectorHighlighterNoStore(org.elasticsearch.deps.lucene.VectorHighlighterTests)",
     "displayName": "testVectorHighlighterNoStore(org.elasticsearch.deps.lucene.VectorHighlighterTests)",
     "methodName": "testVectorHighlighterNoStore",
     "className": "org.elasticsearch.deps.lucene.VectorHighlighterTests",
     "children": []
    },
    {
     "id": "ID#testVectorHighlighterPrefixQuery(org.elasticsearch.deps.lucene.VectorHighlighterTests)",
     "displayName": "testVectorHighlighterPrefixQuery(org.elasticsearch.deps.lucene.VectorHighlighterTests)",
     "methodName": "testVectorHighlighterPrefixQuery",
     "className": "org.elasticsearch.deps.lucene.VectorHighlighterTests",
     "children": []
    },
    {
     "id": "ID#testVectorHighlighterNoTermVector(org.elasticsearch.deps.lucene.VectorHighlighterTests)",
     "displayName": "testVectorHighlighterNoTermVector(org.elasticsearch.deps.lucene.VectorHighlighterTests)",
     "methodName": "testVectorHighlighterNoTermVector",
     "className": "org.elasticsearch.deps.lucene.VectorHighlighterTests",
     "children": []
    },
    {
     "id": "ID#testVectorHighlighter(org.elasticsearch.deps.lucene.VectorHighlighterTests)",
     "displayName": "testVectorHighlighter(org.elasticsearch.deps.lucene.VectorHighlighterTests)",
     "methodName": "testVectorHighlighter",
     "className": "org.elasticsearch.deps.lucene.VectorHighlighterTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195687608
 }
]

[
 "TEST_STARTED",
 "ID#testVectorHighlighterNoStore(org.elasticsearch.deps.lucene.VectorHighlighterTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVectorHighlighterNoStore(org.elasticsearch.deps.lucene.VectorHighlighterTests)",
  "startTimestamp": 1474195687635,
  "executionTime": 79
 }
]

[
 "TEST_STARTED",
 "ID#testVectorHighlighterPrefixQuery(org.elasticsearch.deps.lucene.VectorHighlighterTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVectorHighlighterPrefixQuery(org.elasticsearch.deps.lucene.VectorHighlighterTests)",
  "startTimestamp": 1474195687715,
  "executionTime": 84
 }
]

[
 "TEST_STARTED",
 "ID#testVectorHighlighterNoTermVector(org.elasticsearch.deps.lucene.VectorHighlighterTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVectorHighlighterNoTermVector(org.elasticsearch.deps.lucene.VectorHighlighterTests)",
  "startTimestamp": 1474195687799,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testVectorHighlighter(org.elasticsearch.deps.lucene.VectorHighlighterTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVectorHighlighter(org.elasticsearch.deps.lucene.VectorHighlighterTests)",
  "startTimestamp": 1474195687805,
  "executionTime": 5
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.deps.lucene.VectorHighlighterTests",
  "startTimestamp": 1474195687608,
  "executionTime": 204
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.shard.IndexingOperationListenerTests",
   "displayName": "org.elasticsearch.index.shard.IndexingOperationListenerTests",
   "methodName": null,
   "className": "org.elasticsearch.index.shard.IndexingOperationListenerTests",
   "children": [
    {
     "id": "ID#testListenersAreExecuted(org.elasticsearch.index.shard.IndexingOperationListenerTests)",
     "displayName": "testListenersAreExecuted(org.elasticsearch.index.shard.IndexingOperationListenerTests)",
     "methodName": "testListenersAreExecuted",
     "className": "org.elasticsearch.index.shard.IndexingOperationListenerTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195687819
 }
]

[
 "TEST_STARTED",
 "ID#testListenersAreExecuted(org.elasticsearch.index.shard.IndexingOperationListenerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testListenersAreExecuted(org.elasticsearch.index.shard.IndexingOperationListenerTests)",
  "startTimestamp": 1474195687837,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.shard.IndexingOperationListenerTests",
  "startTimestamp": 1474195687819,
  "executionTime": 23
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.gateway.PrimaryShardAllocatorTests",
   "displayName": "org.elasticsearch.gateway.PrimaryShardAllocatorTests",
   "methodName": null,
   "className": "org.elasticsearch.gateway.PrimaryShardAllocatorTests",
   "children": [
    {
     "id": "ID#testRecoverOnAnyNodeForcesAllocateIfShardAvailable(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "displayName": "testRecoverOnAnyNodeForcesAllocateIfShardAvailable(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "methodName": "testRecoverOnAnyNodeForcesAllocateIfShardAvailable",
     "className": "org.elasticsearch.gateway.PrimaryShardAllocatorTests",
     "children": []
    },
    {
     "id": "ID#testNoMatchingAllocationIdFound(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "displayName": "testNoMatchingAllocationIdFound(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "methodName": "testNoMatchingAllocationIdFound",
     "className": "org.elasticsearch.gateway.PrimaryShardAllocatorTests",
     "children": []
    },
    {
     "id": "ID#testRestoreDoesNotAssignIfNoShardAvailable(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "displayName": "testRestoreDoesNotAssignIfNoShardAvailable(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "methodName": "testRestoreDoesNotAssignIfNoShardAvailable",
     "className": "org.elasticsearch.gateway.PrimaryShardAllocatorTests",
     "children": []
    },
    {
     "id": "ID#testNoAsyncFetchData(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "displayName": "testNoAsyncFetchData(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "methodName": "testNoAsyncFetchData",
     "className": "org.elasticsearch.gateway.PrimaryShardAllocatorTests",
     "children": []
    },
    {
     "id": "ID#testAllocateToTheHighestVersionOnLegacyIndex(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "displayName": "testAllocateToTheHighestVersionOnLegacyIndex(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "methodName": "testAllocateToTheHighestVersionOnLegacyIndex",
     "className": "org.elasticsearch.gateway.PrimaryShardAllocatorTests",
     "children": []
    },
    {
     "id": "ID#testFoundAllocationButNoDecider(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "displayName": "testFoundAllocationButNoDecider(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "methodName": "testFoundAllocationButNoDecider",
     "className": "org.elasticsearch.gateway.PrimaryShardAllocatorTests",
     "children": []
    },
    {
     "id": "ID#testFoundAllocationButThrottlingDecider(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "displayName": "testFoundAllocationButThrottlingDecider(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "methodName": "testFoundAllocationButThrottlingDecider",
     "className": "org.elasticsearch.gateway.PrimaryShardAllocatorTests",
     "children": []
    },
    {
     "id": "ID#testRecoverOnAnyNode(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "displayName": "testRecoverOnAnyNode(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "methodName": "testRecoverOnAnyNode",
     "className": "org.elasticsearch.gateway.PrimaryShardAllocatorTests",
     "children": []
    },
    {
     "id": "ID#testVersionBasedAllocationPrefersShardWithAllocationId(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "displayName": "testVersionBasedAllocationPrefersShardWithAllocationId(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "methodName": "testVersionBasedAllocationPrefersShardWithAllocationId",
     "className": "org.elasticsearch.gateway.PrimaryShardAllocatorTests",
     "children": []
    },
    {
     "id": "ID#testRestore(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "displayName": "testRestore(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "methodName": "testRestore",
     "className": "org.elasticsearch.gateway.PrimaryShardAllocatorTests",
     "children": []
    },
    {
     "id": "ID#testStoreException(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "displayName": "testStoreException(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "methodName": "testStoreException",
     "className": "org.elasticsearch.gateway.PrimaryShardAllocatorTests",
     "children": []
    },
    {
     "id": "ID#testEnoughCopiesFoundForAllocationOnLegacyIndexWithDifferentVersion(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "displayName": "testEnoughCopiesFoundForAllocationOnLegacyIndexWithDifferentVersion(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "methodName": "testEnoughCopiesFoundForAllocationOnLegacyIndexWithDifferentVersion",
     "className": "org.elasticsearch.gateway.PrimaryShardAllocatorTests",
     "children": []
    },
    {
     "id": "ID#testRecoverOnAnyNodeThrottle(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "displayName": "testRecoverOnAnyNodeThrottle(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "methodName": "testRecoverOnAnyNodeThrottle",
     "className": "org.elasticsearch.gateway.PrimaryShardAllocatorTests",
     "children": []
    },
    {
     "id": "ID#testForceAllocatePrimary(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "displayName": "testForceAllocatePrimary(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "methodName": "testForceAllocatePrimary",
     "className": "org.elasticsearch.gateway.PrimaryShardAllocatorTests",
     "children": []
    },
    {
     "id": "ID#testNoProcessPrimaryNotAllocatedBefore(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "displayName": "testNoProcessPrimaryNotAllocatedBefore(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "methodName": "testNoProcessPrimaryNotAllocatedBefore",
     "className": "org.elasticsearch.gateway.PrimaryShardAllocatorTests",
     "children": []
    },
    {
     "id": "ID#testNoActiveAllocationIds(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "displayName": "testNoActiveAllocationIds(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "methodName": "testNoActiveAllocationIds",
     "className": "org.elasticsearch.gateway.PrimaryShardAllocatorTests",
     "children": []
    },
    {
     "id": "ID#testRestoreThrottle(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "displayName": "testRestoreThrottle(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "methodName": "testRestoreThrottle",
     "className": "org.elasticsearch.gateway.PrimaryShardAllocatorTests",
     "children": []
    },
    {
     "id": "ID#testNoAllocationFound(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "displayName": "testNoAllocationFound(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "methodName": "testNoAllocationFound",
     "className": "org.elasticsearch.gateway.PrimaryShardAllocatorTests",
     "children": []
    },
    {
     "id": "ID#testDontForceAllocateOnThrottleDecision(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "displayName": "testDontForceAllocateOnThrottleDecision(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "methodName": "testDontForceAllocateOnThrottleDecision",
     "className": "org.elasticsearch.gateway.PrimaryShardAllocatorTests",
     "children": []
    },
    {
     "id": "ID#testFoundAllocationAndAllocating(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "displayName": "testFoundAllocationAndAllocating(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "methodName": "testFoundAllocationAndAllocating",
     "className": "org.elasticsearch.gateway.PrimaryShardAllocatorTests",
     "children": []
    },
    {
     "id": "ID#testRestoreForcesAllocateIfShardAvailable(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "displayName": "testRestoreForcesAllocateIfShardAvailable(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "methodName": "testRestoreForcesAllocateIfShardAvailable",
     "className": "org.elasticsearch.gateway.PrimaryShardAllocatorTests",
     "children": []
    },
    {
     "id": "ID#testEnoughCopiesFoundForAllocationOnLegacyIndex(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "displayName": "testEnoughCopiesFoundForAllocationOnLegacyIndex(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "methodName": "testEnoughCopiesFoundForAllocationOnLegacyIndex",
     "className": "org.elasticsearch.gateway.PrimaryShardAllocatorTests",
     "children": []
    },
    {
     "id": "ID#testRecoverOnAnyNodeDoesNotAssignIfNoShardAvailable(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "displayName": "testRecoverOnAnyNodeDoesNotAssignIfNoShardAvailable(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "methodName": "testRecoverOnAnyNodeDoesNotAssignIfNoShardAvailable",
     "className": "org.elasticsearch.gateway.PrimaryShardAllocatorTests",
     "children": []
    },
    {
     "id": "ID#testPreferAllocatingPreviousPrimary(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "displayName": "testPreferAllocatingPreviousPrimary(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "methodName": "testPreferAllocatingPreviousPrimary",
     "className": "org.elasticsearch.gateway.PrimaryShardAllocatorTests",
     "children": []
    },
    {
     "id": "ID#testDontAllocateOnNoOrThrottleForceAllocationDecision(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "displayName": "testDontAllocateOnNoOrThrottleForceAllocationDecision(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
     "methodName": "testDontAllocateOnNoOrThrottleForceAllocationDecision",
     "className": "org.elasticsearch.gateway.PrimaryShardAllocatorTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195687854
 }
]

[
 "TEST_STARTED",
 "ID#testRecoverOnAnyNodeForcesAllocateIfShardAvailable(org.elasticsearch.gateway.PrimaryShardAllocatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecoverOnAnyNodeForcesAllocateIfShardAvailable(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
  "startTimestamp": 1474195687895,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testNoMatchingAllocationIdFound(org.elasticsearch.gateway.PrimaryShardAllocatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoMatchingAllocationIdFound(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
  "startTimestamp": 1474195687904,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testRestoreDoesNotAssignIfNoShardAvailable(org.elasticsearch.gateway.PrimaryShardAllocatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRestoreDoesNotAssignIfNoShardAvailable(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
  "startTimestamp": 1474195687907,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testNoAsyncFetchData(org.elasticsearch.gateway.PrimaryShardAllocatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoAsyncFetchData(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
  "startTimestamp": 1474195687910,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testAllocateToTheHighestVersionOnLegacyIndex(org.elasticsearch.gateway.PrimaryShardAllocatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAllocateToTheHighestVersionOnLegacyIndex(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
  "startTimestamp": 1474195687913,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testFoundAllocationButNoDecider(org.elasticsearch.gateway.PrimaryShardAllocatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFoundAllocationButNoDecider(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
  "startTimestamp": 1474195687920,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testFoundAllocationButThrottlingDecider(org.elasticsearch.gateway.PrimaryShardAllocatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFoundAllocationButThrottlingDecider(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
  "startTimestamp": 1474195687926,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testRecoverOnAnyNode(org.elasticsearch.gateway.PrimaryShardAllocatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecoverOnAnyNode(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
  "startTimestamp": 1474195687929,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testVersionBasedAllocationPrefersShardWithAllocationId(org.elasticsearch.gateway.PrimaryShardAllocatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVersionBasedAllocationPrefersShardWithAllocationId(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
  "startTimestamp": 1474195687932,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRestore(org.elasticsearch.gateway.PrimaryShardAllocatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRestore(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
  "startTimestamp": 1474195687935,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testStoreException(org.elasticsearch.gateway.PrimaryShardAllocatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStoreException(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
  "startTimestamp": 1474195687937,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testEnoughCopiesFoundForAllocationOnLegacyIndexWithDifferentVersion(org.elasticsearch.gateway.PrimaryShardAllocatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEnoughCopiesFoundForAllocationOnLegacyIndexWithDifferentVersion(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
  "startTimestamp": 1474195687942,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testRecoverOnAnyNodeThrottle(org.elasticsearch.gateway.PrimaryShardAllocatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecoverOnAnyNodeThrottle(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
  "startTimestamp": 1474195687946,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testForceAllocatePrimary(org.elasticsearch.gateway.PrimaryShardAllocatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testForceAllocatePrimary(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
  "startTimestamp": 1474195687949,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testNoProcessPrimaryNotAllocatedBefore(org.elasticsearch.gateway.PrimaryShardAllocatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoProcessPrimaryNotAllocatedBefore(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
  "startTimestamp": 1474195687952,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNoActiveAllocationIds(org.elasticsearch.gateway.PrimaryShardAllocatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoActiveAllocationIds(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
  "startTimestamp": 1474195687955,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testRestoreThrottle(org.elasticsearch.gateway.PrimaryShardAllocatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRestoreThrottle(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
  "startTimestamp": 1474195687958,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testNoAllocationFound(org.elasticsearch.gateway.PrimaryShardAllocatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoAllocationFound(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
  "startTimestamp": 1474195687961,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testDontForceAllocateOnThrottleDecision(org.elasticsearch.gateway.PrimaryShardAllocatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDontForceAllocateOnThrottleDecision(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
  "startTimestamp": 1474195687964,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFoundAllocationAndAllocating(org.elasticsearch.gateway.PrimaryShardAllocatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFoundAllocationAndAllocating(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
  "startTimestamp": 1474195687967,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testRestoreForcesAllocateIfShardAvailable(org.elasticsearch.gateway.PrimaryShardAllocatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRestoreForcesAllocateIfShardAvailable(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
  "startTimestamp": 1474195687970,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEnoughCopiesFoundForAllocationOnLegacyIndex(org.elasticsearch.gateway.PrimaryShardAllocatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEnoughCopiesFoundForAllocationOnLegacyIndex(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
  "startTimestamp": 1474195687972,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testRecoverOnAnyNodeDoesNotAssignIfNoShardAvailable(org.elasticsearch.gateway.PrimaryShardAllocatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecoverOnAnyNodeDoesNotAssignIfNoShardAvailable(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
  "startTimestamp": 1474195687977,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testPreferAllocatingPreviousPrimary(org.elasticsearch.gateway.PrimaryShardAllocatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPreferAllocatingPreviousPrimary(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
  "startTimestamp": 1474195687982,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testDontAllocateOnNoOrThrottleForceAllocationDecision(org.elasticsearch.gateway.PrimaryShardAllocatorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDontAllocateOnNoOrThrottleForceAllocationDecision(org.elasticsearch.gateway.PrimaryShardAllocatorTests)",
  "startTimestamp": 1474195687986,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.gateway.PrimaryShardAllocatorTests",
  "startTimestamp": 1474195687854,
  "executionTime": 137
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.lucene.uid.VersionsTests",
   "displayName": "org.elasticsearch.common.lucene.uid.VersionsTests",
   "methodName": null,
   "className": "org.elasticsearch.common.lucene.uid.VersionsTests",
   "children": [
    {
     "id": "ID#testCacheFilterReader(org.elasticsearch.common.lucene.uid.VersionsTests)",
     "displayName": "testCacheFilterReader(org.elasticsearch.common.lucene.uid.VersionsTests)",
     "methodName": "testCacheFilterReader",
     "className": "org.elasticsearch.common.lucene.uid.VersionsTests",
     "children": []
    },
    {
     "id": "ID#testVersions(org.elasticsearch.common.lucene.uid.VersionsTests)",
     "displayName": "testVersions(org.elasticsearch.common.lucene.uid.VersionsTests)",
     "methodName": "testVersions",
     "className": "org.elasticsearch.common.lucene.uid.VersionsTests",
     "children": []
    },
    {
     "id": "ID#testNestedDocuments(org.elasticsearch.common.lucene.uid.VersionsTests)",
     "displayName": "testNestedDocuments(org.elasticsearch.common.lucene.uid.VersionsTests)",
     "methodName": "testNestedDocuments",
     "className": "org.elasticsearch.common.lucene.uid.VersionsTests",
     "children": []
    },
    {
     "id": "ID#testCache(org.elasticsearch.common.lucene.uid.VersionsTests)",
     "displayName": "testCache(org.elasticsearch.common.lucene.uid.VersionsTests)",
     "methodName": "testCache",
     "className": "org.elasticsearch.common.lucene.uid.VersionsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195687998
 }
]

[
 "TEST_STARTED",
 "ID#testCacheFilterReader(org.elasticsearch.common.lucene.uid.VersionsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCacheFilterReader(org.elasticsearch.common.lucene.uid.VersionsTests)",
  "startTimestamp": 1474195688058,
  "executionTime": 42
 }
]

[
 "TEST_STARTED",
 "ID#testVersions(org.elasticsearch.common.lucene.uid.VersionsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVersions(org.elasticsearch.common.lucene.uid.VersionsTests)",
  "startTimestamp": 1474195688101,
  "executionTime": 330
 }
]

[
 "TEST_STARTED",
 "ID#testNestedDocuments(org.elasticsearch.common.lucene.uid.VersionsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNestedDocuments(org.elasticsearch.common.lucene.uid.VersionsTests)",
  "startTimestamp": 1474195688431,
  "executionTime": 51
 }
]

[
 "TEST_STARTED",
 "ID#testCache(org.elasticsearch.common.lucene.uid.VersionsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCache(org.elasticsearch.common.lucene.uid.VersionsTests)",
  "startTimestamp": 1474195688483,
  "executionTime": 40
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.lucene.uid.VersionsTests",
  "startTimestamp": 1474195687998,
  "executionTime": 527
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.ingest.ConfigurationUtilsTests",
   "displayName": "org.elasticsearch.ingest.ConfigurationUtilsTests",
   "methodName": null,
   "className": "org.elasticsearch.ingest.ConfigurationUtilsTests",
   "children": [
    {
     "id": "ID#testReadBooleanProperty(org.elasticsearch.ingest.ConfigurationUtilsTests)",
     "displayName": "testReadBooleanProperty(org.elasticsearch.ingest.ConfigurationUtilsTests)",
     "methodName": "testReadBooleanProperty",
     "className": "org.elasticsearch.ingest.ConfigurationUtilsTests",
     "children": []
    },
    {
     "id": "ID#testReadNullBooleanProperty(org.elasticsearch.ingest.ConfigurationUtilsTests)",
     "displayName": "testReadNullBooleanProperty(org.elasticsearch.ingest.ConfigurationUtilsTests)",
     "methodName": "testReadNullBooleanProperty",
     "className": "org.elasticsearch.ingest.ConfigurationUtilsTests",
     "children": []
    },
    {
     "id": "ID#testOptional_InvalidType(org.elasticsearch.ingest.ConfigurationUtilsTests)",
     "displayName": "testOptional_InvalidType(org.elasticsearch.ingest.ConfigurationUtilsTests)",
     "methodName": "testOptional_InvalidType",
     "className": "org.elasticsearch.ingest.ConfigurationUtilsTests",
     "children": []
    },
    {
     "id": "ID#testReadStringProperty(org.elasticsearch.ingest.ConfigurationUtilsTests)",
     "displayName": "testReadStringProperty(org.elasticsearch.ingest.ConfigurationUtilsTests)",
     "methodName": "testReadStringProperty",
     "className": "org.elasticsearch.ingest.ConfigurationUtilsTests",
     "children": []
    },
    {
     "id": "ID#testReadProcessors(org.elasticsearch.ingest.ConfigurationUtilsTests)",
     "displayName": "testReadProcessors(org.elasticsearch.ingest.ConfigurationUtilsTests)",
     "methodName": "testReadProcessors",
     "className": "org.elasticsearch.ingest.ConfigurationUtilsTests",
     "children": []
    },
    {
     "id": "ID#testReadStringPropertyInvalidType(org.elasticsearch.ingest.ConfigurationUtilsTests)",
     "displayName": "testReadStringPropertyInvalidType(org.elasticsearch.ingest.ConfigurationUtilsTests)",
     "methodName": "testReadStringPropertyInvalidType",
     "className": "org.elasticsearch.ingest.ConfigurationUtilsTests",
     "children": []
    },
    {
     "id": "ID#testReadBooleanPropertyInvalidType(org.elasticsearch.ingest.ConfigurationUtilsTests)",
     "displayName": "testReadBooleanPropertyInvalidType(org.elasticsearch.ingest.ConfigurationUtilsTests)",
     "methodName": "testReadBooleanPropertyInvalidType",
     "className": "org.elasticsearch.ingest.ConfigurationUtilsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195688531
 }
]

[
 "TEST_STARTED",
 "ID#testReadBooleanProperty(org.elasticsearch.ingest.ConfigurationUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReadBooleanProperty(org.elasticsearch.ingest.ConfigurationUtilsTests)",
  "startTimestamp": 1474195688546,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testReadNullBooleanProperty(org.elasticsearch.ingest.ConfigurationUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReadNullBooleanProperty(org.elasticsearch.ingest.ConfigurationUtilsTests)",
  "startTimestamp": 1474195688550,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testOptional_InvalidType(org.elasticsearch.ingest.ConfigurationUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOptional_InvalidType(org.elasticsearch.ingest.ConfigurationUtilsTests)",
  "startTimestamp": 1474195688553,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testReadStringProperty(org.elasticsearch.ingest.ConfigurationUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReadStringProperty(org.elasticsearch.ingest.ConfigurationUtilsTests)",
  "startTimestamp": 1474195688555,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testReadProcessors(org.elasticsearch.ingest.ConfigurationUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReadProcessors(org.elasticsearch.ingest.ConfigurationUtilsTests)",
  "startTimestamp": 1474195688558,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testReadStringPropertyInvalidType(org.elasticsearch.ingest.ConfigurationUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReadStringPropertyInvalidType(org.elasticsearch.ingest.ConfigurationUtilsTests)",
  "startTimestamp": 1474195688570,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testReadBooleanPropertyInvalidType(org.elasticsearch.ingest.ConfigurationUtilsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReadBooleanPropertyInvalidType(org.elasticsearch.ingest.ConfigurationUtilsTests)",
  "startTimestamp": 1474195688572,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.ingest.ConfigurationUtilsTests",
  "startTimestamp": 1474195688531,
  "executionTime": 45
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.apache.lucene.queries.BlendedTermQueryTests",
   "displayName": "org.apache.lucene.queries.BlendedTermQueryTests",
   "methodName": null,
   "className": "org.apache.lucene.queries.BlendedTermQueryTests",
   "children": [
    {
     "id": "ID#testBooleanQuery(org.apache.lucene.queries.BlendedTermQueryTests)",
     "displayName": "testBooleanQuery(org.apache.lucene.queries.BlendedTermQueryTests)",
     "methodName": "testBooleanQuery",
     "className": "org.apache.lucene.queries.BlendedTermQueryTests",
     "children": []
    },
    {
     "id": "ID#testExtractTerms(org.apache.lucene.queries.BlendedTermQueryTests)",
     "displayName": "testExtractTerms(org.apache.lucene.queries.BlendedTermQueryTests)",
     "methodName": "testExtractTerms",
     "className": "org.apache.lucene.queries.BlendedTermQueryTests",
     "children": []
    },
    {
     "id": "ID#testDismaxQuery(org.apache.lucene.queries.BlendedTermQueryTests)",
     "displayName": "testDismaxQuery(org.apache.lucene.queries.BlendedTermQueryTests)",
     "methodName": "testDismaxQuery",
     "className": "org.apache.lucene.queries.BlendedTermQueryTests",
     "children": []
    },
    {
     "id": "ID#testBasics(org.apache.lucene.queries.BlendedTermQueryTests)",
     "displayName": "testBasics(org.apache.lucene.queries.BlendedTermQueryTests)",
     "methodName": "testBasics",
     "className": "org.apache.lucene.queries.BlendedTermQueryTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195688582
 }
]

[
 "TEST_STARTED",
 "ID#testBooleanQuery(org.apache.lucene.queries.BlendedTermQueryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBooleanQuery(org.apache.lucene.queries.BlendedTermQueryTests)",
  "startTimestamp": 1474195688599,
  "executionTime": 108
 }
]

[
 "TEST_STARTED",
 "ID#testExtractTerms(org.apache.lucene.queries.BlendedTermQueryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExtractTerms(org.apache.lucene.queries.BlendedTermQueryTests)",
  "startTimestamp": 1474195688707,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testDismaxQuery(org.apache.lucene.queries.BlendedTermQueryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDismaxQuery(org.apache.lucene.queries.BlendedTermQueryTests)",
  "startTimestamp": 1474195688716,
  "executionTime": 127
 }
]

[
 "TEST_STARTED",
 "ID#testBasics(org.apache.lucene.queries.BlendedTermQueryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBasics(org.apache.lucene.queries.BlendedTermQueryTests)",
  "startTimestamp": 1474195688844,
  "executionTime": 10
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.apache.lucene.queries.BlendedTermQueryTests",
  "startTimestamp": 1474195688582,
  "executionTime": 274
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.transport.TCPTransportTests",
   "displayName": "org.elasticsearch.transport.TCPTransportTests",
   "methodName": null,
   "className": "org.elasticsearch.transport.TCPTransportTests",
   "children": [
    {
     "id": "ID#testParseV4DefaultRange(org.elasticsearch.transport.TCPTransportTests)",
     "displayName": "testParseV4DefaultRange(org.elasticsearch.transport.TCPTransportTests)",
     "methodName": "testParseV4DefaultRange",
     "className": "org.elasticsearch.transport.TCPTransportTests",
     "children": []
    },
    {
     "id": "ID#testParseV6DefaultPort(org.elasticsearch.transport.TCPTransportTests)",
     "displayName": "testParseV6DefaultPort(org.elasticsearch.transport.TCPTransportTests)",
     "methodName": "testParseV6DefaultPort",
     "className": "org.elasticsearch.transport.TCPTransportTests",
     "children": []
    },
    {
     "id": "ID#testParseV4WithPortRange(org.elasticsearch.transport.TCPTransportTests)",
     "displayName": "testParseV4WithPortRange(org.elasticsearch.transport.TCPTransportTests)",
     "methodName": "testParseV4WithPortRange",
     "className": "org.elasticsearch.transport.TCPTransportTests",
     "children": []
    },
    {
     "id": "ID#testParseV4WithPort(org.elasticsearch.transport.TCPTransportTests)",
     "displayName": "testParseV4WithPort(org.elasticsearch.transport.TCPTransportTests)",
     "methodName": "testParseV4WithPort",
     "className": "org.elasticsearch.transport.TCPTransportTests",
     "children": []
    },
    {
     "id": "ID#testParseV6WithPortRange(org.elasticsearch.transport.TCPTransportTests)",
     "displayName": "testParseV6WithPortRange(org.elasticsearch.transport.TCPTransportTests)",
     "methodName": "testParseV6WithPortRange",
     "className": "org.elasticsearch.transport.TCPTransportTests",
     "children": []
    },
    {
     "id": "ID#testParseV6UnBracketed(org.elasticsearch.transport.TCPTransportTests)",
     "displayName": "testParseV6UnBracketed(org.elasticsearch.transport.TCPTransportTests)",
     "methodName": "testParseV6UnBracketed",
     "className": "org.elasticsearch.transport.TCPTransportTests",
     "children": []
    },
    {
     "id": "ID#testParseV4DefaultPort(org.elasticsearch.transport.TCPTransportTests)",
     "displayName": "testParseV4DefaultPort(org.elasticsearch.transport.TCPTransportTests)",
     "methodName": "testParseV4DefaultPort",
     "className": "org.elasticsearch.transport.TCPTransportTests",
     "children": []
    },
    {
     "id": "ID#testAddressLimit(org.elasticsearch.transport.TCPTransportTests)",
     "displayName": "testAddressLimit(org.elasticsearch.transport.TCPTransportTests)",
     "methodName": "testAddressLimit",
     "className": "org.elasticsearch.transport.TCPTransportTests",
     "children": []
    },
    {
     "id": "ID#testParseV6WithPort(org.elasticsearch.transport.TCPTransportTests)",
     "displayName": "testParseV6WithPort(org.elasticsearch.transport.TCPTransportTests)",
     "methodName": "testParseV6WithPort",
     "className": "org.elasticsearch.transport.TCPTransportTests",
     "children": []
    },
    {
     "id": "ID#testParseV6DefaultRange(org.elasticsearch.transport.TCPTransportTests)",
     "displayName": "testParseV6DefaultRange(org.elasticsearch.transport.TCPTransportTests)",
     "methodName": "testParseV6DefaultRange",
     "className": "org.elasticsearch.transport.TCPTransportTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195688862
 }
]

[
 "TEST_STARTED",
 "ID#testParseV4DefaultRange(org.elasticsearch.transport.TCPTransportTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseV4DefaultRange(org.elasticsearch.transport.TCPTransportTests)",
  "startTimestamp": 1474195688901,
  "executionTime": 17
 }
]

[
 "TEST_STARTED",
 "ID#testParseV6DefaultPort(org.elasticsearch.transport.TCPTransportTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseV6DefaultPort(org.elasticsearch.transport.TCPTransportTests)",
  "startTimestamp": 1474195688918,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParseV4WithPortRange(org.elasticsearch.transport.TCPTransportTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseV4WithPortRange(org.elasticsearch.transport.TCPTransportTests)",
  "startTimestamp": 1474195688920,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testParseV4WithPort(org.elasticsearch.transport.TCPTransportTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseV4WithPort(org.elasticsearch.transport.TCPTransportTests)",
  "startTimestamp": 1474195688922,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testParseV6WithPortRange(org.elasticsearch.transport.TCPTransportTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseV6WithPortRange(org.elasticsearch.transport.TCPTransportTests)",
  "startTimestamp": 1474195688927,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParseV6UnBracketed(org.elasticsearch.transport.TCPTransportTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseV6UnBracketed(org.elasticsearch.transport.TCPTransportTests)",
  "startTimestamp": 1474195688929,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParseV4DefaultPort(org.elasticsearch.transport.TCPTransportTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseV4DefaultPort(org.elasticsearch.transport.TCPTransportTests)",
  "startTimestamp": 1474195688932,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testAddressLimit(org.elasticsearch.transport.TCPTransportTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAddressLimit(org.elasticsearch.transport.TCPTransportTests)",
  "startTimestamp": 1474195688934,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParseV6WithPort(org.elasticsearch.transport.TCPTransportTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseV6WithPort(org.elasticsearch.transport.TCPTransportTests)",
  "startTimestamp": 1474195688936,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParseV6DefaultRange(org.elasticsearch.transport.TCPTransportTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseV6DefaultRange(org.elasticsearch.transport.TCPTransportTests)",
  "startTimestamp": 1474195688938,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.transport.TCPTransportTests",
  "startTimestamp": 1474195688862,
  "executionTime": 80
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.io.stream.NamedWriteableRegistryTests",
   "displayName": "org.elasticsearch.common.io.stream.NamedWriteableRegistryTests",
   "methodName": null,
   "className": "org.elasticsearch.common.io.stream.NamedWriteableRegistryTests",
   "children": [
    {
     "id": "ID#testEmpty(org.elasticsearch.common.io.stream.NamedWriteableRegistryTests)",
     "displayName": "testEmpty(org.elasticsearch.common.io.stream.NamedWriteableRegistryTests)",
     "methodName": "testEmpty",
     "className": "org.elasticsearch.common.io.stream.NamedWriteableRegistryTests",
     "children": []
    },
    {
     "id": "ID#testUnknownName(org.elasticsearch.common.io.stream.NamedWriteableRegistryTests)",
     "displayName": "testUnknownName(org.elasticsearch.common.io.stream.NamedWriteableRegistryTests)",
     "methodName": "testUnknownName",
     "className": "org.elasticsearch.common.io.stream.NamedWriteableRegistryTests",
     "children": []
    },
    {
     "id": "ID#testBasic(org.elasticsearch.common.io.stream.NamedWriteableRegistryTests)",
     "displayName": "testBasic(org.elasticsearch.common.io.stream.NamedWriteableRegistryTests)",
     "methodName": "testBasic",
     "className": "org.elasticsearch.common.io.stream.NamedWriteableRegistryTests",
     "children": []
    },
    {
     "id": "ID#testUnknownCategory(org.elasticsearch.common.io.stream.NamedWriteableRegistryTests)",
     "displayName": "testUnknownCategory(org.elasticsearch.common.io.stream.NamedWriteableRegistryTests)",
     "methodName": "testUnknownCategory",
     "className": "org.elasticsearch.common.io.stream.NamedWriteableRegistryTests",
     "children": []
    },
    {
     "id": "ID#testDuplicates(org.elasticsearch.common.io.stream.NamedWriteableRegistryTests)",
     "displayName": "testDuplicates(org.elasticsearch.common.io.stream.NamedWriteableRegistryTests)",
     "methodName": "testDuplicates",
     "className": "org.elasticsearch.common.io.stream.NamedWriteableRegistryTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195688949
 }
]

[
 "TEST_STARTED",
 "ID#testEmpty(org.elasticsearch.common.io.stream.NamedWriteableRegistryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmpty(org.elasticsearch.common.io.stream.NamedWriteableRegistryTests)",
  "startTimestamp": 1474195688975,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownName(org.elasticsearch.common.io.stream.NamedWriteableRegistryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownName(org.elasticsearch.common.io.stream.NamedWriteableRegistryTests)",
  "startTimestamp": 1474195688977,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testBasic(org.elasticsearch.common.io.stream.NamedWriteableRegistryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBasic(org.elasticsearch.common.io.stream.NamedWriteableRegistryTests)",
  "startTimestamp": 1474195688981,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownCategory(org.elasticsearch.common.io.stream.NamedWriteableRegistryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownCategory(org.elasticsearch.common.io.stream.NamedWriteableRegistryTests)",
  "startTimestamp": 1474195688983,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testDuplicates(org.elasticsearch.common.io.stream.NamedWriteableRegistryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDuplicates(org.elasticsearch.common.io.stream.NamedWriteableRegistryTests)",
  "startTimestamp": 1474195688985,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.io.stream.NamedWriteableRegistryTests",
  "startTimestamp": 1474195688949,
  "executionTime": 40
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.rescore.QueryRescoreBuilderTests",
   "displayName": "org.elasticsearch.search.rescore.QueryRescoreBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.search.rescore.QueryRescoreBuilderTests",
   "children": [
    {
     "id": "ID#testUnknownFieldsExpection(org.elasticsearch.search.rescore.QueryRescoreBuilderTests)",
     "displayName": "testUnknownFieldsExpection(org.elasticsearch.search.rescore.QueryRescoreBuilderTests)",
     "methodName": "testUnknownFieldsExpection",
     "className": "org.elasticsearch.search.rescore.QueryRescoreBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.rescore.QueryRescoreBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.rescore.QueryRescoreBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.rescore.QueryRescoreBuilderTests",
     "children": []
    },
    {
     "id": "ID#testRescoreQueryNull(org.elasticsearch.search.rescore.QueryRescoreBuilderTests)",
     "displayName": "testRescoreQueryNull(org.elasticsearch.search.rescore.QueryRescoreBuilderTests)",
     "methodName": "testRescoreQueryNull",
     "className": "org.elasticsearch.search.rescore.QueryRescoreBuilderTests",
     "children": []
    },
    {
     "id": "ID#testBuildRescoreSearchContext(org.elasticsearch.search.rescore.QueryRescoreBuilderTests)",
     "displayName": "testBuildRescoreSearchContext(org.elasticsearch.search.rescore.QueryRescoreBuilderTests)",
     "methodName": "testBuildRescoreSearchContext",
     "className": "org.elasticsearch.search.rescore.QueryRescoreBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.rescore.QueryRescoreBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.rescore.QueryRescoreBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.rescore.QueryRescoreBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.rescore.QueryRescoreBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.search.rescore.QueryRescoreBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.rescore.QueryRescoreBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195688994
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownFieldsExpection(org.elasticsearch.search.rescore.QueryRescoreBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownFieldsExpection(org.elasticsearch.search.rescore.QueryRescoreBuilderTests)",
  "startTimestamp": 1474195689019,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.rescore.QueryRescoreBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.rescore.QueryRescoreBuilderTests)",
  "startTimestamp": 1474195689022,
  "executionTime": 25
 }
]

[
 "TEST_STARTED",
 "ID#testRescoreQueryNull(org.elasticsearch.search.rescore.QueryRescoreBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRescoreQueryNull(org.elasticsearch.search.rescore.QueryRescoreBuilderTests)",
  "startTimestamp": 1474195689047,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testBuildRescoreSearchContext(org.elasticsearch.search.rescore.QueryRescoreBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBuildRescoreSearchContext(org.elasticsearch.search.rescore.QueryRescoreBuilderTests)",
  "startTimestamp": 1474195689050,
  "executionTime": 137
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.rescore.QueryRescoreBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.rescore.QueryRescoreBuilderTests)",
  "startTimestamp": 1474195689187,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.rescore.QueryRescoreBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.rescore.QueryRescoreBuilderTests)",
  "startTimestamp": 1474195689190,
  "executionTime": 4
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.rescore.QueryRescoreBuilderTests",
  "startTimestamp": 1474195688994,
  "executionTime": 202
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.SpanFirstQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.SpanFirstQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.SpanFirstQueryBuilderTests",
   "children": [
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.SpanFirstQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.SpanFirstQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.SpanFirstQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParseEnd(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)",
     "displayName": "testParseEnd(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)",
     "methodName": "testParseEnd",
     "className": "org.elasticsearch.index.query.SpanFirstQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.SpanFirstQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.SpanFirstQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.SpanFirstQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)",
     "displayName": "testQueryWrappedInArray(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)",
     "methodName": "testQueryWrappedInArray",
     "className": "org.elasticsearch.index.query.SpanFirstQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.SpanFirstQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMustRewrite(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)",
     "displayName": "testMustRewrite(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)",
     "methodName": "testMustRewrite",
     "className": "org.elasticsearch.index.query.SpanFirstQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195689203
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:48:09,224][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{3kTdl3ZJRHiWKZ7HYUinBw}{local}{local[529]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:48:09,235][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:48:09,235][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no plugins loaded%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)",
  "startTimestamp": 1474195689219,
  "executionTime": 33
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)",
  "startTimestamp": 1474195689252,
  "executionTime": 14
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)",
  "startTimestamp": 1474195689266,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testParseEnd(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseEnd(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)",
  "startTimestamp": 1474195689273,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)",
  "startTimestamp": 1474195689282,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)",
  "startTimestamp": 1474195689287,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)",
  "startTimestamp": 1474195689295,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testQueryWrappedInArray(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)",
  "startTimestamp": 1474195689298,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)",
  "startTimestamp": 1474195689301,
  "executionTime": 45
 }
]

[
 "TEST_STARTED",
 "ID#testMustRewrite(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMustRewrite(org.elasticsearch.index.query.SpanFirstQueryBuilderTests)",
  "startTimestamp": 1474195689346,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.SpanFirstQueryBuilderTests",
  "startTimestamp": 1474195689203,
  "executionTime": 155
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.bulk.RetryTests",
   "displayName": "org.elasticsearch.action.bulk.RetryTests",
   "methodName": null,
   "className": "org.elasticsearch.action.bulk.RetryTests",
   "children": [
    {
     "id": "ID#testAsyncRetryFailsAfterBacksOff(org.elasticsearch.action.bulk.RetryTests)",
     "displayName": "testAsyncRetryFailsAfterBacksOff(org.elasticsearch.action.bulk.RetryTests)",
     "methodName": "testAsyncRetryFailsAfterBacksOff",
     "className": "org.elasticsearch.action.bulk.RetryTests",
     "children": []
    },
    {
     "id": "ID#testSyncRetryFailsAfterBackoff(org.elasticsearch.action.bulk.RetryTests)",
     "displayName": "testSyncRetryFailsAfterBackoff(org.elasticsearch.action.bulk.RetryTests)",
     "methodName": "testSyncRetryFailsAfterBackoff",
     "className": "org.elasticsearch.action.bulk.RetryTests",
     "children": []
    },
    {
     "id": "ID#testSyncRetryBacksOff(org.elasticsearch.action.bulk.RetryTests)",
     "displayName": "testSyncRetryBacksOff(org.elasticsearch.action.bulk.RetryTests)",
     "methodName": "testSyncRetryBacksOff",
     "className": "org.elasticsearch.action.bulk.RetryTests",
     "children": []
    },
    {
     "id": "ID#testAsyncRetryBacksOff(org.elasticsearch.action.bulk.RetryTests)",
     "displayName": "testAsyncRetryBacksOff(org.elasticsearch.action.bulk.RetryTests)",
     "methodName": "testAsyncRetryBacksOff",
     "className": "org.elasticsearch.action.bulk.RetryTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195689365
 }
]

[
 "TEST_STARTED",
 "ID#testAsyncRetryFailsAfterBacksOff(org.elasticsearch.action.bulk.RetryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAsyncRetryFailsAfterBacksOff(org.elasticsearch.action.bulk.RetryTests)",
  "startTimestamp": 1474195689381,
  "executionTime": 108
 }
]

[
 "TEST_STARTED",
 "ID#testSyncRetryFailsAfterBackoff(org.elasticsearch.action.bulk.RetryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSyncRetryFailsAfterBackoff(org.elasticsearch.action.bulk.RetryTests)",
  "startTimestamp": 1474195689489,
  "executionTime": 46
 }
]

[
 "TEST_STARTED",
 "ID#testSyncRetryBacksOff(org.elasticsearch.action.bulk.RetryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSyncRetryBacksOff(org.elasticsearch.action.bulk.RetryTests)",
  "startTimestamp": 1474195689535,
  "executionTime": 55
 }
]

[
 "TEST_STARTED",
 "ID#testAsyncRetryBacksOff(org.elasticsearch.action.bulk.RetryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAsyncRetryBacksOff(org.elasticsearch.action.bulk.RetryTests)",
  "startTimestamp": 1474195689590,
  "executionTime": 76
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.bulk.RetryTests",
  "startTimestamp": 1474195689365,
  "executionTime": 302
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.VersionFieldTypeTests",
   "displayName": "org.elasticsearch.index.mapper.VersionFieldTypeTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.VersionFieldTypeTests",
   "children": [
    {
     "id": "ID#testClone(org.elasticsearch.index.mapper.VersionFieldTypeTests)",
     "displayName": "testClone(org.elasticsearch.index.mapper.VersionFieldTypeTests)",
     "methodName": "testClone",
     "className": "org.elasticsearch.index.mapper.VersionFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testFreeze(org.elasticsearch.index.mapper.VersionFieldTypeTests)",
     "displayName": "testFreeze(org.elasticsearch.index.mapper.VersionFieldTypeTests)",
     "methodName": "testFreeze",
     "className": "org.elasticsearch.index.mapper.VersionFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.VersionFieldTypeTests)",
     "displayName": "testCheckCompatibility(org.elasticsearch.index.mapper.VersionFieldTypeTests)",
     "methodName": "testCheckCompatibility",
     "className": "org.elasticsearch.index.mapper.VersionFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testEquals(org.elasticsearch.index.mapper.VersionFieldTypeTests)",
     "displayName": "testEquals(org.elasticsearch.index.mapper.VersionFieldTypeTests)",
     "methodName": "testEquals",
     "className": "org.elasticsearch.index.mapper.VersionFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckTypeName(org.elasticsearch.index.mapper.VersionFieldTypeTests)",
     "displayName": "testCheckTypeName(org.elasticsearch.index.mapper.VersionFieldTypeTests)",
     "methodName": "testCheckTypeName",
     "className": "org.elasticsearch.index.mapper.VersionFieldTypeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195689673
 }
]

[
 "TEST_STARTED",
 "ID#testClone(org.elasticsearch.index.mapper.VersionFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClone(org.elasticsearch.index.mapper.VersionFieldTypeTests)",
  "startTimestamp": 1474195689693,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFreeze(org.elasticsearch.index.mapper.VersionFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFreeze(org.elasticsearch.index.mapper.VersionFieldTypeTests)",
  "startTimestamp": 1474195689695,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCheckCompatibility(org.elasticsearch.index.mapper.VersionFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.VersionFieldTypeTests)",
  "startTimestamp": 1474195689697,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEquals(org.elasticsearch.index.mapper.VersionFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEquals(org.elasticsearch.index.mapper.VersionFieldTypeTests)",
  "startTimestamp": 1474195689699,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCheckTypeName(org.elasticsearch.index.mapper.VersionFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckTypeName(org.elasticsearch.index.mapper.VersionFieldTypeTests)",
  "startTimestamp": 1474195689701,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.VersionFieldTypeTests",
  "startTimestamp": 1474195689673,
  "executionTime": 32
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.pipeline.bucketmetrics.PercentilesBucketTests",
   "displayName": "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.PercentilesBucketTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.PercentilesBucketTests",
   "children": [
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.PercentilesBucketTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.PercentilesBucketTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.PercentilesBucketTests",
     "children": []
    },
    {
     "id": "ID#testPercentsFromMixedArray(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.PercentilesBucketTests)",
     "displayName": "testPercentsFromMixedArray(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.PercentilesBucketTests)",
     "methodName": "testPercentsFromMixedArray",
     "className": "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.PercentilesBucketTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.PercentilesBucketTests)",
     "displayName": "testSerialization(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.PercentilesBucketTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.PercentilesBucketTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.PercentilesBucketTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.PercentilesBucketTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.PercentilesBucketTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195689712
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:48:09,735][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{NG2J5qcbS9udylTDYo9Wtg}{local}{local[530]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.PercentilesBucketTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:48:09,746][INFO ][org.elasticsearch.search.aggregations.pipeline.bucketmetrics] Content string: {%0A  \"WojciOEBiPq\" : {%0A    \"percentiles_bucket\" : {%0A      \"buckets_path\" : [%0A        \"CqPKBSBHLEeH\"%0A      ],%0A      \"gap_policy\" : \"skip\",%0A      \"percents\" : [%0A        1.0,%0A        5.0,%0A        25.0,%0A        50.0,%0A        75.0,%0A        95.0,%0A        99.0%0A      ]%0A    }%0A  }%0A}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:48:09,746][INFO ][org.elasticsearch.search.aggregations.pipeline.bucketmetrics] Content string: {%0A  \"WojciOEBiPq\" : {%0A    \"percentiles_bucket\" : {%0A      \"buckets_path\" : [%0A        \"CqPKBSBHLEeH\"%0A      ],%0A      \"gap_policy\" : \"skip\",%0A      \"percents\" : [%0A        1.0,%0A        5.0,%0A        25.0,%0A        50.0,%0A        75.0,%0A        95.0,%0A        99.0%0A      ]%0A    }%0A  }%0A}%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.PercentilesBucketTests)",
  "startTimestamp": 1474195689744,
  "executionTime": 18
 }
]

[
 "TEST_STARTED",
 "ID#testPercentsFromMixedArray(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.PercentilesBucketTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPercentsFromMixedArray(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.PercentilesBucketTests)",
  "startTimestamp": 1474195689762,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.PercentilesBucketTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.PercentilesBucketTests)",
  "startTimestamp": 1474195689765,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.PercentilesBucketTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.PercentilesBucketTests)",
  "startTimestamp": 1474195689767,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.pipeline.bucketmetrics.PercentilesBucketTests",
  "startTimestamp": 1474195689712,
  "executionTime": 61
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.IndexSettingsTests",
   "displayName": "org.elasticsearch.index.IndexSettingsTests",
   "methodName": null,
   "className": "org.elasticsearch.index.IndexSettingsTests",
   "children": [
    {
     "id": "ID#testRefreshInterval(org.elasticsearch.index.IndexSettingsTests)",
     "displayName": "testRefreshInterval(org.elasticsearch.index.IndexSettingsTests)",
     "methodName": "testRefreshInterval",
     "className": "org.elasticsearch.index.IndexSettingsTests",
     "children": []
    },
    {
     "id": "ID#testRunListener(org.elasticsearch.index.IndexSettingsTests)",
     "displayName": "testRunListener(org.elasticsearch.index.IndexSettingsTests)",
     "methodName": "testRunListener",
     "className": "org.elasticsearch.index.IndexSettingsTests",
     "children": []
    },
    {
     "id": "ID#testGCDeletesSetting(org.elasticsearch.index.IndexSettingsTests)",
     "displayName": "testGCDeletesSetting(org.elasticsearch.index.IndexSettingsTests)",
     "methodName": "testGCDeletesSetting",
     "className": "org.elasticsearch.index.IndexSettingsTests",
     "children": []
    },
    {
     "id": "ID#testMergedSettingsArePassed(org.elasticsearch.index.IndexSettingsTests)",
     "displayName": "testMergedSettingsArePassed(org.elasticsearch.index.IndexSettingsTests)",
     "methodName": "testMergedSettingsArePassed",
     "className": "org.elasticsearch.index.IndexSettingsTests",
     "children": []
    },
    {
     "id": "ID#testTranslogFlushSizeThreshold(org.elasticsearch.index.IndexSettingsTests)",
     "displayName": "testTranslogFlushSizeThreshold(org.elasticsearch.index.IndexSettingsTests)",
     "methodName": "testTranslogFlushSizeThreshold",
     "className": "org.elasticsearch.index.IndexSettingsTests",
     "children": []
    },
    {
     "id": "ID#testMaxResultWindow(org.elasticsearch.index.IndexSettingsTests)",
     "displayName": "testMaxResultWindow(org.elasticsearch.index.IndexSettingsTests)",
     "methodName": "testMaxResultWindow",
     "className": "org.elasticsearch.index.IndexSettingsTests",
     "children": []
    },
    {
     "id": "ID#testUpdateDurability(org.elasticsearch.index.IndexSettingsTests)",
     "displayName": "testUpdateDurability(org.elasticsearch.index.IndexSettingsTests)",
     "methodName": "testUpdateDurability",
     "className": "org.elasticsearch.index.IndexSettingsTests",
     "children": []
    },
    {
     "id": "ID#testIsWarmerEnabled(org.elasticsearch.index.IndexSettingsTests)",
     "displayName": "testIsWarmerEnabled(org.elasticsearch.index.IndexSettingsTests)",
     "methodName": "testIsWarmerEnabled",
     "className": "org.elasticsearch.index.IndexSettingsTests",
     "children": []
    },
    {
     "id": "ID#testArchiveBrokenIndexSettings(org.elasticsearch.index.IndexSettingsTests)",
     "displayName": "testArchiveBrokenIndexSettings(org.elasticsearch.index.IndexSettingsTests)",
     "methodName": "testArchiveBrokenIndexSettings",
     "className": "org.elasticsearch.index.IndexSettingsTests",
     "children": []
    },
    {
     "id": "ID#testSettingsConsistency(org.elasticsearch.index.IndexSettingsTests)",
     "displayName": "testSettingsConsistency(org.elasticsearch.index.IndexSettingsTests)",
     "methodName": "testSettingsConsistency",
     "className": "org.elasticsearch.index.IndexSettingsTests",
     "children": []
    },
    {
     "id": "ID#testNodeSettingsAreContained(org.elasticsearch.index.IndexSettingsTests)",
     "displayName": "testNodeSettingsAreContained(org.elasticsearch.index.IndexSettingsTests)",
     "methodName": "testNodeSettingsAreContained",
     "className": "org.elasticsearch.index.IndexSettingsTests",
     "children": []
    },
    {
     "id": "ID#testIsTTLPurgeDisabled(org.elasticsearch.index.IndexSettingsTests)",
     "displayName": "testIsTTLPurgeDisabled(org.elasticsearch.index.IndexSettingsTests)",
     "methodName": "testIsTTLPurgeDisabled",
     "className": "org.elasticsearch.index.IndexSettingsTests",
     "children": []
    },
    {
     "id": "ID#testSettingsUpdateValidator(org.elasticsearch.index.IndexSettingsTests)",
     "displayName": "testSettingsUpdateValidator(org.elasticsearch.index.IndexSettingsTests)",
     "methodName": "testSettingsUpdateValidator",
     "className": "org.elasticsearch.index.IndexSettingsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195689781
 }
]

[
 "TEST_STARTED",
 "ID#testRefreshInterval(org.elasticsearch.index.IndexSettingsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:48:09,799][INFO ][org.elasticsearch.common.settings] [class org.elasticsearch.test.AbstractQueryTestCase] updating [index.refresh_interval] from [1649046744ms] to [-1]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRefreshInterval(org.elasticsearch.index.IndexSettingsTests)",
  "startTimestamp": 1474195689797,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testRunListener(org.elasticsearch.index.IndexSettingsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:48:09,804][INFO ][org.elasticsearch.common.settings] [class org.elasticsearch.test.AbstractQueryTestCase] updating [index.test.setting.int] from [-1] to [42]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRunListener(org.elasticsearch.index.IndexSettingsTests)",
  "startTimestamp": 1474195689800,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testGCDeletesSetting(org.elasticsearch.index.IndexSettingsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:48:09,806][INFO ][org.elasticsearch.common.settings] [class org.elasticsearch.test.AbstractQueryTestCase] updating [index.gc_deletes] from [724725195ms] to [2075494269ms]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:48:09,807][INFO ][org.elasticsearch.common.settings] [class org.elasticsearch.test.AbstractQueryTestCase] updating [index.gc_deletes] from [2075494269ms] to [-1]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGCDeletesSetting(org.elasticsearch.index.IndexSettingsTests)",
  "startTimestamp": 1474195689804,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testMergedSettingsArePassed(org.elasticsearch.index.IndexSettingsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:48:09,810][INFO ][org.elasticsearch.common.settings] [class org.elasticsearch.test.AbstractQueryTestCase] updating [index.test.setting.int] from [-1] to [42]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:48:09,810][INFO ][org.elasticsearch.common.settings] [class org.elasticsearch.test.AbstractQueryTestCase] updating [index.not.updated] from [] to [boom]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMergedSettingsArePassed(org.elasticsearch.index.IndexSettingsTests)",
  "startTimestamp": 1474195689807,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testTranslogFlushSizeThreshold(org.elasticsearch.index.IndexSettingsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:48:09,813][INFO ][org.elasticsearch.common.settings] [class org.elasticsearch.test.AbstractQueryTestCase] updating [index.translog.flush_threshold_size] from [910mb] to [1.1gb]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTranslogFlushSizeThreshold(org.elasticsearch.index.IndexSettingsTests)",
  "startTimestamp": 1474195689811,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testMaxResultWindow(org.elasticsearch.index.IndexSettingsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:48:09,816][INFO ][org.elasticsearch.common.settings] [class org.elasticsearch.test.AbstractQueryTestCase] updating [index.max_result_window] from [15] to [42]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:48:09,816][INFO ][org.elasticsearch.common.settings] [class org.elasticsearch.test.AbstractQueryTestCase] updating [index.max_rescore_window] from [15] to [42]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:48:09,816][INFO ][org.elasticsearch.common.settings] [class org.elasticsearch.test.AbstractQueryTestCase] updating [index.max_result_window] from [42] to [10000]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:48:09,816][INFO ][org.elasticsearch.common.settings] [class org.elasticsearch.test.AbstractQueryTestCase] updating [index.max_rescore_window] from [42] to [10000]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMaxResultWindow(org.elasticsearch.index.IndexSettingsTests)",
  "startTimestamp": 1474195689813,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testUpdateDurability(org.elasticsearch.index.IndexSettingsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:48:09,820][INFO ][org.elasticsearch.common.settings] [class org.elasticsearch.test.AbstractQueryTestCase] updating [index.translog.durability] from [async] to [request]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUpdateDurability(org.elasticsearch.index.IndexSettingsTests)",
  "startTimestamp": 1474195689817,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testIsWarmerEnabled(org.elasticsearch.index.IndexSettingsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:48:09,823][INFO ][org.elasticsearch.common.settings] [class org.elasticsearch.test.AbstractQueryTestCase] updating [index.warmer.enabled] from [false] to [true]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsWarmerEnabled(org.elasticsearch.index.IndexSettingsTests)",
  "startTimestamp": 1474195689821,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testArchiveBrokenIndexSettings(org.elasticsearch.index.IndexSettingsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:48:09,828][WARN ][org.elasticsearch.common.settings] [class org.elasticsearch.test.AbstractQueryTestCase] found unknown setting: index.unknown value: foo - archiving%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testArchiveBrokenIndexSettings(org.elasticsearch.index.IndexSettingsTests)",
  "startTimestamp": 1474195689824,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testSettingsConsistency(org.elasticsearch.index.IndexSettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSettingsConsistency(org.elasticsearch.index.IndexSettingsTests)",
  "startTimestamp": 1474195689828,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testNodeSettingsAreContained(org.elasticsearch.index.IndexSettingsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:48:09,836][INFO ][org.elasticsearch.common.settings] [class org.elasticsearch.test.AbstractQueryTestCase] updating [index.foo.bar] from [0] to [42]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:48:09,836][INFO ][org.elasticsearch.common.settings] [class org.elasticsearch.test.AbstractQueryTestCase] updating [index.foo.bar] from [42] to [43]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNodeSettingsAreContained(org.elasticsearch.index.IndexSettingsTests)",
  "startTimestamp": 1474195689832,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testIsTTLPurgeDisabled(org.elasticsearch.index.IndexSettingsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:48:09,842][INFO ][org.elasticsearch.common.settings] [class org.elasticsearch.test.AbstractQueryTestCase] updating [index.ttl.disable_purge] from [false] to [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:48:09,842][INFO ][org.elasticsearch.common.settings] [class org.elasticsearch.test.AbstractQueryTestCase] updating [index.ttl.disable_purge] from [true] to [false]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsTTLPurgeDisabled(org.elasticsearch.index.IndexSettingsTests)",
  "startTimestamp": 1474195689836,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testSettingsUpdateValidator(org.elasticsearch.index.IndexSettingsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:48:09,853][INFO ][org.elasticsearch.common.settings] [class org.elasticsearch.test.AbstractQueryTestCase] updating [index.test.setting.int] from [-1] to [41]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSettingsUpdateValidator(org.elasticsearch.index.IndexSettingsTests)",
  "startTimestamp": 1474195689843,
  "executionTime": 10
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.IndexSettingsTests",
  "startTimestamp": 1474195689781,
  "executionTime": 82
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.allocation.PreferLocalPrimariesToRelocatingPrimariesTests",
   "displayName": "org.elasticsearch.cluster.routing.allocation.PreferLocalPrimariesToRelocatingPrimariesTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.allocation.PreferLocalPrimariesToRelocatingPrimariesTests",
   "children": [
    {
     "id": "ID#testPreferLocalPrimaryAllocationOverFiltered(org.elasticsearch.cluster.routing.allocation.PreferLocalPrimariesToRelocatingPrimariesTests)",
     "displayName": "testPreferLocalPrimaryAllocationOverFiltered(org.elasticsearch.cluster.routing.allocation.PreferLocalPrimariesToRelocatingPrimariesTests)",
     "methodName": "testPreferLocalPrimaryAllocationOverFiltered",
     "className": "org.elasticsearch.cluster.routing.allocation.PreferLocalPrimariesToRelocatingPrimariesTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195689870
 }
]

[
 "TEST_STARTED",
 "ID#testPreferLocalPrimaryAllocationOverFiltered(org.elasticsearch.cluster.routing.allocation.PreferLocalPrimariesToRelocatingPrimariesTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:09,894][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] create an allocation with [2] initial primary recoveries and [1] concurrent recoveries%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:09,902][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] create 2 indices with [9] no replicas, and wait till all are allocated%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:09,902][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] adding two nodes and performing rerouting till all are allocated%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:09,906][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test1][7], [test1][8]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:09,906][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] remove one of the nodes and apply filter to move everything from another node%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:09,907][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [GREEN] to [RED] (reason: [reroute]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:09,907][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] [9] primaries should be still started but [9] other primaries should be unassigned%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:09,907][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start node back up%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:09,908][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] local initializations: [2], relocating: [0], need to initialize: 9%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:09,909][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] local initializations: [2], relocating: [0], need to initialize: 8%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:09,910][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] local initializations: [2], relocating: [0], need to initialize: 7%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:09,911][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] local initializations: [2], relocating: [0], need to initialize: 6%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:09,911][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] local initializations: [2], relocating: [0], need to initialize: 5%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:09,912][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] local initializations: [2], relocating: [0], need to initialize: 4%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:09,913][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] local initializations: [2], relocating: [0], need to initialize: 3%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:09,913][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] local initializations: [2], relocating: [0], need to initialize: 2%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:09,914][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] local initializations: [1], relocating: [0], need to initialize: 1%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:09,927][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [RED] to [GREEN] (reason: [shards started [[test1][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:09,927][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] local initializations: [0], relocating: [1], need to initialize: 0%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:09,928][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] local initializations: [0], relocating: [1], need to initialize: 0%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:09,928][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] local initializations: [0], relocating: [1], need to initialize: 0%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:09,929][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] local initializations: [0], relocating: [1], need to initialize: 0%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:09,930][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] local initializations: [0], relocating: [1], need to initialize: 0%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:09,931][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] local initializations: [0], relocating: [1], need to initialize: 0%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:09,931][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] local initializations: [0], relocating: [1], need to initialize: 0%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:09,932][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] local initializations: [0], relocating: [1], need to initialize: 0%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:09,933][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] local initializations: [0], relocating: [1], need to initialize: 0%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPreferLocalPrimaryAllocationOverFiltered(org.elasticsearch.cluster.routing.allocation.PreferLocalPrimariesToRelocatingPrimariesTests)",
  "startTimestamp": 1474195689892,
  "executionTime": 41
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.allocation.PreferLocalPrimariesToRelocatingPrimariesTests",
  "startTimestamp": 1474195689870,
  "executionTime": 67
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.suggest.phrase.NoisyChannelSpellCheckerTests",
   "displayName": "org.elasticsearch.search.suggest.phrase.NoisyChannelSpellCheckerTests",
   "methodName": null,
   "className": "org.elasticsearch.search.suggest.phrase.NoisyChannelSpellCheckerTests",
   "children": [
    {
     "id": "ID#testMultiGenerator(org.elasticsearch.search.suggest.phrase.NoisyChannelSpellCheckerTests)",
     "displayName": "testMultiGenerator(org.elasticsearch.search.suggest.phrase.NoisyChannelSpellCheckerTests)",
     "methodName": "testMultiGenerator",
     "className": "org.elasticsearch.search.suggest.phrase.NoisyChannelSpellCheckerTests",
     "children": []
    },
    {
     "id": "ID#testTrigram(org.elasticsearch.search.suggest.phrase.NoisyChannelSpellCheckerTests)",
     "displayName": "testTrigram(org.elasticsearch.search.suggest.phrase.NoisyChannelSpellCheckerTests)",
     "methodName": "testTrigram",
     "className": "org.elasticsearch.search.suggest.phrase.NoisyChannelSpellCheckerTests",
     "children": []
    },
    {
     "id": "ID#testNgram(org.elasticsearch.search.suggest.phrase.NoisyChannelSpellCheckerTests)",
     "displayName": "testNgram(org.elasticsearch.search.suggest.phrase.NoisyChannelSpellCheckerTests)",
     "methodName": "testNgram",
     "className": "org.elasticsearch.search.suggest.phrase.NoisyChannelSpellCheckerTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195689983
 }
]

[
 "TEST_STARTED",
 "ID#testMultiGenerator(org.elasticsearch.search.suggest.phrase.NoisyChannelSpellCheckerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultiGenerator(org.elasticsearch.search.suggest.phrase.NoisyChannelSpellCheckerTests)",
  "startTimestamp": 1474195690006,
  "executionTime": 367
 }
]

[
 "TEST_STARTED",
 "ID#testTrigram(org.elasticsearch.search.suggest.phrase.NoisyChannelSpellCheckerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTrigram(org.elasticsearch.search.suggest.phrase.NoisyChannelSpellCheckerTests)",
  "startTimestamp": 1474195690374,
  "executionTime": 57
 }
]

[
 "TEST_STARTED",
 "ID#testNgram(org.elasticsearch.search.suggest.phrase.NoisyChannelSpellCheckerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNgram(org.elasticsearch.search.suggest.phrase.NoisyChannelSpellCheckerTests)",
  "startTimestamp": 1474195690431,
  "executionTime": 49
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.suggest.phrase.NoisyChannelSpellCheckerTests",
  "startTimestamp": 1474195689983,
  "executionTime": 499
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.ClusterInfoTests",
   "displayName": "org.elasticsearch.cluster.ClusterInfoTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.ClusterInfoTests",
   "children": [
    {
     "id": "ID#testSerialization(org.elasticsearch.cluster.ClusterInfoTests)",
     "displayName": "testSerialization(org.elasticsearch.cluster.ClusterInfoTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.cluster.ClusterInfoTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195690488
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.cluster.ClusterInfoTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.cluster.ClusterInfoTests)",
  "startTimestamp": 1474195690631,
  "executionTime": 12
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.ClusterInfoTests",
  "startTimestamp": 1474195690488,
  "executionTime": 160
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.gateway.GatewayServiceTests",
   "displayName": "org.elasticsearch.gateway.GatewayServiceTests",
   "methodName": null,
   "className": "org.elasticsearch.gateway.GatewayServiceTests",
   "children": [
    {
     "id": "ID#testDefaultRecoverAfterTime(org.elasticsearch.gateway.GatewayServiceTests)",
     "displayName": "testDefaultRecoverAfterTime(org.elasticsearch.gateway.GatewayServiceTests)",
     "methodName": "testDefaultRecoverAfterTime",
     "className": "org.elasticsearch.gateway.GatewayServiceTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195690654
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultRecoverAfterTime(org.elasticsearch.gateway.GatewayServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultRecoverAfterTime(org.elasticsearch.gateway.GatewayServiceTests)",
  "startTimestamp": 1474195690693,
  "executionTime": 19
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.gateway.GatewayServiceTests",
  "startTimestamp": 1474195690654,
  "executionTime": 60
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.snapshots.blobstore.FileInfoTests",
   "displayName": "org.elasticsearch.index.snapshots.blobstore.FileInfoTests",
   "methodName": null,
   "className": "org.elasticsearch.index.snapshots.blobstore.FileInfoTests",
   "children": [
    {
     "id": "ID#testGetPartSize(org.elasticsearch.index.snapshots.blobstore.FileInfoTests)",
     "displayName": "testGetPartSize(org.elasticsearch.index.snapshots.blobstore.FileInfoTests)",
     "methodName": "testGetPartSize",
     "className": "org.elasticsearch.index.snapshots.blobstore.FileInfoTests",
     "children": []
    },
    {
     "id": "ID#testToFromXContent(org.elasticsearch.index.snapshots.blobstore.FileInfoTests)",
     "displayName": "testToFromXContent(org.elasticsearch.index.snapshots.blobstore.FileInfoTests)",
     "methodName": "testToFromXContent",
     "className": "org.elasticsearch.index.snapshots.blobstore.FileInfoTests",
     "children": []
    },
    {
     "id": "ID#testInvalidFieldsInFromXContent(org.elasticsearch.index.snapshots.blobstore.FileInfoTests)",
     "displayName": "testInvalidFieldsInFromXContent(org.elasticsearch.index.snapshots.blobstore.FileInfoTests)",
     "methodName": "testInvalidFieldsInFromXContent",
     "className": "org.elasticsearch.index.snapshots.blobstore.FileInfoTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195690720
 }
]

[
 "TEST_STARTED",
 "ID#testGetPartSize(org.elasticsearch.index.snapshots.blobstore.FileInfoTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGetPartSize(org.elasticsearch.index.snapshots.blobstore.FileInfoTests)",
  "startTimestamp": 1474195690747,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testToFromXContent(org.elasticsearch.index.snapshots.blobstore.FileInfoTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToFromXContent(org.elasticsearch.index.snapshots.blobstore.FileInfoTests)",
  "startTimestamp": 1474195690749,
  "executionTime": 547
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidFieldsInFromXContent(org.elasticsearch.index.snapshots.blobstore.FileInfoTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidFieldsInFromXContent(org.elasticsearch.index.snapshots.blobstore.FileInfoTests)",
  "startTimestamp": 1474195691296,
  "executionTime": 40
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.snapshots.blobstore.FileInfoTests",
  "startTimestamp": 1474195690720,
  "executionTime": 620
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.admin.indices.rollover.ConditionTests",
   "displayName": "org.elasticsearch.action.admin.indices.rollover.ConditionTests",
   "methodName": null,
   "className": "org.elasticsearch.action.admin.indices.rollover.ConditionTests",
   "children": [
    {
     "id": "ID#testMaxDocs(org.elasticsearch.action.admin.indices.rollover.ConditionTests)",
     "displayName": "testMaxDocs(org.elasticsearch.action.admin.indices.rollover.ConditionTests)",
     "methodName": "testMaxDocs",
     "className": "org.elasticsearch.action.admin.indices.rollover.ConditionTests",
     "children": []
    },
    {
     "id": "ID#testMaxAge(org.elasticsearch.action.admin.indices.rollover.ConditionTests)",
     "displayName": "testMaxAge(org.elasticsearch.action.admin.indices.rollover.ConditionTests)",
     "methodName": "testMaxAge",
     "className": "org.elasticsearch.action.admin.indices.rollover.ConditionTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195691346
 }
]

[
 "TEST_STARTED",
 "ID#testMaxDocs(org.elasticsearch.action.admin.indices.rollover.ConditionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMaxDocs(org.elasticsearch.action.admin.indices.rollover.ConditionTests)",
  "startTimestamp": 1474195691363,
  "executionTime": 27
 }
]

[
 "TEST_STARTED",
 "ID#testMaxAge(org.elasticsearch.action.admin.indices.rollover.ConditionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMaxAge(org.elasticsearch.action.admin.indices.rollover.ConditionTests)",
  "startTimestamp": 1474195691390,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.admin.indices.rollover.ConditionTests",
  "startTimestamp": 1474195691346,
  "executionTime": 47
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.threadpool.ScheduleWithFixedDelayTests",
   "displayName": "org.elasticsearch.threadpool.ScheduleWithFixedDelayTests",
   "methodName": null,
   "className": "org.elasticsearch.threadpool.ScheduleWithFixedDelayTests",
   "children": [
    {
     "id": "ID#testBlockingCallOnSchedulerThreadFails(org.elasticsearch.threadpool.ScheduleWithFixedDelayTests)",
     "displayName": "testBlockingCallOnSchedulerThreadFails(org.elasticsearch.threadpool.ScheduleWithFixedDelayTests)",
     "methodName": "testBlockingCallOnSchedulerThreadFails",
     "className": "org.elasticsearch.threadpool.ScheduleWithFixedDelayTests",
     "children": []
    },
    {
     "id": "ID#testDoesNotRescheduleUntilExecutionFinished(org.elasticsearch.threadpool.ScheduleWithFixedDelayTests)",
     "displayName": "testDoesNotRescheduleUntilExecutionFinished(org.elasticsearch.threadpool.ScheduleWithFixedDelayTests)",
     "methodName": "testDoesNotRescheduleUntilExecutionFinished",
     "className": "org.elasticsearch.threadpool.ScheduleWithFixedDelayTests",
     "children": []
    },
    {
     "id": "ID#testBlockingCallOnNonSchedulerThreadAllowed(org.elasticsearch.threadpool.ScheduleWithFixedDelayTests)",
     "displayName": "testBlockingCallOnNonSchedulerThreadAllowed(org.elasticsearch.threadpool.ScheduleWithFixedDelayTests)",
     "methodName": "testBlockingCallOnNonSchedulerThreadAllowed",
     "className": "org.elasticsearch.threadpool.ScheduleWithFixedDelayTests",
     "children": []
    },
    {
     "id": "ID#testRunnableRunsAtMostOnceAfterCancellation(org.elasticsearch.threadpool.ScheduleWithFixedDelayTests)",
     "displayName": "testRunnableRunsAtMostOnceAfterCancellation(org.elasticsearch.threadpool.ScheduleWithFixedDelayTests)",
     "methodName": "testRunnableRunsAtMostOnceAfterCancellation",
     "className": "org.elasticsearch.threadpool.ScheduleWithFixedDelayTests",
     "children": []
    },
    {
     "id": "ID#testOnRejectionCausesCancellation(org.elasticsearch.threadpool.ScheduleWithFixedDelayTests)",
     "displayName": "testOnRejectionCausesCancellation(org.elasticsearch.threadpool.ScheduleWithFixedDelayTests)",
     "methodName": "testOnRejectionCausesCancellation",
     "className": "org.elasticsearch.threadpool.ScheduleWithFixedDelayTests",
     "children": []
    },
    {
     "id": "ID#testThatRunnableIsRescheduled(org.elasticsearch.threadpool.ScheduleWithFixedDelayTests)",
     "displayName": "testThatRunnableIsRescheduled(org.elasticsearch.threadpool.ScheduleWithFixedDelayTests)",
     "methodName": "testThatRunnableIsRescheduled",
     "className": "org.elasticsearch.threadpool.ScheduleWithFixedDelayTests",
     "children": []
    },
    {
     "id": "ID#testCancellingRunnable(org.elasticsearch.threadpool.ScheduleWithFixedDelayTests)",
     "displayName": "testCancellingRunnable(org.elasticsearch.threadpool.ScheduleWithFixedDelayTests)",
     "methodName": "testCancellingRunnable",
     "className": "org.elasticsearch.threadpool.ScheduleWithFixedDelayTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195691403
 }
]

[
 "TEST_STARTED",
 "ID#testBlockingCallOnSchedulerThreadFails(org.elasticsearch.threadpool.ScheduleWithFixedDelayTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBlockingCallOnSchedulerThreadFails(org.elasticsearch.threadpool.ScheduleWithFixedDelayTests)",
  "startTimestamp": 1474195691429,
  "executionTime": 21
 }
]

[
 "TEST_STARTED",
 "ID#testDoesNotRescheduleUntilExecutionFinished(org.elasticsearch.threadpool.ScheduleWithFixedDelayTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDoesNotRescheduleUntilExecutionFinished(org.elasticsearch.threadpool.ScheduleWithFixedDelayTests)",
  "startTimestamp": 1474195691450,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testBlockingCallOnNonSchedulerThreadAllowed(org.elasticsearch.threadpool.ScheduleWithFixedDelayTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBlockingCallOnNonSchedulerThreadAllowed(org.elasticsearch.threadpool.ScheduleWithFixedDelayTests)",
  "startTimestamp": 1474195691458,
  "executionTime": 25
 }
]

[
 "TEST_STARTED",
 "ID#testRunnableRunsAtMostOnceAfterCancellation(org.elasticsearch.threadpool.ScheduleWithFixedDelayTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRunnableRunsAtMostOnceAfterCancellation(org.elasticsearch.threadpool.ScheduleWithFixedDelayTests)",
  "startTimestamp": 1474195691484,
  "executionTime": 46
 }
]

[
 "TEST_STARTED",
 "ID#testOnRejectionCausesCancellation(org.elasticsearch.threadpool.ScheduleWithFixedDelayTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOnRejectionCausesCancellation(org.elasticsearch.threadpool.ScheduleWithFixedDelayTests)",
  "startTimestamp": 1474195691530,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testThatRunnableIsRescheduled(org.elasticsearch.threadpool.ScheduleWithFixedDelayTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:48:11,559][WARN ][org.elasticsearch.threadpool] failed to run scheduled task [org.elasticsearch.threadpool.ScheduleWithFixedDelayTests$$Lambda$1907/730264536@5a1b9a48] on thread pool [generic]%0D%0Aorg.elasticsearch.ElasticsearchException: this shouldn't cause the test to fail!%0A%09at org.elasticsearch.threadpool.ScheduleWithFixedDelayTests.lambda$testThatRunnableIsRescheduled$1(ScheduleWithFixedDelayTests.java:118) ~[test/:?]%0A%09at org.elasticsearch.threadpool.ThreadPool$ReschedulingRunnable.doRun(ThreadPool.java:778) [main/:?]%0A%09at org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingAbstractRunnable.doRun(ThreadContext.java:504) [main/:?]%0A%09at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37) [main/:?]%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_102]%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_102]%0A%09at java.lang.Thread.run(Thread.java:745) [?:1.8.0_102]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:48:11,575][WARN ][org.elasticsearch.threadpool] failed to run scheduled task [org.elasticsearch.threadpool.ScheduleWithFixedDelayTests$$Lambda$1907/730264536@5a1b9a48] on thread pool [generic]%0D%0Aorg.elasticsearch.ElasticsearchException: this shouldn't cause the test to fail!%0A%09at org.elasticsearch.threadpool.ScheduleWithFixedDelayTests.lambda$testThatRunnableIsRescheduled$1(ScheduleWithFixedDelayTests.java:118) ~[test/:?]%0A%09at org.elasticsearch.threadpool.ThreadPool$ReschedulingRunnable.doRun(ThreadPool.java:778) [main/:?]%0A%09at org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingAbstractRunnable.doRun(ThreadContext.java:504) [main/:?]%0A%09at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37) [main/:?]%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_102]%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_102]%0A%09at java.lang.Thread.run(Thread.java:745) [?:1.8.0_102]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:48:11,589][WARN ][org.elasticsearch.threadpool] failed to run scheduled task [org.elasticsearch.threadpool.ScheduleWithFixedDelayTests$$Lambda$1907/730264536@5a1b9a48] on thread pool [generic]%0D%0Aorg.elasticsearch.ElasticsearchException: this shouldn't cause the test to fail!%0A%09at org.elasticsearch.threadpool.ScheduleWithFixedDelayTests.lambda$testThatRunnableIsRescheduled$1(ScheduleWithFixedDelayTests.java:118) ~[test/:?]%0A%09at org.elasticsearch.threadpool.ThreadPool$ReschedulingRunnable.doRun(ThreadPool.java:778) [main/:?]%0A%09at org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingAbstractRunnable.doRun(ThreadContext.java:504) [main/:?]%0A%09at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37) [main/:?]%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_102]%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_102]%0A%09at java.lang.Thread.run(Thread.java:745) [?:1.8.0_102]%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatRunnableIsRescheduled(org.elasticsearch.threadpool.ScheduleWithFixedDelayTests)",
  "startTimestamp": 1474195691534,
  "executionTime": 57
 }
]

[
 "TEST_STARTED",
 "ID#testCancellingRunnable(org.elasticsearch.threadpool.ScheduleWithFixedDelayTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCancellingRunnable(org.elasticsearch.threadpool.ScheduleWithFixedDelayTests)",
  "startTimestamp": 1474195691591,
  "executionTime": 153
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.threadpool.ScheduleWithFixedDelayTests",
  "startTimestamp": 1474195691403,
  "executionTime": 343
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.blobstore.FsBlobStoreContainerTests",
   "displayName": "org.elasticsearch.common.blobstore.FsBlobStoreContainerTests",
   "methodName": null,
   "className": "org.elasticsearch.common.blobstore.FsBlobStoreContainerTests",
   "children": [
    {
     "id": "ID#testMoveAndList(org.elasticsearch.common.blobstore.FsBlobStoreContainerTests)",
     "displayName": "testMoveAndList(org.elasticsearch.common.blobstore.FsBlobStoreContainerTests)",
     "methodName": "testMoveAndList",
     "className": "org.elasticsearch.common.blobstore.FsBlobStoreContainerTests",
     "children": []
    },
    {
     "id": "ID#testWriteRead(org.elasticsearch.common.blobstore.FsBlobStoreContainerTests)",
     "displayName": "testWriteRead(org.elasticsearch.common.blobstore.FsBlobStoreContainerTests)",
     "methodName": "testWriteRead",
     "className": "org.elasticsearch.common.blobstore.FsBlobStoreContainerTests",
     "children": []
    },
    {
     "id": "ID#testVerifyOverwriteFails(org.elasticsearch.common.blobstore.FsBlobStoreContainerTests)",
     "displayName": "testVerifyOverwriteFails(org.elasticsearch.common.blobstore.FsBlobStoreContainerTests)",
     "methodName": "testVerifyOverwriteFails",
     "className": "org.elasticsearch.common.blobstore.FsBlobStoreContainerTests",
     "children": []
    },
    {
     "id": "ID#testDeleteBlob(org.elasticsearch.common.blobstore.FsBlobStoreContainerTests)",
     "displayName": "testDeleteBlob(org.elasticsearch.common.blobstore.FsBlobStoreContainerTests)",
     "methodName": "testDeleteBlob",
     "className": "org.elasticsearch.common.blobstore.FsBlobStoreContainerTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195691755
 }
]

[
 "TEST_STARTED",
 "ID#testMoveAndList(org.elasticsearch.common.blobstore.FsBlobStoreContainerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMoveAndList(org.elasticsearch.common.blobstore.FsBlobStoreContainerTests)",
  "startTimestamp": 1474195691782,
  "executionTime": 127
 }
]

[
 "TEST_STARTED",
 "ID#testWriteRead(org.elasticsearch.common.blobstore.FsBlobStoreContainerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWriteRead(org.elasticsearch.common.blobstore.FsBlobStoreContainerTests)",
  "startTimestamp": 1474195691909,
  "executionTime": 14
 }
]

[
 "TEST_STARTED",
 "ID#testVerifyOverwriteFails(org.elasticsearch.common.blobstore.FsBlobStoreContainerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVerifyOverwriteFails(org.elasticsearch.common.blobstore.FsBlobStoreContainerTests)",
  "startTimestamp": 1474195691923,
  "executionTime": 73
 }
]

[
 "TEST_STARTED",
 "ID#testDeleteBlob(org.elasticsearch.common.blobstore.FsBlobStoreContainerTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDeleteBlob(org.elasticsearch.common.blobstore.FsBlobStoreContainerTests)",
  "startTimestamp": 1474195691996,
  "executionTime": 21
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.blobstore.FsBlobStoreContainerTests",
  "startTimestamp": 1474195691755,
  "executionTime": 306
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgTests",
   "displayName": "org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgTests",
   "children": [
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgTests",
     "children": []
    },
    {
     "id": "ID#testDefaultParsing(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgTests)",
     "displayName": "testDefaultParsing(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgTests)",
     "methodName": "testDefaultParsing",
     "className": "org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgTests)",
     "displayName": "testSerialization(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195692080
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:18:12,113][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{zKpX5m4DR12qLcQ3eX4wIw}{local}{local[534]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:18:12,125][INFO ][org.elasticsearch.search.aggregations.pipeline.moving.avg] Content string: {%0A  \"WojciOEBiPq\" : {%0A    \"moving_avg\" : {%0A      \"buckets_path\" : [%0A        \"CqPKBSBHLEeH\"%0A      ],%0A      \"gap_policy\" : \"skip\",%0A      \"model\" : \"simple\",%0A      \"window\" : 5,%0A      \"predict\" : 36%0A    }%0A  }%0A}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T21:18:12,125][INFO ][org.elasticsearch.search.aggregations.pipeline.moving.avg] Content string: {%0A  \"WojciOEBiPq\" : {%0A    \"moving_avg\" : {%0A      \"buckets_path\" : [%0A        \"CqPKBSBHLEeH\"%0A      ],%0A      \"gap_policy\" : \"skip\",%0A      \"model\" : \"simple\",%0A      \"window\" : 5,%0A      \"predict\" : 36%0A    }%0A  }%0A}%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgTests)",
  "startTimestamp": 1474195692123,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultParsing(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultParsing(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgTests)",
  "startTimestamp": 1474195692126,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgTests)",
  "startTimestamp": 1474195692128,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgTests)",
  "startTimestamp": 1474195692130,
  "executionTime": 51
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.pipeline.moving.avg.MovAvgTests",
  "startTimestamp": 1474195692080,
  "executionTime": 111
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.health.ClusterStateHealthTests",
   "displayName": "org.elasticsearch.cluster.health.ClusterStateHealthTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.health.ClusterStateHealthTests",
   "children": [
    {
     "id": "ID#testClusterHealthWaitsForClusterStateApplication(org.elasticsearch.cluster.health.ClusterStateHealthTests)",
     "displayName": "testClusterHealthWaitsForClusterStateApplication(org.elasticsearch.cluster.health.ClusterStateHealthTests)",
     "methodName": "testClusterHealthWaitsForClusterStateApplication",
     "className": "org.elasticsearch.cluster.health.ClusterStateHealthTests",
     "children": []
    },
    {
     "id": "ID#testClusterHealthOnIndexCreation(org.elasticsearch.cluster.health.ClusterStateHealthTests)",
     "displayName": "testClusterHealthOnIndexCreation(org.elasticsearch.cluster.health.ClusterStateHealthTests)",
     "methodName": "testClusterHealthOnIndexCreation",
     "className": "org.elasticsearch.cluster.health.ClusterStateHealthTests",
     "children": []
    },
    {
     "id": "ID#testClusterHealthOnClusterRecoveryWithFailures(org.elasticsearch.cluster.health.ClusterStateHealthTests)",
     "displayName": "testClusterHealthOnClusterRecoveryWithFailures(org.elasticsearch.cluster.health.ClusterStateHealthTests)",
     "methodName": "testClusterHealthOnClusterRecoveryWithFailures",
     "className": "org.elasticsearch.cluster.health.ClusterStateHealthTests",
     "children": []
    },
    {
     "id": "ID#testClusterHealthOnClusterRecovery(org.elasticsearch.cluster.health.ClusterStateHealthTests)",
     "displayName": "testClusterHealthOnClusterRecovery(org.elasticsearch.cluster.health.ClusterStateHealthTests)",
     "methodName": "testClusterHealthOnClusterRecovery",
     "className": "org.elasticsearch.cluster.health.ClusterStateHealthTests",
     "children": []
    },
    {
     "id": "ID#testClusterHealthOnIndexCreationWithFailedAllocations(org.elasticsearch.cluster.health.ClusterStateHealthTests)",
     "displayName": "testClusterHealthOnIndexCreationWithFailedAllocations(org.elasticsearch.cluster.health.ClusterStateHealthTests)",
     "methodName": "testClusterHealthOnIndexCreationWithFailedAllocations",
     "className": "org.elasticsearch.cluster.health.ClusterStateHealthTests",
     "children": []
    },
    {
     "id": "ID#testClusterHealthOnClusterRecoveryWithPreviousAllocationIds(org.elasticsearch.cluster.health.ClusterStateHealthTests)",
     "displayName": "testClusterHealthOnClusterRecoveryWithPreviousAllocationIds(org.elasticsearch.cluster.health.ClusterStateHealthTests)",
     "methodName": "testClusterHealthOnClusterRecoveryWithPreviousAllocationIds",
     "className": "org.elasticsearch.cluster.health.ClusterStateHealthTests",
     "children": []
    },
    {
     "id": "ID#testClusterHealthOnClusterRecoveryWithPreviousAllocationIdsAndAllocationFailures(org.elasticsearch.cluster.health.ClusterStateHealthTests)",
     "displayName": "testClusterHealthOnClusterRecoveryWithPreviousAllocationIdsAndAllocationFailures(org.elasticsearch.cluster.health.ClusterStateHealthTests)",
     "methodName": "testClusterHealthOnClusterRecoveryWithPreviousAllocationIdsAndAllocationFailures",
     "className": "org.elasticsearch.cluster.health.ClusterStateHealthTests",
     "children": []
    },
    {
     "id": "ID#testClusterHealth(org.elasticsearch.cluster.health.ClusterStateHealthTests)",
     "displayName": "testClusterHealth(org.elasticsearch.cluster.health.ClusterStateHealthTests)",
     "methodName": "testClusterHealth",
     "className": "org.elasticsearch.cluster.health.ClusterStateHealthTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195692200
 }
]

[
 "TEST_STARTED",
 "ID#testClusterHealthWaitsForClusterStateApplication(org.elasticsearch.cluster.health.ClusterStateHealthTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:12,248][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{x_Zg8s_kTra7y0AZ8CHgkg}{local}{local[535]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:12,250][INFO ][org.elasticsearch.cluster.health] --> waiting for listener to be called and cluster state being blocked%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClusterHealthWaitsForClusterStateApplication(org.elasticsearch.cluster.health.ClusterStateHealthTests)",
  "startTimestamp": 1474195692241,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testClusterHealthOnIndexCreation(org.elasticsearch.cluster.health.ClusterStateHealthTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:12,273][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{kwZX9UbpTgya1aJrQ1VCuw}{local}{local[536]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClusterHealthOnIndexCreation(org.elasticsearch.cluster.health.ClusterStateHealthTests)",
  "startTimestamp": 1474195692252,
  "executionTime": 23
 }
]

[
 "TEST_STARTED",
 "ID#testClusterHealthOnClusterRecoveryWithFailures(org.elasticsearch.cluster.health.ClusterStateHealthTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:12,281][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{y1CSJbMvQDuuVlaqLGCacQ}{local}{local[537]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClusterHealthOnClusterRecoveryWithFailures(org.elasticsearch.cluster.health.ClusterStateHealthTests)",
  "startTimestamp": 1474195692276,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testClusterHealthOnClusterRecovery(org.elasticsearch.cluster.health.ClusterStateHealthTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:12,302][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{8U4cqBRJTWSn2Ber_hPu6A}{local}{local[538]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClusterHealthOnClusterRecovery(org.elasticsearch.cluster.health.ClusterStateHealthTests)",
  "startTimestamp": 1474195692287,
  "executionTime": 19
 }
]

[
 "TEST_STARTED",
 "ID#testClusterHealthOnIndexCreationWithFailedAllocations(org.elasticsearch.cluster.health.ClusterStateHealthTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:12,327][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{rgZ_oBl2TFayKxIALTk6NA}{local}{local[539]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClusterHealthOnIndexCreationWithFailedAllocations(org.elasticsearch.cluster.health.ClusterStateHealthTests)",
  "startTimestamp": 1474195692306,
  "executionTime": 24
 }
]

[
 "TEST_STARTED",
 "ID#testClusterHealthOnClusterRecoveryWithPreviousAllocationIds(org.elasticsearch.cluster.health.ClusterStateHealthTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:12,350][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{dLcvHEaCQHeq8emlY1CMxA}{local}{local[540]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClusterHealthOnClusterRecoveryWithPreviousAllocationIds(org.elasticsearch.cluster.health.ClusterStateHealthTests)",
  "startTimestamp": 1474195692331,
  "executionTime": 21
 }
]

[
 "TEST_STARTED",
 "ID#testClusterHealthOnClusterRecoveryWithPreviousAllocationIdsAndAllocationFailures(org.elasticsearch.cluster.health.ClusterStateHealthTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:12,367][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{in8joVLdRmG8mYKlOOBMaA}{local}{local[541]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClusterHealthOnClusterRecoveryWithPreviousAllocationIdsAndAllocationFailures(org.elasticsearch.cluster.health.ClusterStateHealthTests)",
  "startTimestamp": 1474195692352,
  "executionTime": 16
 }
]

[
 "TEST_STARTED",
 "ID#testClusterHealth(org.elasticsearch.cluster.health.ClusterStateHealthTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:12,374][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{IgIe9DNSSqili-Ai-_2OVQ}{local}{local[542]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:12,375][INFO ][org.elasticsearch.cluster.health] cluster status: YELLOW, expected YELLOW%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClusterHealth(org.elasticsearch.cluster.health.ClusterStateHealthTests)",
  "startTimestamp": 1474195692368,
  "executionTime": 8
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.health.ClusterStateHealthTests",
  "startTimestamp": 1474195692200,
  "executionTime": 178
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.monitor.jvm.JvmStatsTests",
   "displayName": "org.elasticsearch.monitor.jvm.JvmStatsTests",
   "methodName": null,
   "className": "org.elasticsearch.monitor.jvm.JvmStatsTests",
   "children": [
    {
     "id": "ID#testJvmStats(org.elasticsearch.monitor.jvm.JvmStatsTests)",
     "displayName": "testJvmStats(org.elasticsearch.monitor.jvm.JvmStatsTests)",
     "methodName": "testJvmStats",
     "className": "org.elasticsearch.monitor.jvm.JvmStatsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195692384
 }
]

[
 "TEST_STARTED",
 "ID#testJvmStats(org.elasticsearch.monitor.jvm.JvmStatsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testJvmStats(org.elasticsearch.monitor.jvm.JvmStatsTests)",
  "startTimestamp": 1474195692403,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.monitor.jvm.JvmStatsTests",
  "startTimestamp": 1474195692384,
  "executionTime": 24
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.client.transport.TransportClientNodesServiceTests",
   "displayName": "org.elasticsearch.client.transport.TransportClientNodesServiceTests",
   "methodName": null,
   "className": "org.elasticsearch.client.transport.TransportClientNodesServiceTests",
   "children": [
    {
     "id": "ID#testListenerFailures(org.elasticsearch.client.transport.TransportClientNodesServiceTests)",
     "displayName": "testListenerFailures(org.elasticsearch.client.transport.TransportClientNodesServiceTests)",
     "methodName": "testListenerFailures",
     "className": "org.elasticsearch.client.transport.TransportClientNodesServiceTests",
     "children": []
    },
    {
     "id": "ID#testConnectedNodes(org.elasticsearch.client.transport.TransportClientNodesServiceTests)",
     "displayName": "testConnectedNodes(org.elasticsearch.client.transport.TransportClientNodesServiceTests)",
     "methodName": "testConnectedNodes",
     "className": "org.elasticsearch.client.transport.TransportClientNodesServiceTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195692415
 }
]

[
 "TEST_STARTED",
 "ID#testListenerFailures(org.elasticsearch.client.transport.TransportClientNodesServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testListenerFailures(org.elasticsearch.client.transport.TransportClientNodesServiceTests)",
  "startTimestamp": 1474195692440,
  "executionTime": 363
 }
]

[
 "TEST_STARTED",
 "ID#testConnectedNodes(org.elasticsearch.client.transport.TransportClientNodesServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConnectedNodes(org.elasticsearch.client.transport.TransportClientNodesServiceTests)",
  "startTimestamp": 1474195692803,
  "executionTime": 1101
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.client.transport.TransportClientNodesServiceTests",
  "startTimestamp": 1474195692415,
  "executionTime": 1491
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.geo.builders.CircleBuilderTests",
   "displayName": "org.elasticsearch.common.geo.builders.CircleBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.common.geo.builders.CircleBuilderTests",
   "children": [
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.common.geo.builders.CircleBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.common.geo.builders.CircleBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.common.geo.builders.CircleBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.common.geo.builders.CircleBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.common.geo.builders.CircleBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.common.geo.builders.CircleBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.common.geo.builders.CircleBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.common.geo.builders.CircleBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.common.geo.builders.CircleBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195693912
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.common.geo.builders.CircleBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.common.geo.builders.CircleBuilderTests)",
  "startTimestamp": 1474195693942,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.common.geo.builders.CircleBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.common.geo.builders.CircleBuilderTests)",
  "startTimestamp": 1474195693945,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.common.geo.builders.CircleBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.common.geo.builders.CircleBuilderTests)",
  "startTimestamp": 1474195693949,
  "executionTime": 9
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.geo.builders.CircleBuilderTests",
  "startTimestamp": 1474195693912,
  "executionTime": 48
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.pipeline.bucketmetrics.ExtendedStatsBucketTests",
   "displayName": "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.ExtendedStatsBucketTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.ExtendedStatsBucketTests",
   "children": [
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.ExtendedStatsBucketTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.ExtendedStatsBucketTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.ExtendedStatsBucketTests",
     "children": []
    },
    {
     "id": "ID#testSigmaFromInt(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.ExtendedStatsBucketTests)",
     "displayName": "testSigmaFromInt(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.ExtendedStatsBucketTests)",
     "methodName": "testSigmaFromInt",
     "className": "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.ExtendedStatsBucketTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.ExtendedStatsBucketTests)",
     "displayName": "testSerialization(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.ExtendedStatsBucketTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.ExtendedStatsBucketTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.ExtendedStatsBucketTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.ExtendedStatsBucketTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.aggregations.pipeline.bucketmetrics.ExtendedStatsBucketTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195693966
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:48:14,047][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{9LOtXx6rROOrs_qp8lZIpQ}{local}{local[543]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.ExtendedStatsBucketTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:48:14,058][INFO ][org.elasticsearch.search.aggregations.pipeline.bucketmetrics] Content string: {%0A  \"WojciOEBiPq\" : {%0A    \"extended_stats_bucket\" : {%0A      \"buckets_path\" : [%0A        \"CqPKBSBHLEeH\"%0A      ],%0A      \"gap_policy\" : \"skip\",%0A      \"sigma\" : 2.0%0A    }%0A  }%0A}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:48:14,058][INFO ][org.elasticsearch.search.aggregations.pipeline.bucketmetrics] Content string: {%0A  \"WojciOEBiPq\" : {%0A    \"extended_stats_bucket\" : {%0A      \"buckets_path\" : [%0A        \"CqPKBSBHLEeH\"%0A      ],%0A      \"gap_policy\" : \"skip\",%0A      \"sigma\" : 2.0%0A    }%0A  }%0A}%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.ExtendedStatsBucketTests)",
  "startTimestamp": 1474195694056,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSigmaFromInt(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.ExtendedStatsBucketTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSigmaFromInt(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.ExtendedStatsBucketTests)",
  "startTimestamp": 1474195694059,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.ExtendedStatsBucketTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.ExtendedStatsBucketTests)",
  "startTimestamp": 1474195694061,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.ExtendedStatsBucketTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.bucketmetrics.ExtendedStatsBucketTests)",
  "startTimestamp": 1474195694072,
  "executionTime": 10
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.pipeline.bucketmetrics.ExtendedStatsBucketTests",
  "startTimestamp": 1474195693966,
  "executionTime": 123
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests",
   "displayName": "org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests",
   "methodName": null,
   "className": "org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests",
   "children": [
    {
     "id": "ID#testDeletedDocs(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
     "displayName": "testDeletedDocs(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
     "methodName": "testDeletedDocs",
     "className": "org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testMultiValueAllSet(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
     "displayName": "testMultiValueAllSet(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
     "methodName": "testMultiValueAllSet",
     "className": "org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testActualMissingValueReverse(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
     "displayName": "testActualMissingValueReverse(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
     "methodName": "testActualMissingValueReverse",
     "className": "org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testMissingValueForAll(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
     "displayName": "testMissingValueForAll(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
     "methodName": "testMissingValueForAll",
     "className": "org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testSortMultiValuesFields(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
     "displayName": "testSortMultiValuesFields(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
     "methodName": "testSortMultiValuesFields",
     "className": "org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testGlobalOrdinalsGetRemovedOnceIndexReaderCloses(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
     "displayName": "testGlobalOrdinalsGetRemovedOnceIndexReaderCloses(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
     "methodName": "testGlobalOrdinalsGetRemovedOnceIndexReaderCloses",
     "className": "org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testSingleValueWithMissing(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
     "displayName": "testSingleValueWithMissing(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
     "methodName": "testSingleValueWithMissing",
     "className": "org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testSortMissingLast(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
     "displayName": "testSortMissingLast(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
     "methodName": "testSortMissingLast",
     "className": "org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testEmpty(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
     "displayName": "testEmpty(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
     "methodName": "testEmpty",
     "className": "org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testSortMissingFirstReverse(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
     "displayName": "testSortMissingFirstReverse(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
     "methodName": "testSortMissingFirstReverse",
     "className": "org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testMultiValueWithMissing(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
     "displayName": "testMultiValueWithMissing(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
     "methodName": "testMultiValueWithMissing",
     "className": "org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testNestedSortingMin(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
     "displayName": "testNestedSortingMin(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
     "methodName": "testNestedSortingMin",
     "className": "org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testGlobalOrdinals(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
     "displayName": "testGlobalOrdinals(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
     "methodName": "testGlobalOrdinals",
     "className": "org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testSingleValueAllSet(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
     "displayName": "testSingleValueAllSet(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
     "methodName": "testSingleValueAllSet",
     "className": "org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testNestedSortingMax(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
     "displayName": "testNestedSortingMax(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
     "methodName": "testNestedSortingMax",
     "className": "org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testSortMissingLastReverse(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
     "displayName": "testSortMissingLastReverse(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
     "methodName": "testSortMissingLastReverse",
     "className": "org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testSortMissingFirst(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
     "displayName": "testSortMissingFirst(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
     "methodName": "testSortMissingFirst",
     "className": "org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testTermsEnum(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
     "displayName": "testTermsEnum(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
     "methodName": "testTermsEnum",
     "className": "org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests",
     "children": []
    },
    {
     "id": "ID#testActualMissingValue(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
     "displayName": "testActualMissingValue(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
     "methodName": "testActualMissingValue",
     "className": "org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195694096
 }
]

[
 "TEST_STARTED",
 "ID#testDeletedDocs(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:48:14,154][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:48:14,201][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:48:14,201][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:48:14,204][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[7260], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:48:14,207][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:48:14,207][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.test.InternalSettingsPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:48:14,377][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:48:14,377][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:48:14,377][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[93]}, bound_addresses {local[93]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:48:14,381][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{kybQur5SQEKgghfQvSV8XA}{K2nOiHeUQGWIVdbnOy1drQ}{local}{local[93]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:48:14,381][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:48:14,407][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:48:14,446][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:48:14,619][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:48:14,824][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [PagedBytesStringFieldDataTests#testDeletedDocs]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDeletedDocs(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
  "startTimestamp": 1474195694130,
  "executionTime": 723
 }
]

[
 "TEST_STARTED",
 "ID#testMultiValueAllSet(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:48:14,858][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:48:14,908][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:48:14,929][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [PagedBytesStringFieldDataTests#testMultiValueAllSet]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultiValueAllSet(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
  "startTimestamp": 1474195694853,
  "executionTime": 275
 }
]

[
 "TEST_STARTED",
 "ID#testActualMissingValueReverse(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:48:15,135][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:48:15,376][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:48:15,489][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [PagedBytesStringFieldDataTests#testActualMissingValueReverse]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testActualMissingValueReverse(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
  "startTimestamp": 1474195695129,
  "executionTime": 398
 }
]

[
 "TEST_STARTED",
 "ID#testMissingValueForAll(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:48:15,534][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:48:15,705][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:48:15,736][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [PagedBytesStringFieldDataTests#testMissingValueForAll]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMissingValueForAll(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
  "startTimestamp": 1474195695528,
  "executionTime": 304
 }
]

[
 "TEST_STARTED",
 "ID#testSortMultiValuesFields(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:48:15,838][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:48:15,898][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:48:15,927][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [PagedBytesStringFieldDataTests#testSortMultiValuesFields]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSortMultiValuesFields(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
  "startTimestamp": 1474195695832,
  "executionTime": 152
 }
]

[
 "TEST_STARTED",
 "ID#testGlobalOrdinalsGetRemovedOnceIndexReaderCloses(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:48:15,990][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:48:16,061][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:48:16,083][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [PagedBytesStringFieldDataTests#testGlobalOrdinalsGetRemovedOnceIndexReaderCloses]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGlobalOrdinalsGetRemovedOnceIndexReaderCloses(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
  "startTimestamp": 1474195695984,
  "executionTime": 158
 }
]

[
 "TEST_STARTED",
 "ID#testSingleValueWithMissing(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:48:16,153][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:48:16,235][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:48:16,258][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [PagedBytesStringFieldDataTests#testSingleValueWithMissing]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleValueWithMissing(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
  "startTimestamp": 1474195696142,
  "executionTime": 167
 }
]

[
 "TEST_STARTED",
 "ID#testSortMissingLast(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:48:16,316][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:48:16,382][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:48:16,659][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [PagedBytesStringFieldDataTests#testSortMissingLast]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSortMissingLast(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
  "startTimestamp": 1474195696309,
  "executionTime": 383
 }
]

[
 "TEST_STARTED",
 "ID#testEmpty(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:48:16,698][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:48:16,815][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:48:16,834][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [PagedBytesStringFieldDataTests#testEmpty]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmpty(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
  "startTimestamp": 1474195696692,
  "executionTime": 168
 }
]

[
 "TEST_STARTED",
 "ID#testSortMissingFirstReverse(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:48:16,866][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:48:16,951][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:48:17,082][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [PagedBytesStringFieldDataTests#testSortMissingFirstReverse]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSortMissingFirstReverse(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
  "startTimestamp": 1474195696860,
  "executionTime": 281
 }
]

[
 "TEST_STARTED",
 "ID#testMultiValueWithMissing(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:48:17,147][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:48:17,238][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:48:17,253][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [PagedBytesStringFieldDataTests#testMultiValueWithMissing]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultiValueWithMissing(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
  "startTimestamp": 1474195697142,
  "executionTime": 151
 }
]

[
 "TEST_STARTED",
 "ID#testNestedSortingMin(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:48:17,300][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:48:17,393][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:48:17,554][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [PagedBytesStringFieldDataTests#testNestedSortingMin]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNestedSortingMin(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
  "startTimestamp": 1474195697293,
  "executionTime": 302
 }
]

[
 "TEST_STARTED",
 "ID#testGlobalOrdinals(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:48:17,602][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:48:17,683][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:48:17,709][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [PagedBytesStringFieldDataTests#testGlobalOrdinals]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGlobalOrdinals(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
  "startTimestamp": 1474195697595,
  "executionTime": 152
 }
]

[
 "TEST_STARTED",
 "ID#testSingleValueAllSet(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:48:17,754][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:48:17,827][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:48:17,855][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [PagedBytesStringFieldDataTests#testSingleValueAllSet]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleValueAllSet(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
  "startTimestamp": 1474195697747,
  "executionTime": 142
 }
]

[
 "TEST_STARTED",
 "ID#testNestedSortingMax(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:48:17,895][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:48:17,943][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:48:17,973][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [PagedBytesStringFieldDataTests#testNestedSortingMax]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNestedSortingMax(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
  "startTimestamp": 1474195697889,
  "executionTime": 111
 }
]

[
 "TEST_STARTED",
 "ID#testSortMissingLastReverse(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:48:18,006][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:48:18,061][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:48:18,130][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [PagedBytesStringFieldDataTests#testSortMissingLastReverse]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSortMissingLastReverse(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
  "startTimestamp": 1474195698000,
  "executionTime": 404
 }
]

[
 "TEST_STARTED",
 "ID#testSortMissingFirst(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:48:18,411][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:48:18,512][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:48:18,575][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [PagedBytesStringFieldDataTests#testSortMissingFirst]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSortMissingFirst(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
  "startTimestamp": 1474195698404,
  "executionTime": 215
 }
]

[
 "TEST_STARTED",
 "ID#testTermsEnum(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:48:18,625][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:48:18,687][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:48:18,706][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [PagedBytesStringFieldDataTests#testTermsEnum]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTermsEnum(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
  "startTimestamp": 1474195698619,
  "executionTime": 118
 }
]

[
 "TEST_STARTED",
 "ID#testActualMissingValue(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:48:18,743][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:48:18,797][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:48:18,878][INFO ][org.elasticsearch.index.fielddata] [node_s_0] [test] [PagedBytesStringFieldDataTests#testActualMissingValue]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testActualMissingValue(org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests)",
  "startTimestamp": 1474195698738,
  "executionTime": 173
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:48:18,911][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:48:18,912][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:48:18,912][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:48:18,913][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.fielddata.PagedBytesStringFieldDataTests",
  "startTimestamp": 1474195694096,
  "executionTime": 4828
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.RecoverySourceTests",
   "displayName": "org.elasticsearch.cluster.routing.RecoverySourceTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.RecoverySourceTests",
   "children": [
    {
     "id": "ID#testSerialization(org.elasticsearch.cluster.routing.RecoverySourceTests)",
     "displayName": "testSerialization(org.elasticsearch.cluster.routing.RecoverySourceTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.cluster.routing.RecoverySourceTests",
     "children": []
    },
    {
     "id": "ID#testRecoverySourceTypeOrder(org.elasticsearch.cluster.routing.RecoverySourceTests)",
     "displayName": "testRecoverySourceTypeOrder(org.elasticsearch.cluster.routing.RecoverySourceTests)",
     "methodName": "testRecoverySourceTypeOrder",
     "className": "org.elasticsearch.cluster.routing.RecoverySourceTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195698929
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.cluster.routing.RecoverySourceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.cluster.routing.RecoverySourceTests)",
  "startTimestamp": 1474195698946,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRecoverySourceTypeOrder(org.elasticsearch.cluster.routing.RecoverySourceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecoverySourceTypeOrder(org.elasticsearch.cluster.routing.RecoverySourceTests)",
  "startTimestamp": 1474195698948,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.RecoverySourceTests",
  "startTimestamp": 1474195698929,
  "executionTime": 22
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.suggest.SuggestTests",
   "displayName": "org.elasticsearch.search.suggest.SuggestTests",
   "methodName": null,
   "className": "org.elasticsearch.search.suggest.SuggestTests",
   "children": [
    {
     "id": "ID#testSuggestionOrdering(org.elasticsearch.search.suggest.SuggestTests)",
     "displayName": "testSuggestionOrdering(org.elasticsearch.search.suggest.SuggestTests)",
     "methodName": "testSuggestionOrdering",
     "className": "org.elasticsearch.search.suggest.SuggestTests",
     "children": []
    },
    {
     "id": "ID#testFilter(org.elasticsearch.search.suggest.SuggestTests)",
     "displayName": "testFilter(org.elasticsearch.search.suggest.SuggestTests)",
     "methodName": "testFilter",
     "className": "org.elasticsearch.search.suggest.SuggestTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195698958
 }
]

[
 "TEST_STARTED",
 "ID#testSuggestionOrdering(org.elasticsearch.search.suggest.SuggestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSuggestionOrdering(org.elasticsearch.search.suggest.SuggestTests)",
  "startTimestamp": 1474195699008,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testFilter(org.elasticsearch.search.suggest.SuggestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFilter(org.elasticsearch.search.suggest.SuggestTests)",
  "startTimestamp": 1474195699015,
  "executionTime": 6
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.suggest.SuggestTests",
  "startTimestamp": 1474195698958,
  "executionTime": 68
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.apache.lucene.queries.MinDocQueryTests",
   "displayName": "org.apache.lucene.queries.MinDocQueryTests",
   "methodName": null,
   "className": "org.apache.lucene.queries.MinDocQueryTests",
   "children": [
    {
     "id": "ID#testRandom(org.apache.lucene.queries.MinDocQueryTests)",
     "displayName": "testRandom(org.apache.lucene.queries.MinDocQueryTests)",
     "methodName": "testRandom",
     "className": "org.apache.lucene.queries.MinDocQueryTests",
     "children": []
    },
    {
     "id": "ID#testBasics(org.apache.lucene.queries.MinDocQueryTests)",
     "displayName": "testBasics(org.apache.lucene.queries.MinDocQueryTests)",
     "methodName": "testBasics",
     "className": "org.apache.lucene.queries.MinDocQueryTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195699291
 }
]

[
 "TEST_STARTED",
 "ID#testRandom(org.apache.lucene.queries.MinDocQueryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRandom(org.apache.lucene.queries.MinDocQueryTests)",
  "startTimestamp": 1474195699313,
  "executionTime": 26
 }
]

[
 "TEST_STARTED",
 "ID#testBasics(org.apache.lucene.queries.MinDocQueryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBasics(org.apache.lucene.queries.MinDocQueryTests)",
  "startTimestamp": 1474195699339,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.apache.lucene.queries.MinDocQueryTests",
  "startTimestamp": 1474195699291,
  "executionTime": 51
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.apache.lucene.search.postingshighlight.CustomPassageFormatterTests",
   "displayName": "org.apache.lucene.search.postingshighlight.CustomPassageFormatterTests",
   "methodName": null,
   "className": "org.apache.lucene.search.postingshighlight.CustomPassageFormatterTests",
   "children": [
    {
     "id": "ID#testSimpleFormat(org.apache.lucene.search.postingshighlight.CustomPassageFormatterTests)",
     "displayName": "testSimpleFormat(org.apache.lucene.search.postingshighlight.CustomPassageFormatterTests)",
     "methodName": "testSimpleFormat",
     "className": "org.apache.lucene.search.postingshighlight.CustomPassageFormatterTests",
     "children": []
    },
    {
     "id": "ID#testHtmlEncodeFormat(org.apache.lucene.search.postingshighlight.CustomPassageFormatterTests)",
     "displayName": "testHtmlEncodeFormat(org.apache.lucene.search.postingshighlight.CustomPassageFormatterTests)",
     "methodName": "testHtmlEncodeFormat",
     "className": "org.apache.lucene.search.postingshighlight.CustomPassageFormatterTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195699571
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleFormat(org.apache.lucene.search.postingshighlight.CustomPassageFormatterTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleFormat(org.apache.lucene.search.postingshighlight.CustomPassageFormatterTests)",
  "startTimestamp": 1474195699634,
  "executionTime": 46
 }
]

[
 "TEST_STARTED",
 "ID#testHtmlEncodeFormat(org.apache.lucene.search.postingshighlight.CustomPassageFormatterTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHtmlEncodeFormat(org.apache.lucene.search.postingshighlight.CustomPassageFormatterTests)",
  "startTimestamp": 1474195699680,
  "executionTime": 7
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.apache.lucene.search.postingshighlight.CustomPassageFormatterTests",
  "startTimestamp": 1474195699571,
  "executionTime": 121
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.apache.lucene.search.postingshighlight.CustomPostingsHighlighterTests",
   "displayName": "org.apache.lucene.search.postingshighlight.CustomPostingsHighlighterTests",
   "methodName": null,
   "className": "org.apache.lucene.search.postingshighlight.CustomPostingsHighlighterTests",
   "children": [
    {
     "id": "ID#testNoMatchSize(org.apache.lucene.search.postingshighlight.CustomPostingsHighlighterTests)",
     "displayName": "testNoMatchSize(org.apache.lucene.search.postingshighlight.CustomPostingsHighlighterTests)",
     "methodName": "testNoMatchSize",
     "className": "org.apache.lucene.search.postingshighlight.CustomPostingsHighlighterTests",
     "children": []
    },
    {
     "id": "ID#testCustomPostingsHighlighter(org.apache.lucene.search.postingshighlight.CustomPostingsHighlighterTests)",
     "displayName": "testCustomPostingsHighlighter(org.apache.lucene.search.postingshighlight.CustomPostingsHighlighterTests)",
     "methodName": "testCustomPostingsHighlighter",
     "className": "org.apache.lucene.search.postingshighlight.CustomPostingsHighlighterTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195699846
 }
]

[
 "TEST_STARTED",
 "ID#testNoMatchSize(org.apache.lucene.search.postingshighlight.CustomPostingsHighlighterTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoMatchSize(org.apache.lucene.search.postingshighlight.CustomPostingsHighlighterTests)",
  "startTimestamp": 1474195699891,
  "executionTime": 120
 }
]

[
 "TEST_STARTED",
 "ID#testCustomPostingsHighlighter(org.apache.lucene.search.postingshighlight.CustomPostingsHighlighterTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCustomPostingsHighlighter(org.apache.lucene.search.postingshighlight.CustomPostingsHighlighterTests)",
  "startTimestamp": 1474195700011,
  "executionTime": 73
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.apache.lucene.search.postingshighlight.CustomPostingsHighlighterTests",
  "startTimestamp": 1474195699846,
  "executionTime": 246
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.OriginalIndicesTests",
   "displayName": "org.elasticsearch.action.OriginalIndicesTests",
   "methodName": null,
   "className": "org.elasticsearch.action.OriginalIndicesTests",
   "children": [
    {
     "id": "ID#testOriginalIndicesSerialization(org.elasticsearch.action.OriginalIndicesTests)",
     "displayName": "testOriginalIndicesSerialization(org.elasticsearch.action.OriginalIndicesTests)",
     "methodName": "testOriginalIndicesSerialization",
     "className": "org.elasticsearch.action.OriginalIndicesTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195700121
 }
]

[
 "TEST_STARTED",
 "ID#testOriginalIndicesSerialization(org.elasticsearch.action.OriginalIndicesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOriginalIndicesSerialization(org.elasticsearch.action.OriginalIndicesTests)",
  "startTimestamp": 1474195700165,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.OriginalIndicesTests",
  "startTimestamp": 1474195700121,
  "executionTime": 48
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplainRequestTests",
   "displayName": "org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplainRequestTests",
   "methodName": null,
   "className": "org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplainRequestTests",
   "children": [
    {
     "id": "ID#testSerialization(org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplainRequestTests)",
     "displayName": "testSerialization(org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplainRequestTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplainRequestTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195700392
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplainRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplainRequestTests)",
  "startTimestamp": 1474195700447,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplainRequestTests",
  "startTimestamp": 1474195700392,
  "executionTime": 59
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplainTests",
   "displayName": "org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplainTests",
   "methodName": null,
   "className": "org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplainTests",
   "children": [
    {
     "id": "ID#testShardExplain(org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplainTests)",
     "displayName": "testShardExplain(org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplainTests)",
     "methodName": "testShardExplain",
     "className": "org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplainTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195700712
 }
]

[
 "TEST_STARTED",
 "ID#testShardExplain(org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplainTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T02:48:20,809][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T02:48:20,883][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T02:48:20,883][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T02:48:20,889][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[7260], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T02:48:20,891][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T02:48:20,891][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T02:48:21,074][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T02:48:21,074][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T02:48:21,075][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[94]}, bound_addresses {local[94]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T02:48:21,081][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{jZk40oB5QSyzi6Lf9ip08A}{ts89_Ev_SgexqRJImMk8KQ}{local}{local[94]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T02:48:21,082][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T02:48:21,122][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T02:48:21,144][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[1], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T02:48:21,423][INFO ][org.elasticsearch.action.admin.cluster.allocation] [node_s_0] [ClusterAllocationExplainTests#testShardExplain]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testShardExplain(org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplainTests)",
  "startTimestamp": 1474195700797,
  "executionTime": 658
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T02:48:21,456][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T02:48:21,457][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T02:48:21,457][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T02:48:21,459][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.admin.cluster.allocation.ClusterAllocationExplainTests",
  "startTimestamp": 1474195700712,
  "executionTime": 752
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests",
   "displayName": "org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests",
   "methodName": null,
   "className": "org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests",
   "children": [
    {
     "id": "ID#testIndexTemplateWithValidateMapping(org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests)",
     "displayName": "testIndexTemplateWithValidateMapping(org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests)",
     "methodName": "testIndexTemplateWithValidateMapping",
     "className": "org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests",
     "children": []
    },
    {
     "id": "ID#testIndexTemplateWithAliasNameEqualToTemplatePattern(org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests)",
     "displayName": "testIndexTemplateWithAliasNameEqualToTemplatePattern(org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests)",
     "methodName": "testIndexTemplateWithAliasNameEqualToTemplatePattern",
     "className": "org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests",
     "children": []
    },
    {
     "id": "ID#testBrokenMapping(org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests)",
     "displayName": "testBrokenMapping(org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests)",
     "methodName": "testBrokenMapping",
     "className": "org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests",
     "children": []
    },
    {
     "id": "ID#testBlankMapping(org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests)",
     "displayName": "testBlankMapping(org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests)",
     "methodName": "testBlankMapping",
     "className": "org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests",
     "children": []
    },
    {
     "id": "ID#testIndexTemplateWithValidateEmptyMapping(org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests)",
     "displayName": "testIndexTemplateWithValidateEmptyMapping(org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests)",
     "methodName": "testIndexTemplateWithValidateEmptyMapping",
     "className": "org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests",
     "children": []
    },
    {
     "id": "ID#testIndexTemplateInvalidNumberOfShards(org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests)",
     "displayName": "testIndexTemplateInvalidNumberOfShards(org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests)",
     "methodName": "testIndexTemplateInvalidNumberOfShards",
     "className": "org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests",
     "children": []
    },
    {
     "id": "ID#testIndexTemplateValidationAccumulatesValidationErrors(org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests)",
     "displayName": "testIndexTemplateValidationAccumulatesValidationErrors(org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests)",
     "methodName": "testIndexTemplateValidationAccumulatesValidationErrors",
     "className": "org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests",
     "children": []
    },
    {
     "id": "ID#testAliasInvalidFilterInvalidJson(org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests)",
     "displayName": "testAliasInvalidFilterInvalidJson(org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests)",
     "methodName": "testAliasInvalidFilterInvalidJson",
     "className": "org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195701619
 }
]

[
 "TEST_STARTED",
 "ID#testIndexTemplateWithValidateMapping(org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:48:21,683][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:48:21,742][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:48:21,742][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:48:21,746][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[7260], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:48:21,748][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:48:21,748][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:48:21,971][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:48:21,971][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:48:21,971][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[95]}, bound_addresses {local[95]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:48:21,988][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{EaZ1AvsZRqqYuKGupoYsoQ}{yZPuyUrJSIiEGLR9XUU_hg}{local}{local[95]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:48:21,988][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:48:22,005][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:48:22,118][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [ZqR_SM87TReFlK11sf7gmA] The [string] field is deprecated, please use [text] or [keyword] instead on [field2]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:48:22,118][INFO ][org.elasticsearch.action.admin.indices.template.put] [node_s_0] [MetaDataIndexTemplateServiceTests#testIndexTemplateWithValidateMapping]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexTemplateWithValidateMapping(org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests)",
  "startTimestamp": 1474195701664,
  "executionTime": 455
 }
]

[
 "TEST_STARTED",
 "ID#testIndexTemplateWithAliasNameEqualToTemplatePattern(org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:48:22,124][INFO ][org.elasticsearch.action.admin.indices.template.put] [node_s_0] [MetaDataIndexTemplateServiceTests#testIndexTemplateWithAliasNameEqualToTemplatePattern]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexTemplateWithAliasNameEqualToTemplatePattern(org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests)",
  "startTimestamp": 1474195702119,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testBrokenMapping(org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:48:22,131][INFO ][org.elasticsearch.action.admin.indices.template.put] [node_s_0] [MetaDataIndexTemplateServiceTests#testBrokenMapping]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBrokenMapping(org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests)",
  "startTimestamp": 1474195702125,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testBlankMapping(org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:48:22,156][INFO ][org.elasticsearch.action.admin.indices.template.put] [node_s_0] [MetaDataIndexTemplateServiceTests#testBlankMapping]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBlankMapping(org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests)",
  "startTimestamp": 1474195702132,
  "executionTime": 25
 }
]

[
 "TEST_STARTED",
 "ID#testIndexTemplateWithValidateEmptyMapping(org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:48:22,169][INFO ][org.elasticsearch.action.admin.indices.template.put] [node_s_0] [MetaDataIndexTemplateServiceTests#testIndexTemplateWithValidateEmptyMapping]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexTemplateWithValidateEmptyMapping(org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests)",
  "startTimestamp": 1474195702157,
  "executionTime": 13
 }
]

[
 "TEST_STARTED",
 "ID#testIndexTemplateInvalidNumberOfShards(org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:48:22,259][INFO ][org.elasticsearch.action.admin.indices.template.put] [node_s_0] [MetaDataIndexTemplateServiceTests#testIndexTemplateInvalidNumberOfShards]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexTemplateInvalidNumberOfShards(org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests)",
  "startTimestamp": 1474195702170,
  "executionTime": 90
 }
]

[
 "TEST_STARTED",
 "ID#testIndexTemplateValidationAccumulatesValidationErrors(org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:48:22,264][INFO ][org.elasticsearch.action.admin.indices.template.put] [node_s_0] [MetaDataIndexTemplateServiceTests#testIndexTemplateValidationAccumulatesValidationErrors]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexTemplateValidationAccumulatesValidationErrors(org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests)",
  "startTimestamp": 1474195702260,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testAliasInvalidFilterInvalidJson(org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:48:22,272][INFO ][org.elasticsearch.action.admin.indices.template.put] [node_s_0] [MetaDataIndexTemplateServiceTests#testAliasInvalidFilterInvalidJson]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAliasInvalidFilterInvalidJson(org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests)",
  "startTimestamp": 1474195702265,
  "executionTime": 8
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:48:22,273][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:48:22,278][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:48:22,290][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:48:22,291][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.admin.indices.template.put.MetaDataIndexTemplateServiceTests",
  "startTimestamp": 1474195701619,
  "executionTime": 681
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.bulk.BackoffPolicyTests",
   "displayName": "org.elasticsearch.action.bulk.BackoffPolicyTests",
   "methodName": null,
   "className": "org.elasticsearch.action.bulk.BackoffPolicyTests",
   "children": [
    {
     "id": "ID#testWrapBackoffPolicy(org.elasticsearch.action.bulk.BackoffPolicyTests)",
     "displayName": "testWrapBackoffPolicy(org.elasticsearch.action.bulk.BackoffPolicyTests)",
     "methodName": "testWrapBackoffPolicy",
     "className": "org.elasticsearch.action.bulk.BackoffPolicyTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195702387
 }
]

[
 "TEST_STARTED",
 "ID#testWrapBackoffPolicy(org.elasticsearch.action.bulk.BackoffPolicyTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWrapBackoffPolicy(org.elasticsearch.action.bulk.BackoffPolicyTests)",
  "startTimestamp": 1474195702409,
  "executionTime": 10
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.bulk.BackoffPolicyTests",
  "startTimestamp": 1474195702387,
  "executionTime": 43
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.bulk.BulkItemResponseTests",
   "displayName": "org.elasticsearch.action.bulk.BulkItemResponseTests",
   "methodName": null,
   "className": "org.elasticsearch.action.bulk.BulkItemResponseTests",
   "children": [
    {
     "id": "ID#testFailureToString(org.elasticsearch.action.bulk.BulkItemResponseTests)",
     "displayName": "testFailureToString(org.elasticsearch.action.bulk.BulkItemResponseTests)",
     "methodName": "testFailureToString",
     "className": "org.elasticsearch.action.bulk.BulkItemResponseTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195702673
 }
]

[
 "TEST_STARTED",
 "ID#testFailureToString(org.elasticsearch.action.bulk.BulkItemResponseTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailureToString(org.elasticsearch.action.bulk.BulkItemResponseTests)",
  "startTimestamp": 1474195702761,
  "executionTime": 7
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.bulk.BulkItemResponseTests",
  "startTimestamp": 1474195702673,
  "executionTime": 97
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.bulk.TransportBulkActionTookTests",
   "displayName": "org.elasticsearch.action.bulk.TransportBulkActionTookTests",
   "methodName": null,
   "className": "org.elasticsearch.action.bulk.TransportBulkActionTookTests",
   "children": [
    {
     "id": "ID#testTookWithRealClock(org.elasticsearch.action.bulk.TransportBulkActionTookTests)",
     "displayName": "testTookWithRealClock(org.elasticsearch.action.bulk.TransportBulkActionTookTests)",
     "methodName": "testTookWithRealClock",
     "className": "org.elasticsearch.action.bulk.TransportBulkActionTookTests",
     "children": []
    },
    {
     "id": "ID#testTookWithControlledClock(org.elasticsearch.action.bulk.TransportBulkActionTookTests)",
     "displayName": "testTookWithControlledClock(org.elasticsearch.action.bulk.TransportBulkActionTookTests)",
     "methodName": "testTookWithControlledClock",
     "className": "org.elasticsearch.action.bulk.TransportBulkActionTookTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195702953
 }
]

[
 "TEST_STARTED",
 "ID#testTookWithRealClock(org.elasticsearch.action.bulk.TransportBulkActionTookTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:48:22,985][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{xJuSDSANSweE1YZQ6uSZIQ}{local}{local[544]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTookWithRealClock(org.elasticsearch.action.bulk.TransportBulkActionTookTests)",
  "startTimestamp": 1474195702970,
  "executionTime": 27
 }
]

[
 "TEST_STARTED",
 "ID#testTookWithControlledClock(org.elasticsearch.action.bulk.TransportBulkActionTookTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:48:23,001][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{H90PrpYxTLm63Rs7FAzT1g}{local}{local[545]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTookWithControlledClock(org.elasticsearch.action.bulk.TransportBulkActionTookTests)",
  "startTimestamp": 1474195702997,
  "executionTime": 7
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.bulk.TransportBulkActionTookTests",
  "startTimestamp": 1474195702953,
  "executionTime": 54
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.fieldstats.FieldStatsRequestTests",
   "displayName": "org.elasticsearch.action.fieldstats.FieldStatsRequestTests",
   "methodName": null,
   "className": "org.elasticsearch.action.fieldstats.FieldStatsRequestTests",
   "children": [
    {
     "id": "ID#testFieldsParsing(org.elasticsearch.action.fieldstats.FieldStatsRequestTests)",
     "displayName": "testFieldsParsing(org.elasticsearch.action.fieldstats.FieldStatsRequestTests)",
     "methodName": "testFieldsParsing",
     "className": "org.elasticsearch.action.fieldstats.FieldStatsRequestTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195703214
 }
]

[
 "TEST_STARTED",
 "ID#testFieldsParsing(org.elasticsearch.action.fieldstats.FieldStatsRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFieldsParsing(org.elasticsearch.action.fieldstats.FieldStatsRequestTests)",
  "startTimestamp": 1474195703236,
  "executionTime": 71
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.fieldstats.FieldStatsRequestTests",
  "startTimestamp": 1474195703214,
  "executionTime": 96
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.get.MultiGetShardRequestTests",
   "displayName": "org.elasticsearch.action.get.MultiGetShardRequestTests",
   "methodName": null,
   "className": "org.elasticsearch.action.get.MultiGetShardRequestTests",
   "children": [
    {
     "id": "ID#testSerialization(org.elasticsearch.action.get.MultiGetShardRequestTests)",
     "displayName": "testSerialization(org.elasticsearch.action.get.MultiGetShardRequestTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.action.get.MultiGetShardRequestTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195703505
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.action.get.MultiGetShardRequestTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.action.get.MultiGetShardRequestTests)",
  "startTimestamp": 1474195703520,
  "executionTime": 29
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.get.MultiGetShardRequestTests",
  "startTimestamp": 1474195703505,
  "executionTime": 46
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.support.IndicesOptionsTests",
   "displayName": "org.elasticsearch.action.support.IndicesOptionsTests",
   "methodName": null,
   "className": "org.elasticsearch.action.support.IndicesOptionsTests",
   "children": [
    {
     "id": "ID#testSerialization(org.elasticsearch.action.support.IndicesOptionsTests)",
     "displayName": "testSerialization(org.elasticsearch.action.support.IndicesOptionsTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.action.support.IndicesOptionsTests",
     "children": []
    },
    {
     "id": "ID#testFromOptions(org.elasticsearch.action.support.IndicesOptionsTests)",
     "displayName": "testFromOptions(org.elasticsearch.action.support.IndicesOptionsTests)",
     "methodName": "testFromOptions",
     "className": "org.elasticsearch.action.support.IndicesOptionsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195703772
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.action.support.IndicesOptionsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.action.support.IndicesOptionsTests)",
  "startTimestamp": 1474195703797,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromOptions(org.elasticsearch.action.support.IndicesOptionsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromOptions(org.elasticsearch.action.support.IndicesOptionsTests)",
  "startTimestamp": 1474195703799,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.support.IndicesOptionsTests",
  "startTimestamp": 1474195703772,
  "executionTime": 31
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.support.TransportActionFilterChainTests",
   "displayName": "org.elasticsearch.action.support.TransportActionFilterChainTests",
   "methodName": null,
   "className": "org.elasticsearch.action.support.TransportActionFilterChainTests",
   "children": [
    {
     "id": "ID#testActionFiltersResponse(org.elasticsearch.action.support.TransportActionFilterChainTests)",
     "displayName": "testActionFiltersResponse(org.elasticsearch.action.support.TransportActionFilterChainTests)",
     "methodName": "testActionFiltersResponse",
     "className": "org.elasticsearch.action.support.TransportActionFilterChainTests",
     "children": []
    },
    {
     "id": "ID#testTooManyContinueProcessingResponse(org.elasticsearch.action.support.TransportActionFilterChainTests)",
     "displayName": "testTooManyContinueProcessingResponse(org.elasticsearch.action.support.TransportActionFilterChainTests)",
     "methodName": "testTooManyContinueProcessingResponse",
     "className": "org.elasticsearch.action.support.TransportActionFilterChainTests",
     "children": []
    },
    {
     "id": "ID#testTooManyContinueProcessingRequest(org.elasticsearch.action.support.TransportActionFilterChainTests)",
     "displayName": "testTooManyContinueProcessingRequest(org.elasticsearch.action.support.TransportActionFilterChainTests)",
     "methodName": "testTooManyContinueProcessingRequest",
     "className": "org.elasticsearch.action.support.TransportActionFilterChainTests",
     "children": []
    },
    {
     "id": "ID#testActionFiltersRequest(org.elasticsearch.action.support.TransportActionFilterChainTests)",
     "displayName": "testActionFiltersRequest(org.elasticsearch.action.support.TransportActionFilterChainTests)",
     "methodName": "testActionFiltersRequest",
     "className": "org.elasticsearch.action.support.TransportActionFilterChainTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195704050
 }
]

[
 "TEST_STARTED",
 "ID#testActionFiltersResponse(org.elasticsearch.action.support.TransportActionFilterChainTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testActionFiltersResponse(org.elasticsearch.action.support.TransportActionFilterChainTests)",
  "startTimestamp": 1474195704064,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testTooManyContinueProcessingResponse(org.elasticsearch.action.support.TransportActionFilterChainTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTooManyContinueProcessingResponse(org.elasticsearch.action.support.TransportActionFilterChainTests)",
  "startTimestamp": 1474195704074,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testTooManyContinueProcessingRequest(org.elasticsearch.action.support.TransportActionFilterChainTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTooManyContinueProcessingRequest(org.elasticsearch.action.support.TransportActionFilterChainTests)",
  "startTimestamp": 1474195704078,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testActionFiltersRequest(org.elasticsearch.action.support.TransportActionFilterChainTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testActionFiltersRequest(org.elasticsearch.action.support.TransportActionFilterChainTests)",
  "startTimestamp": 1474195704082,
  "executionTime": 5
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.support.TransportActionFilterChainTests",
  "startTimestamp": 1474195704050,
  "executionTime": 39
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.support.master.TransportMasterNodeActionTests",
   "displayName": "org.elasticsearch.action.support.master.TransportMasterNodeActionTests",
   "methodName": null,
   "className": "org.elasticsearch.action.support.master.TransportMasterNodeActionTests",
   "children": [
    {
     "id": "ID#testMasterNotAvailable(org.elasticsearch.action.support.master.TransportMasterNodeActionTests)",
     "displayName": "testMasterNotAvailable(org.elasticsearch.action.support.master.TransportMasterNodeActionTests)",
     "methodName": "testMasterNotAvailable",
     "className": "org.elasticsearch.action.support.master.TransportMasterNodeActionTests",
     "children": []
    },
    {
     "id": "ID#testMasterBecomesAvailable(org.elasticsearch.action.support.master.TransportMasterNodeActionTests)",
     "displayName": "testMasterBecomesAvailable(org.elasticsearch.action.support.master.TransportMasterNodeActionTests)",
     "methodName": "testMasterBecomesAvailable",
     "className": "org.elasticsearch.action.support.master.TransportMasterNodeActionTests",
     "children": []
    },
    {
     "id": "ID#testForceLocalOperation(org.elasticsearch.action.support.master.TransportMasterNodeActionTests)",
     "displayName": "testForceLocalOperation(org.elasticsearch.action.support.master.TransportMasterNodeActionTests)",
     "methodName": "testForceLocalOperation",
     "className": "org.elasticsearch.action.support.master.TransportMasterNodeActionTests",
     "children": []
    },
    {
     "id": "ID#testDelegateToMaster(org.elasticsearch.action.support.master.TransportMasterNodeActionTests)",
     "displayName": "testDelegateToMaster(org.elasticsearch.action.support.master.TransportMasterNodeActionTests)",
     "methodName": "testDelegateToMaster",
     "className": "org.elasticsearch.action.support.master.TransportMasterNodeActionTests",
     "children": []
    },
    {
     "id": "ID#testMasterFailoverAfterStepDown(org.elasticsearch.action.support.master.TransportMasterNodeActionTests)",
     "displayName": "testMasterFailoverAfterStepDown(org.elasticsearch.action.support.master.TransportMasterNodeActionTests)",
     "methodName": "testMasterFailoverAfterStepDown",
     "className": "org.elasticsearch.action.support.master.TransportMasterNodeActionTests",
     "children": []
    },
    {
     "id": "ID#testLocalOperationWithBlocks(org.elasticsearch.action.support.master.TransportMasterNodeActionTests)",
     "displayName": "testLocalOperationWithBlocks(org.elasticsearch.action.support.master.TransportMasterNodeActionTests)",
     "methodName": "testLocalOperationWithBlocks",
     "className": "org.elasticsearch.action.support.master.TransportMasterNodeActionTests",
     "children": []
    },
    {
     "id": "ID#testLocalOperationWithoutBlocks(org.elasticsearch.action.support.master.TransportMasterNodeActionTests)",
     "displayName": "testLocalOperationWithoutBlocks(org.elasticsearch.action.support.master.TransportMasterNodeActionTests)",
     "methodName": "testLocalOperationWithoutBlocks",
     "className": "org.elasticsearch.action.support.master.TransportMasterNodeActionTests",
     "children": []
    },
    {
     "id": "ID#testDelegateToFailingMaster(org.elasticsearch.action.support.master.TransportMasterNodeActionTests)",
     "displayName": "testDelegateToFailingMaster(org.elasticsearch.action.support.master.TransportMasterNodeActionTests)",
     "methodName": "testDelegateToFailingMaster",
     "className": "org.elasticsearch.action.support.master.TransportMasterNodeActionTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195704345
 }
]

[
 "TEST_STARTED",
 "ID#testMasterNotAvailable(org.elasticsearch.action.support.master.TransportMasterNodeActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:24,381][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{4URVk-xZQjyB4YWJQCPHrQ}{local}{local[546]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:24,384][INFO ][org.elasticsearch.cluster.service] [node_s_0] removed {{node}{4URVk-xZQjyB4YWJQCPHrQ}{local}{local[546]},}, added {{remote_node}{TVvmTGr3RyCBVlThNV7ipQ}{local}{local[548]},}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMasterNotAvailable(org.elasticsearch.action.support.master.TransportMasterNodeActionTests)",
  "startTimestamp": 1474195704372,
  "executionTime": 22
 }
]

[
 "TEST_STARTED",
 "ID#testMasterBecomesAvailable(org.elasticsearch.action.support.master.TransportMasterNodeActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:24,402][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{A9why7YdRQCan6Upakjhmg}{local}{local[549]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:24,403][INFO ][org.elasticsearch.cluster.service] [node_s_0] removed {{node}{A9why7YdRQCan6Upakjhmg}{local}{local[549]},}, added {{remote_node}{tBud-0vFRoWWQDNmOFRqVA}{local}{local[551]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:24,404][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {local_node}{7n4wPLNlSG2QhHCc83pRYg}{local}{local[550]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMasterBecomesAvailable(org.elasticsearch.action.support.master.TransportMasterNodeActionTests)",
  "startTimestamp": 1474195704394,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testForceLocalOperation(org.elasticsearch.action.support.master.TransportMasterNodeActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:24,410][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{rHA25NwcRiSIxqjRG2hJ7Q}{local}{local[552]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:24,411][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {local_node}{qLLcdLppR9eBcZ9i7vV48w}{local}{local[553]}, previous {node}{rHA25NwcRiSIxqjRG2hJ7Q}{local}{local[552]}}, removed {{node}{rHA25NwcRiSIxqjRG2hJ7Q}{local}{local[552]},}, added {{remote_node}{1MtsWa36QpmBaTTsHU46GQ}{local}{local[554]},}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testForceLocalOperation(org.elasticsearch.action.support.master.TransportMasterNodeActionTests)",
  "startTimestamp": 1474195704406,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testDelegateToMaster(org.elasticsearch.action.support.master.TransportMasterNodeActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:24,417][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{PjvTRR_FQVqQtFi_9L0Zeg}{local}{local[555]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:24,418][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {remote_node}{F5GCQ0pjS8eI3FxV6ssXsQ}{local}{local[557]}, previous {node}{PjvTRR_FQVqQtFi_9L0Zeg}{local}{local[555]}}, removed {{node}{PjvTRR_FQVqQtFi_9L0Zeg}{local}{local[555]},}, added {{remote_node}{F5GCQ0pjS8eI3FxV6ssXsQ}{local}{local[557]},}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDelegateToMaster(org.elasticsearch.action.support.master.TransportMasterNodeActionTests)",
  "startTimestamp": 1474195704413,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testMasterFailoverAfterStepDown(org.elasticsearch.action.support.master.TransportMasterNodeActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:24,426][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{28U4sMOGT4OdOxkJNt6vDw}{local}{local[558]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:24,427][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {local_node}{3G-njzUlTN-Y6cNmcsyutg}{local}{local[559]}, previous {node}{28U4sMOGT4OdOxkJNt6vDw}{local}{local[558]}}, removed {{node}{28U4sMOGT4OdOxkJNt6vDw}{local}{local[558]},}, added {{remote_node}{-MokvmulQiqT2jn1bEnEhg}{local}{local[560]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:24,429][INFO ][org.elasticsearch.cluster.service] [node_s_0] detected_master {remote_node}{-MokvmulQiqT2jn1bEnEhg}{local}{local[560]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMasterFailoverAfterStepDown(org.elasticsearch.action.support.master.TransportMasterNodeActionTests)",
  "startTimestamp": 1474195704421,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testLocalOperationWithBlocks(org.elasticsearch.action.support.master.TransportMasterNodeActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:24,435][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{Tt6YjaAPSiGr5FWRdGEo1A}{local}{local[561]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:24,436][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {local_node}{w7wwCb-UTVif7sul7ixiIg}{local}{local[562]}, previous {node}{Tt6YjaAPSiGr5FWRdGEo1A}{local}{local[561]}}, removed {{node}{Tt6YjaAPSiGr5FWRdGEo1A}{local}{local[561]},}, added {{remote_node}{vXg5Lm3rSWaQD5eOitA2jg}{local}{local[563]},}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLocalOperationWithBlocks(org.elasticsearch.action.support.master.TransportMasterNodeActionTests)",
  "startTimestamp": 1474195704430,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testLocalOperationWithoutBlocks(org.elasticsearch.action.support.master.TransportMasterNodeActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:24,442][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{e1i0ZFUWThGv9IkjVpBSpw}{local}{local[564]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:24,443][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {local_node}{4ohF0Le3S5eDDR0e6GLKFQ}{local}{local[565]}, previous {node}{e1i0ZFUWThGv9IkjVpBSpw}{local}{local[564]}}, removed {{node}{e1i0ZFUWThGv9IkjVpBSpw}{local}{local[564]},}, added {{remote_node}{tnnuQGtYSv-yk4qWM-y8RA}{local}{local[566]},}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLocalOperationWithoutBlocks(org.elasticsearch.action.support.master.TransportMasterNodeActionTests)",
  "startTimestamp": 1474195704438,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testDelegateToFailingMaster(org.elasticsearch.action.support.master.TransportMasterNodeActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:24,449][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{xTsSuG1YQOaMI6fq-GY29A}{local}{local[567]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:24,450][INFO ][org.elasticsearch.cluster.service] [node_s_0] master {new {remote_node}{Afi1oiMfQPKeeeYP3DaAlw}{local}{local[569]}, previous {node}{xTsSuG1YQOaMI6fq-GY29A}{local}{local[567]}}, removed {{node}{xTsSuG1YQOaMI6fq-GY29A}{local}{local[567]},}, added {{remote_node}{Afi1oiMfQPKeeeYP3DaAlw}{local}{local[569]},}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:24,451][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {local_node}{hZHJ3SwJR4K8TQsbipyFKQ}{local}{local[568]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDelegateToFailingMaster(org.elasticsearch.action.support.master.TransportMasterNodeActionTests)",
  "startTimestamp": 1474195704445,
  "executionTime": 7
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.support.master.TransportMasterNodeActionTests",
  "startTimestamp": 1474195704345,
  "executionTime": 109
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.support.replication.TransportWriteActionTests",
   "displayName": "org.elasticsearch.action.support.replication.TransportWriteActionTests",
   "methodName": null,
   "className": "org.elasticsearch.action.support.replication.TransportWriteActionTests",
   "children": [
    {
     "id": "ID#testReplicaWaitForRefresh(org.elasticsearch.action.support.replication.TransportWriteActionTests)",
     "displayName": "testReplicaWaitForRefresh(org.elasticsearch.action.support.replication.TransportWriteActionTests)",
     "methodName": "testReplicaWaitForRefresh",
     "className": "org.elasticsearch.action.support.replication.TransportWriteActionTests",
     "children": []
    },
    {
     "id": "ID#testPrimaryWaitForRefresh(org.elasticsearch.action.support.replication.TransportWriteActionTests)",
     "displayName": "testPrimaryWaitForRefresh(org.elasticsearch.action.support.replication.TransportWriteActionTests)",
     "methodName": "testPrimaryWaitForRefresh",
     "className": "org.elasticsearch.action.support.replication.TransportWriteActionTests",
     "children": []
    },
    {
     "id": "ID#testReplicaImmediateRefresh(org.elasticsearch.action.support.replication.TransportWriteActionTests)",
     "displayName": "testReplicaImmediateRefresh(org.elasticsearch.action.support.replication.TransportWriteActionTests)",
     "methodName": "testReplicaImmediateRefresh",
     "className": "org.elasticsearch.action.support.replication.TransportWriteActionTests",
     "children": []
    },
    {
     "id": "ID#testPrimaryImmediateRefresh(org.elasticsearch.action.support.replication.TransportWriteActionTests)",
     "displayName": "testPrimaryImmediateRefresh(org.elasticsearch.action.support.replication.TransportWriteActionTests)",
     "methodName": "testPrimaryImmediateRefresh",
     "className": "org.elasticsearch.action.support.replication.TransportWriteActionTests",
     "children": []
    },
    {
     "id": "ID#testPrimaryNoRefreshCall(org.elasticsearch.action.support.replication.TransportWriteActionTests)",
     "displayName": "testPrimaryNoRefreshCall(org.elasticsearch.action.support.replication.TransportWriteActionTests)",
     "methodName": "testPrimaryNoRefreshCall",
     "className": "org.elasticsearch.action.support.replication.TransportWriteActionTests",
     "children": []
    },
    {
     "id": "ID#testReplicaNoRefreshCall(org.elasticsearch.action.support.replication.TransportWriteActionTests)",
     "displayName": "testReplicaNoRefreshCall(org.elasticsearch.action.support.replication.TransportWriteActionTests)",
     "methodName": "testReplicaNoRefreshCall",
     "className": "org.elasticsearch.action.support.replication.TransportWriteActionTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195704633
 }
]

[
 "TEST_STARTED",
 "ID#testReplicaWaitForRefresh(org.elasticsearch.action.support.replication.TransportWriteActionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReplicaWaitForRefresh(org.elasticsearch.action.support.replication.TransportWriteActionTests)",
  "startTimestamp": 1474195704687,
  "executionTime": 34
 }
]

[
 "TEST_STARTED",
 "ID#testPrimaryWaitForRefresh(org.elasticsearch.action.support.replication.TransportWriteActionTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:48:24,726][WARN ][org.elasticsearch.action.support.replication] block_until_refresh request ran out of slots and forced a refresh: [[test][1]]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPrimaryWaitForRefresh(org.elasticsearch.action.support.replication.TransportWriteActionTests)",
  "startTimestamp": 1474195704722,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testReplicaImmediateRefresh(org.elasticsearch.action.support.replication.TransportWriteActionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReplicaImmediateRefresh(org.elasticsearch.action.support.replication.TransportWriteActionTests)",
  "startTimestamp": 1474195704726,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testPrimaryImmediateRefresh(org.elasticsearch.action.support.replication.TransportWriteActionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPrimaryImmediateRefresh(org.elasticsearch.action.support.replication.TransportWriteActionTests)",
  "startTimestamp": 1474195704731,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testPrimaryNoRefreshCall(org.elasticsearch.action.support.replication.TransportWriteActionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPrimaryNoRefreshCall(org.elasticsearch.action.support.replication.TransportWriteActionTests)",
  "startTimestamp": 1474195704735,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testReplicaNoRefreshCall(org.elasticsearch.action.support.replication.TransportWriteActionTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReplicaNoRefreshCall(org.elasticsearch.action.support.replication.TransportWriteActionTests)",
  "startTimestamp": 1474195704738,
  "executionTime": 4
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.support.replication.TransportWriteActionTests",
  "startTimestamp": 1474195704633,
  "executionTime": 113
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.termvectors.TermVectorsUnitTests",
   "displayName": "org.elasticsearch.action.termvectors.TermVectorsUnitTests",
   "methodName": null,
   "className": "org.elasticsearch.action.termvectors.TermVectorsUnitTests",
   "children": [
    {
     "id": "ID#testTermVectorStringGenerationWithoutPositions(org.elasticsearch.action.termvectors.TermVectorsUnitTests)",
     "displayName": "testTermVectorStringGenerationWithoutPositions(org.elasticsearch.action.termvectors.TermVectorsUnitTests)",
     "methodName": "testTermVectorStringGenerationWithoutPositions",
     "className": "org.elasticsearch.action.termvectors.TermVectorsUnitTests",
     "children": []
    },
    {
     "id": "ID#testStreamRequest(org.elasticsearch.action.termvectors.TermVectorsUnitTests)",
     "displayName": "testStreamRequest(org.elasticsearch.action.termvectors.TermVectorsUnitTests)",
     "methodName": "testStreamRequest",
     "className": "org.elasticsearch.action.termvectors.TermVectorsUnitTests",
     "children": []
    },
    {
     "id": "ID#testMultiParserFilter(org.elasticsearch.action.termvectors.TermVectorsUnitTests)",
     "displayName": "testMultiParserFilter(org.elasticsearch.action.termvectors.TermVectorsUnitTests)",
     "methodName": "testMultiParserFilter",
     "className": "org.elasticsearch.action.termvectors.TermVectorsUnitTests",
     "children": []
    },
    {
     "id": "ID#testMultiParser(org.elasticsearch.action.termvectors.TermVectorsUnitTests)",
     "displayName": "testMultiParser(org.elasticsearch.action.termvectors.TermVectorsUnitTests)",
     "methodName": "testMultiParser",
     "className": "org.elasticsearch.action.termvectors.TermVectorsUnitTests",
     "children": []
    },
    {
     "id": "ID#testStreamResponse(org.elasticsearch.action.termvectors.TermVectorsUnitTests)",
     "displayName": "testStreamResponse(org.elasticsearch.action.termvectors.TermVectorsUnitTests)",
     "methodName": "testStreamResponse",
     "className": "org.elasticsearch.action.termvectors.TermVectorsUnitTests",
     "children": []
    },
    {
     "id": "ID#testRequestParsingThrowsException(org.elasticsearch.action.termvectors.TermVectorsUnitTests)",
     "displayName": "testRequestParsingThrowsException(org.elasticsearch.action.termvectors.TermVectorsUnitTests)",
     "methodName": "testRequestParsingThrowsException",
     "className": "org.elasticsearch.action.termvectors.TermVectorsUnitTests",
     "children": []
    },
    {
     "id": "ID#testRestRequestParsing(org.elasticsearch.action.termvectors.TermVectorsUnitTests)",
     "displayName": "testRestRequestParsing(org.elasticsearch.action.termvectors.TermVectorsUnitTests)",
     "methodName": "testRestRequestParsing",
     "className": "org.elasticsearch.action.termvectors.TermVectorsUnitTests",
     "children": []
    },
    {
     "id": "ID#testFieldTypeToTermVectorString(org.elasticsearch.action.termvectors.TermVectorsUnitTests)",
     "displayName": "testFieldTypeToTermVectorString(org.elasticsearch.action.termvectors.TermVectorsUnitTests)",
     "methodName": "testFieldTypeToTermVectorString",
     "className": "org.elasticsearch.action.termvectors.TermVectorsUnitTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195704922
 }
]

[
 "TEST_STARTED",
 "ID#testTermVectorStringGenerationWithoutPositions(org.elasticsearch.action.termvectors.TermVectorsUnitTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTermVectorStringGenerationWithoutPositions(org.elasticsearch.action.termvectors.TermVectorsUnitTests)",
  "startTimestamp": 1474195704955,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testStreamRequest(org.elasticsearch.action.termvectors.TermVectorsUnitTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStreamRequest(org.elasticsearch.action.termvectors.TermVectorsUnitTests)",
  "startTimestamp": 1474195704958,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testMultiParserFilter(org.elasticsearch.action.termvectors.TermVectorsUnitTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultiParserFilter(org.elasticsearch.action.termvectors.TermVectorsUnitTests)",
  "startTimestamp": 1474195704962,
  "executionTime": 36
 }
]

[
 "TEST_STARTED",
 "ID#testMultiParser(org.elasticsearch.action.termvectors.TermVectorsUnitTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultiParser(org.elasticsearch.action.termvectors.TermVectorsUnitTests)",
  "startTimestamp": 1474195704998,
  "executionTime": 30
 }
]

[
 "TEST_STARTED",
 "ID#testStreamResponse(org.elasticsearch.action.termvectors.TermVectorsUnitTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStreamResponse(org.elasticsearch.action.termvectors.TermVectorsUnitTests)",
  "startTimestamp": 1474195705028,
  "executionTime": 53
 }
]

[
 "TEST_STARTED",
 "ID#testRequestParsingThrowsException(org.elasticsearch.action.termvectors.TermVectorsUnitTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRequestParsingThrowsException(org.elasticsearch.action.termvectors.TermVectorsUnitTests)",
  "startTimestamp": 1474195705081,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRestRequestParsing(org.elasticsearch.action.termvectors.TermVectorsUnitTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRestRequestParsing(org.elasticsearch.action.termvectors.TermVectorsUnitTests)",
  "startTimestamp": 1474195705083,
  "executionTime": 25
 }
]

[
 "TEST_STARTED",
 "ID#testFieldTypeToTermVectorString(org.elasticsearch.action.termvectors.TermVectorsUnitTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFieldTypeToTermVectorString(org.elasticsearch.action.termvectors.TermVectorsUnitTests)",
  "startTimestamp": 1474195705109,
  "executionTime": 1
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.termvectors.TermVectorsUnitTests",
  "startTimestamp": 1474195704922,
  "executionTime": 190
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.bootstrap.ElasticsearchCliTests",
   "displayName": "org.elasticsearch.bootstrap.ElasticsearchCliTests",
   "methodName": null,
   "className": "org.elasticsearch.bootstrap.ElasticsearchCliTests",
   "children": [
    {
     "id": "ID#testElasticsearchSettings(org.elasticsearch.bootstrap.ElasticsearchCliTests)",
     "displayName": "testElasticsearchSettings(org.elasticsearch.bootstrap.ElasticsearchCliTests)",
     "methodName": "testElasticsearchSettings",
     "className": "org.elasticsearch.bootstrap.ElasticsearchCliTests",
     "children": []
    },
    {
     "id": "ID#testThatParsingDaemonizeWorks(org.elasticsearch.bootstrap.ElasticsearchCliTests)",
     "displayName": "testThatParsingDaemonizeWorks(org.elasticsearch.bootstrap.ElasticsearchCliTests)",
     "methodName": "testThatParsingDaemonizeWorks",
     "className": "org.elasticsearch.bootstrap.ElasticsearchCliTests",
     "children": []
    },
    {
     "id": "ID#testElasticsearchSettingCanNotBeEmpty(org.elasticsearch.bootstrap.ElasticsearchCliTests)",
     "displayName": "testElasticsearchSettingCanNotBeEmpty(org.elasticsearch.bootstrap.ElasticsearchCliTests)",
     "methodName": "testElasticsearchSettingCanNotBeEmpty",
     "className": "org.elasticsearch.bootstrap.ElasticsearchCliTests",
     "children": []
    },
    {
     "id": "ID#testUnknownOption(org.elasticsearch.bootstrap.ElasticsearchCliTests)",
     "displayName": "testUnknownOption(org.elasticsearch.bootstrap.ElasticsearchCliTests)",
     "methodName": "testUnknownOption",
     "className": "org.elasticsearch.bootstrap.ElasticsearchCliTests",
     "children": []
    },
    {
     "id": "ID#testThatPidFileCanBeConfigured(org.elasticsearch.bootstrap.ElasticsearchCliTests)",
     "displayName": "testThatPidFileCanBeConfigured(org.elasticsearch.bootstrap.ElasticsearchCliTests)",
     "methodName": "testThatPidFileCanBeConfigured",
     "className": "org.elasticsearch.bootstrap.ElasticsearchCliTests",
     "children": []
    },
    {
     "id": "ID#testVersion(org.elasticsearch.bootstrap.ElasticsearchCliTests)",
     "displayName": "testVersion(org.elasticsearch.bootstrap.ElasticsearchCliTests)",
     "methodName": "testVersion",
     "className": "org.elasticsearch.bootstrap.ElasticsearchCliTests",
     "children": []
    },
    {
     "id": "ID#testPositionalArgs(org.elasticsearch.bootstrap.ElasticsearchCliTests)",
     "displayName": "testPositionalArgs(org.elasticsearch.bootstrap.ElasticsearchCliTests)",
     "methodName": "testPositionalArgs",
     "className": "org.elasticsearch.bootstrap.ElasticsearchCliTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195705220
 }
]

[
 "TEST_STARTED",
 "ID#testElasticsearchSettings(org.elasticsearch.bootstrap.ElasticsearchCliTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testElasticsearchSettings(org.elasticsearch.bootstrap.ElasticsearchCliTests)",
  "startTimestamp": 1474195705242,
  "executionTime": 30
 }
]

[
 "TEST_STARTED",
 "ID#testThatParsingDaemonizeWorks(org.elasticsearch.bootstrap.ElasticsearchCliTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatParsingDaemonizeWorks(org.elasticsearch.bootstrap.ElasticsearchCliTests)",
  "startTimestamp": 1474195705272,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testElasticsearchSettingCanNotBeEmpty(org.elasticsearch.bootstrap.ElasticsearchCliTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testElasticsearchSettingCanNotBeEmpty(org.elasticsearch.bootstrap.ElasticsearchCliTests)",
  "startTimestamp": 1474195705279,
  "executionTime": 13
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownOption(org.elasticsearch.bootstrap.ElasticsearchCliTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownOption(org.elasticsearch.bootstrap.ElasticsearchCliTests)",
  "startTimestamp": 1474195705292,
  "executionTime": 14
 }
]

[
 "TEST_STARTED",
 "ID#testThatPidFileCanBeConfigured(org.elasticsearch.bootstrap.ElasticsearchCliTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatPidFileCanBeConfigured(org.elasticsearch.bootstrap.ElasticsearchCliTests)",
  "startTimestamp": 1474195705306,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testVersion(org.elasticsearch.bootstrap.ElasticsearchCliTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVersion(org.elasticsearch.bootstrap.ElasticsearchCliTests)",
  "startTimestamp": 1474195705313,
  "executionTime": 15
 }
]

[
 "TEST_STARTED",
 "ID#testPositionalArgs(org.elasticsearch.bootstrap.ElasticsearchCliTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPositionalArgs(org.elasticsearch.bootstrap.ElasticsearchCliTests)",
  "startTimestamp": 1474195705328,
  "executionTime": 6
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.bootstrap.ElasticsearchCliTests",
  "startTimestamp": 1474195705220,
  "executionTime": 117
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cli.MultiCommandTests",
   "displayName": "org.elasticsearch.cli.MultiCommandTests",
   "methodName": null,
   "className": "org.elasticsearch.cli.MultiCommandTests",
   "children": [
    {
     "id": "ID#testUnknownCommand(org.elasticsearch.cli.MultiCommandTests)",
     "displayName": "testUnknownCommand(org.elasticsearch.cli.MultiCommandTests)",
     "methodName": "testUnknownCommand",
     "className": "org.elasticsearch.cli.MultiCommandTests",
     "children": []
    },
    {
     "id": "ID#testNoCommandsConfigured(org.elasticsearch.cli.MultiCommandTests)",
     "displayName": "testNoCommandsConfigured(org.elasticsearch.cli.MultiCommandTests)",
     "methodName": "testNoCommandsConfigured",
     "className": "org.elasticsearch.cli.MultiCommandTests",
     "children": []
    },
    {
     "id": "ID#testSubcommandArguments(org.elasticsearch.cli.MultiCommandTests)",
     "displayName": "testSubcommandArguments(org.elasticsearch.cli.MultiCommandTests)",
     "methodName": "testSubcommandArguments",
     "className": "org.elasticsearch.cli.MultiCommandTests",
     "children": []
    },
    {
     "id": "ID#testHelp(org.elasticsearch.cli.MultiCommandTests)",
     "displayName": "testHelp(org.elasticsearch.cli.MultiCommandTests)",
     "methodName": "testHelp",
     "className": "org.elasticsearch.cli.MultiCommandTests",
     "children": []
    },
    {
     "id": "ID#testMissingCommand(org.elasticsearch.cli.MultiCommandTests)",
     "displayName": "testMissingCommand(org.elasticsearch.cli.MultiCommandTests)",
     "methodName": "testMissingCommand",
     "className": "org.elasticsearch.cli.MultiCommandTests",
     "children": []
    },
    {
     "id": "ID#testSubcommandHelp(org.elasticsearch.cli.MultiCommandTests)",
     "displayName": "testSubcommandHelp(org.elasticsearch.cli.MultiCommandTests)",
     "methodName": "testSubcommandHelp",
     "className": "org.elasticsearch.cli.MultiCommandTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195705482
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownCommand(org.elasticsearch.cli.MultiCommandTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownCommand(org.elasticsearch.cli.MultiCommandTests)",
  "startTimestamp": 1474195705497,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testNoCommandsConfigured(org.elasticsearch.cli.MultiCommandTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoCommandsConfigured(org.elasticsearch.cli.MultiCommandTests)",
  "startTimestamp": 1474195705500,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSubcommandArguments(org.elasticsearch.cli.MultiCommandTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSubcommandArguments(org.elasticsearch.cli.MultiCommandTests)",
  "startTimestamp": 1474195705503,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testHelp(org.elasticsearch.cli.MultiCommandTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHelp(org.elasticsearch.cli.MultiCommandTests)",
  "startTimestamp": 1474195705505,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testMissingCommand(org.elasticsearch.cli.MultiCommandTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMissingCommand(org.elasticsearch.cli.MultiCommandTests)",
  "startTimestamp": 1474195705512,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSubcommandHelp(org.elasticsearch.cli.MultiCommandTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSubcommandHelp(org.elasticsearch.cli.MultiCommandTests)",
  "startTimestamp": 1474195705514,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cli.MultiCommandTests",
  "startTimestamp": 1474195705482,
  "executionTime": 37
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.client.ParentTaskAssigningClientTests",
   "displayName": "org.elasticsearch.client.ParentTaskAssigningClientTests",
   "methodName": null,
   "className": "org.elasticsearch.client.ParentTaskAssigningClientTests",
   "children": [
    {
     "id": "ID#testSetsParentId(org.elasticsearch.client.ParentTaskAssigningClientTests)",
     "displayName": "testSetsParentId(org.elasticsearch.client.ParentTaskAssigningClientTests)",
     "methodName": "testSetsParentId",
     "className": "org.elasticsearch.client.ParentTaskAssigningClientTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195705735
 }
]

[
 "TEST_STARTED",
 "ID#testSetsParentId(org.elasticsearch.client.ParentTaskAssigningClientTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSetsParentId(org.elasticsearch.client.ParentTaskAssigningClientTests)",
  "startTimestamp": 1474195705754,
  "executionTime": 44
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.client.ParentTaskAssigningClientTests",
  "startTimestamp": 1474195705735,
  "executionTime": 66
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.metadata.IndexMetaDataTests",
   "displayName": "org.elasticsearch.cluster.metadata.IndexMetaDataTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.metadata.IndexMetaDataTests",
   "children": [
    {
     "id": "ID#testGetRoutingFactor(org.elasticsearch.cluster.metadata.IndexMetaDataTests)",
     "displayName": "testGetRoutingFactor(org.elasticsearch.cluster.metadata.IndexMetaDataTests)",
     "methodName": "testGetRoutingFactor",
     "className": "org.elasticsearch.cluster.metadata.IndexMetaDataTests",
     "children": []
    },
    {
     "id": "ID#testSelectShrinkShards(org.elasticsearch.cluster.metadata.IndexMetaDataTests)",
     "displayName": "testSelectShrinkShards(org.elasticsearch.cluster.metadata.IndexMetaDataTests)",
     "methodName": "testSelectShrinkShards",
     "className": "org.elasticsearch.cluster.metadata.IndexMetaDataTests",
     "children": []
    },
    {
     "id": "ID#testIndexMetaDataSerialization(org.elasticsearch.cluster.metadata.IndexMetaDataTests)",
     "displayName": "testIndexMetaDataSerialization(org.elasticsearch.cluster.metadata.IndexMetaDataTests)",
     "methodName": "testIndexMetaDataSerialization",
     "className": "org.elasticsearch.cluster.metadata.IndexMetaDataTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195706012
 }
]

[
 "TEST_STARTED",
 "ID#testGetRoutingFactor(org.elasticsearch.cluster.metadata.IndexMetaDataTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGetRoutingFactor(org.elasticsearch.cluster.metadata.IndexMetaDataTests)",
  "startTimestamp": 1474195706027,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSelectShrinkShards(org.elasticsearch.cluster.metadata.IndexMetaDataTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSelectShrinkShards(org.elasticsearch.cluster.metadata.IndexMetaDataTests)",
  "startTimestamp": 1474195706030,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIndexMetaDataSerialization(org.elasticsearch.cluster.metadata.IndexMetaDataTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexMetaDataSerialization(org.elasticsearch.cluster.metadata.IndexMetaDataTests)",
  "startTimestamp": 1474195706032,
  "executionTime": 18
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.metadata.IndexMetaDataTests",
  "startTimestamp": 1474195706012,
  "executionTime": 43
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.metadata.MetaDataCreateIndexServiceTests",
   "displayName": "org.elasticsearch.cluster.metadata.MetaDataCreateIndexServiceTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.metadata.MetaDataCreateIndexServiceTests",
   "children": [
    {
     "id": "ID#testShrinkIndexSettings(org.elasticsearch.cluster.metadata.MetaDataCreateIndexServiceTests)",
     "displayName": "testShrinkIndexSettings(org.elasticsearch.cluster.metadata.MetaDataCreateIndexServiceTests)",
     "methodName": "testShrinkIndexSettings",
     "className": "org.elasticsearch.cluster.metadata.MetaDataCreateIndexServiceTests",
     "children": []
    },
    {
     "id": "ID#testValidateShrinkIndex(org.elasticsearch.cluster.metadata.MetaDataCreateIndexServiceTests)",
     "displayName": "testValidateShrinkIndex(org.elasticsearch.cluster.metadata.MetaDataCreateIndexServiceTests)",
     "methodName": "testValidateShrinkIndex",
     "className": "org.elasticsearch.cluster.metadata.MetaDataCreateIndexServiceTests",
     "children": []
    },
    {
     "id": "ID#testValidateIndexName(org.elasticsearch.cluster.metadata.MetaDataCreateIndexServiceTests)",
     "displayName": "testValidateIndexName(org.elasticsearch.cluster.metadata.MetaDataCreateIndexServiceTests)",
     "methodName": "testValidateIndexName",
     "className": "org.elasticsearch.cluster.metadata.MetaDataCreateIndexServiceTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195706346
 }
]

[
 "TEST_STARTED",
 "ID#testShrinkIndexSettings(org.elasticsearch.cluster.metadata.MetaDataCreateIndexServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:48:26,371][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[IiOtVBbBaJ][2], [IiOtVBbBaJ][4], [IiOtVBbBaJ][3], [IiOtVBbBaJ][7], [IiOtVBbBaJ][5], [IiOtVBbBaJ][1], [IiOtVBbBaJ][6], [IiOtVBbBaJ][8], [IiOtVBbBaJ][0]] ...]).%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testShrinkIndexSettings(org.elasticsearch.cluster.metadata.MetaDataCreateIndexServiceTests)",
  "startTimestamp": 1474195706364,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testValidateShrinkIndex(org.elasticsearch.cluster.metadata.MetaDataCreateIndexServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:48:26,383][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[source][24], [source][1], [source][20], [source][22], [source][18], [source][7], [source][21], [source][17], [source][34], [source][5]] ...]).%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidateShrinkIndex(org.elasticsearch.cluster.metadata.MetaDataCreateIndexServiceTests)",
  "startTimestamp": 1474195706373,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testValidateIndexName(org.elasticsearch.cluster.metadata.MetaDataCreateIndexServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidateIndexName(org.elasticsearch.cluster.metadata.MetaDataCreateIndexServiceTests)",
  "startTimestamp": 1474195706383,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.metadata.MetaDataCreateIndexServiceTests",
  "startTimestamp": 1474195706346,
  "executionTime": 42
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.metadata.MetaDataIndexAliasesServiceTests",
   "displayName": "org.elasticsearch.cluster.metadata.MetaDataIndexAliasesServiceTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.metadata.MetaDataIndexAliasesServiceTests",
   "children": [
    {
     "id": "ID#testAddAndRemove(org.elasticsearch.cluster.metadata.MetaDataIndexAliasesServiceTests)",
     "displayName": "testAddAndRemove(org.elasticsearch.cluster.metadata.MetaDataIndexAliasesServiceTests)",
     "methodName": "testAddAndRemove",
     "className": "org.elasticsearch.cluster.metadata.MetaDataIndexAliasesServiceTests",
     "children": []
    },
    {
     "id": "ID#testSwapIndexWithAlias(org.elasticsearch.cluster.metadata.MetaDataIndexAliasesServiceTests)",
     "displayName": "testSwapIndexWithAlias(org.elasticsearch.cluster.metadata.MetaDataIndexAliasesServiceTests)",
     "methodName": "testSwapIndexWithAlias",
     "className": "org.elasticsearch.cluster.metadata.MetaDataIndexAliasesServiceTests",
     "children": []
    },
    {
     "id": "ID#testRemoveIndexTwice(org.elasticsearch.cluster.metadata.MetaDataIndexAliasesServiceTests)",
     "displayName": "testRemoveIndexTwice(org.elasticsearch.cluster.metadata.MetaDataIndexAliasesServiceTests)",
     "methodName": "testRemoveIndexTwice",
     "className": "org.elasticsearch.cluster.metadata.MetaDataIndexAliasesServiceTests",
     "children": []
    },
    {
     "id": "ID#testAddAliasToRemovedIndex(org.elasticsearch.cluster.metadata.MetaDataIndexAliasesServiceTests)",
     "displayName": "testAddAliasToRemovedIndex(org.elasticsearch.cluster.metadata.MetaDataIndexAliasesServiceTests)",
     "methodName": "testAddAliasToRemovedIndex",
     "className": "org.elasticsearch.cluster.metadata.MetaDataIndexAliasesServiceTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195706608
 }
]

[
 "TEST_STARTED",
 "ID#testAddAndRemove(org.elasticsearch.cluster.metadata.MetaDataIndexAliasesServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAddAndRemove(org.elasticsearch.cluster.metadata.MetaDataIndexAliasesServiceTests)",
  "startTimestamp": 1474195706625,
  "executionTime": 72
 }
]

[
 "TEST_STARTED",
 "ID#testSwapIndexWithAlias(org.elasticsearch.cluster.metadata.MetaDataIndexAliasesServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSwapIndexWithAlias(org.elasticsearch.cluster.metadata.MetaDataIndexAliasesServiceTests)",
  "startTimestamp": 1474195706697,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testRemoveIndexTwice(org.elasticsearch.cluster.metadata.MetaDataIndexAliasesServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRemoveIndexTwice(org.elasticsearch.cluster.metadata.MetaDataIndexAliasesServiceTests)",
  "startTimestamp": 1474195706709,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testAddAliasToRemovedIndex(org.elasticsearch.cluster.metadata.MetaDataIndexAliasesServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAddAliasToRemovedIndex(org.elasticsearch.cluster.metadata.MetaDataIndexAliasesServiceTests)",
  "startTimestamp": 1474195706712,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.metadata.MetaDataIndexAliasesServiceTests",
  "startTimestamp": 1474195706608,
  "executionTime": 108
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.metadata.MetaDataMappingServiceTests",
   "displayName": "org.elasticsearch.cluster.metadata.MetaDataMappingServiceTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.metadata.MetaDataMappingServiceTests",
   "children": [
    {
     "id": "ID#testAddExtraChildTypePointingToAlreadyParentExistingType(org.elasticsearch.cluster.metadata.MetaDataMappingServiceTests)",
     "displayName": "testAddExtraChildTypePointingToAlreadyParentExistingType(org.elasticsearch.cluster.metadata.MetaDataMappingServiceTests)",
     "methodName": "testAddExtraChildTypePointingToAlreadyParentExistingType",
     "className": "org.elasticsearch.cluster.metadata.MetaDataMappingServiceTests",
     "children": []
    },
    {
     "id": "ID#testAddChildTypePointingToAlreadyExistingType(org.elasticsearch.cluster.metadata.MetaDataMappingServiceTests)",
     "displayName": "testAddChildTypePointingToAlreadyExistingType(org.elasticsearch.cluster.metadata.MetaDataMappingServiceTests)",
     "methodName": "testAddChildTypePointingToAlreadyExistingType",
     "className": "org.elasticsearch.cluster.metadata.MetaDataMappingServiceTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195706882
 }
]

[
 "TEST_STARTED",
 "ID#testAddExtraChildTypePointingToAlreadyParentExistingType(org.elasticsearch.cluster.metadata.MetaDataMappingServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:48:26,916][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:48:26,975][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:48:26,975][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:48:26,984][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[7260], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:48:26,988][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:48:26,988][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:48:27,190][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:48:27,191][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:48:27,191][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[96]}, bound_addresses {local[96]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:48:27,249][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{z0cuBn2YT8Oa3NnUA5y6iQ}{6cKe6fgPQdOh4z7UltMnqQ}{local}{local[96]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:48:27,250][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:48:27,271][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:48:27,292][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [parent, child1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:48:27,356][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:48:27,379][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/IiwyMbz5T2CIjhRxFghzqQ] create_mapping [child2]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:48:27,397][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [MetaDataMappingServiceTests#testAddExtraChildTypePointingToAlreadyParentExistingType]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAddExtraChildTypePointingToAlreadyParentExistingType(org.elasticsearch.cluster.metadata.MetaDataMappingServiceTests)",
  "startTimestamp": 1474195706907,
  "executionTime": 531
 }
]

[
 "TEST_STARTED",
 "ID#testAddChildTypePointingToAlreadyExistingType(org.elasticsearch.cluster.metadata.MetaDataMappingServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:48:27,455][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:48:27,527][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:48:27,541][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [MetaDataMappingServiceTests#testAddChildTypePointingToAlreadyExistingType]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAddChildTypePointingToAlreadyExistingType(org.elasticsearch.cluster.metadata.MetaDataMappingServiceTests)",
  "startTimestamp": 1474195707438,
  "executionTime": 149
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:48:27,588][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:48:27,592][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:48:27,592][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T22:48:27,595][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.metadata.MetaDataMappingServiceTests",
  "startTimestamp": 1474195706882,
  "executionTime": 724
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.allocation.PrimaryNotRelocatedWhileBeingRecoveredTests",
   "displayName": "org.elasticsearch.cluster.routing.allocation.PrimaryNotRelocatedWhileBeingRecoveredTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.allocation.PrimaryNotRelocatedWhileBeingRecoveredTests",
   "children": [
    {
     "id": "ID#testPrimaryNotRelocatedWhileBeingRecoveredFrom(org.elasticsearch.cluster.routing.allocation.PrimaryNotRelocatedWhileBeingRecoveredTests)",
     "displayName": "testPrimaryNotRelocatedWhileBeingRecoveredFrom(org.elasticsearch.cluster.routing.allocation.PrimaryNotRelocatedWhileBeingRecoveredTests)",
     "methodName": "testPrimaryNotRelocatedWhileBeingRecoveredFrom",
     "className": "org.elasticsearch.cluster.routing.allocation.PrimaryNotRelocatedWhileBeingRecoveredTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195707722
 }
]

[
 "TEST_STARTED",
 "ID#testPrimaryNotRelocatedWhileBeingRecoveredFrom(org.elasticsearch.cluster.routing.allocation.PrimaryNotRelocatedWhileBeingRecoveredTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:27,746][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Building initial routing table%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:27,748][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Adding two nodes and performing rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:27,749][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Start the primary shard (on node1)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:27,749][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start another node, replica will start recovering form primary%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:27,749][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] start another node, make sure the primary is not relocated%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPrimaryNotRelocatedWhileBeingRecoveredFrom(org.elasticsearch.cluster.routing.allocation.PrimaryNotRelocatedWhileBeingRecoveredTests)",
  "startTimestamp": 1474195707740,
  "executionTime": 10
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.allocation.PrimaryNotRelocatedWhileBeingRecoveredTests",
  "startTimestamp": 1474195707722,
  "executionTime": 30
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.routing.allocation.TenShardsOneReplicaRoutingTests",
   "displayName": "org.elasticsearch.cluster.routing.allocation.TenShardsOneReplicaRoutingTests",
   "methodName": null,
   "className": "org.elasticsearch.cluster.routing.allocation.TenShardsOneReplicaRoutingTests",
   "children": [
    {
     "id": "ID#testSingleIndexFirstStartPrimaryThenBackups(org.elasticsearch.cluster.routing.allocation.TenShardsOneReplicaRoutingTests)",
     "displayName": "testSingleIndexFirstStartPrimaryThenBackups(org.elasticsearch.cluster.routing.allocation.TenShardsOneReplicaRoutingTests)",
     "methodName": "testSingleIndexFirstStartPrimaryThenBackups",
     "className": "org.elasticsearch.cluster.routing.allocation.TenShardsOneReplicaRoutingTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195708009
 }
]

[
 "TEST_STARTED",
 "ID#testSingleIndexFirstStartPrimaryThenBackups(org.elasticsearch.cluster.routing.allocation.TenShardsOneReplicaRoutingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:28,033][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Building initial routing table%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:28,034][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Adding one node and performing rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:28,035][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Add another node and perform rerouting, nothing will happen since primary not started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:28,036][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Start the primary shard (on node1)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:28,037][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Reroute, nothing should change%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:28,037][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Start the backup shard%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:28,044][INFO ][org.elasticsearch.cluster] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][1], [test][2], [test][4], [test][5], [test][7], [test][3], [test][8], [test][9], [test][6], [test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:28,045][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Add another node and perform rerouting%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:28,046][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Start the shards on node 3%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleIndexFirstStartPrimaryThenBackups(org.elasticsearch.cluster.routing.allocation.TenShardsOneReplicaRoutingTests)",
  "startTimestamp": 1474195708027,
  "executionTime": 19
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.routing.allocation.TenShardsOneReplicaRoutingTests",
  "startTimestamp": 1474195708009,
  "executionTime": 48
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.blobstore.FsBlobStoreTests",
   "displayName": "org.elasticsearch.common.blobstore.FsBlobStoreTests",
   "methodName": null,
   "className": "org.elasticsearch.common.blobstore.FsBlobStoreTests",
   "children": [
    {
     "id": "ID#testContainerCreationAndDeletion(org.elasticsearch.common.blobstore.FsBlobStoreTests)",
     "displayName": "testContainerCreationAndDeletion(org.elasticsearch.common.blobstore.FsBlobStoreTests)",
     "methodName": "testContainerCreationAndDeletion",
     "className": "org.elasticsearch.common.blobstore.FsBlobStoreTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195708390
 }
]

[
 "TEST_STARTED",
 "ID#testContainerCreationAndDeletion(org.elasticsearch.common.blobstore.FsBlobStoreTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testContainerCreationAndDeletion(org.elasticsearch.common.blobstore.FsBlobStoreTests)",
  "startTimestamp": 1474195708476,
  "executionTime": 68
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.blobstore.FsBlobStoreTests",
  "startTimestamp": 1474195708390,
  "executionTime": 157
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.bytes.BytesArrayTests",
   "displayName": "org.elasticsearch.common.bytes.BytesArrayTests",
   "methodName": null,
   "className": "org.elasticsearch.common.bytes.BytesArrayTests",
   "children": [
    {
     "id": "ID#testToBytes(org.elasticsearch.common.bytes.BytesArrayTests)",
     "displayName": "testToBytes(org.elasticsearch.common.bytes.BytesArrayTests)",
     "methodName": "testToBytes",
     "className": "org.elasticsearch.common.bytes.BytesArrayTests",
     "children": []
    },
    {
     "id": "ID#testRandomReads(org.elasticsearch.common.bytes.BytesArrayTests)",
     "displayName": "testRandomReads(org.elasticsearch.common.bytes.BytesArrayTests)",
     "methodName": "testRandomReads",
     "className": "org.elasticsearch.common.bytes.BytesArrayTests",
     "children": []
    },
    {
     "id": "ID#testSliceEquals(org.elasticsearch.common.bytes.BytesArrayTests)",
     "displayName": "testSliceEquals(org.elasticsearch.common.bytes.BytesArrayTests)",
     "methodName": "testSliceEquals",
     "className": "org.elasticsearch.common.bytes.BytesArrayTests",
     "children": []
    },
    {
     "id": "ID#testCopyBytesRefSharesBytes(org.elasticsearch.common.bytes.BytesArrayTests)",
     "displayName": "testCopyBytesRefSharesBytes(org.elasticsearch.common.bytes.BytesArrayTests)",
     "methodName": "testCopyBytesRefSharesBytes",
     "className": "org.elasticsearch.common.bytes.BytesArrayTests",
     "children": []
    },
    {
     "id": "ID#testIterator(org.elasticsearch.common.bytes.BytesArrayTests)",
     "displayName": "testIterator(org.elasticsearch.common.bytes.BytesArrayTests)",
     "methodName": "testIterator",
     "className": "org.elasticsearch.common.bytes.BytesArrayTests",
     "children": []
    },
    {
     "id": "ID#testHashCode(org.elasticsearch.common.bytes.BytesArrayTests)",
     "displayName": "testHashCode(org.elasticsearch.common.bytes.BytesArrayTests)",
     "methodName": "testHashCode",
     "className": "org.elasticsearch.common.bytes.BytesArrayTests",
     "children": []
    },
    {
     "id": "ID#testArray(org.elasticsearch.common.bytes.BytesArrayTests)",
     "displayName": "testArray(org.elasticsearch.common.bytes.BytesArrayTests)",
     "methodName": "testArray",
     "className": "org.elasticsearch.common.bytes.BytesArrayTests",
     "children": []
    },
    {
     "id": "ID#testEmptyToBytesRefIterator(org.elasticsearch.common.bytes.BytesArrayTests)",
     "displayName": "testEmptyToBytesRefIterator(org.elasticsearch.common.bytes.BytesArrayTests)",
     "methodName": "testEmptyToBytesRefIterator",
     "className": "org.elasticsearch.common.bytes.BytesArrayTests",
     "children": []
    },
    {
     "id": "ID#testBasicEquals(org.elasticsearch.common.bytes.BytesArrayTests)",
     "displayName": "testBasicEquals(org.elasticsearch.common.bytes.BytesArrayTests)",
     "methodName": "testBasicEquals",
     "className": "org.elasticsearch.common.bytes.BytesArrayTests",
     "children": []
    },
    {
     "id": "ID#testStreamInput(org.elasticsearch.common.bytes.BytesArrayTests)",
     "displayName": "testStreamInput(org.elasticsearch.common.bytes.BytesArrayTests)",
     "methodName": "testStreamInput",
     "className": "org.elasticsearch.common.bytes.BytesArrayTests",
     "children": []
    },
    {
     "id": "ID#testSliceCopyBytesRef(org.elasticsearch.common.bytes.BytesArrayTests)",
     "displayName": "testSliceCopyBytesRef(org.elasticsearch.common.bytes.BytesArrayTests)",
     "methodName": "testSliceCopyBytesRef",
     "className": "org.elasticsearch.common.bytes.BytesArrayTests",
     "children": []
    },
    {
     "id": "ID#testInputStreamSkip(org.elasticsearch.common.bytes.BytesArrayTests)",
     "displayName": "testInputStreamSkip(org.elasticsearch.common.bytes.BytesArrayTests)",
     "methodName": "testInputStreamSkip",
     "className": "org.elasticsearch.common.bytes.BytesArrayTests",
     "children": []
    },
    {
     "id": "ID#testStreamInputMarkAndReset(org.elasticsearch.common.bytes.BytesArrayTests)",
     "displayName": "testStreamInputMarkAndReset(org.elasticsearch.common.bytes.BytesArrayTests)",
     "methodName": "testStreamInputMarkAndReset",
     "className": "org.elasticsearch.common.bytes.BytesArrayTests",
     "children": []
    },
    {
     "id": "ID#testSliceToBytesRef(org.elasticsearch.common.bytes.BytesArrayTests)",
     "displayName": "testSliceToBytesRef(org.elasticsearch.common.bytes.BytesArrayTests)",
     "methodName": "testSliceToBytesRef",
     "className": "org.elasticsearch.common.bytes.BytesArrayTests",
     "children": []
    },
    {
     "id": "ID#testSliceWriteToOutputStream(org.elasticsearch.common.bytes.BytesArrayTests)",
     "displayName": "testSliceWriteToOutputStream(org.elasticsearch.common.bytes.BytesArrayTests)",
     "methodName": "testSliceWriteToOutputStream",
     "className": "org.elasticsearch.common.bytes.BytesArrayTests",
     "children": []
    },
    {
     "id": "ID#testToBytesRef(org.elasticsearch.common.bytes.BytesArrayTests)",
     "displayName": "testToBytesRef(org.elasticsearch.common.bytes.BytesArrayTests)",
     "methodName": "testToBytesRef",
     "className": "org.elasticsearch.common.bytes.BytesArrayTests",
     "children": []
    },
    {
     "id": "ID#testStreamInputBulkReadWithOffset(org.elasticsearch.common.bytes.BytesArrayTests)",
     "displayName": "testStreamInputBulkReadWithOffset(org.elasticsearch.common.bytes.BytesArrayTests)",
     "methodName": "testStreamInputBulkReadWithOffset",
     "className": "org.elasticsearch.common.bytes.BytesArrayTests",
     "children": []
    },
    {
     "id": "ID#testWriteToOutputStream(org.elasticsearch.common.bytes.BytesArrayTests)",
     "displayName": "testWriteToOutputStream(org.elasticsearch.common.bytes.BytesArrayTests)",
     "methodName": "testWriteToOutputStream",
     "className": "org.elasticsearch.common.bytes.BytesArrayTests",
     "children": []
    },
    {
     "id": "ID#testToUtf8(org.elasticsearch.common.bytes.BytesArrayTests)",
     "displayName": "testToUtf8(org.elasticsearch.common.bytes.BytesArrayTests)",
     "methodName": "testToUtf8",
     "className": "org.elasticsearch.common.bytes.BytesArrayTests",
     "children": []
    },
    {
     "id": "ID#testSliceArrayOffset(org.elasticsearch.common.bytes.BytesArrayTests)",
     "displayName": "testSliceArrayOffset(org.elasticsearch.common.bytes.BytesArrayTests)",
     "methodName": "testSliceArrayOffset",
     "className": "org.elasticsearch.common.bytes.BytesArrayTests",
     "children": []
    },
    {
     "id": "ID#testEquals(org.elasticsearch.common.bytes.BytesArrayTests)",
     "displayName": "testEquals(org.elasticsearch.common.bytes.BytesArrayTests)",
     "methodName": "testEquals",
     "className": "org.elasticsearch.common.bytes.BytesArrayTests",
     "children": []
    },
    {
     "id": "ID#testSlice(org.elasticsearch.common.bytes.BytesArrayTests)",
     "displayName": "testSlice(org.elasticsearch.common.bytes.BytesArrayTests)",
     "methodName": "testSlice",
     "className": "org.elasticsearch.common.bytes.BytesArrayTests",
     "children": []
    },
    {
     "id": "ID#testArrayOffset(org.elasticsearch.common.bytes.BytesArrayTests)",
     "displayName": "testArrayOffset(org.elasticsearch.common.bytes.BytesArrayTests)",
     "methodName": "testArrayOffset",
     "className": "org.elasticsearch.common.bytes.BytesArrayTests",
     "children": []
    },
    {
     "id": "ID#testSliceIterator(org.elasticsearch.common.bytes.BytesArrayTests)",
     "displayName": "testSliceIterator(org.elasticsearch.common.bytes.BytesArrayTests)",
     "methodName": "testSliceIterator",
     "className": "org.elasticsearch.common.bytes.BytesArrayTests",
     "children": []
    },
    {
     "id": "ID#testGet(org.elasticsearch.common.bytes.BytesArrayTests)",
     "displayName": "testGet(org.elasticsearch.common.bytes.BytesArrayTests)",
     "methodName": "testGet",
     "className": "org.elasticsearch.common.bytes.BytesArrayTests",
     "children": []
    },
    {
     "id": "ID#testLength(org.elasticsearch.common.bytes.BytesArrayTests)",
     "displayName": "testLength(org.elasticsearch.common.bytes.BytesArrayTests)",
     "methodName": "testLength",
     "className": "org.elasticsearch.common.bytes.BytesArrayTests",
     "children": []
    },
    {
     "id": "ID#testIteratorRandom(org.elasticsearch.common.bytes.BytesArrayTests)",
     "displayName": "testIteratorRandom(org.elasticsearch.common.bytes.BytesArrayTests)",
     "methodName": "testIteratorRandom",
     "className": "org.elasticsearch.common.bytes.BytesArrayTests",
     "children": []
    },
    {
     "id": "ID#testCompareTo(org.elasticsearch.common.bytes.BytesArrayTests)",
     "displayName": "testCompareTo(org.elasticsearch.common.bytes.BytesArrayTests)",
     "methodName": "testCompareTo",
     "className": "org.elasticsearch.common.bytes.BytesArrayTests",
     "children": []
    },
    {
     "id": "ID#testToBytesRefMaterializedPages(org.elasticsearch.common.bytes.BytesArrayTests)",
     "displayName": "testToBytesRefMaterializedPages(org.elasticsearch.common.bytes.BytesArrayTests)",
     "methodName": "testToBytesRefMaterializedPages",
     "className": "org.elasticsearch.common.bytes.BytesArrayTests",
     "children": []
    },
    {
     "id": "ID#testToBytesRefSharedPage(org.elasticsearch.common.bytes.BytesArrayTests)",
     "displayName": "testToBytesRefSharedPage(org.elasticsearch.common.bytes.BytesArrayTests)",
     "methodName": "testToBytesRefSharedPage",
     "className": "org.elasticsearch.common.bytes.BytesArrayTests",
     "children": []
    },
    {
     "id": "ID#testSliceStreamInput(org.elasticsearch.common.bytes.BytesArrayTests)",
     "displayName": "testSliceStreamInput(org.elasticsearch.common.bytes.BytesArrayTests)",
     "methodName": "testSliceStreamInput",
     "className": "org.elasticsearch.common.bytes.BytesArrayTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195708858
 }
]

[
 "TEST_STARTED",
 "ID#testToBytes(org.elasticsearch.common.bytes.BytesArrayTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToBytes(org.elasticsearch.common.bytes.BytesArrayTests)",
  "startTimestamp": 1474195708926,
  "executionTime": 95
 }
]

[
 "TEST_STARTED",
 "ID#testRandomReads(org.elasticsearch.common.bytes.BytesArrayTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRandomReads(org.elasticsearch.common.bytes.BytesArrayTests)",
  "startTimestamp": 1474195709021,
  "executionTime": 104
 }
]

[
 "TEST_STARTED",
 "ID#testSliceEquals(org.elasticsearch.common.bytes.BytesArrayTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSliceEquals(org.elasticsearch.common.bytes.BytesArrayTests)",
  "startTimestamp": 1474195709125,
  "executionTime": 20
 }
]

[
 "TEST_STARTED",
 "ID#testCopyBytesRefSharesBytes(org.elasticsearch.common.bytes.BytesArrayTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCopyBytesRefSharesBytes(org.elasticsearch.common.bytes.BytesArrayTests)",
  "startTimestamp": 1474195709145,
  "executionTime": 22
 }
]

[
 "TEST_STARTED",
 "ID#testIterator(org.elasticsearch.common.bytes.BytesArrayTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIterator(org.elasticsearch.common.bytes.BytesArrayTests)",
  "startTimestamp": 1474195709167,
  "executionTime": 54
 }
]

[
 "TEST_STARTED",
 "ID#testHashCode(org.elasticsearch.common.bytes.BytesArrayTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHashCode(org.elasticsearch.common.bytes.BytesArrayTests)",
  "startTimestamp": 1474195709222,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testArray(org.elasticsearch.common.bytes.BytesArrayTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testArray(org.elasticsearch.common.bytes.BytesArrayTests)",
  "startTimestamp": 1474195709226,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyToBytesRefIterator(org.elasticsearch.common.bytes.BytesArrayTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyToBytesRefIterator(org.elasticsearch.common.bytes.BytesArrayTests)",
  "startTimestamp": 1474195709237,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testBasicEquals(org.elasticsearch.common.bytes.BytesArrayTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBasicEquals(org.elasticsearch.common.bytes.BytesArrayTests)",
  "startTimestamp": 1474195709239,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testStreamInput(org.elasticsearch.common.bytes.BytesArrayTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStreamInput(org.elasticsearch.common.bytes.BytesArrayTests)",
  "startTimestamp": 1474195709241,
  "executionTime": 24
 }
]

[
 "TEST_STARTED",
 "ID#testSliceCopyBytesRef(org.elasticsearch.common.bytes.BytesArrayTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSliceCopyBytesRef(org.elasticsearch.common.bytes.BytesArrayTests)",
  "startTimestamp": 1474195709265,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testInputStreamSkip(org.elasticsearch.common.bytes.BytesArrayTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInputStreamSkip(org.elasticsearch.common.bytes.BytesArrayTests)",
  "startTimestamp": 1474195709274,
  "executionTime": 31
 }
]

[
 "TEST_STARTED",
 "ID#testStreamInputMarkAndReset(org.elasticsearch.common.bytes.BytesArrayTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStreamInputMarkAndReset(org.elasticsearch.common.bytes.BytesArrayTests)",
  "startTimestamp": 1474195709305,
  "executionTime": 76
 }
]

[
 "TEST_STARTED",
 "ID#testSliceToBytesRef(org.elasticsearch.common.bytes.BytesArrayTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSliceToBytesRef(org.elasticsearch.common.bytes.BytesArrayTests)",
  "startTimestamp": 1474195709381,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSliceWriteToOutputStream(org.elasticsearch.common.bytes.BytesArrayTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSliceWriteToOutputStream(org.elasticsearch.common.bytes.BytesArrayTests)",
  "startTimestamp": 1474195709384,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testToBytesRef(org.elasticsearch.common.bytes.BytesArrayTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToBytesRef(org.elasticsearch.common.bytes.BytesArrayTests)",
  "startTimestamp": 1474195709388,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testStreamInputBulkReadWithOffset(org.elasticsearch.common.bytes.BytesArrayTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStreamInputBulkReadWithOffset(org.elasticsearch.common.bytes.BytesArrayTests)",
  "startTimestamp": 1474195709394,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testWriteToOutputStream(org.elasticsearch.common.bytes.BytesArrayTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWriteToOutputStream(org.elasticsearch.common.bytes.BytesArrayTests)",
  "startTimestamp": 1474195709404,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testToUtf8(org.elasticsearch.common.bytes.BytesArrayTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToUtf8(org.elasticsearch.common.bytes.BytesArrayTests)",
  "startTimestamp": 1474195709417,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSliceArrayOffset(org.elasticsearch.common.bytes.BytesArrayTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSliceArrayOffset(org.elasticsearch.common.bytes.BytesArrayTests)",
  "startTimestamp": 1474195709419,
  "executionTime": 22
 }
]

[
 "TEST_STARTED",
 "ID#testEquals(org.elasticsearch.common.bytes.BytesArrayTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEquals(org.elasticsearch.common.bytes.BytesArrayTests)",
  "startTimestamp": 1474195709441,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testSlice(org.elasticsearch.common.bytes.BytesArrayTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSlice(org.elasticsearch.common.bytes.BytesArrayTests)",
  "startTimestamp": 1474195709445,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testArrayOffset(org.elasticsearch.common.bytes.BytesArrayTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testArrayOffset(org.elasticsearch.common.bytes.BytesArrayTests)",
  "startTimestamp": 1474195709457,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testSliceIterator(org.elasticsearch.common.bytes.BytesArrayTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSliceIterator(org.elasticsearch.common.bytes.BytesArrayTests)",
  "startTimestamp": 1474195709461,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testGet(org.elasticsearch.common.bytes.BytesArrayTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGet(org.elasticsearch.common.bytes.BytesArrayTests)",
  "startTimestamp": 1474195709470,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testLength(org.elasticsearch.common.bytes.BytesArrayTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLength(org.elasticsearch.common.bytes.BytesArrayTests)",
  "startTimestamp": 1474195709478,
  "executionTime": 17
 }
]

[
 "TEST_STARTED",
 "ID#testIteratorRandom(org.elasticsearch.common.bytes.BytesArrayTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIteratorRandom(org.elasticsearch.common.bytes.BytesArrayTests)",
  "startTimestamp": 1474195709495,
  "executionTime": 33
 }
]

[
 "TEST_STARTED",
 "ID#testCompareTo(org.elasticsearch.common.bytes.BytesArrayTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCompareTo(org.elasticsearch.common.bytes.BytesArrayTests)",
  "startTimestamp": 1474195709529,
  "executionTime": 332
 }
]

[
 "TEST_STARTED",
 "ID#testToBytesRefMaterializedPages(org.elasticsearch.common.bytes.BytesArrayTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToBytesRefMaterializedPages(org.elasticsearch.common.bytes.BytesArrayTests)",
  "startTimestamp": 1474195709861,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testToBytesRefSharedPage(org.elasticsearch.common.bytes.BytesArrayTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToBytesRefSharedPage(org.elasticsearch.common.bytes.BytesArrayTests)",
  "startTimestamp": 1474195709870,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testSliceStreamInput(org.elasticsearch.common.bytes.BytesArrayTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSliceStreamInput(org.elasticsearch.common.bytes.BytesArrayTests)",
  "startTimestamp": 1474195709875,
  "executionTime": 112
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.bytes.BytesArrayTests",
  "startTimestamp": 1474195708858,
  "executionTime": 1131
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.bytes.PagedBytesReferenceTests",
   "displayName": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
   "methodName": null,
   "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
   "children": [
    {
     "id": "ID#testSliceWriteToOutputStream(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testSliceWriteToOutputStream(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testSliceWriteToOutputStream",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testToUtf8(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testToUtf8(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testToUtf8",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testToBytes(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testToBytes(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testToBytes",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testInputStreamSkip(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testInputStreamSkip(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testInputStreamSkip",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testToBytesRefMaterializedPages(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testToBytesRefMaterializedPages(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testToBytesRefMaterializedPages",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testSinglePage(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testSinglePage(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testSinglePage",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testHashCode(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testHashCode(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testHashCode",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testArrayOffset(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testArrayOffset(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testArrayOffset",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testToBytesRef(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testToBytesRef(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testToBytesRef",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testSliceEquals(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testSliceEquals(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testSliceEquals",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testEmptyToBytesRefIterator(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testEmptyToBytesRefIterator(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testEmptyToBytesRefIterator",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testSliceStreamInput(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testSliceStreamInput(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testSliceStreamInput",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testGet(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testGet(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testGet",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testSliceIterator(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testSliceIterator(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testSliceIterator",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testSliceCopyBytesRef(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testSliceCopyBytesRef(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testSliceCopyBytesRef",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testSliceToBytesRef(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testSliceToBytesRef(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testSliceToBytesRef",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testHasSinglePage(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testHasSinglePage(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testHasSinglePage",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testToBytesRefSharedPage(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testToBytesRefSharedPage(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testToBytesRefSharedPage",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testStreamInputMarkAndReset(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testStreamInputMarkAndReset(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testStreamInputMarkAndReset",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testIterator(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testIterator(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testIterator",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testSlice(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testSlice(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testSlice",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testCompareTo(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testCompareTo(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testCompareTo",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testRandomReads(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testRandomReads(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testRandomReads",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testStreamInput(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testStreamInput(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testStreamInput",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testSliceArrayOffset(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testSliceArrayOffset(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testSliceArrayOffset",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testEquals(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testEquals(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testEquals",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testWriteToOutputStream(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testWriteToOutputStream(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testWriteToOutputStream",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testLength(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testLength(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testLength",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testBasicEquals(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testBasicEquals(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testBasicEquals",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testIteratorRandom(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testIteratorRandom(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testIteratorRandom",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testStreamInputBulkReadWithOffset(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testStreamInputBulkReadWithOffset(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testStreamInputBulkReadWithOffset",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    },
    {
     "id": "ID#testCopyBytesRefSharesBytes(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "displayName": "testCopyBytesRefSharesBytes(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
     "methodName": "testCopyBytesRefSharesBytes",
     "className": "org.elasticsearch.common.bytes.PagedBytesReferenceTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195710304
 }
]

[
 "TEST_STARTED",
 "ID#testSliceWriteToOutputStream(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSliceWriteToOutputStream(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1474195710370,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testToUtf8(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToUtf8(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1474195710374,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testToBytes(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToBytes(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1474195710376,
  "executionTime": 37
 }
]

[
 "TEST_STARTED",
 "ID#testInputStreamSkip(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInputStreamSkip(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1474195710414,
  "executionTime": 39
 }
]

[
 "TEST_STARTED",
 "ID#testToBytesRefMaterializedPages(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToBytesRefMaterializedPages(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1474195710453,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testSinglePage(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSinglePage(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1474195710461,
  "executionTime": 13
 }
]

[
 "TEST_STARTED",
 "ID#testHashCode(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHashCode(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1474195710474,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testArrayOffset(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testArrayOffset(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1474195710480,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testToBytesRef(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToBytesRef(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1474195710485,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testSliceEquals(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSliceEquals(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1474195710490,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyToBytesRefIterator(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyToBytesRefIterator(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1474195710492,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSliceStreamInput(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSliceStreamInput(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1474195710494,
  "executionTime": 81
 }
]

[
 "TEST_STARTED",
 "ID#testGet(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGet(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1474195710575,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testSliceIterator(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSliceIterator(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1474195710582,
  "executionTime": 16
 }
]

[
 "TEST_STARTED",
 "ID#testSliceCopyBytesRef(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSliceCopyBytesRef(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1474195710598,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testSliceToBytesRef(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSliceToBytesRef(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1474195710608,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testHasSinglePage(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHasSinglePage(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1474195710612,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testToBytesRefSharedPage(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToBytesRefSharedPage(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1474195710614,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testStreamInputMarkAndReset(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStreamInputMarkAndReset(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1474195710619,
  "executionTime": 226
 }
]

[
 "TEST_STARTED",
 "ID#testIterator(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIterator(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1474195710845,
  "executionTime": 152
 }
]

[
 "TEST_STARTED",
 "ID#testSlice(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSlice(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1474195710997,
  "executionTime": 13
 }
]

[
 "TEST_STARTED",
 "ID#testCompareTo(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCompareTo(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1474195711011,
  "executionTime": 772
 }
]

[
 "TEST_STARTED",
 "ID#testRandomReads(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRandomReads(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1474195711783,
  "executionTime": 199
 }
]

[
 "TEST_STARTED",
 "ID#testStreamInput(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStreamInput(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1474195711982,
  "executionTime": 40
 }
]

[
 "TEST_STARTED",
 "ID#testSliceArrayOffset(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSliceArrayOffset(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1474195712023,
  "executionTime": 13
 }
]

[
 "TEST_STARTED",
 "ID#testEquals(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEquals(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1474195712036,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testWriteToOutputStream(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWriteToOutputStream(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1474195712039,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testLength(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLength(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1474195712051,
  "executionTime": 54
 }
]

[
 "TEST_STARTED",
 "ID#testBasicEquals(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBasicEquals(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1474195712106,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testIteratorRandom(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIteratorRandom(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1474195712109,
  "executionTime": 41
 }
]

[
 "TEST_STARTED",
 "ID#testStreamInputBulkReadWithOffset(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStreamInputBulkReadWithOffset(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1474195712150,
  "executionTime": 14
 }
]

[
 "TEST_STARTED",
 "ID#testCopyBytesRefSharesBytes(org.elasticsearch.common.bytes.PagedBytesReferenceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCopyBytesRefSharesBytes(org.elasticsearch.common.bytes.PagedBytesReferenceTests)",
  "startTimestamp": 1474195712164,
  "executionTime": 4
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.bytes.PagedBytesReferenceTests",
  "startTimestamp": 1474195710304,
  "executionTime": 1867
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.lucene.search.morelikethis.MoreLikeThisQueryTests",
   "displayName": "org.elasticsearch.common.lucene.search.morelikethis.MoreLikeThisQueryTests",
   "methodName": null,
   "className": "org.elasticsearch.common.lucene.search.morelikethis.MoreLikeThisQueryTests",
   "children": [
    {
     "id": "ID#testSimple(org.elasticsearch.common.lucene.search.morelikethis.MoreLikeThisQueryTests)",
     "displayName": "testSimple(org.elasticsearch.common.lucene.search.morelikethis.MoreLikeThisQueryTests)",
     "methodName": "testSimple",
     "className": "org.elasticsearch.common.lucene.search.morelikethis.MoreLikeThisQueryTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195712492
 }
]

[
 "TEST_STARTED",
 "ID#testSimple(org.elasticsearch.common.lucene.search.morelikethis.MoreLikeThisQueryTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimple(org.elasticsearch.common.lucene.search.morelikethis.MoreLikeThisQueryTests)",
  "startTimestamp": 1474195712554,
  "executionTime": 12
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.lucene.search.morelikethis.MoreLikeThisQueryTests",
  "startTimestamp": 1474195712492,
  "executionTime": 78
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.lucene.search.morelikethis.XMoreLikeThisTests",
   "displayName": "org.elasticsearch.common.lucene.search.morelikethis.XMoreLikeThisTests",
   "methodName": null,
   "className": "org.elasticsearch.common.lucene.search.morelikethis.XMoreLikeThisTests",
   "children": [
    {
     "id": "ID#testTopN(org.elasticsearch.common.lucene.search.morelikethis.XMoreLikeThisTests)",
     "displayName": "testTopN(org.elasticsearch.common.lucene.search.morelikethis.XMoreLikeThisTests)",
     "methodName": "testTopN",
     "className": "org.elasticsearch.common.lucene.search.morelikethis.XMoreLikeThisTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195712774
 }
]

[
 "TEST_STARTED",
 "ID#testTopN(org.elasticsearch.common.lucene.search.morelikethis.XMoreLikeThisTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTopN(org.elasticsearch.common.lucene.search.morelikethis.XMoreLikeThisTests)",
  "startTimestamp": 1474195712863,
  "executionTime": 246
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.lucene.search.morelikethis.XMoreLikeThisTests",
  "startTimestamp": 1474195712774,
  "executionTime": 339
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.network.InetAddressesTests",
   "displayName": "org.elasticsearch.common.network.InetAddressesTests",
   "methodName": null,
   "className": "org.elasticsearch.common.network.InetAddressesTests",
   "children": [
    {
     "id": "ID#testForStringBogusInput(org.elasticsearch.common.network.InetAddressesTests)",
     "displayName": "testForStringBogusInput(org.elasticsearch.common.network.InetAddressesTests)",
     "methodName": "testForStringBogusInput",
     "className": "org.elasticsearch.common.network.InetAddressesTests",
     "children": []
    },
    {
     "id": "ID#testForStringIPv6Input(org.elasticsearch.common.network.InetAddressesTests)",
     "displayName": "testForStringIPv6Input(org.elasticsearch.common.network.InetAddressesTests)",
     "methodName": "testForStringIPv6Input",
     "className": "org.elasticsearch.common.network.InetAddressesTests",
     "children": []
    },
    {
     "id": "ID#testForStringIPv6EightColons(org.elasticsearch.common.network.InetAddressesTests)",
     "displayName": "testForStringIPv6EightColons(org.elasticsearch.common.network.InetAddressesTests)",
     "methodName": "testForStringIPv6EightColons",
     "className": "org.elasticsearch.common.network.InetAddressesTests",
     "children": []
    },
    {
     "id": "ID#testForStringIPv4Input(org.elasticsearch.common.network.InetAddressesTests)",
     "displayName": "testForStringIPv4Input(org.elasticsearch.common.network.InetAddressesTests)",
     "methodName": "testForStringIPv4Input",
     "className": "org.elasticsearch.common.network.InetAddressesTests",
     "children": []
    },
    {
     "id": "ID#testToUriStringIPv6(org.elasticsearch.common.network.InetAddressesTests)",
     "displayName": "testToUriStringIPv6(org.elasticsearch.common.network.InetAddressesTests)",
     "methodName": "testToUriStringIPv6",
     "className": "org.elasticsearch.common.network.InetAddressesTests",
     "children": []
    },
    {
     "id": "ID#testToAddrStringIPv6(org.elasticsearch.common.network.InetAddressesTests)",
     "displayName": "testToAddrStringIPv6(org.elasticsearch.common.network.InetAddressesTests)",
     "methodName": "testToAddrStringIPv6",
     "className": "org.elasticsearch.common.network.InetAddressesTests",
     "children": []
    },
    {
     "id": "ID#testConvertDottedQuadToHex(org.elasticsearch.common.network.InetAddressesTests)",
     "displayName": "testConvertDottedQuadToHex(org.elasticsearch.common.network.InetAddressesTests)",
     "methodName": "testConvertDottedQuadToHex",
     "className": "org.elasticsearch.common.network.InetAddressesTests",
     "children": []
    },
    {
     "id": "ID#test3ff31(org.elasticsearch.common.network.InetAddressesTests)",
     "displayName": "test3ff31(org.elasticsearch.common.network.InetAddressesTests)",
     "methodName": "test3ff31",
     "className": "org.elasticsearch.common.network.InetAddressesTests",
     "children": []
    },
    {
     "id": "ID#testToUriStringIPv4(org.elasticsearch.common.network.InetAddressesTests)",
     "displayName": "testToUriStringIPv4(org.elasticsearch.common.network.InetAddressesTests)",
     "methodName": "testToUriStringIPv4",
     "className": "org.elasticsearch.common.network.InetAddressesTests",
     "children": []
    },
    {
     "id": "ID#testToAddrStringIPv4(org.elasticsearch.common.network.InetAddressesTests)",
     "displayName": "testToAddrStringIPv4(org.elasticsearch.common.network.InetAddressesTests)",
     "methodName": "testToAddrStringIPv4",
     "className": "org.elasticsearch.common.network.InetAddressesTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195713496
 }
]

[
 "TEST_STARTED",
 "ID#testForStringBogusInput(org.elasticsearch.common.network.InetAddressesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testForStringBogusInput(org.elasticsearch.common.network.InetAddressesTests)",
  "startTimestamp": 1474195713512,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testForStringIPv6Input(org.elasticsearch.common.network.InetAddressesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testForStringIPv6Input(org.elasticsearch.common.network.InetAddressesTests)",
  "startTimestamp": 1474195713516,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testForStringIPv6EightColons(org.elasticsearch.common.network.InetAddressesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testForStringIPv6EightColons(org.elasticsearch.common.network.InetAddressesTests)",
  "startTimestamp": 1474195713518,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testForStringIPv4Input(org.elasticsearch.common.network.InetAddressesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testForStringIPv4Input(org.elasticsearch.common.network.InetAddressesTests)",
  "startTimestamp": 1474195713520,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testToUriStringIPv6(org.elasticsearch.common.network.InetAddressesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToUriStringIPv6(org.elasticsearch.common.network.InetAddressesTests)",
  "startTimestamp": 1474195713522,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testToAddrStringIPv6(org.elasticsearch.common.network.InetAddressesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToAddrStringIPv6(org.elasticsearch.common.network.InetAddressesTests)",
  "startTimestamp": 1474195713523,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testConvertDottedQuadToHex(org.elasticsearch.common.network.InetAddressesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConvertDottedQuadToHex(org.elasticsearch.common.network.InetAddressesTests)",
  "startTimestamp": 1474195713525,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#test3ff31(org.elasticsearch.common.network.InetAddressesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#test3ff31(org.elasticsearch.common.network.InetAddressesTests)",
  "startTimestamp": 1474195713527,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testToUriStringIPv4(org.elasticsearch.common.network.InetAddressesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToUriStringIPv4(org.elasticsearch.common.network.InetAddressesTests)",
  "startTimestamp": 1474195713529,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testToAddrStringIPv4(org.elasticsearch.common.network.InetAddressesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToAddrStringIPv4(org.elasticsearch.common.network.InetAddressesTests)",
  "startTimestamp": 1474195713531,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.network.InetAddressesTests",
  "startTimestamp": 1474195713496,
  "executionTime": 38
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.network.NetworkAddressTests",
   "displayName": "org.elasticsearch.common.network.NetworkAddressTests",
   "methodName": null,
   "className": "org.elasticsearch.common.network.NetworkAddressTests",
   "children": [
    {
     "id": "ID#testFormatPortV6(org.elasticsearch.common.network.NetworkAddressTests)",
     "displayName": "testFormatPortV6(org.elasticsearch.common.network.NetworkAddressTests)",
     "methodName": "testFormatPortV6",
     "className": "org.elasticsearch.common.network.NetworkAddressTests",
     "children": []
    },
    {
     "id": "ID#testFormatV6(org.elasticsearch.common.network.NetworkAddressTests)",
     "displayName": "testFormatV6(org.elasticsearch.common.network.NetworkAddressTests)",
     "methodName": "testFormatV6",
     "className": "org.elasticsearch.common.network.NetworkAddressTests",
     "children": []
    },
    {
     "id": "ID#testFormatPortV4(org.elasticsearch.common.network.NetworkAddressTests)",
     "displayName": "testFormatPortV4(org.elasticsearch.common.network.NetworkAddressTests)",
     "methodName": "testFormatPortV4",
     "className": "org.elasticsearch.common.network.NetworkAddressTests",
     "children": []
    },
    {
     "id": "ID#testRoundTripV4(org.elasticsearch.common.network.NetworkAddressTests)",
     "displayName": "testRoundTripV4(org.elasticsearch.common.network.NetworkAddressTests)",
     "methodName": "testRoundTripV4",
     "className": "org.elasticsearch.common.network.NetworkAddressTests",
     "children": []
    },
    {
     "id": "ID#testNoScopeID(org.elasticsearch.common.network.NetworkAddressTests)",
     "displayName": "testNoScopeID(org.elasticsearch.common.network.NetworkAddressTests)",
     "methodName": "testNoScopeID",
     "className": "org.elasticsearch.common.network.NetworkAddressTests",
     "children": []
    },
    {
     "id": "ID#testRoundTripV6(org.elasticsearch.common.network.NetworkAddressTests)",
     "displayName": "testRoundTripV6(org.elasticsearch.common.network.NetworkAddressTests)",
     "methodName": "testRoundTripV6",
     "className": "org.elasticsearch.common.network.NetworkAddressTests",
     "children": []
    },
    {
     "id": "ID#testFormatV4(org.elasticsearch.common.network.NetworkAddressTests)",
     "displayName": "testFormatV4(org.elasticsearch.common.network.NetworkAddressTests)",
     "methodName": "testFormatV4",
     "className": "org.elasticsearch.common.network.NetworkAddressTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195713758
 }
]

[
 "TEST_STARTED",
 "ID#testFormatPortV6(org.elasticsearch.common.network.NetworkAddressTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFormatPortV6(org.elasticsearch.common.network.NetworkAddressTests)",
  "startTimestamp": 1474195713777,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFormatV6(org.elasticsearch.common.network.NetworkAddressTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFormatV6(org.elasticsearch.common.network.NetworkAddressTests)",
  "startTimestamp": 1474195713779,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFormatPortV4(org.elasticsearch.common.network.NetworkAddressTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFormatPortV4(org.elasticsearch.common.network.NetworkAddressTests)",
  "startTimestamp": 1474195713781,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRoundTripV4(org.elasticsearch.common.network.NetworkAddressTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRoundTripV4(org.elasticsearch.common.network.NetworkAddressTests)",
  "startTimestamp": 1474195713783,
  "executionTime": 39
 }
]

[
 "TEST_STARTED",
 "ID#testNoScopeID(org.elasticsearch.common.network.NetworkAddressTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoScopeID(org.elasticsearch.common.network.NetworkAddressTests)",
  "startTimestamp": 1474195713823,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testRoundTripV6(org.elasticsearch.common.network.NetworkAddressTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRoundTripV6(org.elasticsearch.common.network.NetworkAddressTests)",
  "startTimestamp": 1474195713825,
  "executionTime": 161
 }
]

[
 "TEST_STARTED",
 "ID#testFormatV4(org.elasticsearch.common.network.NetworkAddressTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFormatV4(org.elasticsearch.common.network.NetworkAddressTests)",
  "startTimestamp": 1474195713986,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.network.NetworkAddressTests",
  "startTimestamp": 1474195713758,
  "executionTime": 232
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.settings.ScopedSettingsTests",
   "displayName": "org.elasticsearch.common.settings.ScopedSettingsTests",
   "methodName": null,
   "className": "org.elasticsearch.common.settings.ScopedSettingsTests",
   "children": [
    {
     "id": "ID#testKeyPattern(org.elasticsearch.common.settings.ScopedSettingsTests)",
     "displayName": "testKeyPattern(org.elasticsearch.common.settings.ScopedSettingsTests)",
     "methodName": "testKeyPattern",
     "className": "org.elasticsearch.common.settings.ScopedSettingsTests",
     "children": []
    },
    {
     "id": "ID#testLoggingUpdates(org.elasticsearch.common.settings.ScopedSettingsTests)",
     "displayName": "testLoggingUpdates(org.elasticsearch.common.settings.ScopedSettingsTests)",
     "methodName": "testLoggingUpdates",
     "className": "org.elasticsearch.common.settings.ScopedSettingsTests",
     "children": []
    },
    {
     "id": "ID#testApply(org.elasticsearch.common.settings.ScopedSettingsTests)",
     "displayName": "testApply(org.elasticsearch.common.settings.ScopedSettingsTests)",
     "methodName": "testApply",
     "className": "org.elasticsearch.common.settings.ScopedSettingsTests",
     "children": []
    },
    {
     "id": "ID#testGetSetting(org.elasticsearch.common.settings.ScopedSettingsTests)",
     "displayName": "testGetSetting(org.elasticsearch.common.settings.ScopedSettingsTests)",
     "methodName": "testGetSetting",
     "className": "org.elasticsearch.common.settings.ScopedSettingsTests",
     "children": []
    },
    {
     "id": "ID#testValidate(org.elasticsearch.common.settings.ScopedSettingsTests)",
     "displayName": "testValidate(org.elasticsearch.common.settings.ScopedSettingsTests)",
     "methodName": "testValidate",
     "className": "org.elasticsearch.common.settings.ScopedSettingsTests",
     "children": []
    },
    {
     "id": "ID#testGet(org.elasticsearch.common.settings.ScopedSettingsTests)",
     "displayName": "testGet(org.elasticsearch.common.settings.ScopedSettingsTests)",
     "methodName": "testGet",
     "className": "org.elasticsearch.common.settings.ScopedSettingsTests",
     "children": []
    },
    {
     "id": "ID#testValidateWithSuggestion(org.elasticsearch.common.settings.ScopedSettingsTests)",
     "displayName": "testValidateWithSuggestion(org.elasticsearch.common.settings.ScopedSettingsTests)",
     "methodName": "testValidateWithSuggestion",
     "className": "org.elasticsearch.common.settings.ScopedSettingsTests",
     "children": []
    },
    {
     "id": "ID#testFallbackToLoggerLevel(org.elasticsearch.common.settings.ScopedSettingsTests)",
     "displayName": "testFallbackToLoggerLevel(org.elasticsearch.common.settings.ScopedSettingsTests)",
     "methodName": "testFallbackToLoggerLevel",
     "className": "org.elasticsearch.common.settings.ScopedSettingsTests",
     "children": []
    },
    {
     "id": "ID#testAddConsumer(org.elasticsearch.common.settings.ScopedSettingsTests)",
     "displayName": "testAddConsumer(org.elasticsearch.common.settings.ScopedSettingsTests)",
     "methodName": "testAddConsumer",
     "className": "org.elasticsearch.common.settings.ScopedSettingsTests",
     "children": []
    },
    {
     "id": "ID#testOverlappingComplexMatchSettings(org.elasticsearch.common.settings.ScopedSettingsTests)",
     "displayName": "testOverlappingComplexMatchSettings(org.elasticsearch.common.settings.ScopedSettingsTests)",
     "methodName": "testOverlappingComplexMatchSettings",
     "className": "org.elasticsearch.common.settings.ScopedSettingsTests",
     "children": []
    },
    {
     "id": "ID#testIsDynamic(org.elasticsearch.common.settings.ScopedSettingsTests)",
     "displayName": "testIsDynamic(org.elasticsearch.common.settings.ScopedSettingsTests)",
     "methodName": "testIsDynamic",
     "className": "org.elasticsearch.common.settings.ScopedSettingsTests",
     "children": []
    },
    {
     "id": "ID#testDiff(org.elasticsearch.common.settings.ScopedSettingsTests)",
     "displayName": "testDiff(org.elasticsearch.common.settings.ScopedSettingsTests)",
     "methodName": "testDiff",
     "className": "org.elasticsearch.common.settings.ScopedSettingsTests",
     "children": []
    },
    {
     "id": "ID#testUpdateTracer(org.elasticsearch.common.settings.ScopedSettingsTests)",
     "displayName": "testUpdateTracer(org.elasticsearch.common.settings.ScopedSettingsTests)",
     "methodName": "testUpdateTracer",
     "className": "org.elasticsearch.common.settings.ScopedSettingsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195714100
 }
]

[
 "TEST_STARTED",
 "ID#testKeyPattern(org.elasticsearch.common.settings.ScopedSettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testKeyPattern(org.elasticsearch.common.settings.ScopedSettingsTests)",
  "startTimestamp": 1474195714118,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testLoggingUpdates(org.elasticsearch.common.settings.ScopedSettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLoggingUpdates(org.elasticsearch.common.settings.ScopedSettingsTests)",
  "startTimestamp": 1474195714124,
  "executionTime": 18
 }
]

[
 "TEST_STARTED",
 "ID#testApply(org.elasticsearch.common.settings.ScopedSettingsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:48:34,148][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [foo.bar] from [1] to [2]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:48:34,148][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [foo.bar.baz] from [1] to [15]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testApply(org.elasticsearch.common.settings.ScopedSettingsTests)",
  "startTimestamp": 1474195714142,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testGetSetting(org.elasticsearch.common.settings.ScopedSettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGetSetting(org.elasticsearch.common.settings.ScopedSettingsTests)",
  "startTimestamp": 1474195714148,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testValidate(org.elasticsearch.common.settings.ScopedSettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidate(org.elasticsearch.common.settings.ScopedSettingsTests)",
  "startTimestamp": 1474195714158,
  "executionTime": 18
 }
]

[
 "TEST_STARTED",
 "ID#testGet(org.elasticsearch.common.settings.ScopedSettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGet(org.elasticsearch.common.settings.ScopedSettingsTests)",
  "startTimestamp": 1474195714176,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testValidateWithSuggestion(org.elasticsearch.common.settings.ScopedSettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidateWithSuggestion(org.elasticsearch.common.settings.ScopedSettingsTests)",
  "startTimestamp": 1474195714179,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testFallbackToLoggerLevel(org.elasticsearch.common.settings.ScopedSettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFallbackToLoggerLevel(org.elasticsearch.common.settings.ScopedSettingsTests)",
  "startTimestamp": 1474195714187,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testAddConsumer(org.elasticsearch.common.settings.ScopedSettingsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:48:34,201][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [foo.bar] from [1] to [2]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAddConsumer(org.elasticsearch.common.settings.ScopedSettingsTests)",
  "startTimestamp": 1474195714191,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testOverlappingComplexMatchSettings(org.elasticsearch.common.settings.ScopedSettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOverlappingComplexMatchSettings(org.elasticsearch.common.settings.ScopedSettingsTests)",
  "startTimestamp": 1474195714201,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testIsDynamic(org.elasticsearch.common.settings.ScopedSettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsDynamic(org.elasticsearch.common.settings.ScopedSettingsTests)",
  "startTimestamp": 1474195714204,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testDiff(org.elasticsearch.common.settings.ScopedSettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDiff(org.elasticsearch.common.settings.ScopedSettingsTests)",
  "startTimestamp": 1474195714207,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testUpdateTracer(org.elasticsearch.common.settings.ScopedSettingsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T11:48:34,213][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [transport.tracer.include] from [[]] to [[\"internal:index/shard/recovery/*\",\"internal:gateway/local*\"]]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUpdateTracer(org.elasticsearch.common.settings.ScopedSettingsTests)",
  "startTimestamp": 1474195714209,
  "executionTime": 4
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.settings.ScopedSettingsTests",
  "startTimestamp": 1474195714100,
  "executionTime": 116
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.settings.SettingTests",
   "displayName": "org.elasticsearch.common.settings.SettingTests",
   "methodName": null,
   "className": "org.elasticsearch.common.settings.SettingTests",
   "children": [
    {
     "id": "ID#testGet(org.elasticsearch.common.settings.SettingTests)",
     "displayName": "testGet(org.elasticsearch.common.settings.SettingTests)",
     "methodName": "testGet",
     "className": "org.elasticsearch.common.settings.SettingTests",
     "children": []
    },
    {
     "id": "ID#testAdfixKeySetting(org.elasticsearch.common.settings.SettingTests)",
     "displayName": "testAdfixKeySetting(org.elasticsearch.common.settings.SettingTests)",
     "methodName": "testAdfixKeySetting",
     "className": "org.elasticsearch.common.settings.SettingTests",
     "children": []
    },
    {
     "id": "ID#testSimpleUpdate(org.elasticsearch.common.settings.SettingTests)",
     "displayName": "testSimpleUpdate(org.elasticsearch.common.settings.SettingTests)",
     "methodName": "testSimpleUpdate",
     "className": "org.elasticsearch.common.settings.SettingTests",
     "children": []
    },
    {
     "id": "ID#testMutuallyExclusiveScopes(org.elasticsearch.common.settings.SettingTests)",
     "displayName": "testMutuallyExclusiveScopes(org.elasticsearch.common.settings.SettingTests)",
     "methodName": "testMutuallyExclusiveScopes",
     "className": "org.elasticsearch.common.settings.SettingTests",
     "children": []
    },
    {
     "id": "ID#testDynamicKeySetting(org.elasticsearch.common.settings.SettingTests)",
     "displayName": "testDynamicKeySetting(org.elasticsearch.common.settings.SettingTests)",
     "methodName": "testDynamicKeySetting",
     "className": "org.elasticsearch.common.settings.SettingTests",
     "children": []
    },
    {
     "id": "ID#testMinMaxInt(org.elasticsearch.common.settings.SettingTests)",
     "displayName": "testMinMaxInt(org.elasticsearch.common.settings.SettingTests)",
     "methodName": "testMinMaxInt",
     "className": "org.elasticsearch.common.settings.SettingTests",
     "children": []
    },
    {
     "id": "ID#testGroups(org.elasticsearch.common.settings.SettingTests)",
     "displayName": "testGroups(org.elasticsearch.common.settings.SettingTests)",
     "methodName": "testGroups",
     "className": "org.elasticsearch.common.settings.SettingTests",
     "children": []
    },
    {
     "id": "ID#testRejectNullProperties(org.elasticsearch.common.settings.SettingTests)",
     "displayName": "testRejectNullProperties(org.elasticsearch.common.settings.SettingTests)",
     "methodName": "testRejectNullProperties",
     "className": "org.elasticsearch.common.settings.SettingTests",
     "children": []
    },
    {
     "id": "ID#testType(org.elasticsearch.common.settings.SettingTests)",
     "displayName": "testType(org.elasticsearch.common.settings.SettingTests)",
     "methodName": "testType",
     "className": "org.elasticsearch.common.settings.SettingTests",
     "children": []
    },
    {
     "id": "ID#testUpdaterIsIsolated(org.elasticsearch.common.settings.SettingTests)",
     "displayName": "testUpdaterIsIsolated(org.elasticsearch.common.settings.SettingTests)",
     "methodName": "testUpdaterIsIsolated",
     "className": "org.elasticsearch.common.settings.SettingTests",
     "children": []
    },
    {
     "id": "ID#testComposite(org.elasticsearch.common.settings.SettingTests)",
     "displayName": "testComposite(org.elasticsearch.common.settings.SettingTests)",
     "methodName": "testComposite",
     "className": "org.elasticsearch.common.settings.SettingTests",
     "children": []
    },
    {
     "id": "ID#testComplexType(org.elasticsearch.common.settings.SettingTests)",
     "displayName": "testComplexType(org.elasticsearch.common.settings.SettingTests)",
     "methodName": "testComplexType",
     "className": "org.elasticsearch.common.settings.SettingTests",
     "children": []
    },
    {
     "id": "ID#testDefault(org.elasticsearch.common.settings.SettingTests)",
     "displayName": "testDefault(org.elasticsearch.common.settings.SettingTests)",
     "methodName": "testDefault",
     "className": "org.elasticsearch.common.settings.SettingTests",
     "children": []
    },
    {
     "id": "ID#testByteSize(org.elasticsearch.common.settings.SettingTests)",
     "displayName": "testByteSize(org.elasticsearch.common.settings.SettingTests)",
     "methodName": "testByteSize",
     "className": "org.elasticsearch.common.settings.SettingTests",
     "children": []
    },
    {
     "id": "ID#testListSettings(org.elasticsearch.common.settings.SettingTests)",
     "displayName": "testListSettings(org.elasticsearch.common.settings.SettingTests)",
     "methodName": "testListSettings",
     "className": "org.elasticsearch.common.settings.SettingTests",
     "children": []
    },
    {
     "id": "ID#testUpdateNotDynamic(org.elasticsearch.common.settings.SettingTests)",
     "displayName": "testUpdateNotDynamic(org.elasticsearch.common.settings.SettingTests)",
     "methodName": "testUpdateNotDynamic",
     "className": "org.elasticsearch.common.settings.SettingTests",
     "children": []
    },
    {
     "id": "ID#testListSettingAcceptsNumberSyntax(org.elasticsearch.common.settings.SettingTests)",
     "displayName": "testListSettingAcceptsNumberSyntax(org.elasticsearch.common.settings.SettingTests)",
     "methodName": "testListSettingAcceptsNumberSyntax",
     "className": "org.elasticsearch.common.settings.SettingTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195714379
 }
]

[
 "TEST_STARTED",
 "ID#testGet(org.elasticsearch.common.settings.SettingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGet(org.elasticsearch.common.settings.SettingTests)",
  "startTimestamp": 1474195714400,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testAdfixKeySetting(org.elasticsearch.common.settings.SettingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAdfixKeySetting(org.elasticsearch.common.settings.SettingTests)",
  "startTimestamp": 1474195714402,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleUpdate(org.elasticsearch.common.settings.SettingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:48:34,408][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [foo.bar] from [false] to [true]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleUpdate(org.elasticsearch.common.settings.SettingTests)",
  "startTimestamp": 1474195714406,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testMutuallyExclusiveScopes(org.elasticsearch.common.settings.SettingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMutuallyExclusiveScopes(org.elasticsearch.common.settings.SettingTests)",
  "startTimestamp": 1474195714408,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicKeySetting(org.elasticsearch.common.settings.SettingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicKeySetting(org.elasticsearch.common.settings.SettingTests)",
  "startTimestamp": 1474195714410,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testMinMaxInt(org.elasticsearch.common.settings.SettingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMinMaxInt(org.elasticsearch.common.settings.SettingTests)",
  "startTimestamp": 1474195714412,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testGroups(org.elasticsearch.common.settings.SettingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:48:34,416][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [foo.bar.] from [{}] to [{\"1\":{\"value\":\"1\"},\"2\":{\"value\":\"2\"},\"3\":{\"value\":\"3\"}}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:48:34,417][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [foo.bar.] from [{\"1\":{\"value\":\"1\"},\"2\":{\"value\":\"2\"},\"3\":{\"value\":\"3\"}}] to [{\"1\":{\"value\":\"1\"},\"2\":{\"value\":\"2\"}}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:48:34,417][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [foo.bar.] from [{\"1\":{\"value\":\"1\"},\"2\":{\"value\":\"2\"}}] to [{\"1\":{\"value\":\"1\"},\"2\":{\"value\":\"4\"}}]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGroups(org.elasticsearch.common.settings.SettingTests)",
  "startTimestamp": 1474195714414,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testRejectNullProperties(org.elasticsearch.common.settings.SettingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRejectNullProperties(org.elasticsearch.common.settings.SettingTests)",
  "startTimestamp": 1474195714418,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testType(org.elasticsearch.common.settings.SettingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testType(org.elasticsearch.common.settings.SettingTests)",
  "startTimestamp": 1474195714420,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testUpdaterIsIsolated(org.elasticsearch.common.settings.SettingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:48:34,424][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [foo.bar] from [false] to [true]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUpdaterIsIsolated(org.elasticsearch.common.settings.SettingTests)",
  "startTimestamp": 1474195714422,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testComposite(org.elasticsearch.common.settings.SettingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testComposite(org.elasticsearch.common.settings.SettingTests)",
  "startTimestamp": 1474195714424,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testComplexType(org.elasticsearch.common.settings.SettingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:48:34,430][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [foo.bar] from [] to [2]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:48:34,430][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [foo.bar] from [2] to []%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testComplexType(org.elasticsearch.common.settings.SettingTests)",
  "startTimestamp": 1474195714428,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testDefault(org.elasticsearch.common.settings.SettingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefault(org.elasticsearch.common.settings.SettingTests)",
  "startTimestamp": 1474195714431,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testByteSize(org.elasticsearch.common.settings.SettingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:48:34,436][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [a.byte.size] from [2048b] to [12b]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testByteSize(org.elasticsearch.common.settings.SettingTests)",
  "startTimestamp": 1474195714433,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testListSettings(org.elasticsearch.common.settings.SettingTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:48:34,439][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [foo.bar] from [[\"foo,bar\"]] to [[\"test\",\"test1, test2\",\"test\",\",,,,\"]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:48:34,439][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [foo.bar] from [[\"test\",\"test1, test2\",\"test\",\",,,,\"]] to [[\"123\"]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:48:34,440][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [foo.bar] from [[\"123\"]] to [[\"1\",\"2\",\"3\"]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:48:34,440][INFO ][org.elasticsearch.common.settings] [node_s_0] updating [foo.bar] from [[\"1\",\"2\",\"3\"]] to [[\"foo,bar\"]]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testListSettings(org.elasticsearch.common.settings.SettingTests)",
  "startTimestamp": 1474195714436,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testUpdateNotDynamic(org.elasticsearch.common.settings.SettingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUpdateNotDynamic(org.elasticsearch.common.settings.SettingTests)",
  "startTimestamp": 1474195714441,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testListSettingAcceptsNumberSyntax(org.elasticsearch.common.settings.SettingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testListSettingAcceptsNumberSyntax(org.elasticsearch.common.settings.SettingTests)",
  "startTimestamp": 1474195714443,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.settings.SettingTests",
  "startTimestamp": 1474195714379,
  "executionTime": 68
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.settings.SettingsFilterTests",
   "displayName": "org.elasticsearch.common.settings.SettingsFilterTests",
   "methodName": null,
   "className": "org.elasticsearch.common.settings.SettingsFilterTests",
   "children": [
    {
     "id": "ID#testSettingsFiltering(org.elasticsearch.common.settings.SettingsFilterTests)",
     "displayName": "testSettingsFiltering(org.elasticsearch.common.settings.SettingsFilterTests)",
     "methodName": "testSettingsFiltering",
     "className": "org.elasticsearch.common.settings.SettingsFilterTests",
     "children": []
    },
    {
     "id": "ID#testAddingAndRemovingFilters(org.elasticsearch.common.settings.SettingsFilterTests)",
     "displayName": "testAddingAndRemovingFilters(org.elasticsearch.common.settings.SettingsFilterTests)",
     "methodName": "testAddingAndRemovingFilters",
     "className": "org.elasticsearch.common.settings.SettingsFilterTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195714647
 }
]

[
 "TEST_STARTED",
 "ID#testSettingsFiltering(org.elasticsearch.common.settings.SettingsFilterTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSettingsFiltering(org.elasticsearch.common.settings.SettingsFilterTests)",
  "startTimestamp": 1474195714662,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testAddingAndRemovingFilters(org.elasticsearch.common.settings.SettingsFilterTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAddingAndRemovingFilters(org.elasticsearch.common.settings.SettingsFilterTests)",
  "startTimestamp": 1474195714666,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.settings.SettingsFilterTests",
  "startTimestamp": 1474195714647,
  "executionTime": 24
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.unit.RatioValueTests",
   "displayName": "org.elasticsearch.common.unit.RatioValueTests",
   "methodName": null,
   "className": "org.elasticsearch.common.unit.RatioValueTests",
   "children": [
    {
     "id": "ID#testParsing(org.elasticsearch.common.unit.RatioValueTests)",
     "displayName": "testParsing(org.elasticsearch.common.unit.RatioValueTests)",
     "methodName": "testParsing",
     "className": "org.elasticsearch.common.unit.RatioValueTests",
     "children": []
    },
    {
     "id": "ID#testNegativeCase(org.elasticsearch.common.unit.RatioValueTests)",
     "displayName": "testNegativeCase(org.elasticsearch.common.unit.RatioValueTests)",
     "methodName": "testNegativeCase",
     "className": "org.elasticsearch.common.unit.RatioValueTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195714916
 }
]

[
 "TEST_STARTED",
 "ID#testParsing(org.elasticsearch.common.unit.RatioValueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsing(org.elasticsearch.common.unit.RatioValueTests)",
  "startTimestamp": 1474195714932,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNegativeCase(org.elasticsearch.common.unit.RatioValueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNegativeCase(org.elasticsearch.common.unit.RatioValueTests)",
  "startTimestamp": 1474195714935,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.unit.RatioValueTests",
  "startTimestamp": 1474195714916,
  "executionTime": 23
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.unit.SizeValueTests",
   "displayName": "org.elasticsearch.common.unit.SizeValueTests",
   "methodName": null,
   "className": "org.elasticsearch.common.unit.SizeValueTests",
   "children": [
    {
     "id": "ID#testThatConversionWorks(org.elasticsearch.common.unit.SizeValueTests)",
     "displayName": "testThatConversionWorks(org.elasticsearch.common.unit.SizeValueTests)",
     "methodName": "testThatConversionWorks",
     "className": "org.elasticsearch.common.unit.SizeValueTests",
     "children": []
    },
    {
     "id": "ID#testThatParsingWorks(org.elasticsearch.common.unit.SizeValueTests)",
     "displayName": "testThatParsingWorks(org.elasticsearch.common.unit.SizeValueTests)",
     "methodName": "testThatParsingWorks",
     "className": "org.elasticsearch.common.unit.SizeValueTests",
     "children": []
    },
    {
     "id": "ID#testThatNegativeValuesThrowException(org.elasticsearch.common.unit.SizeValueTests)",
     "displayName": "testThatNegativeValuesThrowException(org.elasticsearch.common.unit.SizeValueTests)",
     "methodName": "testThatNegativeValuesThrowException",
     "className": "org.elasticsearch.common.unit.SizeValueTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195715186
 }
]

[
 "TEST_STARTED",
 "ID#testThatConversionWorks(org.elasticsearch.common.unit.SizeValueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatConversionWorks(org.elasticsearch.common.unit.SizeValueTests)",
  "startTimestamp": 1474195715201,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testThatParsingWorks(org.elasticsearch.common.unit.SizeValueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatParsingWorks(org.elasticsearch.common.unit.SizeValueTests)",
  "startTimestamp": 1474195715203,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testThatNegativeValuesThrowException(org.elasticsearch.common.unit.SizeValueTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatNegativeValuesThrowException(org.elasticsearch.common.unit.SizeValueTests)",
  "startTimestamp": 1474195715205,
  "executionTime": 1
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.unit.SizeValueTests",
  "startTimestamp": 1474195715186,
  "executionTime": 22
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.util.ExtensionPointTests",
   "displayName": "org.elasticsearch.common.util.ExtensionPointTests",
   "methodName": null,
   "className": "org.elasticsearch.common.util.ExtensionPointTests",
   "children": [
    {
     "id": "ID#testClassSet(org.elasticsearch.common.util.ExtensionPointTests)",
     "displayName": "testClassSet(org.elasticsearch.common.util.ExtensionPointTests)",
     "methodName": "testClassSet",
     "className": "org.elasticsearch.common.util.ExtensionPointTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195715452
 }
]

[
 "TEST_STARTED",
 "ID#testClassSet(org.elasticsearch.common.util.ExtensionPointTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClassSet(org.elasticsearch.common.util.ExtensionPointTests)",
  "startTimestamp": 1474195715466,
  "executionTime": 6
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.util.ExtensionPointTests",
  "startTimestamp": 1474195715452,
  "executionTime": 22
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.util.LongHashTests",
   "displayName": "org.elasticsearch.common.util.LongHashTests",
   "methodName": null,
   "className": "org.elasticsearch.common.util.LongHashTests",
   "children": [
    {
     "id": "ID#testFind(org.elasticsearch.common.util.LongHashTests)",
     "displayName": "testFind(org.elasticsearch.common.util.LongHashTests)",
     "methodName": "testFind",
     "className": "org.elasticsearch.common.util.LongHashTests",
     "children": []
    },
    {
     "id": "ID#testSize(org.elasticsearch.common.util.LongHashTests)",
     "displayName": "testSize(org.elasticsearch.common.util.LongHashTests)",
     "methodName": "testSize",
     "className": "org.elasticsearch.common.util.LongHashTests",
     "children": []
    },
    {
     "id": "ID#testAdd(org.elasticsearch.common.util.LongHashTests)",
     "displayName": "testAdd(org.elasticsearch.common.util.LongHashTests)",
     "methodName": "testAdd",
     "className": "org.elasticsearch.common.util.LongHashTests",
     "children": []
    },
    {
     "id": "ID#testKey(org.elasticsearch.common.util.LongHashTests)",
     "displayName": "testKey(org.elasticsearch.common.util.LongHashTests)",
     "methodName": "testKey",
     "className": "org.elasticsearch.common.util.LongHashTests",
     "children": []
    },
    {
     "id": "ID#testDuell(org.elasticsearch.common.util.LongHashTests)",
     "displayName": "testDuell(org.elasticsearch.common.util.LongHashTests)",
     "methodName": "testDuell",
     "className": "org.elasticsearch.common.util.LongHashTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195715733
 }
]

[
 "TEST_STARTED",
 "ID#testFind(org.elasticsearch.common.util.LongHashTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:48:35,754][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:48:35,783][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:48:35,783][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:48:35,787][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[7260], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:48:35,789][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:48:35,789][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:48:35,896][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:48:35,896][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:48:35,896][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[97]}, bound_addresses {local[97]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:48:35,899][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{Eoh7OJr0R8uKBx7tY9zf-A}{wp2rUSfpQbW40RG3EFgSUg}{local}{local[97]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:48:35,899][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:48:35,911][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:48:35,962][INFO ][org.elasticsearch.common.util] [node_s_0] [LongHashTests#testFind]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFind(org.elasticsearch.common.util.LongHashTests)",
  "startTimestamp": 1474195715747,
  "executionTime": 216
 }
]

[
 "TEST_STARTED",
 "ID#testSize(org.elasticsearch.common.util.LongHashTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:48:36,551][INFO ][org.elasticsearch.common.util] [node_s_0] [LongHashTests#testSize]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSize(org.elasticsearch.common.util.LongHashTests)",
  "startTimestamp": 1474195715963,
  "executionTime": 589
 }
]

[
 "TEST_STARTED",
 "ID#testAdd(org.elasticsearch.common.util.LongHashTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:48:36,604][INFO ][org.elasticsearch.common.util] [node_s_0] [LongHashTests#testAdd]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAdd(org.elasticsearch.common.util.LongHashTests)",
  "startTimestamp": 1474195716552,
  "executionTime": 55
 }
]

[
 "TEST_STARTED",
 "ID#testKey(org.elasticsearch.common.util.LongHashTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:48:36,624][INFO ][org.elasticsearch.common.util] [node_s_0] [LongHashTests#testKey]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testKey(org.elasticsearch.common.util.LongHashTests)",
  "startTimestamp": 1474195716607,
  "executionTime": 18
 }
]

[
 "TEST_STARTED",
 "ID#testDuell(org.elasticsearch.common.util.LongHashTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:48:37,904][INFO ][org.elasticsearch.common.util] [node_s_0] [LongHashTests#testDuell]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDuell(org.elasticsearch.common.util.LongHashTests)",
  "startTimestamp": 1474195716626,
  "executionTime": 1279
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:48:37,905][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:48:37,906][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:48:37,906][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:48:37,907][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.util.LongHashTests",
  "startTimestamp": 1474195715733,
  "executionTime": 2183
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.util.concurrent.PrioritizedExecutorsTests",
   "displayName": "org.elasticsearch.common.util.concurrent.PrioritizedExecutorsTests",
   "methodName": null,
   "className": "org.elasticsearch.common.util.concurrent.PrioritizedExecutorsTests",
   "children": [
    {
     "id": "ID#testPriorityQueue(org.elasticsearch.common.util.concurrent.PrioritizedExecutorsTests)",
     "displayName": "testPriorityQueue(org.elasticsearch.common.util.concurrent.PrioritizedExecutorsTests)",
     "methodName": "testPriorityQueue",
     "className": "org.elasticsearch.common.util.concurrent.PrioritizedExecutorsTests",
     "children": []
    },
    {
     "id": "ID#testSubmitPrioritizedExecutorWithMixed(org.elasticsearch.common.util.concurrent.PrioritizedExecutorsTests)",
     "displayName": "testSubmitPrioritizedExecutorWithMixed(org.elasticsearch.common.util.concurrent.PrioritizedExecutorsTests)",
     "methodName": "testSubmitPrioritizedExecutorWithMixed",
     "className": "org.elasticsearch.common.util.concurrent.PrioritizedExecutorsTests",
     "children": []
    },
    {
     "id": "ID#testExecutePrioritizedExecutorWithRunnables(org.elasticsearch.common.util.concurrent.PrioritizedExecutorsTests)",
     "displayName": "testExecutePrioritizedExecutorWithRunnables(org.elasticsearch.common.util.concurrent.PrioritizedExecutorsTests)",
     "methodName": "testExecutePrioritizedExecutorWithRunnables",
     "className": "org.elasticsearch.common.util.concurrent.PrioritizedExecutorsTests",
     "children": []
    },
    {
     "id": "ID#testTimeout(org.elasticsearch.common.util.concurrent.PrioritizedExecutorsTests)",
     "displayName": "testTimeout(org.elasticsearch.common.util.concurrent.PrioritizedExecutorsTests)",
     "methodName": "testTimeout",
     "className": "org.elasticsearch.common.util.concurrent.PrioritizedExecutorsTests",
     "children": []
    },
    {
     "id": "ID#testSubmitPrioritizedExecutorWithRunnables(org.elasticsearch.common.util.concurrent.PrioritizedExecutorsTests)",
     "displayName": "testSubmitPrioritizedExecutorWithRunnables(org.elasticsearch.common.util.concurrent.PrioritizedExecutorsTests)",
     "methodName": "testSubmitPrioritizedExecutorWithRunnables",
     "className": "org.elasticsearch.common.util.concurrent.PrioritizedExecutorsTests",
     "children": []
    },
    {
     "id": "ID#testTimeoutCleanup(org.elasticsearch.common.util.concurrent.PrioritizedExecutorsTests)",
     "displayName": "testTimeoutCleanup(org.elasticsearch.common.util.concurrent.PrioritizedExecutorsTests)",
     "methodName": "testTimeoutCleanup",
     "className": "org.elasticsearch.common.util.concurrent.PrioritizedExecutorsTests",
     "children": []
    },
    {
     "id": "ID#testSubmitPrioritizedExecutorWithCallables(org.elasticsearch.common.util.concurrent.PrioritizedExecutorsTests)",
     "displayName": "testSubmitPrioritizedExecutorWithCallables(org.elasticsearch.common.util.concurrent.PrioritizedExecutorsTests)",
     "methodName": "testSubmitPrioritizedExecutorWithCallables",
     "className": "org.elasticsearch.common.util.concurrent.PrioritizedExecutorsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195718164
 }
]

[
 "TEST_STARTED",
 "ID#testPriorityQueue(org.elasticsearch.common.util.concurrent.PrioritizedExecutorsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPriorityQueue(org.elasticsearch.common.util.concurrent.PrioritizedExecutorsTests)",
  "startTimestamp": 1474195718193,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testSubmitPrioritizedExecutorWithMixed(org.elasticsearch.common.util.concurrent.PrioritizedExecutorsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSubmitPrioritizedExecutorWithMixed(org.elasticsearch.common.util.concurrent.PrioritizedExecutorsTests)",
  "startTimestamp": 1474195718195,
  "executionTime": 28
 }
]

[
 "TEST_STARTED",
 "ID#testExecutePrioritizedExecutorWithRunnables(org.elasticsearch.common.util.concurrent.PrioritizedExecutorsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExecutePrioritizedExecutorWithRunnables(org.elasticsearch.common.util.concurrent.PrioritizedExecutorsTests)",
  "startTimestamp": 1474195718223,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testTimeout(org.elasticsearch.common.util.concurrent.PrioritizedExecutorsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTimeout(org.elasticsearch.common.util.concurrent.PrioritizedExecutorsTests)",
  "startTimestamp": 1474195718225,
  "executionTime": 242
 }
]

[
 "TEST_STARTED",
 "ID#testSubmitPrioritizedExecutorWithRunnables(org.elasticsearch.common.util.concurrent.PrioritizedExecutorsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSubmitPrioritizedExecutorWithRunnables(org.elasticsearch.common.util.concurrent.PrioritizedExecutorsTests)",
  "startTimestamp": 1474195718468,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testTimeoutCleanup(org.elasticsearch.common.util.concurrent.PrioritizedExecutorsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTimeoutCleanup(org.elasticsearch.common.util.concurrent.PrioritizedExecutorsTests)",
  "startTimestamp": 1474195718471,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testSubmitPrioritizedExecutorWithCallables(org.elasticsearch.common.util.concurrent.PrioritizedExecutorsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSubmitPrioritizedExecutorWithCallables(org.elasticsearch.common.util.concurrent.PrioritizedExecutorsTests)",
  "startTimestamp": 1474195718477,
  "executionTime": 4
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.util.concurrent.PrioritizedExecutorsTests",
  "startTimestamp": 1474195718164,
  "executionTime": 319
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.util.concurrent.PrioritizedRunnableTests",
   "displayName": "org.elasticsearch.common.util.concurrent.PrioritizedRunnableTests",
   "methodName": null,
   "className": "org.elasticsearch.common.util.concurrent.PrioritizedRunnableTests",
   "children": [
    {
     "id": "ID#testGetAgeInMillisWithRealClock(org.elasticsearch.common.util.concurrent.PrioritizedRunnableTests)",
     "displayName": "testGetAgeInMillisWithRealClock(org.elasticsearch.common.util.concurrent.PrioritizedRunnableTests)",
     "methodName": "testGetAgeInMillisWithRealClock",
     "className": "org.elasticsearch.common.util.concurrent.PrioritizedRunnableTests",
     "children": []
    },
    {
     "id": "ID#testGetAgeInMillis(org.elasticsearch.common.util.concurrent.PrioritizedRunnableTests)",
     "displayName": "testGetAgeInMillis(org.elasticsearch.common.util.concurrent.PrioritizedRunnableTests)",
     "methodName": "testGetAgeInMillis",
     "className": "org.elasticsearch.common.util.concurrent.PrioritizedRunnableTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195718704
 }
]

[
 "TEST_STARTED",
 "ID#testGetAgeInMillisWithRealClock(org.elasticsearch.common.util.concurrent.PrioritizedRunnableTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGetAgeInMillisWithRealClock(org.elasticsearch.common.util.concurrent.PrioritizedRunnableTests)",
  "startTimestamp": 1474195718719,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testGetAgeInMillis(org.elasticsearch.common.util.concurrent.PrioritizedRunnableTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGetAgeInMillis(org.elasticsearch.common.util.concurrent.PrioritizedRunnableTests)",
  "startTimestamp": 1474195718723,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.util.concurrent.PrioritizedRunnableTests",
  "startTimestamp": 1474195718704,
  "executionTime": 24
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.xcontent.support.filtering.FilterPathTests",
   "displayName": "org.elasticsearch.common.xcontent.support.filtering.FilterPathTests",
   "methodName": null,
   "className": "org.elasticsearch.common.xcontent.support.filtering.FilterPathTests",
   "children": [
    {
     "id": "ID#testStartsWithDoubleWildcardFilterPath(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)",
     "displayName": "testStartsWithDoubleWildcardFilterPath(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)",
     "methodName": "testStartsWithDoubleWildcardFilterPath",
     "className": "org.elasticsearch.common.xcontent.support.filtering.FilterPathTests",
     "children": []
    },
    {
     "id": "ID#testEmptyFilterPath(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)",
     "displayName": "testEmptyFilterPath(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)",
     "methodName": "testEmptyFilterPath",
     "className": "org.elasticsearch.common.xcontent.support.filtering.FilterPathTests",
     "children": []
    },
    {
     "id": "ID#testMultipleFilterPaths(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)",
     "displayName": "testMultipleFilterPaths(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)",
     "methodName": "testMultipleFilterPaths",
     "className": "org.elasticsearch.common.xcontent.support.filtering.FilterPathTests",
     "children": []
    },
    {
     "id": "ID#testDoubleWildcardFilterPath(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)",
     "displayName": "testDoubleWildcardFilterPath(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)",
     "methodName": "testDoubleWildcardFilterPath",
     "className": "org.elasticsearch.common.xcontent.support.filtering.FilterPathTests",
     "children": []
    },
    {
     "id": "ID#testNullFilterPath(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)",
     "displayName": "testNullFilterPath(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)",
     "methodName": "testNullFilterPath",
     "className": "org.elasticsearch.common.xcontent.support.filtering.FilterPathTests",
     "children": []
    },
    {
     "id": "ID#testSimpleFilterPath(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)",
     "displayName": "testSimpleFilterPath(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)",
     "methodName": "testSimpleFilterPath",
     "className": "org.elasticsearch.common.xcontent.support.filtering.FilterPathTests",
     "children": []
    },
    {
     "id": "ID#testWildcardInNameFilterPath(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)",
     "displayName": "testWildcardInNameFilterPath(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)",
     "methodName": "testWildcardInNameFilterPath",
     "className": "org.elasticsearch.common.xcontent.support.filtering.FilterPathTests",
     "children": []
    },
    {
     "id": "ID#testFilterPathWithEscapedDots(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)",
     "displayName": "testFilterPathWithEscapedDots(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)",
     "methodName": "testFilterPathWithEscapedDots",
     "className": "org.elasticsearch.common.xcontent.support.filtering.FilterPathTests",
     "children": []
    },
    {
     "id": "ID#testContainsDoubleWildcardFilterPath(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)",
     "displayName": "testContainsDoubleWildcardFilterPath(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)",
     "methodName": "testContainsDoubleWildcardFilterPath",
     "className": "org.elasticsearch.common.xcontent.support.filtering.FilterPathTests",
     "children": []
    },
    {
     "id": "ID#testSimpleWildcardFilterPath(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)",
     "displayName": "testSimpleWildcardFilterPath(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)",
     "methodName": "testSimpleWildcardFilterPath",
     "className": "org.elasticsearch.common.xcontent.support.filtering.FilterPathTests",
     "children": []
    },
    {
     "id": "ID#testFilterPathWithSubFields(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)",
     "displayName": "testFilterPathWithSubFields(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)",
     "methodName": "testFilterPathWithSubFields",
     "className": "org.elasticsearch.common.xcontent.support.filtering.FilterPathTests",
     "children": []
    },
    {
     "id": "ID#testFilterPathWithSubField(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)",
     "displayName": "testFilterPathWithSubField(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)",
     "methodName": "testFilterPathWithSubField",
     "className": "org.elasticsearch.common.xcontent.support.filtering.FilterPathTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195719024
 }
]

[
 "TEST_STARTED",
 "ID#testStartsWithDoubleWildcardFilterPath(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStartsWithDoubleWildcardFilterPath(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)",
  "startTimestamp": 1474195719058,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyFilterPath(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyFilterPath(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)",
  "startTimestamp": 1474195719064,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testMultipleFilterPaths(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultipleFilterPaths(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)",
  "startTimestamp": 1474195719066,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testDoubleWildcardFilterPath(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDoubleWildcardFilterPath(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)",
  "startTimestamp": 1474195719069,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testNullFilterPath(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNullFilterPath(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)",
  "startTimestamp": 1474195719070,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleFilterPath(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleFilterPath(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)",
  "startTimestamp": 1474195719072,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testWildcardInNameFilterPath(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWildcardInNameFilterPath(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)",
  "startTimestamp": 1474195719074,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFilterPathWithEscapedDots(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFilterPathWithEscapedDots(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)",
  "startTimestamp": 1474195719076,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testContainsDoubleWildcardFilterPath(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testContainsDoubleWildcardFilterPath(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)",
  "startTimestamp": 1474195719078,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleWildcardFilterPath(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleWildcardFilterPath(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)",
  "startTimestamp": 1474195719080,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testFilterPathWithSubFields(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFilterPathWithSubFields(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)",
  "startTimestamp": 1474195719082,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFilterPathWithSubField(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFilterPathWithSubField(org.elasticsearch.common.xcontent.support.filtering.FilterPathTests)",
  "startTimestamp": 1474195719084,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.xcontent.support.filtering.FilterPathTests",
  "startTimestamp": 1474195719024,
  "executionTime": 65
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests",
   "displayName": "org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests",
   "methodName": null,
   "className": "org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests",
   "children": [
    {
     "id": "ID#testSimpleArrayExclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "displayName": "testSimpleArrayExclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "methodName": "testSimpleArrayExclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSimpleFieldExclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "displayName": "testSimpleFieldExclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "methodName": "testSimpleFieldExclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSingleFieldWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "displayName": "testSingleFieldWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "methodName": "testSingleFieldWithBothExcludesIncludes",
     "className": "org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRawField(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "displayName": "testRawField(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "methodName": "testRawField",
     "className": "org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testWithLfAtEnd(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "displayName": "testWithLfAtEnd(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "methodName": "testWithLfAtEnd",
     "className": "org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSingleFieldObject(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "displayName": "testSingleFieldObject(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "methodName": "testSingleFieldObject",
     "className": "org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testObjectsInArrayWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "displayName": "testObjectsInArrayWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "methodName": "testObjectsInArrayWithBothExcludesIncludes",
     "className": "org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testArrays(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "displayName": "testArrays(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "methodName": "testArrays",
     "className": "org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSimpleArrayOfObjectsPropertyExclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "displayName": "testSimpleArrayOfObjectsPropertyExclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "methodName": "testSimpleArrayOfObjectsPropertyExclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecurseField4Inclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "displayName": "testRecurseField4Inclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "methodName": "testRecurseField4Inclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testNoFiltering(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "displayName": "testNoFiltering(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "methodName": "testNoFiltering",
     "className": "org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecursiveObjectsPropertiesWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "displayName": "testRecursiveObjectsPropertiesWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "methodName": "testRecursiveObjectsPropertiesWithBothExcludesIncludes",
     "className": "org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testNoMatch(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "displayName": "testNoMatch(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "methodName": "testNoMatch",
     "className": "org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecursiveObjectsInArrayWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "displayName": "testRecursiveObjectsInArrayWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "methodName": "testRecursiveObjectsInArrayWithBothExcludesIncludes",
     "className": "org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecurseField4Exclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "displayName": "testRecurseField4Exclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "methodName": "testRecurseField4Exclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecursiveSameObjectWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "displayName": "testRecursiveSameObjectWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "methodName": "testRecursiveSameObjectWithBothExcludesIncludes",
     "className": "org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSimpleFieldWithWildcardInclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "displayName": "testSimpleFieldWithWildcardInclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "methodName": "testSimpleFieldWithWildcardInclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSimpleArrayOfObjectsPropertyInclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "displayName": "testSimpleArrayOfObjectsPropertyInclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "methodName": "testSimpleArrayOfObjectsPropertyInclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSimpleArrayOfObjectsInclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "displayName": "testSimpleArrayOfObjectsInclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "methodName": "testSimpleArrayOfObjectsInclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecurseField1Exclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "displayName": "testRecurseField1Exclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "methodName": "testRecurseField1Exclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecurseField3Exclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "displayName": "testRecurseField3Exclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "methodName": "testRecurseField3Exclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testMultipleFieldsExclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "displayName": "testMultipleFieldsExclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "methodName": "testMultipleFieldsExclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecurseField2Inclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "displayName": "testRecurseField2Inclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "methodName": "testRecurseField2Inclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSimpleArrayInclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "displayName": "testSimpleArrayInclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "methodName": "testSimpleArrayInclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecurseField3Inclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "displayName": "testRecurseField3Inclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "methodName": "testRecurseField3Inclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSimpleFieldWithWildcardExclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "displayName": "testSimpleFieldWithWildcardExclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "methodName": "testSimpleFieldWithWildcardExclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSimpleFieldInclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "displayName": "testSimpleFieldInclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "methodName": "testSimpleFieldInclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecurseField2Exclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "displayName": "testRecurseField2Exclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "methodName": "testRecurseField2Exclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testEmptyObject(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "displayName": "testEmptyObject(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "methodName": "testEmptyObject",
     "className": "org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testRecurseField1Inclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "displayName": "testRecurseField1Inclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "methodName": "testRecurseField1Inclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testSimpleArrayOfObjectsExclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "displayName": "testSimpleArrayOfObjectsExclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "methodName": "testSimpleArrayOfObjectsExclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests",
     "children": []
    },
    {
     "id": "ID#testMultipleFieldsInclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "displayName": "testMultipleFieldsInclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
     "methodName": "testMultipleFieldsInclusive",
     "className": "org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195719321
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleArrayExclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleArrayExclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
  "startTimestamp": 1474195719353,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleFieldExclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleFieldExclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
  "startTimestamp": 1474195719356,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSingleFieldWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleFieldWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
  "startTimestamp": 1474195719358,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testRawField(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRawField(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
  "startTimestamp": 1474195719363,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testWithLfAtEnd(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWithLfAtEnd(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
  "startTimestamp": 1474195719367,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSingleFieldObject(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleFieldObject(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
  "startTimestamp": 1474195719369,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testObjectsInArrayWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testObjectsInArrayWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
  "startTimestamp": 1474195719372,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testArrays(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testArrays(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
  "startTimestamp": 1474195719374,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleArrayOfObjectsPropertyExclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleArrayOfObjectsPropertyExclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
  "startTimestamp": 1474195719379,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRecurseField4Inclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecurseField4Inclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
  "startTimestamp": 1474195719382,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNoFiltering(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoFiltering(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
  "startTimestamp": 1474195719384,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testRecursiveObjectsPropertiesWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecursiveObjectsPropertiesWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
  "startTimestamp": 1474195719387,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testNoMatch(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoMatch(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
  "startTimestamp": 1474195719389,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRecursiveObjectsInArrayWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecursiveObjectsInArrayWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
  "startTimestamp": 1474195719392,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRecurseField4Exclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecurseField4Exclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
  "startTimestamp": 1474195719394,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRecursiveSameObjectWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecursiveSameObjectWithBothExcludesIncludes(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
  "startTimestamp": 1474195719396,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleFieldWithWildcardInclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleFieldWithWildcardInclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
  "startTimestamp": 1474195719398,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleArrayOfObjectsPropertyInclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleArrayOfObjectsPropertyInclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
  "startTimestamp": 1474195719401,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleArrayOfObjectsInclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleArrayOfObjectsInclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
  "startTimestamp": 1474195719403,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRecurseField1Exclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecurseField1Exclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
  "startTimestamp": 1474195719405,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRecurseField3Exclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecurseField3Exclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
  "startTimestamp": 1474195719407,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testMultipleFieldsExclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultipleFieldsExclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
  "startTimestamp": 1474195719409,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testRecurseField2Inclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecurseField2Inclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
  "startTimestamp": 1474195719410,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleArrayInclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleArrayInclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
  "startTimestamp": 1474195719411,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testRecurseField3Inclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecurseField3Inclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
  "startTimestamp": 1474195719413,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleFieldWithWildcardExclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleFieldWithWildcardExclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
  "startTimestamp": 1474195719414,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleFieldInclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleFieldInclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
  "startTimestamp": 1474195719415,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testRecurseField2Exclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecurseField2Exclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
  "startTimestamp": 1474195719416,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyObject(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyObject(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
  "startTimestamp": 1474195719418,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testRecurseField1Inclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecurseField1Inclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
  "startTimestamp": 1474195719419,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleArrayOfObjectsExclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleArrayOfObjectsExclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
  "startTimestamp": 1474195719421,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testMultipleFieldsInclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultipleFieldsInclusive(org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests)",
  "startTimestamp": 1474195719423,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.common.xcontent.support.filtering.SmileFilteringGeneratorTests",
  "startTimestamp": 1474195719321,
  "executionTime": 106
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.fieldstats.FieldStatsTests",
   "displayName": "org.elasticsearch.fieldstats.FieldStatsTests",
   "methodName": null,
   "className": "org.elasticsearch.fieldstats.FieldStatsTests",
   "children": [
    {
     "id": "ID#testByte(org.elasticsearch.fieldstats.FieldStatsTests)",
     "displayName": "testByte(org.elasticsearch.fieldstats.FieldStatsTests)",
     "methodName": "testByte",
     "className": "org.elasticsearch.fieldstats.FieldStatsTests",
     "children": []
    },
    {
     "id": "ID#testFloat(org.elasticsearch.fieldstats.FieldStatsTests)",
     "displayName": "testFloat(org.elasticsearch.fieldstats.FieldStatsTests)",
     "methodName": "testFloat",
     "className": "org.elasticsearch.fieldstats.FieldStatsTests",
     "children": []
    },
    {
     "id": "ID#testDateFiltering_optionalFormat(org.elasticsearch.fieldstats.FieldStatsTests)",
     "displayName": "testDateFiltering_optionalFormat(org.elasticsearch.fieldstats.FieldStatsTests)",
     "methodName": "testDateFiltering_optionalFormat",
     "className": "org.elasticsearch.fieldstats.FieldStatsTests",
     "children": []
    },
    {
     "id": "ID#testMerge_notAvailable(org.elasticsearch.fieldstats.FieldStatsTests)",
     "displayName": "testMerge_notAvailable(org.elasticsearch.fieldstats.FieldStatsTests)",
     "methodName": "testMerge_notAvailable",
     "className": "org.elasticsearch.fieldstats.FieldStatsTests",
     "children": []
    },
    {
     "id": "ID#testDouble(org.elasticsearch.fieldstats.FieldStatsTests)",
     "displayName": "testDouble(org.elasticsearch.fieldstats.FieldStatsTests)",
     "methodName": "testDouble",
     "className": "org.elasticsearch.fieldstats.FieldStatsTests",
     "children": []
    },
    {
     "id": "ID#testShort(org.elasticsearch.fieldstats.FieldStatsTests)",
     "displayName": "testShort(org.elasticsearch.fieldstats.FieldStatsTests)",
     "methodName": "testShort",
     "className": "org.elasticsearch.fieldstats.FieldStatsTests",
     "children": []
    },
    {
     "id": "ID#testNumberFiltering(org.elasticsearch.fieldstats.FieldStatsTests)",
     "displayName": "testNumberFiltering(org.elasticsearch.fieldstats.FieldStatsTests)",
     "methodName": "testNumberFiltering",
     "className": "org.elasticsearch.fieldstats.FieldStatsTests",
     "children": []
    },
    {
     "id": "ID#testString(org.elasticsearch.fieldstats.FieldStatsTests)",
     "displayName": "testString(org.elasticsearch.fieldstats.FieldStatsTests)",
     "methodName": "testString",
     "className": "org.elasticsearch.fieldstats.FieldStatsTests",
     "children": []
    },
    {
     "id": "ID#testMetaFieldsNotIndexed(org.elasticsearch.fieldstats.FieldStatsTests)",
     "displayName": "testMetaFieldsNotIndexed(org.elasticsearch.fieldstats.FieldStatsTests)",
     "methodName": "testMetaFieldsNotIndexed",
     "className": "org.elasticsearch.fieldstats.FieldStatsTests",
     "children": []
    },
    {
     "id": "ID#testHalfFloat(org.elasticsearch.fieldstats.FieldStatsTests)",
     "displayName": "testHalfFloat(org.elasticsearch.fieldstats.FieldStatsTests)",
     "methodName": "testHalfFloat",
     "className": "org.elasticsearch.fieldstats.FieldStatsTests",
     "children": []
    },
    {
     "id": "ID#testInteger(org.elasticsearch.fieldstats.FieldStatsTests)",
     "displayName": "testInteger(org.elasticsearch.fieldstats.FieldStatsTests)",
     "methodName": "testInteger",
     "className": "org.elasticsearch.fieldstats.FieldStatsTests",
     "children": []
    },
    {
     "id": "ID#testMerge(org.elasticsearch.fieldstats.FieldStatsTests)",
     "displayName": "testMerge(org.elasticsearch.fieldstats.FieldStatsTests)",
     "methodName": "testMerge",
     "className": "org.elasticsearch.fieldstats.FieldStatsTests",
     "children": []
    },
    {
     "id": "ID#testLong(org.elasticsearch.fieldstats.FieldStatsTests)",
     "displayName": "testLong(org.elasticsearch.fieldstats.FieldStatsTests)",
     "methodName": "testLong",
     "className": "org.elasticsearch.fieldstats.FieldStatsTests",
     "children": []
    },
    {
     "id": "ID#testEmptyIndex(org.elasticsearch.fieldstats.FieldStatsTests)",
     "displayName": "testEmptyIndex(org.elasticsearch.fieldstats.FieldStatsTests)",
     "methodName": "testEmptyIndex",
     "className": "org.elasticsearch.fieldstats.FieldStatsTests",
     "children": []
    },
    {
     "id": "ID#testDateFiltering(org.elasticsearch.fieldstats.FieldStatsTests)",
     "displayName": "testDateFiltering(org.elasticsearch.fieldstats.FieldStatsTests)",
     "methodName": "testDateFiltering",
     "className": "org.elasticsearch.fieldstats.FieldStatsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195719642
 }
]

[
 "TEST_STARTED",
 "ID#testByte(org.elasticsearch.fieldstats.FieldStatsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:39,693][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:39,944][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:39,944][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:39,947][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[7260], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:39,949][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:39,950][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:40,262][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:40,262][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:40,263][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[98]}, bound_addresses {local[98]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:40,267][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{lnU907g5RM2doIvnceV9JA}{13W0QglBSD2cGtgzoF8sRA}{local}{local[98]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:40,268][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:40,287][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:40,317][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:40,399][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:40,430][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test1] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:40,524][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test1][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:40,545][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test2] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:40,613][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test2][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:41,275][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:41,359][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:41,375][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test1] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:41,419][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test1][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:41,437][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test2] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:41,486][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test2][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:41,830][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:41,880][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:41,896][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test1] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:41,946][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test1][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:41,963][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test2] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:42,015][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test2][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:42,326][INFO ][org.elasticsearch.fieldstats] [FieldStatsTests#testByte]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testByte(org.elasticsearch.fieldstats.FieldStatsTests)",
  "startTimestamp": 1474195719683,
  "executionTime": 2644
 }
]

[
 "TEST_STARTED",
 "ID#testFloat(org.elasticsearch.fieldstats.FieldStatsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:42,343][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:42,401][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:42,612][INFO ][org.elasticsearch.fieldstats] [FieldStatsTests#testFloat]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFloat(org.elasticsearch.fieldstats.FieldStatsTests)",
  "startTimestamp": 1474195722327,
  "executionTime": 324
 }
]

[
 "TEST_STARTED",
 "ID#testDateFiltering_optionalFormat(org.elasticsearch.fieldstats.FieldStatsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:42,659][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test1] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:42,705][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test1][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:42,734][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test2] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:42,788][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test2][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:43,348][INFO ][org.elasticsearch.fieldstats] [FieldStatsTests#testDateFiltering_optionalFormat]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDateFiltering_optionalFormat(org.elasticsearch.fieldstats.FieldStatsTests)",
  "startTimestamp": 1474195722651,
  "executionTime": 755
 }
]

[
 "TEST_STARTED",
 "ID#testMerge_notAvailable(org.elasticsearch.fieldstats.FieldStatsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:43,410][INFO ][org.elasticsearch.fieldstats] [FieldStatsTests#testMerge_notAvailable]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMerge_notAvailable(org.elasticsearch.fieldstats.FieldStatsTests)",
  "startTimestamp": 1474195723406,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testDouble(org.elasticsearch.fieldstats.FieldStatsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:43,419][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:43,483][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:43,677][INFO ][org.elasticsearch.fieldstats] [FieldStatsTests#testDouble]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDouble(org.elasticsearch.fieldstats.FieldStatsTests)",
  "startTimestamp": 1474195723411,
  "executionTime": 294
 }
]

[
 "TEST_STARTED",
 "ID#testShort(org.elasticsearch.fieldstats.FieldStatsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:43,712][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:43,757][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:43,769][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test1] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:43,810][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test1][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:43,823][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test2] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:43,870][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test2][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:44,220][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:44,280][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:44,297][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test1] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:44,461][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test1][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:44,479][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test2] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:44,536][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test2][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:44,804][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:44,844][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:44,859][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test1] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:44,900][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test1][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:44,914][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test2] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:44,959][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test2][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:45,428][INFO ][org.elasticsearch.fieldstats] [FieldStatsTests#testShort]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testShort(org.elasticsearch.fieldstats.FieldStatsTests)",
  "startTimestamp": 1474195723705,
  "executionTime": 1724
 }
]

[
 "TEST_STARTED",
 "ID#testNumberFiltering(org.elasticsearch.fieldstats.FieldStatsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:45,441][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test1] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:45,517][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test1][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:45,572][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test1/c2PPl9wUSWeby3THrSRnLQ] create_mapping [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:45,607][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test2] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:45,703][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test2][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:45,773][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test2/cPWgAHUUQd2fiL4PEIxcbg] create_mapping [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:46,834][INFO ][org.elasticsearch.fieldstats] [FieldStatsTests#testNumberFiltering]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNumberFiltering(org.elasticsearch.fieldstats.FieldStatsTests)",
  "startTimestamp": 1474195725429,
  "executionTime": 1691
 }
]

[
 "TEST_STARTED",
 "ID#testString(org.elasticsearch.fieldstats.FieldStatsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:47,130][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:47,212][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:47,438][INFO ][org.elasticsearch.fieldstats] [FieldStatsTests#testString]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testString(org.elasticsearch.fieldstats.FieldStatsTests)",
  "startTimestamp": 1474195727120,
  "executionTime": 357
 }
]

[
 "TEST_STARTED",
 "ID#testMetaFieldsNotIndexed(org.elasticsearch.fieldstats.FieldStatsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:47,484][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:47,548][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:47,564][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/lbzJlm5jThelskUYbUV1eg] create_mapping [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:47,793][INFO ][org.elasticsearch.fieldstats] [FieldStatsTests#testMetaFieldsNotIndexed]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMetaFieldsNotIndexed(org.elasticsearch.fieldstats.FieldStatsTests)",
  "startTimestamp": 1474195727477,
  "executionTime": 374
 }
]

[
 "TEST_STARTED",
 "ID#testHalfFloat(org.elasticsearch.fieldstats.FieldStatsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:47,859][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:47,911][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:48,149][INFO ][org.elasticsearch.fieldstats] [FieldStatsTests#testHalfFloat]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHalfFloat(org.elasticsearch.fieldstats.FieldStatsTests)",
  "startTimestamp": 1474195727851,
  "executionTime": 334
 }
]

[
 "TEST_STARTED",
 "ID#testInteger(org.elasticsearch.fieldstats.FieldStatsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:48,193][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:48,239][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:48,256][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test1] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:48,305][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test1][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:48,322][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test2] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:48,368][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test2][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:48,647][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:48,694][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:48,710][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test1] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:48,757][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test1][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:48,774][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test2] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:48,821][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test2][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:49,156][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:49,210][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:49,228][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test1] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:49,279][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test1][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:49,295][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test2] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:49,342][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test2][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:49,705][INFO ][org.elasticsearch.fieldstats] [FieldStatsTests#testInteger]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInteger(org.elasticsearch.fieldstats.FieldStatsTests)",
  "startTimestamp": 1474195728185,
  "executionTime": 1521
 }
]

[
 "TEST_STARTED",
 "ID#testMerge(org.elasticsearch.fieldstats.FieldStatsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:49,710][INFO ][org.elasticsearch.fieldstats] [FieldStatsTests#testMerge]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMerge(org.elasticsearch.fieldstats.FieldStatsTests)",
  "startTimestamp": 1474195729706,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testLong(org.elasticsearch.fieldstats.FieldStatsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:49,720][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:49,768][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:49,785][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test1] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:49,833][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test1][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:49,848][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test2] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:49,896][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test2][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:50,262][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:50,322][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:50,338][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test1] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:50,384][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test1][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:50,401][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test2] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:50,485][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test2][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:50,837][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:50,908][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:50,925][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test1] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:50,975][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test1][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:50,993][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test2] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:51,046][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test2][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:51,455][INFO ][org.elasticsearch.fieldstats] [FieldStatsTests#testLong]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLong(org.elasticsearch.fieldstats.FieldStatsTests)",
  "startTimestamp": 1474195729711,
  "executionTime": 1745
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyIndex(org.elasticsearch.fieldstats.FieldStatsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:51,464][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test1] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:51,559][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test1][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:51,573][INFO ][org.elasticsearch.fieldstats] [FieldStatsTests#testEmptyIndex]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyIndex(org.elasticsearch.fieldstats.FieldStatsTests)",
  "startTimestamp": 1474195731456,
  "executionTime": 145
 }
]

[
 "TEST_STARTED",
 "ID#testDateFiltering(org.elasticsearch.fieldstats.FieldStatsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:51,609][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test1] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:51,663][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test1][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:51,677][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test1/4Y4Cpc-oR8yIvhEFgSbTnA] create_mapping [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:51,705][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test2] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:51,756][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test2][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:51,771][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test2/D153xXjyRHufXUnsB_Fmtw] create_mapping [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:52,198][INFO ][org.elasticsearch.fieldstats] [FieldStatsTests#testDateFiltering]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDateFiltering(org.elasticsearch.fieldstats.FieldStatsTests)",
  "startTimestamp": 1474195731601,
  "executionTime": 680
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:52,281][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:52,282][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:52,282][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:48:52,284][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.fieldstats.FieldStatsTests",
  "startTimestamp": 1474195719642,
  "executionTime": 12651
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.AllFieldMapperTests",
   "displayName": "org.elasticsearch.index.mapper.AllFieldMapperTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.AllFieldMapperTests",
   "children": [
    {
     "id": "ID#testAllMappersNoBoost(org.elasticsearch.index.mapper.AllFieldMapperTests)",
     "displayName": "testAllMappersNoBoost(org.elasticsearch.index.mapper.AllFieldMapperTests)",
     "methodName": "testAllMappersNoBoost",
     "className": "org.elasticsearch.index.mapper.AllFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testAllMappersWithOffsetsTermQuery(org.elasticsearch.index.mapper.AllFieldMapperTests)",
     "displayName": "testAllMappersWithOffsetsTermQuery(org.elasticsearch.index.mapper.AllFieldMapperTests)",
     "methodName": "testAllMappersWithOffsetsTermQuery",
     "className": "org.elasticsearch.index.mapper.AllFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testMistypedTypeInRoot(org.elasticsearch.index.mapper.AllFieldMapperTests)",
     "displayName": "testMistypedTypeInRoot(org.elasticsearch.index.mapper.AllFieldMapperTests)",
     "methodName": "testMistypedTypeInRoot",
     "className": "org.elasticsearch.index.mapper.AllFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testAllMappersTermQuery(org.elasticsearch.index.mapper.AllFieldMapperTests)",
     "displayName": "testAllMappersTermQuery(org.elasticsearch.index.mapper.AllFieldMapperTests)",
     "methodName": "testAllMappersTermQuery",
     "className": "org.elasticsearch.index.mapper.AllFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testIncludeInObjectNotAllowed(org.elasticsearch.index.mapper.AllFieldMapperTests)",
     "displayName": "testIncludeInObjectNotAllowed(org.elasticsearch.index.mapper.AllFieldMapperTests)",
     "methodName": "testIncludeInObjectNotAllowed",
     "className": "org.elasticsearch.index.mapper.AllFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testMultiField_includeInAllSetToFalse(org.elasticsearch.index.mapper.AllFieldMapperTests)",
     "displayName": "testMultiField_includeInAllSetToFalse(org.elasticsearch.index.mapper.AllFieldMapperTests)",
     "methodName": "testMultiField_includeInAllSetToFalse",
     "className": "org.elasticsearch.index.mapper.AllFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testDocValuesNotAllowed(org.elasticsearch.index.mapper.AllFieldMapperTests)",
     "displayName": "testDocValuesNotAllowed(org.elasticsearch.index.mapper.AllFieldMapperTests)",
     "methodName": "testDocValuesNotAllowed",
     "className": "org.elasticsearch.index.mapper.AllFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testSimpleAllMappersWithReparse(org.elasticsearch.index.mapper.AllFieldMapperTests)",
     "displayName": "testSimpleAllMappersWithReparse(org.elasticsearch.index.mapper.AllFieldMapperTests)",
     "methodName": "testSimpleAllMappersWithReparse",
     "className": "org.elasticsearch.index.mapper.AllFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testMisplacedMappingAsRoot(org.elasticsearch.index.mapper.AllFieldMapperTests)",
     "displayName": "testMisplacedMappingAsRoot(org.elasticsearch.index.mapper.AllFieldMapperTests)",
     "methodName": "testMisplacedMappingAsRoot",
     "className": "org.elasticsearch.index.mapper.AllFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testSimpleAllMappers(org.elasticsearch.index.mapper.AllFieldMapperTests)",
     "displayName": "testSimpleAllMappers(org.elasticsearch.index.mapper.AllFieldMapperTests)",
     "methodName": "testSimpleAllMappers",
     "className": "org.elasticsearch.index.mapper.AllFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testAutoBoost(org.elasticsearch.index.mapper.AllFieldMapperTests)",
     "displayName": "testAutoBoost(org.elasticsearch.index.mapper.AllFieldMapperTests)",
     "methodName": "testAutoBoost",
     "className": "org.elasticsearch.index.mapper.AllFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testRandom(org.elasticsearch.index.mapper.AllFieldMapperTests)",
     "displayName": "testRandom(org.elasticsearch.index.mapper.AllFieldMapperTests)",
     "methodName": "testRandom",
     "className": "org.elasticsearch.index.mapper.AllFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testMultiField_defaults(org.elasticsearch.index.mapper.AllFieldMapperTests)",
     "displayName": "testMultiField_defaults(org.elasticsearch.index.mapper.AllFieldMapperTests)",
     "methodName": "testMultiField_defaults",
     "className": "org.elasticsearch.index.mapper.AllFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testBoostWithOmitPositions(org.elasticsearch.index.mapper.AllFieldMapperTests)",
     "displayName": "testBoostWithOmitPositions(org.elasticsearch.index.mapper.AllFieldMapperTests)",
     "methodName": "testBoostWithOmitPositions",
     "className": "org.elasticsearch.index.mapper.AllFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testNoBoost(org.elasticsearch.index.mapper.AllFieldMapperTests)",
     "displayName": "testNoBoost(org.elasticsearch.index.mapper.AllFieldMapperTests)",
     "methodName": "testNoBoost",
     "className": "org.elasticsearch.index.mapper.AllFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testSimpleAllMappersWithReparseWithStore(org.elasticsearch.index.mapper.AllFieldMapperTests)",
     "displayName": "testSimpleAllMappersWithReparseWithStore(org.elasticsearch.index.mapper.AllFieldMapperTests)",
     "methodName": "testSimpleAllMappersWithReparseWithStore",
     "className": "org.elasticsearch.index.mapper.AllFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testRootObjectMapperPropertiesDoNotCauseException(org.elasticsearch.index.mapper.AllFieldMapperTests)",
     "displayName": "testRootObjectMapperPropertiesDoNotCauseException(org.elasticsearch.index.mapper.AllFieldMapperTests)",
     "methodName": "testRootObjectMapperPropertiesDoNotCauseException",
     "className": "org.elasticsearch.index.mapper.AllFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testSimpleAllMappersWithStore(org.elasticsearch.index.mapper.AllFieldMapperTests)",
     "displayName": "testSimpleAllMappersWithStore(org.elasticsearch.index.mapper.AllFieldMapperTests)",
     "methodName": "testSimpleAllMappersWithStore",
     "className": "org.elasticsearch.index.mapper.AllFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testMisplacedTypeInRoot(org.elasticsearch.index.mapper.AllFieldMapperTests)",
     "displayName": "testMisplacedTypeInRoot(org.elasticsearch.index.mapper.AllFieldMapperTests)",
     "methodName": "testMisplacedTypeInRoot",
     "className": "org.elasticsearch.index.mapper.AllFieldMapperTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195732315
 }
]

[
 "TEST_STARTED",
 "ID#testAllMappersNoBoost(org.elasticsearch.index.mapper.AllFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:48:52,337][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:48:52,359][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:48:52,359][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:48:52,362][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[7260], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:48:52,364][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:48:52,365][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.test.InternalSettingsPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:48:52,470][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:48:52,470][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:48:52,471][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[99]}, bound_addresses {local[99]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:48:52,473][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{OeDOD-dbQaKOndgPbLu1zA}{PpSimqrYRUCvxae4ogTzbA}{local}{local[99]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:48:52,474][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:48:52,487][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:48:52,545][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:48:52,581][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:48:52,609][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [AllFieldMapperTests#testAllMappersNoBoost]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAllMappersNoBoost(org.elasticsearch.index.mapper.AllFieldMapperTests)",
  "startTimestamp": 1474195732329,
  "executionTime": 354
 }
]

[
 "TEST_STARTED",
 "ID#testAllMappersWithOffsetsTermQuery(org.elasticsearch.index.mapper.AllFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:48:52,713][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:48:52,760][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:48:52,775][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [AllFieldMapperTests#testAllMappersWithOffsetsTermQuery]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAllMappersWithOffsetsTermQuery(org.elasticsearch.index.mapper.AllFieldMapperTests)",
  "startTimestamp": 1474195732683,
  "executionTime": 140
 }
]

[
 "TEST_STARTED",
 "ID#testMistypedTypeInRoot(org.elasticsearch.index.mapper.AllFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:48:52,835][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:48:52,880][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:48:52,891][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [AllFieldMapperTests#testMistypedTypeInRoot]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMistypedTypeInRoot(org.elasticsearch.index.mapper.AllFieldMapperTests)",
  "startTimestamp": 1474195732823,
  "executionTime": 101
 }
]

[
 "TEST_STARTED",
 "ID#testAllMappersTermQuery(org.elasticsearch.index.mapper.AllFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:48:52,938][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:48:52,980][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:48:52,993][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [AllFieldMapperTests#testAllMappersTermQuery]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAllMappersTermQuery(org.elasticsearch.index.mapper.AllFieldMapperTests)",
  "startTimestamp": 1474195732925,
  "executionTime": 92
 }
]

[
 "TEST_STARTED",
 "ID#testIncludeInObjectNotAllowed(org.elasticsearch.index.mapper.AllFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:48:53,024][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:48:53,073][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:48:53,086][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [AllFieldMapperTests#testIncludeInObjectNotAllowed]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIncludeInObjectNotAllowed(org.elasticsearch.index.mapper.AllFieldMapperTests)",
  "startTimestamp": 1474195733017,
  "executionTime": 102
 }
]

[
 "TEST_STARTED",
 "ID#testMultiField_includeInAllSetToFalse(org.elasticsearch.index.mapper.AllFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:48:53,180][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:48:53,232][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:48:53,245][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [AllFieldMapperTests#testMultiField_includeInAllSetToFalse]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultiField_includeInAllSetToFalse(org.elasticsearch.index.mapper.AllFieldMapperTests)",
  "startTimestamp": 1474195733119,
  "executionTime": 190
 }
]

[
 "TEST_STARTED",
 "ID#testDocValuesNotAllowed(org.elasticsearch.index.mapper.AllFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:48:53,321][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:48:53,389][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:48:53,401][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [AllFieldMapperTests#testDocValuesNotAllowed]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDocValuesNotAllowed(org.elasticsearch.index.mapper.AllFieldMapperTests)",
  "startTimestamp": 1474195733309,
  "executionTime": 125
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleAllMappersWithReparse(org.elasticsearch.index.mapper.AllFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:48:53,441][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:48:53,485][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:48:53,521][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [AllFieldMapperTests#testSimpleAllMappersWithReparse]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleAllMappersWithReparse(org.elasticsearch.index.mapper.AllFieldMapperTests)",
  "startTimestamp": 1474195733434,
  "executionTime": 108
 }
]

[
 "TEST_STARTED",
 "ID#testMisplacedMappingAsRoot(org.elasticsearch.index.mapper.AllFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:48:53,553][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:48:53,624][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:48:53,632][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [AllFieldMapperTests#testMisplacedMappingAsRoot]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMisplacedMappingAsRoot(org.elasticsearch.index.mapper.AllFieldMapperTests)",
  "startTimestamp": 1474195733542,
  "executionTime": 110
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleAllMappers(org.elasticsearch.index.mapper.AllFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:48:53,657][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:48:53,691][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:48:53,701][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [AllFieldMapperTests#testSimpleAllMappers]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleAllMappers(org.elasticsearch.index.mapper.AllFieldMapperTests)",
  "startTimestamp": 1474195733652,
  "executionTime": 71
 }
]

[
 "TEST_STARTED",
 "ID#testAutoBoost(org.elasticsearch.index.mapper.AllFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:48:53,730][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test_false] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:48:53,765][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test_false][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:48:53,901][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test_true] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:48:53,996][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test_true][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:48:54,167][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test_true] [AllFieldMapperTests#testAutoBoost]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAutoBoost(org.elasticsearch.index.mapper.AllFieldMapperTests)",
  "startTimestamp": 1474195733723,
  "executionTime": 502
 }
]

[
 "TEST_STARTED",
 "ID#testRandom(org.elasticsearch.index.mapper.AllFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:48:54,231][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:48:54,275][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:48:54,288][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] Mapping: {\"test\":{\"_all\":{\"store_term_vector_positions\":false,\"store_term_vector_offsets\":false}}}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:48:54,290][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [AllFieldMapperTests#testRandom]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRandom(org.elasticsearch.index.mapper.AllFieldMapperTests)",
  "startTimestamp": 1474195734225,
  "executionTime": 98
 }
]

[
 "TEST_STARTED",
 "ID#testMultiField_defaults(org.elasticsearch.index.mapper.AllFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:48:54,354][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:48:54,403][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:48:54,414][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [AllFieldMapperTests#testMultiField_defaults]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultiField_defaults(org.elasticsearch.index.mapper.AllFieldMapperTests)",
  "startTimestamp": 1474195734323,
  "executionTime": 122
 }
]

[
 "TEST_STARTED",
 "ID#testBoostWithOmitPositions(org.elasticsearch.index.mapper.AllFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:48:54,478][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:48:54,537][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:48:54,553][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [AllFieldMapperTests#testBoostWithOmitPositions]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBoostWithOmitPositions(org.elasticsearch.index.mapper.AllFieldMapperTests)",
  "startTimestamp": 1474195734445,
  "executionTime": 134
 }
]

[
 "TEST_STARTED",
 "ID#testNoBoost(org.elasticsearch.index.mapper.AllFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:48:54,589][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:48:54,663][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:48:54,675][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [AllFieldMapperTests#testNoBoost]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoBoost(org.elasticsearch.index.mapper.AllFieldMapperTests)",
  "startTimestamp": 1474195734579,
  "executionTime": 123
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleAllMappersWithReparseWithStore(org.elasticsearch.index.mapper.AllFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:48:54,708][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:48:54,762][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:48:54,815][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [AllFieldMapperTests#testSimpleAllMappersWithReparseWithStore]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleAllMappersWithReparseWithStore(org.elasticsearch.index.mapper.AllFieldMapperTests)",
  "startTimestamp": 1474195734703,
  "executionTime": 172
 }
]

[
 "TEST_STARTED",
 "ID#testRootObjectMapperPropertiesDoNotCauseException(org.elasticsearch.index.mapper.AllFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:48:54,881][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:48:54,936][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:48:54,971][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [AllFieldMapperTests#testRootObjectMapperPropertiesDoNotCauseException]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRootObjectMapperPropertiesDoNotCauseException(org.elasticsearch.index.mapper.AllFieldMapperTests)",
  "startTimestamp": 1474195734875,
  "executionTime": 133
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleAllMappersWithStore(org.elasticsearch.index.mapper.AllFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:48:55,015][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:48:55,077][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:48:55,090][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [AllFieldMapperTests#testSimpleAllMappersWithStore]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleAllMappersWithStore(org.elasticsearch.index.mapper.AllFieldMapperTests)",
  "startTimestamp": 1474195735008,
  "executionTime": 121
 }
]

[
 "TEST_STARTED",
 "ID#testMisplacedTypeInRoot(org.elasticsearch.index.mapper.AllFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:48:55,139][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:48:55,203][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:48:55,214][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [AllFieldMapperTests#testMisplacedTypeInRoot]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMisplacedTypeInRoot(org.elasticsearch.index.mapper.AllFieldMapperTests)",
  "startTimestamp": 1474195735129,
  "executionTime": 122
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:48:55,251][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:48:55,251][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:48:55,252][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T17:48:55,253][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.AllFieldMapperTests",
  "startTimestamp": 1474195732315,
  "executionTime": 2949
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.DateFieldMapperTests",
   "displayName": "org.elasticsearch.index.mapper.DateFieldMapperTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.DateFieldMapperTests",
   "children": [
    {
     "id": "ID#testNullValue(org.elasticsearch.index.mapper.DateFieldMapperTests)",
     "displayName": "testNullValue(org.elasticsearch.index.mapper.DateFieldMapperTests)",
     "methodName": "testNullValue",
     "className": "org.elasticsearch.index.mapper.DateFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testChangeLocale(org.elasticsearch.index.mapper.DateFieldMapperTests)",
     "displayName": "testChangeLocale(org.elasticsearch.index.mapper.DateFieldMapperTests)",
     "methodName": "testChangeLocale",
     "className": "org.elasticsearch.index.mapper.DateFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testIncludeInAll(org.elasticsearch.index.mapper.DateFieldMapperTests)",
     "displayName": "testIncludeInAll(org.elasticsearch.index.mapper.DateFieldMapperTests)",
     "methodName": "testIncludeInAll",
     "className": "org.elasticsearch.index.mapper.DateFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testNotIndexed(org.elasticsearch.index.mapper.DateFieldMapperTests)",
     "displayName": "testNotIndexed(org.elasticsearch.index.mapper.DateFieldMapperTests)",
     "methodName": "testNotIndexed",
     "className": "org.elasticsearch.index.mapper.DateFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testNullConfigValuesFail(org.elasticsearch.index.mapper.DateFieldMapperTests)",
     "displayName": "testNullConfigValuesFail(org.elasticsearch.index.mapper.DateFieldMapperTests)",
     "methodName": "testNullConfigValuesFail",
     "className": "org.elasticsearch.index.mapper.DateFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testStore(org.elasticsearch.index.mapper.DateFieldMapperTests)",
     "displayName": "testStore(org.elasticsearch.index.mapper.DateFieldMapperTests)",
     "methodName": "testStore",
     "className": "org.elasticsearch.index.mapper.DateFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testEmptyName(org.elasticsearch.index.mapper.DateFieldMapperTests)",
     "displayName": "testEmptyName(org.elasticsearch.index.mapper.DateFieldMapperTests)",
     "methodName": "testEmptyName",
     "className": "org.elasticsearch.index.mapper.DateFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testIgnoreMalformed(org.elasticsearch.index.mapper.DateFieldMapperTests)",
     "displayName": "testIgnoreMalformed(org.elasticsearch.index.mapper.DateFieldMapperTests)",
     "methodName": "testIgnoreMalformed",
     "className": "org.elasticsearch.index.mapper.DateFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testChangeFormat(org.elasticsearch.index.mapper.DateFieldMapperTests)",
     "displayName": "testChangeFormat(org.elasticsearch.index.mapper.DateFieldMapperTests)",
     "methodName": "testChangeFormat",
     "className": "org.elasticsearch.index.mapper.DateFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testNoDocValues(org.elasticsearch.index.mapper.DateFieldMapperTests)",
     "displayName": "testNoDocValues(org.elasticsearch.index.mapper.DateFieldMapperTests)",
     "methodName": "testNoDocValues",
     "className": "org.elasticsearch.index.mapper.DateFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testDefaults(org.elasticsearch.index.mapper.DateFieldMapperTests)",
     "displayName": "testDefaults(org.elasticsearch.index.mapper.DateFieldMapperTests)",
     "methodName": "testDefaults",
     "className": "org.elasticsearch.index.mapper.DateFieldMapperTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195735374
 }
]

[
 "TEST_STARTED",
 "ID#testNullValue(org.elasticsearch.index.mapper.DateFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:48:55,400][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:48:55,420][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:48:55,420][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:48:55,423][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[7260], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:48:55,426][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:48:55,426][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.test.InternalSettingsPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:48:55,508][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:48:55,509][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:48:55,509][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[100]}, bound_addresses {local[100]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:48:55,510][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{nZLQvNyRQVGXePuLfg-O9w}{ITmfj_HYTZymxp0BSXlSVQ}{local}{local[100]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:48:55,511][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:48:55,523][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:48:55,545][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:48:55,597][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:48:55,610][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DateFieldMapperTests#testNullValue]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNullValue(org.elasticsearch.index.mapper.DateFieldMapperTests)",
  "startTimestamp": 1474195735393,
  "executionTime": 246
 }
]

[
 "TEST_STARTED",
 "ID#testChangeLocale(org.elasticsearch.index.mapper.DateFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:48:55,643][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:48:55,686][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:48:55,722][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DateFieldMapperTests#testChangeLocale]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testChangeLocale(org.elasticsearch.index.mapper.DateFieldMapperTests)",
  "startTimestamp": 1474195735639,
  "executionTime": 106
 }
]

[
 "TEST_STARTED",
 "ID#testIncludeInAll(org.elasticsearch.index.mapper.DateFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:48:55,751][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:48:55,809][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:48:55,819][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DateFieldMapperTests#testIncludeInAll]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIncludeInAll(org.elasticsearch.index.mapper.DateFieldMapperTests)",
  "startTimestamp": 1474195735746,
  "executionTime": 103
 }
]

[
 "TEST_STARTED",
 "ID#testNotIndexed(org.elasticsearch.index.mapper.DateFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:48:55,855][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:48:55,901][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:48:55,915][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DateFieldMapperTests#testNotIndexed]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNotIndexed(org.elasticsearch.index.mapper.DateFieldMapperTests)",
  "startTimestamp": 1474195735849,
  "executionTime": 101
 }
]

[
 "TEST_STARTED",
 "ID#testNullConfigValuesFail(org.elasticsearch.index.mapper.DateFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:48:55,956][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:48:55,996][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:48:56,010][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DateFieldMapperTests#testNullConfigValuesFail]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNullConfigValuesFail(org.elasticsearch.index.mapper.DateFieldMapperTests)",
  "startTimestamp": 1474195735951,
  "executionTime": 86
 }
]

[
 "TEST_STARTED",
 "ID#testStore(org.elasticsearch.index.mapper.DateFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:48:56,042][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:48:56,085][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:48:56,098][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DateFieldMapperTests#testStore]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStore(org.elasticsearch.index.mapper.DateFieldMapperTests)",
  "startTimestamp": 1474195736037,
  "executionTime": 86
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyName(org.elasticsearch.index.mapper.DateFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:48:56,129][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:48:56,177][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:48:56,194][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test_old] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:48:56,237][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test_old][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:48:56,247][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test_old] [DateFieldMapperTests#testEmptyName]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyName(org.elasticsearch.index.mapper.DateFieldMapperTests)",
  "startTimestamp": 1474195736123,
  "executionTime": 161
 }
]

[
 "TEST_STARTED",
 "ID#testIgnoreMalformed(org.elasticsearch.index.mapper.DateFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:48:56,290][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:48:56,332][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:48:56,347][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DateFieldMapperTests#testIgnoreMalformed]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIgnoreMalformed(org.elasticsearch.index.mapper.DateFieldMapperTests)",
  "startTimestamp": 1474195736284,
  "executionTime": 93
 }
]

[
 "TEST_STARTED",
 "ID#testChangeFormat(org.elasticsearch.index.mapper.DateFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:48:56,383][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:48:56,423][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:48:56,437][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DateFieldMapperTests#testChangeFormat]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testChangeFormat(org.elasticsearch.index.mapper.DateFieldMapperTests)",
  "startTimestamp": 1474195736377,
  "executionTime": 100
 }
]

[
 "TEST_STARTED",
 "ID#testNoDocValues(org.elasticsearch.index.mapper.DateFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:48:56,483][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:48:56,527][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:48:56,540][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DateFieldMapperTests#testNoDocValues]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoDocValues(org.elasticsearch.index.mapper.DateFieldMapperTests)",
  "startTimestamp": 1474195736477,
  "executionTime": 138
 }
]

[
 "TEST_STARTED",
 "ID#testDefaults(org.elasticsearch.index.mapper.DateFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:48:56,620][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:48:56,685][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:48:56,697][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DateFieldMapperTests#testDefaults]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaults(org.elasticsearch.index.mapper.DateFieldMapperTests)",
  "startTimestamp": 1474195736615,
  "executionTime": 108
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:48:56,724][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:48:56,724][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:48:56,724][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:48:56,725][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.DateFieldMapperTests",
  "startTimestamp": 1474195735374,
  "executionTime": 1616
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.DoubleIndexingDocTests",
   "displayName": "org.elasticsearch.index.mapper.DoubleIndexingDocTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.DoubleIndexingDocTests",
   "children": [
    {
     "id": "ID#testDoubleIndexingSameDoc(org.elasticsearch.index.mapper.DoubleIndexingDocTests)",
     "displayName": "testDoubleIndexingSameDoc(org.elasticsearch.index.mapper.DoubleIndexingDocTests)",
     "methodName": "testDoubleIndexingSameDoc",
     "className": "org.elasticsearch.index.mapper.DoubleIndexingDocTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195737144
 }
]

[
 "TEST_STARTED",
 "ID#testDoubleIndexingSameDoc(org.elasticsearch.index.mapper.DoubleIndexingDocTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:57,167][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:57,195][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:57,195][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:57,199][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[7260], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:57,201][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:57,201][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:57,286][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:57,286][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:57,287][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[101]}, bound_addresses {local[101]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:57,287][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{bv499HOnRxCHY-E2sSvrKg}{RDvU-yILQH6WX4rSDswwGg}{local}{local[101]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:57,288][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:57,298][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:57,316][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:57,355][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:57,367][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/tEYXy9TQTeiTRJiJRK3RJQ] create_mapping [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:57,387][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/tEYXy9TQTeiTRJiJRK3RJQ] update_mapping [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:57,413][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [DoubleIndexingDocTests#testDoubleIndexingSameDoc]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDoubleIndexingSameDoc(org.elasticsearch.index.mapper.DoubleIndexingDocTests)",
  "startTimestamp": 1474195737157,
  "executionTime": 291
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:57,448][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:57,450][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:57,451][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:48:57,454][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.DoubleIndexingDocTests",
  "startTimestamp": 1474195737144,
  "executionTime": 323
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.DynamicMappingDisabledTests",
   "displayName": "org.elasticsearch.index.mapper.DynamicMappingDisabledTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.DynamicMappingDisabledTests",
   "children": [
    {
     "id": "ID#testDynamicDisabled(org.elasticsearch.index.mapper.DynamicMappingDisabledTests)",
     "displayName": "testDynamicDisabled(org.elasticsearch.index.mapper.DynamicMappingDisabledTests)",
     "methodName": "testDynamicDisabled",
     "className": "org.elasticsearch.index.mapper.DynamicMappingDisabledTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195737659
 }
]

[
 "TEST_STARTED",
 "ID#testDynamicDisabled(org.elasticsearch.index.mapper.DynamicMappingDisabledTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:48:57,699][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:48:57,722][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:48:57,722][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:48:57,728][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[7260], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:48:57,730][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:48:57,731][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:48:57,828][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:48:57,829][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:48:57,829][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[102]}, bound_addresses {local[102]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:48:57,830][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{jp033sqETrSAwZW1U-flQg}{hgfWypT5QCGw4BZoxNZVEw}{local}{local[102]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:48:57,830][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:48:57,839][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:48:57,854][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{KPbvFWqJRpyJHT_F7nqzGg}{local}{local[578]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:48:57,858][INFO ][org.elasticsearch.index.mapper] [node_s_0] [fcoK3A5SQhe6KHc9yds9vw] [DynamicMappingDisabledTests#testDynamicDisabled]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDynamicDisabled(org.elasticsearch.index.mapper.DynamicMappingDisabledTests)",
  "startTimestamp": 1474195737684,
  "executionTime": 175
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:48:57,860][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:48:57,860][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:48:57,861][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T05:48:57,862][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.DynamicMappingDisabledTests",
  "startTimestamp": 1474195737659,
  "executionTime": 211
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.FieldNamesFieldTypeTests",
   "displayName": "org.elasticsearch.index.mapper.FieldNamesFieldTypeTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.FieldNamesFieldTypeTests",
   "children": [
    {
     "id": "ID#testFreeze(org.elasticsearch.index.mapper.FieldNamesFieldTypeTests)",
     "displayName": "testFreeze(org.elasticsearch.index.mapper.FieldNamesFieldTypeTests)",
     "methodName": "testFreeze",
     "className": "org.elasticsearch.index.mapper.FieldNamesFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckTypeName(org.elasticsearch.index.mapper.FieldNamesFieldTypeTests)",
     "displayName": "testCheckTypeName(org.elasticsearch.index.mapper.FieldNamesFieldTypeTests)",
     "methodName": "testCheckTypeName",
     "className": "org.elasticsearch.index.mapper.FieldNamesFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testClone(org.elasticsearch.index.mapper.FieldNamesFieldTypeTests)",
     "displayName": "testClone(org.elasticsearch.index.mapper.FieldNamesFieldTypeTests)",
     "methodName": "testClone",
     "className": "org.elasticsearch.index.mapper.FieldNamesFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testTermQuery(org.elasticsearch.index.mapper.FieldNamesFieldTypeTests)",
     "displayName": "testTermQuery(org.elasticsearch.index.mapper.FieldNamesFieldTypeTests)",
     "methodName": "testTermQuery",
     "className": "org.elasticsearch.index.mapper.FieldNamesFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.FieldNamesFieldTypeTests)",
     "displayName": "testCheckCompatibility(org.elasticsearch.index.mapper.FieldNamesFieldTypeTests)",
     "methodName": "testCheckCompatibility",
     "className": "org.elasticsearch.index.mapper.FieldNamesFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testEquals(org.elasticsearch.index.mapper.FieldNamesFieldTypeTests)",
     "displayName": "testEquals(org.elasticsearch.index.mapper.FieldNamesFieldTypeTests)",
     "methodName": "testEquals",
     "className": "org.elasticsearch.index.mapper.FieldNamesFieldTypeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195737918
 }
]

[
 "TEST_STARTED",
 "ID#testFreeze(org.elasticsearch.index.mapper.FieldNamesFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFreeze(org.elasticsearch.index.mapper.FieldNamesFieldTypeTests)",
  "startTimestamp": 1474195737937,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCheckTypeName(org.elasticsearch.index.mapper.FieldNamesFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckTypeName(org.elasticsearch.index.mapper.FieldNamesFieldTypeTests)",
  "startTimestamp": 1474195737939,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testClone(org.elasticsearch.index.mapper.FieldNamesFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClone(org.elasticsearch.index.mapper.FieldNamesFieldTypeTests)",
  "startTimestamp": 1474195737946,
  "executionTime": 11
 }
]

[
 "TEST_STARTED",
 "ID#testTermQuery(org.elasticsearch.index.mapper.FieldNamesFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTermQuery(org.elasticsearch.index.mapper.FieldNamesFieldTypeTests)",
  "startTimestamp": 1474195737957,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testCheckCompatibility(org.elasticsearch.index.mapper.FieldNamesFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.FieldNamesFieldTypeTests)",
  "startTimestamp": 1474195737960,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEquals(org.elasticsearch.index.mapper.FieldNamesFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEquals(org.elasticsearch.index.mapper.FieldNamesFieldTypeTests)",
  "startTimestamp": 1474195737962,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.FieldNamesFieldTypeTests",
  "startTimestamp": 1474195737918,
  "executionTime": 48
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.FieldTypeLookupTests",
   "displayName": "org.elasticsearch.index.mapper.FieldTypeLookupTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.FieldTypeLookupTests",
   "children": [
    {
     "id": "ID#testAddExistingIndexName(org.elasticsearch.index.mapper.FieldTypeLookupTests)",
     "displayName": "testAddExistingIndexName(org.elasticsearch.index.mapper.FieldTypeLookupTests)",
     "methodName": "testAddExistingIndexName",
     "className": "org.elasticsearch.index.mapper.FieldTypeLookupTests",
     "children": []
    },
    {
     "id": "ID#testCheckCompatibilityMismatchedTypes(org.elasticsearch.index.mapper.FieldTypeLookupTests)",
     "displayName": "testCheckCompatibilityMismatchedTypes(org.elasticsearch.index.mapper.FieldTypeLookupTests)",
     "methodName": "testCheckCompatibilityMismatchedTypes",
     "className": "org.elasticsearch.index.mapper.FieldTypeLookupTests",
     "children": []
    },
    {
     "id": "ID#testCheckCompatibilityConflict(org.elasticsearch.index.mapper.FieldTypeLookupTests)",
     "displayName": "testCheckCompatibilityConflict(org.elasticsearch.index.mapper.FieldTypeLookupTests)",
     "methodName": "testCheckCompatibilityConflict",
     "className": "org.elasticsearch.index.mapper.FieldTypeLookupTests",
     "children": []
    },
    {
     "id": "ID#testAddNewField(org.elasticsearch.index.mapper.FieldTypeLookupTests)",
     "displayName": "testAddNewField(org.elasticsearch.index.mapper.FieldTypeLookupTests)",
     "methodName": "testAddNewField",
     "className": "org.elasticsearch.index.mapper.FieldTypeLookupTests",
     "children": []
    },
    {
     "id": "ID#testSimpleMatchFullNames(org.elasticsearch.index.mapper.FieldTypeLookupTests)",
     "displayName": "testSimpleMatchFullNames(org.elasticsearch.index.mapper.FieldTypeLookupTests)",
     "methodName": "testSimpleMatchFullNames",
     "className": "org.elasticsearch.index.mapper.FieldTypeLookupTests",
     "children": []
    },
    {
     "id": "ID#testEmpty(org.elasticsearch.index.mapper.FieldTypeLookupTests)",
     "displayName": "testEmpty(org.elasticsearch.index.mapper.FieldTypeLookupTests)",
     "methodName": "testEmpty",
     "className": "org.elasticsearch.index.mapper.FieldTypeLookupTests",
     "children": []
    },
    {
     "id": "ID#testAddExistingFullName(org.elasticsearch.index.mapper.FieldTypeLookupTests)",
     "displayName": "testAddExistingFullName(org.elasticsearch.index.mapper.FieldTypeLookupTests)",
     "methodName": "testAddExistingFullName",
     "className": "org.elasticsearch.index.mapper.FieldTypeLookupTests",
     "children": []
    },
    {
     "id": "ID#testAddExistingField(org.elasticsearch.index.mapper.FieldTypeLookupTests)",
     "displayName": "testAddExistingField(org.elasticsearch.index.mapper.FieldTypeLookupTests)",
     "methodName": "testAddExistingField",
     "className": "org.elasticsearch.index.mapper.FieldTypeLookupTests",
     "children": []
    },
    {
     "id": "ID#testIteratorImmutable(org.elasticsearch.index.mapper.FieldTypeLookupTests)",
     "displayName": "testIteratorImmutable(org.elasticsearch.index.mapper.FieldTypeLookupTests)",
     "methodName": "testIteratorImmutable",
     "className": "org.elasticsearch.index.mapper.FieldTypeLookupTests",
     "children": []
    },
    {
     "id": "ID#testDefaultMapping(org.elasticsearch.index.mapper.FieldTypeLookupTests)",
     "displayName": "testDefaultMapping(org.elasticsearch.index.mapper.FieldTypeLookupTests)",
     "methodName": "testDefaultMapping",
     "className": "org.elasticsearch.index.mapper.FieldTypeLookupTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195738197
 }
]

[
 "TEST_STARTED",
 "ID#testAddExistingIndexName(org.elasticsearch.index.mapper.FieldTypeLookupTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAddExistingIndexName(org.elasticsearch.index.mapper.FieldTypeLookupTests)",
  "startTimestamp": 1474195738255,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCheckCompatibilityMismatchedTypes(org.elasticsearch.index.mapper.FieldTypeLookupTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckCompatibilityMismatchedTypes(org.elasticsearch.index.mapper.FieldTypeLookupTests)",
  "startTimestamp": 1474195738257,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCheckCompatibilityConflict(org.elasticsearch.index.mapper.FieldTypeLookupTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckCompatibilityConflict(org.elasticsearch.index.mapper.FieldTypeLookupTests)",
  "startTimestamp": 1474195738259,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testAddNewField(org.elasticsearch.index.mapper.FieldTypeLookupTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAddNewField(org.elasticsearch.index.mapper.FieldTypeLookupTests)",
  "startTimestamp": 1474195738261,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleMatchFullNames(org.elasticsearch.index.mapper.FieldTypeLookupTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleMatchFullNames(org.elasticsearch.index.mapper.FieldTypeLookupTests)",
  "startTimestamp": 1474195738263,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEmpty(org.elasticsearch.index.mapper.FieldTypeLookupTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmpty(org.elasticsearch.index.mapper.FieldTypeLookupTests)",
  "startTimestamp": 1474195738265,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testAddExistingFullName(org.elasticsearch.index.mapper.FieldTypeLookupTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAddExistingFullName(org.elasticsearch.index.mapper.FieldTypeLookupTests)",
  "startTimestamp": 1474195738266,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testAddExistingField(org.elasticsearch.index.mapper.FieldTypeLookupTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAddExistingField(org.elasticsearch.index.mapper.FieldTypeLookupTests)",
  "startTimestamp": 1474195738268,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIteratorImmutable(org.elasticsearch.index.mapper.FieldTypeLookupTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIteratorImmutable(org.elasticsearch.index.mapper.FieldTypeLookupTests)",
  "startTimestamp": 1474195738271,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultMapping(org.elasticsearch.index.mapper.FieldTypeLookupTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultMapping(org.elasticsearch.index.mapper.FieldTypeLookupTests)",
  "startTimestamp": 1474195738272,
  "executionTime": 4
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.FieldTypeLookupTests",
  "startTimestamp": 1474195738197,
  "executionTime": 82
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.GenericStoreDynamicTemplateTests",
   "displayName": "org.elasticsearch.index.mapper.GenericStoreDynamicTemplateTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.GenericStoreDynamicTemplateTests",
   "children": [
    {
     "id": "ID#testSimple(org.elasticsearch.index.mapper.GenericStoreDynamicTemplateTests)",
     "displayName": "testSimple(org.elasticsearch.index.mapper.GenericStoreDynamicTemplateTests)",
     "methodName": "testSimple",
     "className": "org.elasticsearch.index.mapper.GenericStoreDynamicTemplateTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195738451
 }
]

[
 "TEST_STARTED",
 "ID#testSimple(org.elasticsearch.index.mapper.GenericStoreDynamicTemplateTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:48:58,473][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:48:58,504][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:48:58,504][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:48:58,508][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[7260], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:48:58,511][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:48:58,511][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:48:58,601][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:48:58,601][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:48:58,601][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[103]}, bound_addresses {local[103]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:48:58,602][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{UiC5ssaFSZywEYjTaiTYVQ}{YYwiQOzNSmKlcoDwAfQ2lQ}{local}{local[103]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:48:58,602][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:48:58,611][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:48:58,665][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:48:58,721][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:48:58,736][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/nV80xJeQR8-tR9jfCOWtqA] create_mapping [person]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:48:58,758][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/nV80xJeQR8-tR9jfCOWtqA] update_mapping [person]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:48:58,771][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [GenericStoreDynamicTemplateTests#testSimple]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimple(org.elasticsearch.index.mapper.GenericStoreDynamicTemplateTests)",
  "startTimestamp": 1474195738463,
  "executionTime": 338
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:48:58,802][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:48:58,814][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:48:58,815][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T14:48:58,816][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.GenericStoreDynamicTemplateTests",
  "startTimestamp": 1474195738451,
  "executionTime": 371
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.GeoEncodingTests",
   "displayName": "org.elasticsearch.index.mapper.GeoEncodingTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.GeoEncodingTests",
   "children": [
    {
     "id": "ID#test(org.elasticsearch.index.mapper.GeoEncodingTests)",
     "displayName": "test(org.elasticsearch.index.mapper.GeoEncodingTests)",
     "methodName": "test",
     "className": "org.elasticsearch.index.mapper.GeoEncodingTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195738965
 }
]

[
 "TEST_STARTED",
 "ID#test(org.elasticsearch.index.mapper.GeoEncodingTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#test(org.elasticsearch.index.mapper.GeoEncodingTests)",
  "startTimestamp": 1474195738978,
  "executionTime": 95
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.GeoEncodingTests",
  "startTimestamp": 1474195738965,
  "executionTime": 112
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.GeoPointFieldMapperTests",
   "displayName": "org.elasticsearch.index.mapper.GeoPointFieldMapperTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.GeoPointFieldMapperTests",
   "children": [
    {
     "id": "ID#testLatLonInOneValue(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
     "displayName": "testLatLonInOneValue(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
     "methodName": "testLatLonInOneValue",
     "className": "org.elasticsearch.index.mapper.GeoPointFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testNormalizeLatLonValuesDefault(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
     "displayName": "testNormalizeLatLonValuesDefault(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
     "methodName": "testNormalizeLatLonValuesDefault",
     "className": "org.elasticsearch.index.mapper.GeoPointFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testLatLonValuesStored(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
     "displayName": "testLatLonValuesStored(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
     "methodName": "testLatLonValuesStored",
     "className": "org.elasticsearch.index.mapper.GeoPointFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testLonLatArrayArrayStored(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
     "displayName": "testLonLatArrayArrayStored(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
     "methodName": "testLonLatArrayArrayStored",
     "className": "org.elasticsearch.index.mapper.GeoPointFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testOptionDeprecation(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
     "displayName": "testOptionDeprecation(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
     "methodName": "testOptionDeprecation",
     "className": "org.elasticsearch.index.mapper.GeoPointFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testLatLonInOneValueWithGeohash(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
     "displayName": "testLatLonInOneValueWithGeohash(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
     "methodName": "testLatLonInOneValueWithGeohash",
     "className": "org.elasticsearch.index.mapper.GeoPointFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testEmptyName(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
     "displayName": "testEmptyName(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
     "methodName": "testEmptyName",
     "className": "org.elasticsearch.index.mapper.GeoPointFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testLatLonValuesWithGeohash(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
     "displayName": "testLatLonValuesWithGeohash(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
     "methodName": "testLatLonValuesWithGeohash",
     "className": "org.elasticsearch.index.mapper.GeoPointFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testGeoHashSearchWithPrefix(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
     "displayName": "testGeoHashSearchWithPrefix(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
     "methodName": "testGeoHashSearchWithPrefix",
     "className": "org.elasticsearch.index.mapper.GeoPointFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testGeoPointMapperMerge(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
     "displayName": "testGeoPointMapperMerge(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
     "methodName": "testGeoPointMapperMerge",
     "className": "org.elasticsearch.index.mapper.GeoPointFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testGeoHashValue(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
     "displayName": "testGeoHashValue(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
     "methodName": "testGeoHashValue",
     "className": "org.elasticsearch.index.mapper.GeoPointFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testNoValidateLatLonValues(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
     "displayName": "testNoValidateLatLonValues(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
     "methodName": "testNoValidateLatLonValues",
     "className": "org.elasticsearch.index.mapper.GeoPointFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testLatLonValues(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
     "displayName": "testLatLonValues(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
     "methodName": "testLatLonValues",
     "className": "org.elasticsearch.index.mapper.GeoPointFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testLonLatArray(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
     "displayName": "testLonLatArray(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
     "methodName": "testLonLatArray",
     "className": "org.elasticsearch.index.mapper.GeoPointFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testGeoHashIndexValue(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
     "displayName": "testGeoHashIndexValue(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
     "methodName": "testGeoHashIndexValue",
     "className": "org.elasticsearch.index.mapper.GeoPointFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testGeoHashSearch(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
     "displayName": "testGeoHashSearch(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
     "methodName": "testGeoHashSearch",
     "className": "org.elasticsearch.index.mapper.GeoPointFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testValidateLatLonValues(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
     "displayName": "testValidateLatLonValues(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
     "methodName": "testValidateLatLonValues",
     "className": "org.elasticsearch.index.mapper.GeoPointFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testLatLonInOneValueArray(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
     "displayName": "testLatLonInOneValueArray(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
     "methodName": "testLatLonInOneValueArray",
     "className": "org.elasticsearch.index.mapper.GeoPointFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testLonLatArrayStored(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
     "displayName": "testLonLatArrayStored(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
     "methodName": "testLonLatArrayStored",
     "className": "org.elasticsearch.index.mapper.GeoPointFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testLatLonInOneValueStored(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
     "displayName": "testLatLonInOneValueStored(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
     "methodName": "testLatLonInOneValueStored",
     "className": "org.elasticsearch.index.mapper.GeoPointFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testArrayLatLonValues(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
     "displayName": "testArrayLatLonValues(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
     "methodName": "testArrayLatLonValues",
     "className": "org.elasticsearch.index.mapper.GeoPointFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testLonLatArrayDynamic(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
     "displayName": "testLonLatArrayDynamic(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
     "methodName": "testLonLatArrayDynamic",
     "className": "org.elasticsearch.index.mapper.GeoPointFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testMultiField(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
     "displayName": "testMultiField(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
     "methodName": "testMultiField",
     "className": "org.elasticsearch.index.mapper.GeoPointFieldMapperTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195739246
 }
]

[
 "TEST_STARTED",
 "ID#testLatLonInOneValue(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:48:59,341][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:48:59,369][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:48:59,370][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:48:59,373][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[7260], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:48:59,389][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:48:59,389][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.test.InternalSettingsPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:48:59,609][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:48:59,609][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:48:59,609][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[104]}, bound_addresses {local[104]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:48:59,610][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{SsEAP2VaQySRNY8zpIDwiw}{ajMxx_9KTUmwEquR3j-9Ng}{local}{local[104]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:48:59,611][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:48:59,629][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:48:59,652][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:48:59,997][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:00,015][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:00,016][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [GeoPointFieldMapperTests#testLatLonInOneValue]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLatLonInOneValue(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
  "startTimestamp": 1474195739270,
  "executionTime": 816
 }
]

[
 "TEST_STARTED",
 "ID#testNormalizeLatLonValuesDefault(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:00,094][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:00,175][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:00,191][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [GeoPointFieldMapperTests#testNormalizeLatLonValuesDefault]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNormalizeLatLonValuesDefault(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
  "startTimestamp": 1474195740087,
  "executionTime": 179
 }
]

[
 "TEST_STARTED",
 "ID#testLatLonValuesStored(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:00,272][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:00,338][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:00,356][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:00,356][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [GeoPointFieldMapperTests#testLatLonValuesStored]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLatLonValuesStored(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
  "startTimestamp": 1474195740266,
  "executionTime": 178
 }
]

[
 "TEST_STARTED",
 "ID#testLonLatArrayArrayStored(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:00,450][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:00,572][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:00,629][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:00,630][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [GeoPointFieldMapperTests#testLonLatArrayArrayStored]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLonLatArrayArrayStored(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
  "startTimestamp": 1474195740444,
  "executionTime": 249
 }
]

[
 "TEST_STARTED",
 "ID#testOptionDeprecation(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:00,699][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:01,014][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:01,071][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:01,071][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:01,071][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:01,071][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:01,072][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:01,072][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:01,072][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:01,073][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:01,073][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:01,073][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:01,074][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:01,074][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:01,074][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [GeoPointFieldMapperTests#testOptionDeprecation]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOptionDeprecation(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
  "startTimestamp": 1474195740693,
  "executionTime": 438
 }
]

[
 "TEST_STARTED",
 "ID#testLatLonInOneValueWithGeohash(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:01,157][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:01,325][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:01,352][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:01,352][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:01,353][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [GeoPointFieldMapperTests#testLatLonInOneValueWithGeohash]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLatLonInOneValueWithGeohash(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
  "startTimestamp": 1474195741132,
  "executionTime": 257
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyName(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:01,394][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:01,454][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:01,468][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:01,476][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test_old] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:01,580][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test_old][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:01,683][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test_old] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:01,683][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test_old] [GeoPointFieldMapperTests#testEmptyName]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyName(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
  "startTimestamp": 1474195741389,
  "executionTime": 510
 }
]

[
 "TEST_STARTED",
 "ID#testLatLonValuesWithGeohash(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:01,908][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:01,985][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:01,997][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:01,998][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:01,998][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [GeoPointFieldMapperTests#testLatLonValuesWithGeohash]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLatLonValuesWithGeohash(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
  "startTimestamp": 1474195741899,
  "executionTime": 130
 }
]

[
 "TEST_STARTED",
 "ID#testGeoHashSearchWithPrefix(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:02,036][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point geohash_precision parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:02,036][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:02,038][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:02,038][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:02,038][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point geohash_precision parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:02,039][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [pin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:02,056][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:02,056][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:02,056][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point geohash_precision parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:02,059][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:02,059][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:02,059][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point geohash_precision parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:02,175][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:02,769][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [GeoPointFieldMapperTests#testGeoHashSearchWithPrefix]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGeoHashSearchWithPrefix(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
  "startTimestamp": 1474195742029,
  "executionTime": 773
 }
]

[
 "TEST_STARTED",
 "ID#testGeoPointMapperMerge(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:02,810][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:02,884][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:02,928][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:02,928][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:02,929][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:02,929][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:02,930][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:02,930][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:02,931][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:02,931][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:02,932][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:02,932][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:02,933][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [GeoPointFieldMapperTests#testGeoPointMapperMerge]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGeoPointMapperMerge(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
  "startTimestamp": 1474195742803,
  "executionTime": 216
 }
]

[
 "TEST_STARTED",
 "ID#testGeoHashValue(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:03,026][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:03,090][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:03,114][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:03,115][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [GeoPointFieldMapperTests#testGeoHashValue]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGeoHashValue(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
  "startTimestamp": 1474195743019,
  "executionTime": 137
 }
]

[
 "TEST_STARTED",
 "ID#testNoValidateLatLonValues(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:03,164][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:03,734][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:03,934][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:03,935][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [GeoPointFieldMapperTests#testNoValidateLatLonValues]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoValidateLatLonValues(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
  "startTimestamp": 1474195743157,
  "executionTime": 1039
 }
]

[
 "TEST_STARTED",
 "ID#testLatLonValues(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:04,204][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:04,339][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:04,352][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:04,353][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [GeoPointFieldMapperTests#testLatLonValues]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLatLonValues(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
  "startTimestamp": 1474195744197,
  "executionTime": 201
 }
]

[
 "TEST_STARTED",
 "ID#testLonLatArray(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:04,404][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:04,821][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:04,834][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:04,835][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [GeoPointFieldMapperTests#testLonLatArray]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLonLatArray(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
  "startTimestamp": 1474195744398,
  "executionTime": 773
 }
]

[
 "TEST_STARTED",
 "ID#testGeoHashIndexValue(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:05,178][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:05,403][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:05,648][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:05,648][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:05,649][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [GeoPointFieldMapperTests#testGeoHashIndexValue]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGeoHashIndexValue(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
  "startTimestamp": 1474195745171,
  "executionTime": 877
 }
]

[
 "TEST_STARTED",
 "ID#testGeoHashSearch(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:06,061][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:06,061][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point geohash_precision parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:06,062][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:06,062][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point geohash_precision parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:06,063][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [pin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:06,067][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:06,067][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point geohash_precision parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:06,068][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:06,068][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point geohash_precision parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:06,268][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:06,552][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [GeoPointFieldMapperTests#testGeoHashSearch]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGeoHashSearch(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
  "startTimestamp": 1474195746048,
  "executionTime": 650
 }
]

[
 "TEST_STARTED",
 "ID#testValidateLatLonValues(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:06,707][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:06,875][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:06,889][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:06,891][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [GeoPointFieldMapperTests#testValidateLatLonValues]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidateLatLonValues(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
  "startTimestamp": 1474195746698,
  "executionTime": 251
 }
]

[
 "TEST_STARTED",
 "ID#testLatLonInOneValueArray(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:06,957][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:07,047][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:07,076][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:07,077][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [GeoPointFieldMapperTests#testLatLonInOneValueArray]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLatLonInOneValueArray(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
  "startTimestamp": 1474195746949,
  "executionTime": 179
 }
]

[
 "TEST_STARTED",
 "ID#testLonLatArrayStored(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:07,135][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:07,218][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:07,235][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:07,239][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [GeoPointFieldMapperTests#testLonLatArrayStored]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLonLatArrayStored(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
  "startTimestamp": 1474195747128,
  "executionTime": 152
 }
]

[
 "TEST_STARTED",
 "ID#testLatLonInOneValueStored(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:07,287][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:07,358][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:07,374][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:07,374][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [GeoPointFieldMapperTests#testLatLonInOneValueStored]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLatLonInOneValueStored(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
  "startTimestamp": 1474195747281,
  "executionTime": 125
 }
]

[
 "TEST_STARTED",
 "ID#testArrayLatLonValues(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:07,413][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:07,491][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:07,509][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:07,509][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [GeoPointFieldMapperTests#testArrayLatLonValues]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testArrayLatLonValues(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
  "startTimestamp": 1474195747407,
  "executionTime": 137
 }
]

[
 "TEST_STARTED",
 "ID#testLonLatArrayDynamic(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:07,550][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:07,608][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:07,634][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:07,634][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [GeoPointFieldMapperTests#testLonLatArrayDynamic]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLonLatArrayDynamic(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
  "startTimestamp": 1474195747544,
  "executionTime": 135
 }
]

[
 "TEST_STARTED",
 "ID#testMultiField(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:07,685][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:07,685][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point geohash_precision parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:07,685][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:07,687][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:07,687][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:07,687][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:07,688][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [pin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:07,691][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:07,691][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:07,691][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:07,692][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:07,692][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:07,692][WARN ][org.elasticsearch.deprecation.index.mapper] [node_s_0] [test] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:07,806][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:11,023][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [GeoPointFieldMapperTests#testMultiField]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultiField(org.elasticsearch.index.mapper.GeoPointFieldMapperTests)",
  "startTimestamp": 1474195747679,
  "executionTime": 3626
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:11,305][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:11,305][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:11,306][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:11,307][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.GeoPointFieldMapperTests",
  "startTimestamp": 1474195739246,
  "executionTime": 12082
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.KeywordFieldTypeTests",
   "displayName": "org.elasticsearch.index.mapper.KeywordFieldTypeTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.KeywordFieldTypeTests",
   "children": [
    {
     "id": "ID#testClone(org.elasticsearch.index.mapper.KeywordFieldTypeTests)",
     "displayName": "testClone(org.elasticsearch.index.mapper.KeywordFieldTypeTests)",
     "methodName": "testClone",
     "className": "org.elasticsearch.index.mapper.KeywordFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testFuzzyQuery(org.elasticsearch.index.mapper.KeywordFieldTypeTests)",
     "displayName": "testFuzzyQuery(org.elasticsearch.index.mapper.KeywordFieldTypeTests)",
     "methodName": "testFuzzyQuery",
     "className": "org.elasticsearch.index.mapper.KeywordFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testFreeze(org.elasticsearch.index.mapper.KeywordFieldTypeTests)",
     "displayName": "testFreeze(org.elasticsearch.index.mapper.KeywordFieldTypeTests)",
     "methodName": "testFreeze",
     "className": "org.elasticsearch.index.mapper.KeywordFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testEquals(org.elasticsearch.index.mapper.KeywordFieldTypeTests)",
     "displayName": "testEquals(org.elasticsearch.index.mapper.KeywordFieldTypeTests)",
     "methodName": "testEquals",
     "className": "org.elasticsearch.index.mapper.KeywordFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testTermsQuery(org.elasticsearch.index.mapper.KeywordFieldTypeTests)",
     "displayName": "testTermsQuery(org.elasticsearch.index.mapper.KeywordFieldTypeTests)",
     "methodName": "testTermsQuery",
     "className": "org.elasticsearch.index.mapper.KeywordFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testRegexpQuery(org.elasticsearch.index.mapper.KeywordFieldTypeTests)",
     "displayName": "testRegexpQuery(org.elasticsearch.index.mapper.KeywordFieldTypeTests)",
     "methodName": "testRegexpQuery",
     "className": "org.elasticsearch.index.mapper.KeywordFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckTypeName(org.elasticsearch.index.mapper.KeywordFieldTypeTests)",
     "displayName": "testCheckTypeName(org.elasticsearch.index.mapper.KeywordFieldTypeTests)",
     "methodName": "testCheckTypeName",
     "className": "org.elasticsearch.index.mapper.KeywordFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.KeywordFieldTypeTests)",
     "displayName": "testCheckCompatibility(org.elasticsearch.index.mapper.KeywordFieldTypeTests)",
     "methodName": "testCheckCompatibility",
     "className": "org.elasticsearch.index.mapper.KeywordFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testTermQuery(org.elasticsearch.index.mapper.KeywordFieldTypeTests)",
     "displayName": "testTermQuery(org.elasticsearch.index.mapper.KeywordFieldTypeTests)",
     "methodName": "testTermQuery",
     "className": "org.elasticsearch.index.mapper.KeywordFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testIsFieldWithinQuery(org.elasticsearch.index.mapper.KeywordFieldTypeTests)",
     "displayName": "testIsFieldWithinQuery(org.elasticsearch.index.mapper.KeywordFieldTypeTests)",
     "methodName": "testIsFieldWithinQuery",
     "className": "org.elasticsearch.index.mapper.KeywordFieldTypeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195751519
 }
]

[
 "TEST_STARTED",
 "ID#testClone(org.elasticsearch.index.mapper.KeywordFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClone(org.elasticsearch.index.mapper.KeywordFieldTypeTests)",
  "startTimestamp": 1474195751592,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFuzzyQuery(org.elasticsearch.index.mapper.KeywordFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFuzzyQuery(org.elasticsearch.index.mapper.KeywordFieldTypeTests)",
  "startTimestamp": 1474195751594,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFreeze(org.elasticsearch.index.mapper.KeywordFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFreeze(org.elasticsearch.index.mapper.KeywordFieldTypeTests)",
  "startTimestamp": 1474195751596,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEquals(org.elasticsearch.index.mapper.KeywordFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEquals(org.elasticsearch.index.mapper.KeywordFieldTypeTests)",
  "startTimestamp": 1474195751598,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testTermsQuery(org.elasticsearch.index.mapper.KeywordFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTermsQuery(org.elasticsearch.index.mapper.KeywordFieldTypeTests)",
  "startTimestamp": 1474195751600,
  "executionTime": 14
 }
]

[
 "TEST_STARTED",
 "ID#testRegexpQuery(org.elasticsearch.index.mapper.KeywordFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRegexpQuery(org.elasticsearch.index.mapper.KeywordFieldTypeTests)",
  "startTimestamp": 1474195751614,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testCheckTypeName(org.elasticsearch.index.mapper.KeywordFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckTypeName(org.elasticsearch.index.mapper.KeywordFieldTypeTests)",
  "startTimestamp": 1474195751617,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCheckCompatibility(org.elasticsearch.index.mapper.KeywordFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.KeywordFieldTypeTests)",
  "startTimestamp": 1474195751619,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testTermQuery(org.elasticsearch.index.mapper.KeywordFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTermQuery(org.elasticsearch.index.mapper.KeywordFieldTypeTests)",
  "startTimestamp": 1474195751622,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testIsFieldWithinQuery(org.elasticsearch.index.mapper.KeywordFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsFieldWithinQuery(org.elasticsearch.index.mapper.KeywordFieldTypeTests)",
  "startTimestamp": 1474195751631,
  "executionTime": 1
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.KeywordFieldTypeTests",
  "startTimestamp": 1474195751519,
  "executionTime": 115
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.LegacyDateFieldMapperTests",
   "displayName": "org.elasticsearch.index.mapper.LegacyDateFieldMapperTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.LegacyDateFieldMapperTests",
   "children": [
    {
     "id": "ID#testThatNewIndicesOnlyAllowStrictDates(org.elasticsearch.index.mapper.LegacyDateFieldMapperTests)",
     "displayName": "testThatNewIndicesOnlyAllowStrictDates(org.elasticsearch.index.mapper.LegacyDateFieldMapperTests)",
     "methodName": "testThatNewIndicesOnlyAllowStrictDates",
     "className": "org.elasticsearch.index.mapper.LegacyDateFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testDayWithoutYearFormat(org.elasticsearch.index.mapper.LegacyDateFieldMapperTests)",
     "displayName": "testDayWithoutYearFormat(org.elasticsearch.index.mapper.LegacyDateFieldMapperTests)",
     "methodName": "testDayWithoutYearFormat",
     "className": "org.elasticsearch.index.mapper.LegacyDateFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testLocale(org.elasticsearch.index.mapper.LegacyDateFieldMapperTests)",
     "displayName": "testLocale(org.elasticsearch.index.mapper.LegacyDateFieldMapperTests)",
     "methodName": "testLocale",
     "className": "org.elasticsearch.index.mapper.LegacyDateFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testDateDetection(org.elasticsearch.index.mapper.LegacyDateFieldMapperTests)",
     "displayName": "testDateDetection(org.elasticsearch.index.mapper.LegacyDateFieldMapperTests)",
     "methodName": "testDateDetection",
     "className": "org.elasticsearch.index.mapper.LegacyDateFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testParseLocal(org.elasticsearch.index.mapper.LegacyDateFieldMapperTests)",
     "displayName": "testParseLocal(org.elasticsearch.index.mapper.LegacyDateFieldMapperTests)",
     "methodName": "testParseLocal",
     "className": "org.elasticsearch.index.mapper.LegacyDateFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testThatEpochCanBeIgnoredWithCustomFormat(org.elasticsearch.index.mapper.LegacyDateFieldMapperTests)",
     "displayName": "testThatEpochCanBeIgnoredWithCustomFormat(org.elasticsearch.index.mapper.LegacyDateFieldMapperTests)",
     "methodName": "testThatEpochCanBeIgnoredWithCustomFormat",
     "className": "org.elasticsearch.index.mapper.LegacyDateFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testTimestampAsDate(org.elasticsearch.index.mapper.LegacyDateFieldMapperTests)",
     "displayName": "testTimestampAsDate(org.elasticsearch.index.mapper.LegacyDateFieldMapperTests)",
     "methodName": "testTimestampAsDate",
     "className": "org.elasticsearch.index.mapper.LegacyDateFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testDefaultDocValues(org.elasticsearch.index.mapper.LegacyDateFieldMapperTests)",
     "displayName": "testDefaultDocValues(org.elasticsearch.index.mapper.LegacyDateFieldMapperTests)",
     "methodName": "testDefaultDocValues",
     "className": "org.elasticsearch.index.mapper.LegacyDateFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testAutomaticDateParser(org.elasticsearch.index.mapper.LegacyDateFieldMapperTests)",
     "displayName": "testAutomaticDateParser(org.elasticsearch.index.mapper.LegacyDateFieldMapperTests)",
     "methodName": "testAutomaticDateParser",
     "className": "org.elasticsearch.index.mapper.LegacyDateFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testThatMergingWorks(org.elasticsearch.index.mapper.LegacyDateFieldMapperTests)",
     "displayName": "testThatMergingWorks(org.elasticsearch.index.mapper.LegacyDateFieldMapperTests)",
     "methodName": "testThatMergingWorks",
     "className": "org.elasticsearch.index.mapper.LegacyDateFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testIgnoreMalformedOption(org.elasticsearch.index.mapper.LegacyDateFieldMapperTests)",
     "displayName": "testIgnoreMalformedOption(org.elasticsearch.index.mapper.LegacyDateFieldMapperTests)",
     "methodName": "testIgnoreMalformedOption",
     "className": "org.elasticsearch.index.mapper.LegacyDateFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testHourFormat(org.elasticsearch.index.mapper.LegacyDateFieldMapperTests)",
     "displayName": "testHourFormat(org.elasticsearch.index.mapper.LegacyDateFieldMapperTests)",
     "methodName": "testHourFormat",
     "className": "org.elasticsearch.index.mapper.LegacyDateFieldMapperTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195751861
 }
]

[
 "TEST_STARTED",
 "ID#testThatNewIndicesOnlyAllowStrictDates(org.elasticsearch.index.mapper.LegacyDateFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:12,007][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:12,099][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:12,099][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:12,104][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[7260], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:12,108][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:12,108][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.test.InternalSettingsPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:12,368][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:12,369][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:12,372][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[105]}, bound_addresses {local[105]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:12,373][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{LYdrpf1rSWm7bPq-adoPXg}{8l_45NyNQxmgzGotg2Yv3A}{local}{local[105]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:12,375][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:12,397][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:12,428][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:12,505][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:12,518][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/8ZS4b1EUTHeVY5ffS4priA] create_mapping [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:12,530][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [LegacyDateFieldMapperTests#testThatNewIndicesOnlyAllowStrictDates]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatNewIndicesOnlyAllowStrictDates(org.elasticsearch.index.mapper.LegacyDateFieldMapperTests)",
  "startTimestamp": 1474195751999,
  "executionTime": 567
 }
]

[
 "TEST_STARTED",
 "ID#testDayWithoutYearFormat(org.elasticsearch.index.mapper.LegacyDateFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:12,573][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:12,623][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:12,642][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/Ym6iWoCBT7qh6fB0K-M2ew] create_mapping [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:12,676][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [LegacyDateFieldMapperTests#testDayWithoutYearFormat]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDayWithoutYearFormat(org.elasticsearch.index.mapper.LegacyDateFieldMapperTests)",
  "startTimestamp": 1474195752566,
  "executionTime": 151
 }
]

[
 "TEST_STARTED",
 "ID#testLocale(org.elasticsearch.index.mapper.LegacyDateFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:12,726][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:12,801][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:12,818][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/l2HVe_bGTuOu_n8KFf9P6A] create_mapping [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:12,835][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [LegacyDateFieldMapperTests#testLocale]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLocale(org.elasticsearch.index.mapper.LegacyDateFieldMapperTests)",
  "startTimestamp": 1474195752718,
  "executionTime": 148
 }
]

[
 "TEST_STARTED",
 "ID#testDateDetection(org.elasticsearch.index.mapper.LegacyDateFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:12,872][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:12,916][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:12,942][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/sF8QZ7_fS5-6GkyHC6qV_Q] create_mapping [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:12,954][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [LegacyDateFieldMapperTests#testDateDetection]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDateDetection(org.elasticsearch.index.mapper.LegacyDateFieldMapperTests)",
  "startTimestamp": 1474195752866,
  "executionTime": 125
 }
]

[
 "TEST_STARTED",
 "ID#testParseLocal(org.elasticsearch.index.mapper.LegacyDateFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:12,995][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [LegacyDateFieldMapperTests#testParseLocal]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseLocal(org.elasticsearch.index.mapper.LegacyDateFieldMapperTests)",
  "startTimestamp": 1474195752991,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testThatEpochCanBeIgnoredWithCustomFormat(org.elasticsearch.index.mapper.LegacyDateFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:13,002][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test1] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:13,060][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test1][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:13,084][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test1/o-OCTqWoQya0ckC2OQj_uA] create_mapping [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:13,102][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test2] creating index, cause [auto(index api)], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:13,539][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test2][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:13,555][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test2/ScVIisSZRPu0vAw0KHY-ug] create_mapping [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:13,581][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [auto(index api)], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:13,694][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:13,708][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/gmfWbG2nRHShmCPyniUXhQ] create_mapping [test]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:13,738][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [LegacyDateFieldMapperTests#testThatEpochCanBeIgnoredWithCustomFormat]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatEpochCanBeIgnoredWithCustomFormat(org.elasticsearch.index.mapper.LegacyDateFieldMapperTests)",
  "startTimestamp": 1474195752996,
  "executionTime": 866
 }
]

[
 "TEST_STARTED",
 "ID#testTimestampAsDate(org.elasticsearch.index.mapper.LegacyDateFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:13,872][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:13,934][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:13,949][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/K1MkJrezQwK2qQRNikIpyQ] create_mapping [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:13,961][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [LegacyDateFieldMapperTests#testTimestampAsDate]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTimestampAsDate(org.elasticsearch.index.mapper.LegacyDateFieldMapperTests)",
  "startTimestamp": 1474195753862,
  "executionTime": 138
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultDocValues(org.elasticsearch.index.mapper.LegacyDateFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:14,006][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:14,082][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:14,097][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/g8fXyylYSQiHb2qNiTAPEQ] create_mapping [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:14,126][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [LegacyDateFieldMapperTests#testDefaultDocValues]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultDocValues(org.elasticsearch.index.mapper.LegacyDateFieldMapperTests)",
  "startTimestamp": 1474195754000,
  "executionTime": 166
 }
]

[
 "TEST_STARTED",
 "ID#testAutomaticDateParser(org.elasticsearch.index.mapper.LegacyDateFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:14,172][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:14,251][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:14,265][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/f_d-hbpaSUu5Y35dEW0z_Q] create_mapping [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:14,281][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/f_d-hbpaSUu5Y35dEW0z_Q] update_mapping [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:14,325][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [LegacyDateFieldMapperTests#testAutomaticDateParser]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAutomaticDateParser(org.elasticsearch.index.mapper.LegacyDateFieldMapperTests)",
  "startTimestamp": 1474195754166,
  "executionTime": 185
 }
]

[
 "TEST_STARTED",
 "ID#testThatMergingWorks(org.elasticsearch.index.mapper.LegacyDateFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:14,357][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test1] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:14,405][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test1][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:14,420][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test1/JsCR5G86QeGJFGz7_6UZDg] create_mapping [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:14,442][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test2] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:14,492][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test2][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:14,505][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test2/QR0OteV6S5CovoGjNkMuMA] create_mapping [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:14,527][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test2] [LegacyDateFieldMapperTests#testThatMergingWorks]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatMergingWorks(org.elasticsearch.index.mapper.LegacyDateFieldMapperTests)",
  "startTimestamp": 1474195754351,
  "executionTime": 250
 }
]

[
 "TEST_STARTED",
 "ID#testIgnoreMalformedOption(org.elasticsearch.index.mapper.LegacyDateFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:14,609][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:14,663][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:14,679][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/lv8ZGHqrQtij8gdT_MHbNg] create_mapping [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:14,692][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test2] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:14,732][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test2][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:14,741][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test2] [LegacyDateFieldMapperTests#testIgnoreMalformedOption]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIgnoreMalformedOption(org.elasticsearch.index.mapper.LegacyDateFieldMapperTests)",
  "startTimestamp": 1474195754601,
  "executionTime": 187
 }
]

[
 "TEST_STARTED",
 "ID#testHourFormat(org.elasticsearch.index.mapper.LegacyDateFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:14,794][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:14,860][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:14,876][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/GjpSgXGWQw2Ch9BAT26DvQ] create_mapping [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:14,891][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [LegacyDateFieldMapperTests#testHourFormat]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHourFormat(org.elasticsearch.index.mapper.LegacyDateFieldMapperTests)",
  "startTimestamp": 1474195754788,
  "executionTime": 130
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:14,918][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:14,918][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:14,918][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:14,920][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.LegacyDateFieldMapperTests",
  "startTimestamp": 1474195751861,
  "executionTime": 3069
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.TTLFieldMapperTests",
   "displayName": "org.elasticsearch.index.mapper.TTLFieldMapperTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.TTLFieldMapperTests",
   "children": [
    {
     "id": "ID#testEnabled(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
     "displayName": "testEnabled(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
     "methodName": "testEnabled",
     "className": "org.elasticsearch.index.mapper.TTLFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testMergeWithOnlyDefaultSetTtlDisabled(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
     "displayName": "testMergeWithOnlyDefaultSetTtlDisabled(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
     "methodName": "testMergeWithOnlyDefaultSetTtlDisabled",
     "className": "org.elasticsearch.index.mapper.TTLFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testDefaultValues(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
     "displayName": "testDefaultValues(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
     "methodName": "testDefaultValues",
     "className": "org.elasticsearch.index.mapper.TTLFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testNoConflictIfNothingSetAndDisabledLater(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
     "displayName": "testNoConflictIfNothingSetAndDisabledLater(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
     "methodName": "testNoConflictIfNothingSetAndDisabledLater",
     "className": "org.elasticsearch.index.mapper.TTLFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testNoConflictIfNothingSetAndEnabledLater(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
     "displayName": "testNoConflictIfNothingSetAndEnabledLater(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
     "methodName": "testNoConflictIfNothingSetAndEnabledLater",
     "className": "org.elasticsearch.index.mapper.TTLFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testThatChangingTTLKeepsMapperEnabled(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
     "displayName": "testThatChangingTTLKeepsMapperEnabled(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
     "methodName": "testThatChangingTTLKeepsMapperEnabled",
     "className": "org.elasticsearch.index.mapper.TTLFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testThatDisablingTTLReportsConflict(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
     "displayName": "testThatDisablingTTLReportsConflict(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
     "methodName": "testThatDisablingTTLReportsConflict",
     "className": "org.elasticsearch.index.mapper.TTLFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testRejectedOn5x(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
     "displayName": "testRejectedOn5x(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
     "methodName": "testRejectedOn5x",
     "className": "org.elasticsearch.index.mapper.TTLFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testSimpleDisabled(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
     "displayName": "testSimpleDisabled(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
     "methodName": "testSimpleDisabled",
     "className": "org.elasticsearch.index.mapper.TTLFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testThatEnablingTTLFieldOnMergeWorks(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
     "displayName": "testThatEnablingTTLFieldOnMergeWorks(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
     "methodName": "testThatEnablingTTLFieldOnMergeWorks",
     "className": "org.elasticsearch.index.mapper.TTLFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testThatDisablingTTLReportsConflictOnCluster(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
     "displayName": "testThatDisablingTTLReportsConflictOnCluster(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
     "methodName": "testThatDisablingTTLReportsConflictOnCluster",
     "className": "org.elasticsearch.index.mapper.TTLFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testThatEnablingTTLAfterFirstDisablingWorks(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
     "displayName": "testThatEnablingTTLAfterFirstDisablingWorks(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
     "methodName": "testThatEnablingTTLAfterFirstDisablingWorks",
     "className": "org.elasticsearch.index.mapper.TTLFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testMergeWithOnlyDefaultSet(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
     "displayName": "testMergeWithOnlyDefaultSet(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
     "methodName": "testMergeWithOnlyDefaultSet",
     "className": "org.elasticsearch.index.mapper.TTLFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testIncludeInObjectNotAllowed(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
     "displayName": "testIncludeInObjectNotAllowed(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
     "methodName": "testIncludeInObjectNotAllowed",
     "className": "org.elasticsearch.index.mapper.TTLFieldMapperTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195755087
 }
]

[
 "TEST_STARTED",
 "ID#testEnabled(org.elasticsearch.index.mapper.TTLFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:15,126][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:15,188][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:15,188][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:15,193][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[7260], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:15,200][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:15,200][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.test.InternalSettingsPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:15,346][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:15,346][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:15,347][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[106]}, bound_addresses {local[106]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:15,349][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{cZR5RF9-TJ2LicigVa-ecA}{A6PJLwRsSPKqjGUhevh54g}{local}{local[106]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:15,350][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:15,361][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:15,377][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:15,442][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:15,453][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [TTLFieldMapperTests#testEnabled]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEnabled(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
  "startTimestamp": 1474195755106,
  "executionTime": 372
 }
]

[
 "TEST_STARTED",
 "ID#testMergeWithOnlyDefaultSetTtlDisabled(org.elasticsearch.index.mapper.TTLFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:15,485][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [testindex] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:15,766][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[testindex][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:15,781][INFO ][org.elasticsearch.index.mapper] [node_s_0] [testindex] [TTLFieldMapperTests#testMergeWithOnlyDefaultSetTtlDisabled]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMergeWithOnlyDefaultSetTtlDisabled(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
  "startTimestamp": 1474195755478,
  "executionTime": 352
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultValues(org.elasticsearch.index.mapper.TTLFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:15,837][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:15,896][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:15,909][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [TTLFieldMapperTests#testDefaultValues]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultValues(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
  "startTimestamp": 1474195755830,
  "executionTime": 119
 }
]

[
 "TEST_STARTED",
 "ID#testNoConflictIfNothingSetAndDisabledLater(org.elasticsearch.index.mapper.TTLFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:15,956][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [testindex] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:16,019][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[testindex][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:16,038][INFO ][org.elasticsearch.index.mapper] [node_s_0] [testindex] [TTLFieldMapperTests#testNoConflictIfNothingSetAndDisabledLater]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoConflictIfNothingSetAndDisabledLater(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
  "startTimestamp": 1474195755949,
  "executionTime": 117
 }
]

[
 "TEST_STARTED",
 "ID#testNoConflictIfNothingSetAndEnabledLater(org.elasticsearch.index.mapper.TTLFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:16,072][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [testindex] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:16,118][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[testindex][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:16,131][INFO ][org.elasticsearch.index.mapper] [node_s_0] [testindex] [TTLFieldMapperTests#testNoConflictIfNothingSetAndEnabledLater]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoConflictIfNothingSetAndEnabledLater(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
  "startTimestamp": 1474195756066,
  "executionTime": 99
 }
]

[
 "TEST_STARTED",
 "ID#testThatChangingTTLKeepsMapperEnabled(org.elasticsearch.index.mapper.TTLFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:16,172][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:16,263][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:16,279][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [TTLFieldMapperTests#testThatChangingTTLKeepsMapperEnabled]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatChangingTTLKeepsMapperEnabled(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
  "startTimestamp": 1474195756165,
  "executionTime": 143
 }
]

[
 "TEST_STARTED",
 "ID#testThatDisablingTTLReportsConflict(org.elasticsearch.index.mapper.TTLFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:16,314][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:16,359][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:16,375][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [TTLFieldMapperTests#testThatDisablingTTLReportsConflict]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatDisablingTTLReportsConflict(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
  "startTimestamp": 1474195756308,
  "executionTime": 99
 }
]

[
 "TEST_STARTED",
 "ID#testRejectedOn5x(org.elasticsearch.index.mapper.TTLFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:16,413][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:16,484][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:16,504][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [TTLFieldMapperTests#testRejectedOn5x]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRejectedOn5x(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
  "startTimestamp": 1474195756407,
  "executionTime": 146
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleDisabled(org.elasticsearch.index.mapper.TTLFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:16,559][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:16,620][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:16,639][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [TTLFieldMapperTests#testSimpleDisabled]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleDisabled(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
  "startTimestamp": 1474195756553,
  "executionTime": 120
 }
]

[
 "TEST_STARTED",
 "ID#testThatEnablingTTLFieldOnMergeWorks(org.elasticsearch.index.mapper.TTLFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:16,681][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:16,737][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:16,752][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [TTLFieldMapperTests#testThatEnablingTTLFieldOnMergeWorks]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatEnablingTTLFieldOnMergeWorks(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
  "startTimestamp": 1474195756673,
  "executionTime": 139
 }
]

[
 "TEST_STARTED",
 "ID#testThatDisablingTTLReportsConflictOnCluster(org.elasticsearch.index.mapper.TTLFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:16,820][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [testindex] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:16,878][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[testindex][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:16,898][INFO ][org.elasticsearch.index.mapper] [node_s_0] [testindex] [TTLFieldMapperTests#testThatDisablingTTLReportsConflictOnCluster]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatDisablingTTLReportsConflictOnCluster(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
  "startTimestamp": 1474195756813,
  "executionTime": 129
 }
]

[
 "TEST_STARTED",
 "ID#testThatEnablingTTLAfterFirstDisablingWorks(org.elasticsearch.index.mapper.TTLFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:16,958][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [testindex] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:17,015][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[testindex][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:17,042][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [testindex/y_4c_tf9SMGPj78j4zA2HQ] update_mapping [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:17,052][INFO ][org.elasticsearch.index.mapper] [node_s_0] [testindex] [TTLFieldMapperTests#testThatEnablingTTLAfterFirstDisablingWorks]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatEnablingTTLAfterFirstDisablingWorks(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
  "startTimestamp": 1474195756942,
  "executionTime": 152
 }
]

[
 "TEST_STARTED",
 "ID#testMergeWithOnlyDefaultSet(org.elasticsearch.index.mapper.TTLFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:17,102][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [testindex] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:17,161][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[testindex][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:17,235][INFO ][org.elasticsearch.index.mapper] [node_s_0] [testindex] [TTLFieldMapperTests#testMergeWithOnlyDefaultSet]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMergeWithOnlyDefaultSet(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
  "startTimestamp": 1474195757095,
  "executionTime": 183
 }
]

[
 "TEST_STARTED",
 "ID#testIncludeInObjectNotAllowed(org.elasticsearch.index.mapper.TTLFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:17,284][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:17,380][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:17,391][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [TTLFieldMapperTests#testIncludeInObjectNotAllowed]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIncludeInObjectNotAllowed(org.elasticsearch.index.mapper.TTLFieldMapperTests)",
  "startTimestamp": 1474195757278,
  "executionTime": 202
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:17,481][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:17,481][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:17,481][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:17,483][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.TTLFieldMapperTests",
  "startTimestamp": 1474195755087,
  "executionTime": 2406
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.TextFieldTypeTests",
   "displayName": "org.elasticsearch.index.mapper.TextFieldTypeTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.TextFieldTypeTests",
   "children": [
    {
     "id": "ID#testFuzzyQuery(org.elasticsearch.index.mapper.TextFieldTypeTests)",
     "displayName": "testFuzzyQuery(org.elasticsearch.index.mapper.TextFieldTypeTests)",
     "methodName": "testFuzzyQuery",
     "className": "org.elasticsearch.index.mapper.TextFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testTermsQuery(org.elasticsearch.index.mapper.TextFieldTypeTests)",
     "displayName": "testTermsQuery(org.elasticsearch.index.mapper.TextFieldTypeTests)",
     "methodName": "testTermsQuery",
     "className": "org.elasticsearch.index.mapper.TextFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testRegexpQuery(org.elasticsearch.index.mapper.TextFieldTypeTests)",
     "displayName": "testRegexpQuery(org.elasticsearch.index.mapper.TextFieldTypeTests)",
     "methodName": "testRegexpQuery",
     "className": "org.elasticsearch.index.mapper.TextFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckTypeName(org.elasticsearch.index.mapper.TextFieldTypeTests)",
     "displayName": "testCheckTypeName(org.elasticsearch.index.mapper.TextFieldTypeTests)",
     "methodName": "testCheckTypeName",
     "className": "org.elasticsearch.index.mapper.TextFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testClone(org.elasticsearch.index.mapper.TextFieldTypeTests)",
     "displayName": "testClone(org.elasticsearch.index.mapper.TextFieldTypeTests)",
     "methodName": "testClone",
     "className": "org.elasticsearch.index.mapper.TextFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testEquals(org.elasticsearch.index.mapper.TextFieldTypeTests)",
     "displayName": "testEquals(org.elasticsearch.index.mapper.TextFieldTypeTests)",
     "methodName": "testEquals",
     "className": "org.elasticsearch.index.mapper.TextFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.TextFieldTypeTests)",
     "displayName": "testCheckCompatibility(org.elasticsearch.index.mapper.TextFieldTypeTests)",
     "methodName": "testCheckCompatibility",
     "className": "org.elasticsearch.index.mapper.TextFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testTermQuery(org.elasticsearch.index.mapper.TextFieldTypeTests)",
     "displayName": "testTermQuery(org.elasticsearch.index.mapper.TextFieldTypeTests)",
     "methodName": "testTermQuery",
     "className": "org.elasticsearch.index.mapper.TextFieldTypeTests",
     "children": []
    },
    {
     "id": "ID#testFreeze(org.elasticsearch.index.mapper.TextFieldTypeTests)",
     "displayName": "testFreeze(org.elasticsearch.index.mapper.TextFieldTypeTests)",
     "methodName": "testFreeze",
     "className": "org.elasticsearch.index.mapper.TextFieldTypeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195757699
 }
]

[
 "TEST_STARTED",
 "ID#testFuzzyQuery(org.elasticsearch.index.mapper.TextFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFuzzyQuery(org.elasticsearch.index.mapper.TextFieldTypeTests)",
  "startTimestamp": 1474195757729,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testTermsQuery(org.elasticsearch.index.mapper.TextFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTermsQuery(org.elasticsearch.index.mapper.TextFieldTypeTests)",
  "startTimestamp": 1474195757732,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testRegexpQuery(org.elasticsearch.index.mapper.TextFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRegexpQuery(org.elasticsearch.index.mapper.TextFieldTypeTests)",
  "startTimestamp": 1474195757734,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testCheckTypeName(org.elasticsearch.index.mapper.TextFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckTypeName(org.elasticsearch.index.mapper.TextFieldTypeTests)",
  "startTimestamp": 1474195757738,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testClone(org.elasticsearch.index.mapper.TextFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClone(org.elasticsearch.index.mapper.TextFieldTypeTests)",
  "startTimestamp": 1474195757740,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testEquals(org.elasticsearch.index.mapper.TextFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEquals(org.elasticsearch.index.mapper.TextFieldTypeTests)",
  "startTimestamp": 1474195757741,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCheckCompatibility(org.elasticsearch.index.mapper.TextFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCheckCompatibility(org.elasticsearch.index.mapper.TextFieldTypeTests)",
  "startTimestamp": 1474195757744,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testTermQuery(org.elasticsearch.index.mapper.TextFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTermQuery(org.elasticsearch.index.mapper.TextFieldTypeTests)",
  "startTimestamp": 1474195757746,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFreeze(org.elasticsearch.index.mapper.TextFieldTypeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFreeze(org.elasticsearch.index.mapper.TextFieldTypeTests)",
  "startTimestamp": 1474195757749,
  "executionTime": 1
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.TextFieldTypeTests",
  "startTimestamp": 1474195757699,
  "executionTime": 54
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.mapper.TimestampFieldMapperTests",
   "displayName": "org.elasticsearch.index.mapper.TimestampFieldMapperTests",
   "methodName": null,
   "className": "org.elasticsearch.index.mapper.TimestampFieldMapperTests",
   "children": [
    {
     "id": "ID#testThatEpochCanBeIgnoredWithCustomFormat(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "displayName": "testThatEpochCanBeIgnoredWithCustomFormat(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "methodName": "testThatEpochCanBeIgnoredWithCustomFormat",
     "className": "org.elasticsearch.index.mapper.TimestampFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testTimestampMissingShouldNotFail(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "displayName": "testTimestampMissingShouldNotFail(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "methodName": "testTimestampMissingShouldNotFail",
     "className": "org.elasticsearch.index.mapper.TimestampFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testEnabled(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "displayName": "testEnabled(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "methodName": "testEnabled",
     "className": "org.elasticsearch.index.mapper.TimestampFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testTimestampParsing(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "displayName": "testTimestampParsing(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "methodName": "testTimestampParsing",
     "className": "org.elasticsearch.index.mapper.TimestampFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testInitMappers(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "displayName": "testInitMappers(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "methodName": "testInitMappers",
     "className": "org.elasticsearch.index.mapper.TimestampFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testSizeTimestampIndexParsing(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "displayName": "testSizeTimestampIndexParsing(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "methodName": "testSizeTimestampIndexParsing",
     "className": "org.elasticsearch.index.mapper.TimestampFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testIncludeInObjectNotAllowed(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "displayName": "testIncludeInObjectNotAllowed(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "methodName": "testIncludeInObjectNotAllowed",
     "className": "org.elasticsearch.index.mapper.TimestampFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testDefaultValues(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "displayName": "testDefaultValues(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "methodName": "testDefaultValues",
     "className": "org.elasticsearch.index.mapper.TimestampFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testDefaultApplied(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "displayName": "testDefaultApplied(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "methodName": "testDefaultApplied",
     "className": "org.elasticsearch.index.mapper.TimestampFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testTimestampDefaultAndIgnore(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "displayName": "testTimestampDefaultAndIgnore(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "methodName": "testTimestampDefaultAndIgnore",
     "className": "org.elasticsearch.index.mapper.TimestampFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testDefaultTimestampStream(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "displayName": "testDefaultTimestampStream(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "methodName": "testDefaultTimestampStream",
     "className": "org.elasticsearch.index.mapper.TimestampFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testRejectedOn5x(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "displayName": "testRejectedOn5x(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "methodName": "testRejectedOn5x",
     "className": "org.elasticsearch.index.mapper.TimestampFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testTimestampMissingWithForcedNullDefaultShouldFail(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "displayName": "testTimestampMissingWithForcedNullDefaultShouldFail(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "methodName": "testTimestampMissingWithForcedNullDefaultShouldFail",
     "className": "org.elasticsearch.index.mapper.TimestampFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testTimestampMissingDefaultToEpochValue(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "displayName": "testTimestampMissingDefaultToEpochValue(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "methodName": "testTimestampMissingDefaultToEpochValue",
     "className": "org.elasticsearch.index.mapper.TimestampFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testThatDisablingDuringMergeIsWorking(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "displayName": "testThatDisablingDuringMergeIsWorking(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "methodName": "testThatDisablingDuringMergeIsWorking",
     "className": "org.elasticsearch.index.mapper.TimestampFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testParsingNotDefaultTwiceDoesNotChangeMapping(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "displayName": "testParsingNotDefaultTwiceDoesNotChangeMapping(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "methodName": "testParsingNotDefaultTwiceDoesNotChangeMapping",
     "className": "org.elasticsearch.index.mapper.TimestampFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testPathMissingWithForcedNullDefaultShouldFail(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "displayName": "testPathMissingWithForcedNullDefaultShouldFail(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "methodName": "testPathMissingWithForcedNullDefaultShouldFail",
     "className": "org.elasticsearch.index.mapper.TimestampFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testSimpleDisabled(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "displayName": "testSimpleDisabled(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "methodName": "testSimpleDisabled",
     "className": "org.elasticsearch.index.mapper.TimestampFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testThatIndicesAfter2_0DontSupportUnixTimestampsInAnyDateFormat(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "displayName": "testThatIndicesAfter2_0DontSupportUnixTimestampsInAnyDateFormat(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "methodName": "testThatIndicesAfter2_0DontSupportUnixTimestampsInAnyDateFormat",
     "className": "org.elasticsearch.index.mapper.TimestampFieldMapperTests",
     "children": []
    },
    {
     "id": "ID#testTimestampMissingNowDefaultValue(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "displayName": "testTimestampMissingNowDefaultValue(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
     "methodName": "testTimestampMissingNowDefaultValue",
     "className": "org.elasticsearch.index.mapper.TimestampFieldMapperTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195757974
 }
]

[
 "TEST_STARTED",
 "ID#testThatEpochCanBeIgnoredWithCustomFormat(org.elasticsearch.index.mapper.TimestampFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:49:18,013][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:49:18,035][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:49:18,035][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:49:18,039][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[7260], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:49:18,042][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:49:18,042][INFO ][org.elasticsearch.plugins] [node_s_0] loaded plugin [org.elasticsearch.test.InternalSettingsPlugin]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:49:18,168][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:49:18,168][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:49:18,169][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[107]}, bound_addresses {local[107]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:49:18,172][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{GFtIucGLTweHZZ_L2yWlEw}{vca9XQlWSI-TTk3HsfKFCA}{local}{local[107]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:49:18,173][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:49:18,187][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:49:18,205][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:49:18,316][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:49:18,329][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [TimestampFieldMapperTests#testThatEpochCanBeIgnoredWithCustomFormat]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatEpochCanBeIgnoredWithCustomFormat(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
  "startTimestamp": 1474195757993,
  "executionTime": 370
 }
]

[
 "TEST_STARTED",
 "ID#testTimestampMissingShouldNotFail(org.elasticsearch.index.mapper.TimestampFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:49:18,369][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:49:18,420][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:49:18,438][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [TimestampFieldMapperTests#testTimestampMissingShouldNotFail]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTimestampMissingShouldNotFail(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
  "startTimestamp": 1474195758363,
  "executionTime": 106
 }
]

[
 "TEST_STARTED",
 "ID#testEnabled(org.elasticsearch.index.mapper.TimestampFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:49:18,476][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:49:18,541][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:49:18,578][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [TimestampFieldMapperTests#testEnabled]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEnabled(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
  "startTimestamp": 1474195758469,
  "executionTime": 150
 }
]

[
 "TEST_STARTED",
 "ID#testTimestampParsing(org.elasticsearch.index.mapper.TimestampFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:49:18,626][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:49:18,673][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:49:18,695][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [TimestampFieldMapperTests#testTimestampParsing]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTimestampParsing(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
  "startTimestamp": 1474195758619,
  "executionTime": 110
 }
]

[
 "TEST_STARTED",
 "ID#testInitMappers(org.elasticsearch.index.mapper.TimestampFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:49:18,733][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [TimestampFieldMapperTests#testInitMappers]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInitMappers(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
  "startTimestamp": 1474195758730,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testSizeTimestampIndexParsing(org.elasticsearch.index.mapper.TimestampFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:49:18,740][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:49:18,783][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:49:18,809][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [TimestampFieldMapperTests#testSizeTimestampIndexParsing]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSizeTimestampIndexParsing(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
  "startTimestamp": 1474195758734,
  "executionTime": 110
 }
]

[
 "TEST_STARTED",
 "ID#testIncludeInObjectNotAllowed(org.elasticsearch.index.mapper.TimestampFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:49:18,850][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:49:18,911][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:49:18,925][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [TimestampFieldMapperTests#testIncludeInObjectNotAllowed]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIncludeInObjectNotAllowed(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
  "startTimestamp": 1474195758844,
  "executionTime": 110
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultValues(org.elasticsearch.index.mapper.TimestampFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:49:18,959][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:49:19,006][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:49:19,059][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:49:19,124][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:49:19,181][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [TimestampFieldMapperTests#testDefaultValues]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultValues(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
  "startTimestamp": 1474195758954,
  "executionTime": 228
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultApplied(org.elasticsearch.index.mapper.TimestampFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:49:19,189][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test1] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:49:19,238][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test1][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:49:19,255][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test2] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:49:19,377][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test2][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:49:19,516][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test1/uYdnjPJjT0mnzkdqxODe2g] create_mapping [_default_]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:49:19,518][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test2/vBPUwWpxQKCSYH7czcNe-Q] create_mapping [_default_]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:49:19,566][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test1/uYdnjPJjT0mnzkdqxODe2g] create_mapping [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:49:19,581][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test2/vBPUwWpxQKCSYH7czcNe-Q] create_mapping [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:49:19,745][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test2] [TimestampFieldMapperTests#testDefaultApplied]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultApplied(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
  "startTimestamp": 1474195759183,
  "executionTime": 903
 }
]

[
 "TEST_STARTED",
 "ID#testTimestampDefaultAndIgnore(org.elasticsearch.index.mapper.TimestampFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:49:20,092][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:49:20,192][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:49:20,211][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [TimestampFieldMapperTests#testTimestampDefaultAndIgnore]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTimestampDefaultAndIgnore(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
  "startTimestamp": 1474195760086,
  "executionTime": 161
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultTimestampStream(org.elasticsearch.index.mapper.TimestampFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:49:20,251][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [TimestampFieldMapperTests#testDefaultTimestampStream]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultTimestampStream(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
  "startTimestamp": 1474195760247,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testRejectedOn5x(org.elasticsearch.index.mapper.TimestampFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:49:20,258][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:49:20,339][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:49:20,365][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [TimestampFieldMapperTests#testRejectedOn5x]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRejectedOn5x(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
  "startTimestamp": 1474195760252,
  "executionTime": 136
 }
]

[
 "TEST_STARTED",
 "ID#testTimestampMissingWithForcedNullDefaultShouldFail(org.elasticsearch.index.mapper.TimestampFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:49:20,394][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:49:20,431][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:49:20,441][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [TimestampFieldMapperTests#testTimestampMissingWithForcedNullDefaultShouldFail]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTimestampMissingWithForcedNullDefaultShouldFail(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
  "startTimestamp": 1474195760388,
  "executionTime": 85
 }
]

[
 "TEST_STARTED",
 "ID#testTimestampMissingDefaultToEpochValue(org.elasticsearch.index.mapper.TimestampFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:49:20,480][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:49:20,530][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:49:20,562][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [TimestampFieldMapperTests#testTimestampMissingDefaultToEpochValue]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTimestampMissingDefaultToEpochValue(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
  "startTimestamp": 1474195760474,
  "executionTime": 143
 }
]

[
 "TEST_STARTED",
 "ID#testThatDisablingDuringMergeIsWorking(org.elasticsearch.index.mapper.TimestampFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:49:20,627][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:49:20,797][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:49:20,830][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [TimestampFieldMapperTests#testThatDisablingDuringMergeIsWorking]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatDisablingDuringMergeIsWorking(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
  "startTimestamp": 1474195760617,
  "executionTime": 252
 }
]

[
 "TEST_STARTED",
 "ID#testParsingNotDefaultTwiceDoesNotChangeMapping(org.elasticsearch.index.mapper.TimestampFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:49:20,888][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:49:20,979][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:49:20,992][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [TimestampFieldMapperTests#testParsingNotDefaultTwiceDoesNotChangeMapping]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParsingNotDefaultTwiceDoesNotChangeMapping(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
  "startTimestamp": 1474195760869,
  "executionTime": 180
 }
]

[
 "TEST_STARTED",
 "ID#testPathMissingWithForcedNullDefaultShouldFail(org.elasticsearch.index.mapper.TimestampFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:49:21,082][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:49:21,380][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:49:21,398][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [TimestampFieldMapperTests#testPathMissingWithForcedNullDefaultShouldFail]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPathMissingWithForcedNullDefaultShouldFail(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
  "startTimestamp": 1474195761049,
  "executionTime": 374
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleDisabled(org.elasticsearch.index.mapper.TimestampFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:49:21,428][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:49:21,476][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:49:21,492][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [TimestampFieldMapperTests#testSimpleDisabled]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleDisabled(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
  "startTimestamp": 1474195761423,
  "executionTime": 100
 }
]

[
 "TEST_STARTED",
 "ID#testThatIndicesAfter2_0DontSupportUnixTimestampsInAnyDateFormat(org.elasticsearch.index.mapper.TimestampFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:49:21,529][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [new-index] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:49:21,577][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[new-index][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:49:21,591][INFO ][org.elasticsearch.index.mapper] [node_s_0] [new-index] [TimestampFieldMapperTests#testThatIndicesAfter2_0DontSupportUnixTimestampsInAnyDateFormat]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatIndicesAfter2_0DontSupportUnixTimestampsInAnyDateFormat(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
  "startTimestamp": 1474195761523,
  "executionTime": 104
 }
]

[
 "TEST_STARTED",
 "ID#testTimestampMissingNowDefaultValue(org.elasticsearch.index.mapper.TimestampFieldMapperTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:49:21,634][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:49:21,689][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:49:21,701][INFO ][org.elasticsearch.index.mapper] [node_s_0] [test] [TimestampFieldMapperTests#testTimestampMissingNowDefaultValue]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTimestampMissingNowDefaultValue(org.elasticsearch.index.mapper.TimestampFieldMapperTests)",
  "startTimestamp": 1474195761628,
  "executionTime": 119
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:49:21,747][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:49:21,748][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:49:21,748][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T19:49:21,749][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.mapper.TimestampFieldMapperTests",
  "startTimestamp": 1474195757974,
  "executionTime": 3787
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.MatchNoneQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.MatchNoneQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.MatchNoneQueryBuilderTests",
   "children": [
    {
     "id": "ID#testMustRewrite(org.elasticsearch.index.query.MatchNoneQueryBuilderTests)",
     "displayName": "testMustRewrite(org.elasticsearch.index.query.MatchNoneQueryBuilderTests)",
     "methodName": "testMustRewrite",
     "className": "org.elasticsearch.index.query.MatchNoneQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.MatchNoneQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.MatchNoneQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.MatchNoneQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.MatchNoneQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.MatchNoneQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.MatchNoneQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.MatchNoneQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.MatchNoneQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.MatchNoneQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.MatchNoneQueryBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.MatchNoneQueryBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.MatchNoneQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.MatchNoneQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.MatchNoneQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.MatchNoneQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.MatchNoneQueryBuilderTests)",
     "displayName": "testQueryWrappedInArray(org.elasticsearch.index.query.MatchNoneQueryBuilderTests)",
     "methodName": "testQueryWrappedInArray",
     "className": "org.elasticsearch.index.query.MatchNoneQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.MatchNoneQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.MatchNoneQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.MatchNoneQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.MatchNoneQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.MatchNoneQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.MatchNoneQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195761923
 }
]

[
 "TEST_STARTED",
 "ID#testMustRewrite(org.elasticsearch.index.query.MatchNoneQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:49:21,983][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{PG3ohFnpR-6k3KcTfsKsPg}{local}{local[579]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:49:21,997][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:49:21,997][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:49:22,029][WARN ][org.elasticsearch.deprecation.index.mapper]  [pvtFN] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:49:22,029][WARN ][org.elasticsearch.deprecation.index.mapper]  [pvtFN] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:49:22,029][WARN ][org.elasticsearch.deprecation.index.mapper]  [pvtFN] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:49:22,036][WARN ][org.elasticsearch.deprecation.index.mapper]  [pvtFN] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:49:22,036][WARN ][org.elasticsearch.deprecation.index.mapper]  [pvtFN] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:49:22,036][WARN ][org.elasticsearch.deprecation.index.mapper]  [pvtFN] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:49:22,038][WARN ][org.elasticsearch.deprecation.index.mapper]  [pvtFN] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:49:22,039][WARN ][org.elasticsearch.deprecation.index.mapper]  [pvtFN] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:49:22,039][WARN ][org.elasticsearch.deprecation.index.mapper]  [pvtFN] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:49:22,041][WARN ][org.elasticsearch.deprecation.index.mapper]  [pvtFN] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:49:22,041][WARN ][org.elasticsearch.deprecation.index.mapper]  [pvtFN] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:49:22,041][WARN ][org.elasticsearch.deprecation.index.mapper]  [pvtFN] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:49:22,043][WARN ][org.elasticsearch.deprecation.index.mapper]  [pvtFN] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:49:22,043][WARN ][org.elasticsearch.deprecation.index.mapper]  [pvtFN] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:49:22,043][WARN ][org.elasticsearch.deprecation.index.mapper]  [pvtFN] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:49:22,046][WARN ][org.elasticsearch.deprecation.index.mapper]  [pvtFN] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:49:22,046][WARN ][org.elasticsearch.deprecation.index.mapper]  [pvtFN] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T07:49:22,046][WARN ][org.elasticsearch.deprecation.index.mapper]  [pvtFN] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMustRewrite(org.elasticsearch.index.query.MatchNoneQueryBuilderTests)",
  "startTimestamp": 1474195761968,
  "executionTime": 79
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.MatchNoneQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.MatchNoneQueryBuilderTests)",
  "startTimestamp": 1474195762048,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.MatchNoneQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.MatchNoneQueryBuilderTests)",
  "startTimestamp": 1474195762050,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.MatchNoneQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.MatchNoneQueryBuilderTests)",
  "startTimestamp": 1474195762052,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.MatchNoneQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.MatchNoneQueryBuilderTests)",
  "startTimestamp": 1474195762055,
  "executionTime": 13
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.MatchNoneQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.MatchNoneQueryBuilderTests)",
  "startTimestamp": 1474195762069,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testQueryWrappedInArray(org.elasticsearch.index.query.MatchNoneQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.MatchNoneQueryBuilderTests)",
  "startTimestamp": 1474195762077,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.MatchNoneQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.MatchNoneQueryBuilderTests)",
  "startTimestamp": 1474195762079,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.MatchNoneQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.MatchNoneQueryBuilderTests)",
  "startTimestamp": 1474195762084,
  "executionTime": 6
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.MatchNoneQueryBuilderTests",
  "startTimestamp": 1474195761923,
  "executionTime": 173
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.QueryParseContextTests",
   "displayName": "org.elasticsearch.index.query.QueryParseContextTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.QueryParseContextTests",
   "children": [
    {
     "id": "ID#testParseTopLevelBuilderUnknownParameter(org.elasticsearch.index.query.QueryParseContextTests)",
     "displayName": "testParseTopLevelBuilderUnknownParameter(org.elasticsearch.index.query.QueryParseContextTests)",
     "methodName": "testParseTopLevelBuilderUnknownParameter",
     "className": "org.elasticsearch.index.query.QueryParseContextTests",
     "children": []
    },
    {
     "id": "ID#testParseInnerQueryBuilderExceptions(org.elasticsearch.index.query.QueryParseContextTests)",
     "displayName": "testParseInnerQueryBuilderExceptions(org.elasticsearch.index.query.QueryParseContextTests)",
     "methodName": "testParseInnerQueryBuilderExceptions",
     "className": "org.elasticsearch.index.query.QueryParseContextTests",
     "children": []
    },
    {
     "id": "ID#testParseTopLevelBuilder(org.elasticsearch.index.query.QueryParseContextTests)",
     "displayName": "testParseTopLevelBuilder(org.elasticsearch.index.query.QueryParseContextTests)",
     "methodName": "testParseTopLevelBuilder",
     "className": "org.elasticsearch.index.query.QueryParseContextTests",
     "children": []
    },
    {
     "id": "ID#testParseInnerQueryBuilder(org.elasticsearch.index.query.QueryParseContextTests)",
     "displayName": "testParseInnerQueryBuilder(org.elasticsearch.index.query.QueryParseContextTests)",
     "methodName": "testParseInnerQueryBuilder",
     "className": "org.elasticsearch.index.query.QueryParseContextTests",
     "children": []
    },
    {
     "id": "ID#testParseInnerQueryBuilderEmptyBody(org.elasticsearch.index.query.QueryParseContextTests)",
     "displayName": "testParseInnerQueryBuilderEmptyBody(org.elasticsearch.index.query.QueryParseContextTests)",
     "methodName": "testParseInnerQueryBuilderEmptyBody",
     "className": "org.elasticsearch.index.query.QueryParseContextTests",
     "children": []
    },
    {
     "id": "ID#testParseTopLevelBuilderEmptyObject(org.elasticsearch.index.query.QueryParseContextTests)",
     "displayName": "testParseTopLevelBuilderEmptyObject(org.elasticsearch.index.query.QueryParseContextTests)",
     "methodName": "testParseTopLevelBuilderEmptyObject",
     "className": "org.elasticsearch.index.query.QueryParseContextTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195762218
 }
]

[
 "TEST_STARTED",
 "ID#testParseTopLevelBuilderUnknownParameter(org.elasticsearch.index.query.QueryParseContextTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseTopLevelBuilderUnknownParameter(org.elasticsearch.index.query.QueryParseContextTests)",
  "startTimestamp": 1474195762268,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParseInnerQueryBuilderExceptions(org.elasticsearch.index.query.QueryParseContextTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T02:49:22,273][WARN ][org.elasticsearch.deprecation.index.query] query malformed, empty clause found at [1:2]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseInnerQueryBuilderExceptions(org.elasticsearch.index.query.QueryParseContextTests)",
  "startTimestamp": 1474195762270,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testParseTopLevelBuilder(org.elasticsearch.index.query.QueryParseContextTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseTopLevelBuilder(org.elasticsearch.index.query.QueryParseContextTests)",
  "startTimestamp": 1474195762274,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testParseInnerQueryBuilder(org.elasticsearch.index.query.QueryParseContextTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseInnerQueryBuilder(org.elasticsearch.index.query.QueryParseContextTests)",
  "startTimestamp": 1474195762277,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParseInnerQueryBuilderEmptyBody(org.elasticsearch.index.query.QueryParseContextTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T02:49:22,281][WARN ][org.elasticsearch.deprecation.index.query] query malformed, empty clause found at [1:2]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseInnerQueryBuilderEmptyBody(org.elasticsearch.index.query.QueryParseContextTests)",
  "startTimestamp": 1474195762279,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testParseTopLevelBuilderEmptyObject(org.elasticsearch.index.query.QueryParseContextTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseTopLevelBuilderEmptyObject(org.elasticsearch.index.query.QueryParseContextTests)",
  "startTimestamp": 1474195762282,
  "executionTime": 1
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.QueryParseContextTests",
  "startTimestamp": 1474195762218,
  "executionTime": 68
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.QueryStringQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
   "children": [
    {
     "id": "ID#testToQueryMatchAllQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testToQueryMatchAllQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testToQueryMatchAllQuery",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryPhraseQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testToQueryPhraseQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testToQueryPhraseQuery",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryMultipleFieldsDisMaxQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testToQueryMultipleFieldsDisMaxQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testToQueryMultipleFieldsDisMaxQuery",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryWilcardQueryWithSynonyms(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testToQueryWilcardQueryWithSynonyms(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testToQueryWilcardQueryWithSynonyms",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryRegExpQueryTooComplex(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testToQueryRegExpQueryTooComplex(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testToQueryRegExpQueryTooComplex",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryDisMaxQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testToQueryDisMaxQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testToQueryDisMaxQuery",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryMultipleTermsBooleanQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testToQueryMultipleTermsBooleanQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testToQueryMultipleTermsBooleanQuery",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIllegalArguments(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testIllegalArguments(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testIllegalArguments",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryMultipleFieldsBooleanQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testToQueryMultipleFieldsBooleanQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testToQueryMultipleFieldsBooleanQuery",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryWildcarQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testToQueryWildcarQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testToQueryWildcarQuery",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFuzzyNumeric(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testFuzzyNumeric(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testFuzzyNumeric",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMustRewrite(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testMustRewrite(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testMustRewrite",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testPrefixNumeric(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testPrefixNumeric(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testPrefixNumeric",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryFieldsWildcard(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testToQueryFieldsWildcard(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testToQueryFieldsWildcard",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryBooleanQueryMultipleBoosts(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testToQueryBooleanQueryMultipleBoosts(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testToQueryBooleanQueryMultipleBoosts",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryTermQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testToQueryTermQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testToQueryTermQuery",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testQueryWrappedInArray(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testQueryWrappedInArray",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testExactGeo(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testExactGeo(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testExactGeo",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testTimezone(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testTimezone(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testTimezone",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryPhraseQueryBoostAndSlop(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testToQueryPhraseQueryBoostAndSlop(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testToQueryPhraseQueryBoostAndSlop",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryRegExpQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testToQueryRegExpQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testToQueryRegExpQuery",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQueryBoosts(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "displayName": "testToQueryBoosts(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
     "methodName": "testToQueryBoosts",
     "className": "org.elasticsearch.index.query.QueryStringQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195762499
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryMatchAllQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:22,548][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{1pvhHAO8QEqkzFHka0YfSA}{local}{local[580]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:22,556][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:22,556][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:22,576][WARN ][org.elasticsearch.deprecation.index.mapper]  [hYVYgX] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:22,576][WARN ][org.elasticsearch.deprecation.index.mapper]  [hYVYgX] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:22,580][WARN ][org.elasticsearch.deprecation.index.mapper]  [hYVYgX] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:22,583][WARN ][org.elasticsearch.deprecation.index.mapper]  [hYVYgX] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:22,583][WARN ][org.elasticsearch.deprecation.index.mapper]  [hYVYgX] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:22,583][WARN ][org.elasticsearch.deprecation.index.mapper]  [hYVYgX] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:22,585][WARN ][org.elasticsearch.deprecation.index.mapper]  [hYVYgX] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:22,586][WARN ][org.elasticsearch.deprecation.index.mapper]  [hYVYgX] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:22,586][WARN ][org.elasticsearch.deprecation.index.mapper]  [hYVYgX] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:22,589][WARN ][org.elasticsearch.deprecation.index.mapper]  [hYVYgX] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:22,589][WARN ][org.elasticsearch.deprecation.index.mapper]  [hYVYgX] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:22,589][WARN ][org.elasticsearch.deprecation.index.mapper]  [hYVYgX] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:22,595][WARN ][org.elasticsearch.deprecation.index.mapper]  [hYVYgX] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:22,595][WARN ][org.elasticsearch.deprecation.index.mapper]  [hYVYgX] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:22,595][WARN ][org.elasticsearch.deprecation.index.mapper]  [hYVYgX] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:22,599][WARN ][org.elasticsearch.deprecation.index.mapper]  [hYVYgX] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:22,600][WARN ][org.elasticsearch.deprecation.index.mapper]  [hYVYgX] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:22,600][WARN ][org.elasticsearch.deprecation.index.mapper]  [hYVYgX] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryMatchAllQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1474195762533,
  "executionTime": 73
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1474195762607,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryPhraseQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryPhraseQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1474195762613,
  "executionTime": 16
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1474195762629,
  "executionTime": 54
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryMultipleFieldsDisMaxQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryMultipleFieldsDisMaxQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1474195762683,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryWilcardQueryWithSynonyms(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryWilcardQueryWithSynonyms(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1474195762686,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryRegExpQueryTooComplex(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryRegExpQueryTooComplex(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1474195762692,
  "executionTime": 116
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1474195762808,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryDisMaxQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryDisMaxQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1474195762812,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryMultipleTermsBooleanQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryMultipleTermsBooleanQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1474195762814,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1474195762819,
  "executionTime": 125
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalArguments(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalArguments(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1474195762945,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryMultipleFieldsBooleanQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryMultipleFieldsBooleanQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1474195762947,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryWildcarQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryWildcarQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1474195762950,
  "executionTime": 20
 }
]

[
 "TEST_STARTED",
 "ID#testFuzzyNumeric(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFuzzyNumeric(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1474195762970,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testMustRewrite(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMustRewrite(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1474195762974,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testPrefixNumeric(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPrefixNumeric(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1474195762978,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1474195762981,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryFieldsWildcard(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryFieldsWildcard(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1474195762986,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryBooleanQueryMultipleBoosts(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryBooleanQueryMultipleBoosts(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1474195762989,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryTermQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryTermQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1474195762992,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1474195762995,
  "executionTime": 33
 }
]

[
 "TEST_STARTED",
 "ID#testQueryWrappedInArray(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1474195763029,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testExactGeo(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testExactGeo(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1474195763034,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testTimezone(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTimezone(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1474195763038,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryPhraseQueryBoostAndSlop(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryPhraseQueryBoostAndSlop(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1474195763044,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1474195763047,
  "executionTime": 121
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryRegExpQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryRegExpQuery(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1474195763168,
  "executionTime": 28
 }
]

[
 "TEST_STARTED",
 "ID#testToQueryBoosts(org.elasticsearch.index.query.QueryStringQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQueryBoosts(org.elasticsearch.index.query.QueryStringQueryBuilderTests)",
  "startTimestamp": 1474195763196,
  "executionTime": 11
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.QueryStringQueryBuilderTests",
  "startTimestamp": 1474195762499,
  "executionTime": 718
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.query.TermsQueryBuilderTests",
   "displayName": "org.elasticsearch.index.query.TermsQueryBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.index.query.TermsQueryBuilderTests",
   "children": [
    {
     "id": "ID#testTermsQueryWithMultipleFields(org.elasticsearch.index.query.TermsQueryBuilderTests)",
     "displayName": "testTermsQueryWithMultipleFields(org.elasticsearch.index.query.TermsQueryBuilderTests)",
     "methodName": "testTermsQueryWithMultipleFields",
     "className": "org.elasticsearch.index.query.TermsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testNumeric(org.elasticsearch.index.query.TermsQueryBuilderTests)",
     "displayName": "testNumeric(org.elasticsearch.index.query.TermsQueryBuilderTests)",
     "methodName": "testNumeric",
     "className": "org.elasticsearch.index.query.TermsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromJson(org.elasticsearch.index.query.TermsQueryBuilderTests)",
     "displayName": "testFromJson(org.elasticsearch.index.query.TermsQueryBuilderTests)",
     "methodName": "testFromJson",
     "className": "org.elasticsearch.index.query.TermsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testNullValues(org.elasticsearch.index.query.TermsQueryBuilderTests)",
     "displayName": "testNullValues(org.elasticsearch.index.query.TermsQueryBuilderTests)",
     "methodName": "testNullValues",
     "className": "org.elasticsearch.index.query.TermsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEmtpyFieldName(org.elasticsearch.index.query.TermsQueryBuilderTests)",
     "displayName": "testEmtpyFieldName(org.elasticsearch.index.query.TermsQueryBuilderTests)",
     "methodName": "testEmtpyFieldName",
     "className": "org.elasticsearch.index.query.TermsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.index.query.TermsQueryBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.index.query.TermsQueryBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.index.query.TermsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.index.query.TermsQueryBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.index.query.TermsQueryBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.index.query.TermsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testBothValuesAndLookupSet(org.elasticsearch.index.query.TermsQueryBuilderTests)",
     "displayName": "testBothValuesAndLookupSet(org.elasticsearch.index.query.TermsQueryBuilderTests)",
     "methodName": "testBothValuesAndLookupSet",
     "className": "org.elasticsearch.index.query.TermsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownField(org.elasticsearch.index.query.TermsQueryBuilderTests)",
     "displayName": "testUnknownField(org.elasticsearch.index.query.TermsQueryBuilderTests)",
     "methodName": "testUnknownField",
     "className": "org.elasticsearch.index.query.TermsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.TermsQueryBuilderTests)",
     "displayName": "testQueryWrappedInArray(org.elasticsearch.index.query.TermsQueryBuilderTests)",
     "methodName": "testQueryWrappedInArray",
     "className": "org.elasticsearch.index.query.TermsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testToQuery(org.elasticsearch.index.query.TermsQueryBuilderTests)",
     "displayName": "testToQuery(org.elasticsearch.index.query.TermsQueryBuilderTests)",
     "methodName": "testToQuery",
     "className": "org.elasticsearch.index.query.TermsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testGeo(org.elasticsearch.index.query.TermsQueryBuilderTests)",
     "displayName": "testGeo(org.elasticsearch.index.query.TermsQueryBuilderTests)",
     "methodName": "testGeo",
     "className": "org.elasticsearch.index.query.TermsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEmtpyTermsLookup(org.elasticsearch.index.query.TermsQueryBuilderTests)",
     "displayName": "testEmtpyTermsLookup(org.elasticsearch.index.query.TermsQueryBuilderTests)",
     "methodName": "testEmtpyTermsLookup",
     "className": "org.elasticsearch.index.query.TermsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testMustRewrite(org.elasticsearch.index.query.TermsQueryBuilderTests)",
     "displayName": "testMustRewrite(org.elasticsearch.index.query.TermsQueryBuilderTests)",
     "methodName": "testMustRewrite",
     "className": "org.elasticsearch.index.query.TermsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.TermsQueryBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.index.query.TermsQueryBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.index.query.TermsQueryBuilderTests",
     "children": []
    },
    {
     "id": "ID#testUnknownObjectException(org.elasticsearch.index.query.TermsQueryBuilderTests)",
     "displayName": "testUnknownObjectException(org.elasticsearch.index.query.TermsQueryBuilderTests)",
     "methodName": "testUnknownObjectException",
     "className": "org.elasticsearch.index.query.TermsQueryBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195763386
 }
]

[
 "TEST_STARTED",
 "ID#testTermsQueryWithMultipleFields(org.elasticsearch.index.query.TermsQueryBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:49:23,416][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{Cct_xHEdRBSOI23hvtBEdg}{local}{local[581]}, reason: test setting state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:49:23,422][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:49:23,423][INFO ][org.elasticsearch.plugins] [class org.elasticsearch.test.AbstractQueryTestCase] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:49:23,437][WARN ][org.elasticsearch.deprecation.index.mapper]  [Srrm] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:49:23,437][WARN ][org.elasticsearch.deprecation.index.mapper]  [Srrm] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:49:23,437][WARN ][org.elasticsearch.deprecation.index.mapper]  [Srrm] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:49:23,439][WARN ][org.elasticsearch.deprecation.index.mapper]  [Srrm] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:49:23,439][WARN ][org.elasticsearch.deprecation.index.mapper]  [Srrm] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:49:23,439][WARN ][org.elasticsearch.deprecation.index.mapper]  [Srrm] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:49:23,441][WARN ][org.elasticsearch.deprecation.index.mapper]  [Srrm] geo_point lat_lon parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:49:23,441][WARN ][org.elasticsearch.deprecation.index.mapper]  [Srrm] geo_point geohash parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T12:49:23,441][WARN ][org.elasticsearch.deprecation.index.mapper]  [Srrm] geo_point geohash_prefix parameter is deprecated and will be removed in the next major release%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTermsQueryWithMultipleFields(org.elasticsearch.index.query.TermsQueryBuilderTests)",
  "startTimestamp": 1474195763412,
  "executionTime": 30
 }
]

[
 "TEST_STARTED",
 "ID#testNumeric(org.elasticsearch.index.query.TermsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNumeric(org.elasticsearch.index.query.TermsQueryBuilderTests)",
  "startTimestamp": 1474195763443,
  "executionTime": 42
 }
]

[
 "TEST_STARTED",
 "ID#testFromJson(org.elasticsearch.index.query.TermsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromJson(org.elasticsearch.index.query.TermsQueryBuilderTests)",
  "startTimestamp": 1474195763485,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testNullValues(org.elasticsearch.index.query.TermsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNullValues(org.elasticsearch.index.query.TermsQueryBuilderTests)",
  "startTimestamp": 1474195763493,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testEmtpyFieldName(org.elasticsearch.index.query.TermsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmtpyFieldName(org.elasticsearch.index.query.TermsQueryBuilderTests)",
  "startTimestamp": 1474195763500,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.index.query.TermsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.index.query.TermsQueryBuilderTests)",
  "startTimestamp": 1474195763502,
  "executionTime": 15
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.index.query.TermsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.index.query.TermsQueryBuilderTests)",
  "startTimestamp": 1474195763518,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testBothValuesAndLookupSet(org.elasticsearch.index.query.TermsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBothValuesAndLookupSet(org.elasticsearch.index.query.TermsQueryBuilderTests)",
  "startTimestamp": 1474195763522,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownField(org.elasticsearch.index.query.TermsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownField(org.elasticsearch.index.query.TermsQueryBuilderTests)",
  "startTimestamp": 1474195763524,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testQueryWrappedInArray(org.elasticsearch.index.query.TermsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryWrappedInArray(org.elasticsearch.index.query.TermsQueryBuilderTests)",
  "startTimestamp": 1474195763527,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testToQuery(org.elasticsearch.index.query.TermsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testToQuery(org.elasticsearch.index.query.TermsQueryBuilderTests)",
  "startTimestamp": 1474195763529,
  "executionTime": 16
 }
]

[
 "TEST_STARTED",
 "ID#testGeo(org.elasticsearch.index.query.TermsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGeo(org.elasticsearch.index.query.TermsQueryBuilderTests)",
  "startTimestamp": 1474195763545,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testEmtpyTermsLookup(org.elasticsearch.index.query.TermsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmtpyTermsLookup(org.elasticsearch.index.query.TermsQueryBuilderTests)",
  "startTimestamp": 1474195763548,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testMustRewrite(org.elasticsearch.index.query.TermsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMustRewrite(org.elasticsearch.index.query.TermsQueryBuilderTests)",
  "startTimestamp": 1474195763550,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.index.query.TermsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.index.query.TermsQueryBuilderTests)",
  "startTimestamp": 1474195763554,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testUnknownObjectException(org.elasticsearch.index.query.TermsQueryBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnknownObjectException(org.elasticsearch.index.query.TermsQueryBuilderTests)",
  "startTimestamp": 1474195763563,
  "executionTime": 5
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.query.TermsQueryBuilderTests",
  "startTimestamp": 1474195763386,
  "executionTime": 188
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.search.MultiMatchQueryTests",
   "displayName": "org.elasticsearch.index.search.MultiMatchQueryTests",
   "methodName": null,
   "className": "org.elasticsearch.index.search.MultiMatchQueryTests",
   "children": [
    {
     "id": "ID#testBlendTermsUnsupportedValue(org.elasticsearch.index.search.MultiMatchQueryTests)",
     "displayName": "testBlendTermsUnsupportedValue(org.elasticsearch.index.search.MultiMatchQueryTests)",
     "methodName": "testBlendTermsUnsupportedValue",
     "className": "org.elasticsearch.index.search.MultiMatchQueryTests",
     "children": []
    },
    {
     "id": "ID#testCrossFieldMultiMatchQuery(org.elasticsearch.index.search.MultiMatchQueryTests)",
     "displayName": "testCrossFieldMultiMatchQuery(org.elasticsearch.index.search.MultiMatchQueryTests)",
     "methodName": "testCrossFieldMultiMatchQuery",
     "className": "org.elasticsearch.index.search.MultiMatchQueryTests",
     "children": []
    },
    {
     "id": "ID#testBlendNoTermQuery(org.elasticsearch.index.search.MultiMatchQueryTests)",
     "displayName": "testBlendNoTermQuery(org.elasticsearch.index.search.MultiMatchQueryTests)",
     "methodName": "testBlendNoTermQuery",
     "className": "org.elasticsearch.index.search.MultiMatchQueryTests",
     "children": []
    },
    {
     "id": "ID#testBlendTermsWithFieldBoosts(org.elasticsearch.index.search.MultiMatchQueryTests)",
     "displayName": "testBlendTermsWithFieldBoosts(org.elasticsearch.index.search.MultiMatchQueryTests)",
     "methodName": "testBlendTermsWithFieldBoosts",
     "className": "org.elasticsearch.index.search.MultiMatchQueryTests",
     "children": []
    },
    {
     "id": "ID#testBlendTerms(org.elasticsearch.index.search.MultiMatchQueryTests)",
     "displayName": "testBlendTerms(org.elasticsearch.index.search.MultiMatchQueryTests)",
     "methodName": "testBlendTerms",
     "className": "org.elasticsearch.index.search.MultiMatchQueryTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195763661
 }
]

[
 "TEST_STARTED",
 "ID#testBlendTermsUnsupportedValue(org.elasticsearch.index.search.MultiMatchQueryTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:19:23,689][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:19:23,720][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:19:23,720][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:19:23,724][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[7260], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:19:23,726][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:19:23,726][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:19:23,838][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:19:23,839][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:19:23,839][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[108]}, bound_addresses {local[108]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:19:23,841][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{NOoCS-cOTbyfW0-3fRwu1Q}{vb2-tT1rTWqvbC61aN8uWw}{local}{local[108]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:19:23,841][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:19:23,860][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:19:23,888][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:19:23,949][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:19:24,006][INFO ][org.elasticsearch.index.search] [MultiMatchQueryTests#testBlendTermsUnsupportedValue]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBlendTermsUnsupportedValue(org.elasticsearch.index.search.MultiMatchQueryTests)",
  "startTimestamp": 1474195763678,
  "executionTime": 369
 }
]

[
 "TEST_STARTED",
 "ID#testCrossFieldMultiMatchQuery(org.elasticsearch.index.search.MultiMatchQueryTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:19:24,052][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:19:24,138][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:19:24,171][INFO ][org.elasticsearch.index.search] [MultiMatchQueryTests#testCrossFieldMultiMatchQuery]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCrossFieldMultiMatchQuery(org.elasticsearch.index.search.MultiMatchQueryTests)",
  "startTimestamp": 1474195764047,
  "executionTime": 246
 }
]

[
 "TEST_STARTED",
 "ID#testBlendNoTermQuery(org.elasticsearch.index.search.MultiMatchQueryTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:19:24,300][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:19:24,402][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:19:24,438][INFO ][org.elasticsearch.index.search] [MultiMatchQueryTests#testBlendNoTermQuery]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBlendNoTermQuery(org.elasticsearch.index.search.MultiMatchQueryTests)",
  "startTimestamp": 1474195764293,
  "executionTime": 224
 }
]

[
 "TEST_STARTED",
 "ID#testBlendTermsWithFieldBoosts(org.elasticsearch.index.search.MultiMatchQueryTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:19:24,524][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:19:24,644][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:19:24,678][INFO ][org.elasticsearch.index.search] [MultiMatchQueryTests#testBlendTermsWithFieldBoosts]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBlendTermsWithFieldBoosts(org.elasticsearch.index.search.MultiMatchQueryTests)",
  "startTimestamp": 1474195764517,
  "executionTime": 195
 }
]

[
 "TEST_STARTED",
 "ID#testBlendTerms(org.elasticsearch.index.search.MultiMatchQueryTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:19:24,719][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:19:24,784][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:19:24,798][INFO ][org.elasticsearch.index.search] [MultiMatchQueryTests#testBlendTerms]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBlendTerms(org.elasticsearch.index.search.MultiMatchQueryTests)",
  "startTimestamp": 1474195764712,
  "executionTime": 116
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:19:24,828][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:19:24,829][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:19:24,829][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T01:19:24,830][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.search.MultiMatchQueryTests",
  "startTimestamp": 1474195763661,
  "executionTime": 1178
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.shard.CommitPointsTests",
   "displayName": "org.elasticsearch.index.shard.CommitPointsTests",
   "methodName": null,
   "className": "org.elasticsearch.index.shard.CommitPointsTests",
   "children": [
    {
     "id": "ID#testCommitPointXContent(org.elasticsearch.index.shard.CommitPointsTests)",
     "displayName": "testCommitPointXContent(org.elasticsearch.index.shard.CommitPointsTests)",
     "methodName": "testCommitPointXContent",
     "className": "org.elasticsearch.index.shard.CommitPointsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195765073
 }
]

[
 "TEST_STARTED",
 "ID#testCommitPointXContent(org.elasticsearch.index.shard.CommitPointsTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T03:49:25,188][INFO ][org.elasticsearch.index.shard] [node_s_0] [test][0] serialized commit_point {%0A  \"version\" : 1,%0A  \"name\" : \"test\",%0A  \"type\" : \"GENERATED\",%0A  \"index_files\" : {%0A    \"file1\" : {%0A      \"physical_name\" : \"file1_p\",%0A      \"length\" : 100,%0A      \"checksum\" : \"ck1\"%0A    },%0A    \"file2\" : {%0A      \"physical_name\" : \"file2_p\",%0A      \"length\" : 200,%0A      \"checksum\" : \"ck2\"%0A    }%0A  },%0A  \"translog_files\" : {%0A    \"t_file1\" : {%0A      \"physical_name\" : \"t_file1_p\",%0A      \"length\" : 100%0A    },%0A    \"t_file2\" : {%0A      \"physical_name\" : \"t_file2_p\",%0A      \"length\" : 200%0A    }%0A  }%0A}%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCommitPointXContent(org.elasticsearch.index.shard.CommitPointsTests)",
  "startTimestamp": 1474195765128,
  "executionTime": 61
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.shard.CommitPointsTests",
  "startTimestamp": 1474195765073,
  "executionTime": 133
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.shard.IndexSearcherWrapperTests",
   "displayName": "org.elasticsearch.index.shard.IndexSearcherWrapperTests",
   "methodName": null,
   "className": "org.elasticsearch.index.shard.IndexSearcherWrapperTests",
   "children": [
    {
     "id": "ID#testNoWrap(org.elasticsearch.index.shard.IndexSearcherWrapperTests)",
     "displayName": "testNoWrap(org.elasticsearch.index.shard.IndexSearcherWrapperTests)",
     "methodName": "testNoWrap",
     "className": "org.elasticsearch.index.shard.IndexSearcherWrapperTests",
     "children": []
    },
    {
     "id": "ID#testWrappedReaderMustDelegateCoreCacheKey(org.elasticsearch.index.shard.IndexSearcherWrapperTests)",
     "displayName": "testWrappedReaderMustDelegateCoreCacheKey(org.elasticsearch.index.shard.IndexSearcherWrapperTests)",
     "methodName": "testWrappedReaderMustDelegateCoreCacheKey",
     "className": "org.elasticsearch.index.shard.IndexSearcherWrapperTests",
     "children": []
    },
    {
     "id": "ID#testReaderCloseListenerIsCalled(org.elasticsearch.index.shard.IndexSearcherWrapperTests)",
     "displayName": "testReaderCloseListenerIsCalled(org.elasticsearch.index.shard.IndexSearcherWrapperTests)",
     "methodName": "testReaderCloseListenerIsCalled",
     "className": "org.elasticsearch.index.shard.IndexSearcherWrapperTests",
     "children": []
    },
    {
     "id": "ID#testIsCacheable(org.elasticsearch.index.shard.IndexSearcherWrapperTests)",
     "displayName": "testIsCacheable(org.elasticsearch.index.shard.IndexSearcherWrapperTests)",
     "methodName": "testIsCacheable",
     "className": "org.elasticsearch.index.shard.IndexSearcherWrapperTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195765345
 }
]

[
 "TEST_STARTED",
 "ID#testNoWrap(org.elasticsearch.index.shard.IndexSearcherWrapperTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoWrap(org.elasticsearch.index.shard.IndexSearcherWrapperTests)",
  "startTimestamp": 1474195765358,
  "executionTime": 90
 }
]

[
 "TEST_STARTED",
 "ID#testWrappedReaderMustDelegateCoreCacheKey(org.elasticsearch.index.shard.IndexSearcherWrapperTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWrappedReaderMustDelegateCoreCacheKey(org.elasticsearch.index.shard.IndexSearcherWrapperTests)",
  "startTimestamp": 1474195765448,
  "executionTime": 52
 }
]

[
 "TEST_STARTED",
 "ID#testReaderCloseListenerIsCalled(org.elasticsearch.index.shard.IndexSearcherWrapperTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReaderCloseListenerIsCalled(org.elasticsearch.index.shard.IndexSearcherWrapperTests)",
  "startTimestamp": 1474195765500,
  "executionTime": 76
 }
]

[
 "TEST_STARTED",
 "ID#testIsCacheable(org.elasticsearch.index.shard.IndexSearcherWrapperTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIsCacheable(org.elasticsearch.index.shard.IndexSearcherWrapperTests)",
  "startTimestamp": 1474195765576,
  "executionTime": 46
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.shard.IndexSearcherWrapperTests",
  "startTimestamp": 1474195765345,
  "executionTime": 279
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.store.FsDirectoryServiceTests",
   "displayName": "org.elasticsearch.index.store.FsDirectoryServiceTests",
   "methodName": null,
   "className": "org.elasticsearch.index.store.FsDirectoryServiceTests",
   "children": [
    {
     "id": "ID#testHasNoSleepWrapperOnNormalFS(org.elasticsearch.index.store.FsDirectoryServiceTests)",
     "displayName": "testHasNoSleepWrapperOnNormalFS(org.elasticsearch.index.store.FsDirectoryServiceTests)",
     "methodName": "testHasNoSleepWrapperOnNormalFS",
     "className": "org.elasticsearch.index.store.FsDirectoryServiceTests",
     "children": []
    },
    {
     "id": "ID#testPreload(org.elasticsearch.index.store.FsDirectoryServiceTests)",
     "displayName": "testPreload(org.elasticsearch.index.store.FsDirectoryServiceTests)",
     "methodName": "testPreload",
     "className": "org.elasticsearch.index.store.FsDirectoryServiceTests",
     "children": []
    },
    {
     "id": "ID#testHasSleepWrapperOnSharedFS(org.elasticsearch.index.store.FsDirectoryServiceTests)",
     "displayName": "testHasSleepWrapperOnSharedFS(org.elasticsearch.index.store.FsDirectoryServiceTests)",
     "methodName": "testHasSleepWrapperOnSharedFS",
     "className": "org.elasticsearch.index.store.FsDirectoryServiceTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195765930
 }
]

[
 "TEST_STARTED",
 "ID#testHasNoSleepWrapperOnNormalFS(org.elasticsearch.index.store.FsDirectoryServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHasNoSleepWrapperOnNormalFS(org.elasticsearch.index.store.FsDirectoryServiceTests)",
  "startTimestamp": 1474195765991,
  "executionTime": 14
 }
]

[
 "TEST_STARTED",
 "ID#testPreload(org.elasticsearch.index.store.FsDirectoryServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPreload(org.elasticsearch.index.store.FsDirectoryServiceTests)",
  "startTimestamp": 1474195766005,
  "executionTime": 120
 }
]

[
 "TEST_STARTED",
 "ID#testHasSleepWrapperOnSharedFS(org.elasticsearch.index.store.FsDirectoryServiceTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHasSleepWrapperOnSharedFS(org.elasticsearch.index.store.FsDirectoryServiceTests)",
  "startTimestamp": 1474195766126,
  "executionTime": 24
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.store.FsDirectoryServiceTests",
  "startTimestamp": 1474195765930,
  "executionTime": 421
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.store.IndexStoreTests",
   "displayName": "org.elasticsearch.index.store.IndexStoreTests",
   "methodName": null,
   "className": "org.elasticsearch.index.store.IndexStoreTests",
   "children": [
    {
     "id": "ID#testUpdateThrottleType(org.elasticsearch.index.store.IndexStoreTests)",
     "displayName": "testUpdateThrottleType(org.elasticsearch.index.store.IndexStoreTests)",
     "methodName": "testUpdateThrottleType",
     "className": "org.elasticsearch.index.store.IndexStoreTests",
     "children": []
    },
    {
     "id": "ID#testStoreDirectory(org.elasticsearch.index.store.IndexStoreTests)",
     "displayName": "testStoreDirectory(org.elasticsearch.index.store.IndexStoreTests)",
     "methodName": "testStoreDirectory",
     "className": "org.elasticsearch.index.store.IndexStoreTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195766546
 }
]

[
 "TEST_STARTED",
 "ID#testUpdateThrottleType(org.elasticsearch.index.store.IndexStoreTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUpdateThrottleType(org.elasticsearch.index.store.IndexStoreTests)",
  "startTimestamp": 1474195766579,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testStoreDirectory(org.elasticsearch.index.store.IndexStoreTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStoreDirectory(org.elasticsearch.index.store.IndexStoreTests)",
  "startTimestamp": 1474195766582,
  "executionTime": 22
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.store.IndexStoreTests",
  "startTimestamp": 1474195766546,
  "executionTime": 67
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.termvectors.TermVectorsServiceTests",
   "displayName": "org.elasticsearch.index.termvectors.TermVectorsServiceTests",
   "methodName": null,
   "className": "org.elasticsearch.index.termvectors.TermVectorsServiceTests",
   "children": [
    {
     "id": "ID#testTook(org.elasticsearch.index.termvectors.TermVectorsServiceTests)",
     "displayName": "testTook(org.elasticsearch.index.termvectors.TermVectorsServiceTests)",
     "methodName": "testTook",
     "className": "org.elasticsearch.index.termvectors.TermVectorsServiceTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195766916
 }
]

[
 "TEST_STARTED",
 "ID#testTook(org.elasticsearch.index.termvectors.TermVectorsServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:49:26,973][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:49:27,008][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:49:27,008][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:49:27,012][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[7260], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:49:27,015][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:49:27,015][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:49:27,140][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:49:27,140][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:49:27,141][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[109]}, bound_addresses {local[109]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:49:27,141][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{IWWZ55n2RaaN1uNqo8sjXQ}{YFgsnuE0RPukZ_jk0NGb2w}{local}{local[109]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:49:27,142][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:49:27,154][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:49:27,177][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings [type1]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:49:27,252][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:49:27,423][INFO ][org.elasticsearch.index.termvectors] [TermVectorsServiceTests#testTook]: cleaning up after test%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTook(org.elasticsearch.index.termvectors.TermVectorsServiceTests)",
  "startTimestamp": 1474195766958,
  "executionTime": 500
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:49:27,458][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:49:27,459][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:49:27,459][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:49:27,460][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.termvectors.TermVectorsServiceTests",
  "startTimestamp": 1474195766916,
  "executionTime": 564
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.indices.IndicesServiceTests",
   "displayName": "org.elasticsearch.indices.IndicesServiceTests",
   "methodName": null,
   "className": "org.elasticsearch.indices.IndicesServiceTests",
   "children": [
    {
     "id": "ID#testCanDeleteShardContent(org.elasticsearch.indices.IndicesServiceTests)",
     "displayName": "testCanDeleteShardContent(org.elasticsearch.indices.IndicesServiceTests)",
     "methodName": "testCanDeleteShardContent",
     "className": "org.elasticsearch.indices.IndicesServiceTests",
     "children": []
    },
    {
     "id": "ID#testDeleteIndexStore(org.elasticsearch.indices.IndicesServiceTests)",
     "displayName": "testDeleteIndexStore(org.elasticsearch.indices.IndicesServiceTests)",
     "methodName": "testDeleteIndexStore",
     "className": "org.elasticsearch.indices.IndicesServiceTests",
     "children": []
    },
    {
     "id": "ID#testCanDeleteIndexContent(org.elasticsearch.indices.IndicesServiceTests)",
     "displayName": "testCanDeleteIndexContent(org.elasticsearch.indices.IndicesServiceTests)",
     "methodName": "testCanDeleteIndexContent",
     "className": "org.elasticsearch.indices.IndicesServiceTests",
     "children": []
    },
    {
     "id": "ID#testPendingTasks(org.elasticsearch.indices.IndicesServiceTests)",
     "displayName": "testPendingTasks(org.elasticsearch.indices.IndicesServiceTests)",
     "methodName": "testPendingTasks",
     "className": "org.elasticsearch.indices.IndicesServiceTests",
     "children": []
    },
    {
     "id": "ID#testIndexAndTombstoneWithSameNameOnStartup(org.elasticsearch.indices.IndicesServiceTests)",
     "displayName": "testIndexAndTombstoneWithSameNameOnStartup(org.elasticsearch.indices.IndicesServiceTests)",
     "methodName": "testIndexAndTombstoneWithSameNameOnStartup",
     "className": "org.elasticsearch.indices.IndicesServiceTests",
     "children": []
    },
    {
     "id": "ID#testVerifyIfIndexContentDeleted(org.elasticsearch.indices.IndicesServiceTests)",
     "displayName": "testVerifyIfIndexContentDeleted(org.elasticsearch.indices.IndicesServiceTests)",
     "methodName": "testVerifyIfIndexContentDeleted",
     "className": "org.elasticsearch.indices.IndicesServiceTests",
     "children": []
    },
    {
     "id": "ID#testDanglingIndicesWithAliasConflict(org.elasticsearch.indices.IndicesServiceTests)",
     "displayName": "testDanglingIndicesWithAliasConflict(org.elasticsearch.indices.IndicesServiceTests)",
     "methodName": "testDanglingIndicesWithAliasConflict",
     "className": "org.elasticsearch.indices.IndicesServiceTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195767706
 }
]

[
 "TEST_STARTED",
 "ID#testCanDeleteShardContent(org.elasticsearch.indices.IndicesServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:27,732][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:27,760][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:27,760][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:27,764][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[7260], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:27,766][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:27,766][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:27,845][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:27,846][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:27,846][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[110]}, bound_addresses {local[110]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:27,846][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{pQSgvYfPQaG5cvkkxBrtIA}{QETIvTsOSCe25__V44Ojng}{local}{local[110]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:27,847][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:27,856][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:27,870][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:27,907][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:27,921][INFO ][org.elasticsearch.indices] [node_s_0] [IndicesServiceTests#testCanDeleteShardContent]: cleaning up after test%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:27,940][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:27,941][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:27,941][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:27,943][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:27,955][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:27,976][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:27,976][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:27,979][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[7260], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:27,981][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:27,981][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:28,049][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:28,050][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:28,050][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[111]}, bound_addresses {local[111]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:28,051][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{--1CqfgASdOkvLccpOes1Q}{X8VsTqeiSrmtEuiKO2ig-A}{local}{local[111]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:28,051][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:28,061][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCanDeleteShardContent(org.elasticsearch.indices.IndicesServiceTests)",
  "startTimestamp": 1474195767724,
  "executionTime": 348
 }
]

[
 "TEST_STARTED",
 "ID#testDeleteIndexStore(org.elasticsearch.indices.IndicesServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:28,075][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:28,120][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:28,161][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:28,197][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:28,215][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test/qa8sQpVVR4m5rebOpNUSrA] create_mapping [type]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:28,796][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] closing indices [[[test/qa8sQpVVR4m5rebOpNUSrA]]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:28,822][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] opening indices [[[test/qa8sQpVVR4m5rebOpNUSrA]]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:28,893][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [RED] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:28,928][INFO ][org.elasticsearch.indices] [node_s_0] [IndicesServiceTests#testDeleteIndexStore]: cleaning up after test%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:28,953][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:28,954][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:28,954][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:28,955][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:28,959][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:28,974][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:28,974][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:28,978][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[7260], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:28,980][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:28,980][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:29,073][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:29,074][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:29,074][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[112]}, bound_addresses {local[112]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:29,075][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{zBiKcVGeQHWX5x1khNjZuw}{QZWaqv7qR7ezRx3k1-uOGg}{local}{local[112]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:29,075][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:29,084][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDeleteIndexStore(org.elasticsearch.indices.IndicesServiceTests)",
  "startTimestamp": 1474195768072,
  "executionTime": 1023
 }
]

[
 "TEST_STARTED",
 "ID#testCanDeleteIndexContent(org.elasticsearch.indices.IndicesServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:29,100][INFO ][org.elasticsearch.indices] [node_s_0] [IndicesServiceTests#testCanDeleteIndexContent]: cleaning up after test%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:29,101][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:29,101][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:29,102][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:29,103][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:29,111][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:29,127][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:29,128][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:29,131][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[7260], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:29,133][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:29,133][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:29,210][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:29,210][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:29,211][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[113]}, bound_addresses {local[113]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:29,211][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{zTx49iSgTjySwPNQknGOAg}{rv_p-5PNTTeQOTP9q73ywQ}{local}{local[113]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:29,212][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:29,220][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCanDeleteIndexContent(org.elasticsearch.indices.IndicesServiceTests)",
  "startTimestamp": 1474195769095,
  "executionTime": 137
 }
]

[
 "TEST_STARTED",
 "ID#testPendingTasks(org.elasticsearch.indices.IndicesServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:29,237][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:29,312][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:29,322][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] closing indices [[[test/-EXlYMWkRCqs9jj-685muQ]]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:29,349][WARN ][org.elasticsearch.indices] [node_s_0] 1 no shard lock for pending delete%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:29,349][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] opening indices [[[test/-EXlYMWkRCqs9jj-685muQ]]]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:29,362][INFO ][org.elasticsearch.indices] [node_s_0] [IndicesServiceTests#testPendingTasks]: cleaning up after test%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:29,372][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:29,372][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:29,372][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:29,373][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:29,380][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:29,396][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:29,396][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:29,400][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[7260], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:29,402][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:29,402][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:29,484][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:29,485][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:29,485][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[114]}, bound_addresses {local[114]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:29,486][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{0S4jdYRbREmPClMgIbtIxA}{gzxApuVOSy-SzMHCPtpQ3A}{local}{local[114]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:29,486][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:29,496][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPendingTasks(org.elasticsearch.indices.IndicesServiceTests)",
  "startTimestamp": 1474195769232,
  "executionTime": 277
 }
]

[
 "TEST_STARTED",
 "ID#testIndexAndTombstoneWithSameNameOnStartup(org.elasticsearch.indices.IndicesServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:29,513][INFO ][org.elasticsearch.indices] [node_s_0] [IndicesServiceTests#testIndexAndTombstoneWithSameNameOnStartup]: cleaning up after test%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:29,513][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:29,514][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:29,514][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:29,515][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:29,525][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:29,545][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:29,545][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:29,548][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[7260], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:29,551][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:29,551][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:29,637][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:29,637][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:29,637][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[115]}, bound_addresses {local[115]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:29,638][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{mnhL74F5TgCfcYYfGYpVag}{KIwjgt4tQVmCUmMMbywJlg}{local}{local[115]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:29,639][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:29,649][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexAndTombstoneWithSameNameOnStartup(org.elasticsearch.indices.IndicesServiceTests)",
  "startTimestamp": 1474195769509,
  "executionTime": 152
 }
]

[
 "TEST_STARTED",
 "ID#testVerifyIfIndexContentDeleted(org.elasticsearch.indices.IndicesServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:29,677][INFO ][org.elasticsearch.indices] [node_s_0] [IndicesServiceTests#testVerifyIfIndexContentDeleted]: cleaning up after test%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:29,678][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:29,678][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:29,679][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:29,680][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:29,687][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:29,706][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:29,706][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:29,710][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[7260], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:29,711][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:29,711][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:29,785][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:29,785][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:29,786][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[116]}, bound_addresses {local[116]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:29,786][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{Xn3Rmaq5TOeFGRwb1cVoGw}{fqF0T6xVTH62SFTg9kVoOw}{local}{local[116]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:29,787][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:29,797][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVerifyIfIndexContentDeleted(org.elasticsearch.indices.IndicesServiceTests)",
  "startTimestamp": 1474195769661,
  "executionTime": 148
 }
]

[
 "TEST_STARTED",
 "ID#testDanglingIndicesWithAliasConflict(org.elasticsearch.indices.IndicesServiceTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:29,814][INFO ][org.elasticsearch.cluster.metadata] [node_s_0] [test-idx1] creating index, cause [api], templates [random_index_template], shards [1]/[0], mappings []%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:29,861][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test-idx1][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:29,900][WARN ][org.elasticsearch.gateway] [node_s_0] ignoring dangled index [[test-alias/k8_IcvDXSke-63fmNQQ30w]] on node [{node_s_0}{Xn3Rmaq5TOeFGRwb1cVoGw}{fqF0T6xVTH62SFTg9kVoOw}{local}{local[116]}] due to an existing alias with the same name%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:29,912][INFO ][org.elasticsearch.gateway] [node_s_0] auto importing dangled indices [[test-alias/k8_IcvDXSke-63fmNQQ30w]/OPEN] from [{node_s_0}{Xn3Rmaq5TOeFGRwb1cVoGw}{fqF0T6xVTH62SFTg9kVoOw}{local}{local[116]}]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:29,967][INFO ][org.elasticsearch.indices] [node_s_0] [IndicesServiceTests#testDanglingIndicesWithAliasConflict]: cleaning up after test%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:29,967][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s_0] Cluster health status changed from [YELLOW] to [GREEN] (reason: [shards started [[test-alias][0]] ...]).%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:30,020][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:30,020][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:30,021][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:30,022][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:30,032][INFO ][org.elasticsearch.node   ] [node_s_0] initializing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:30,049][INFO ][org.elasticsearch.env    ] [node_s_0] using [1] data paths, mounts [[(C:)]], net usable_space [704.6gb], net total_space [780.6gb], spins? [unknown], types [NTFS]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:30,049][INFO ][org.elasticsearch.env    ] [node_s_0] heap size [491mb], compressed ordinary object pointers [true]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:30,052][INFO ][org.elasticsearch.node   ] [node_s_0] version[5.0.0-alpha6-SNAPSHOT], pid[7260], build[Unknown/Unknown], OS[Windows 10/10.0/amd64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_102/25.102-b14]%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:30,055][INFO ][org.elasticsearch.plugins] [node_s_0] no modules loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:30,055][INFO ][org.elasticsearch.plugins] [node_s_0] no plugins loaded%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:30,172][INFO ][org.elasticsearch.node   ] [node_s_0] initialized%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:30,172][INFO ][org.elasticsearch.node   ] [node_s_0] starting ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:30,172][INFO ][org.elasticsearch.transport] [node_s_0] publish_address {local[117]}, bound_addresses {local[117]}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:30,173][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node_s_0}{trSLHFdRSW2RRno0cRyUlg}{qfR0k6EITCu_J-V50VbzOg}{local}{local[117]}, reason: local-disco-initial_connect(master)%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:30,173][INFO ][org.elasticsearch.node   ] [node_s_0] started%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:30,181][INFO ][org.elasticsearch.gateway] [node_s_0] recovered [0] indices into cluster_state%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDanglingIndicesWithAliasConflict(org.elasticsearch.indices.IndicesServiceTests)",
  "startTimestamp": 1474195769809,
  "executionTime": 384
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:30,193][INFO ][org.elasticsearch.node   ] [node_s_0] stopping ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:30,194][INFO ][org.elasticsearch.node   ] [node_s_0] stopped%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:30,194][INFO ][org.elasticsearch.node   ] [node_s_0] closing ...%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T00:49:30,195][INFO ][org.elasticsearch.node   ] [node_s_0] closed%0D%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.indices.IndicesServiceTests",
  "startTimestamp": 1474195767706,
  "executionTime": 2552
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.script.ScriptModesTests",
   "displayName": "org.elasticsearch.script.ScriptModesTests",
   "methodName": null,
   "className": "org.elasticsearch.script.ScriptModesTests",
   "children": [
    {
     "id": "ID#testMissingSetting(org.elasticsearch.script.ScriptModesTests)",
     "displayName": "testMissingSetting(org.elasticsearch.script.ScriptModesTests)",
     "methodName": "testMissingSetting",
     "className": "org.elasticsearch.script.ScriptModesTests",
     "children": []
    },
    {
     "id": "ID#testScriptTypeGenericSettings(org.elasticsearch.script.ScriptModesTests)",
     "displayName": "testScriptTypeGenericSettings(org.elasticsearch.script.ScriptModesTests)",
     "methodName": "testScriptTypeGenericSettings",
     "className": "org.elasticsearch.script.ScriptModesTests",
     "children": []
    },
    {
     "id": "ID#testConflictingScriptTypeAndOpGenericSettings(org.elasticsearch.script.ScriptModesTests)",
     "displayName": "testConflictingScriptTypeAndOpGenericSettings(org.elasticsearch.script.ScriptModesTests)",
     "methodName": "testConflictingScriptTypeAndOpGenericSettings",
     "className": "org.elasticsearch.script.ScriptModesTests",
     "children": []
    },
    {
     "id": "ID#testScriptContextGenericSettings(org.elasticsearch.script.ScriptModesTests)",
     "displayName": "testScriptContextGenericSettings(org.elasticsearch.script.ScriptModesTests)",
     "methodName": "testScriptContextGenericSettings",
     "className": "org.elasticsearch.script.ScriptModesTests",
     "children": []
    },
    {
     "id": "ID#testDefaultSettings(org.elasticsearch.script.ScriptModesTests)",
     "displayName": "testDefaultSettings(org.elasticsearch.script.ScriptModesTests)",
     "methodName": "testDefaultSettings",
     "className": "org.elasticsearch.script.ScriptModesTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195770351
 }
]

[
 "TEST_STARTED",
 "ID#testMissingSetting(org.elasticsearch.script.ScriptModesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMissingSetting(org.elasticsearch.script.ScriptModesTests)",
  "startTimestamp": 1474195770376,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testScriptTypeGenericSettings(org.elasticsearch.script.ScriptModesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testScriptTypeGenericSettings(org.elasticsearch.script.ScriptModesTests)",
  "startTimestamp": 1474195770379,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testConflictingScriptTypeAndOpGenericSettings(org.elasticsearch.script.ScriptModesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testConflictingScriptTypeAndOpGenericSettings(org.elasticsearch.script.ScriptModesTests)",
  "startTimestamp": 1474195770382,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testScriptContextGenericSettings(org.elasticsearch.script.ScriptModesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testScriptContextGenericSettings(org.elasticsearch.script.ScriptModesTests)",
  "startTimestamp": 1474195770384,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultSettings(org.elasticsearch.script.ScriptModesTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultSettings(org.elasticsearch.script.ScriptModesTests)",
  "startTimestamp": 1474195770387,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.script.ScriptModesTests",
  "startTimestamp": 1474195770351,
  "executionTime": 41
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.script.ScriptSettingsTests",
   "displayName": "org.elasticsearch.script.ScriptSettingsTests",
   "methodName": null,
   "className": "org.elasticsearch.script.ScriptSettingsTests",
   "children": [
    {
     "id": "ID#testDefaultLanguageIsPainless(org.elasticsearch.script.ScriptSettingsTests)",
     "displayName": "testDefaultLanguageIsPainless(org.elasticsearch.script.ScriptSettingsTests)",
     "methodName": "testDefaultLanguageIsPainless",
     "className": "org.elasticsearch.script.ScriptSettingsTests",
     "children": []
    },
    {
     "id": "ID#testSettingsAreProperlyPropogated(org.elasticsearch.script.ScriptSettingsTests)",
     "displayName": "testSettingsAreProperlyPropogated(org.elasticsearch.script.ScriptSettingsTests)",
     "methodName": "testSettingsAreProperlyPropogated",
     "className": "org.elasticsearch.script.ScriptSettingsTests",
     "children": []
    },
    {
     "id": "ID#testInvalidDefaultLanguage(org.elasticsearch.script.ScriptSettingsTests)",
     "displayName": "testInvalidDefaultLanguage(org.elasticsearch.script.ScriptSettingsTests)",
     "methodName": "testInvalidDefaultLanguage",
     "className": "org.elasticsearch.script.ScriptSettingsTests",
     "children": []
    },
    {
     "id": "ID#testCustomDefaultLanguage(org.elasticsearch.script.ScriptSettingsTests)",
     "displayName": "testCustomDefaultLanguage(org.elasticsearch.script.ScriptSettingsTests)",
     "methodName": "testCustomDefaultLanguage",
     "className": "org.elasticsearch.script.ScriptSettingsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195770625
 }
]

[
 "TEST_STARTED",
 "ID#testDefaultLanguageIsPainless(org.elasticsearch.script.ScriptSettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDefaultLanguageIsPainless(org.elasticsearch.script.ScriptSettingsTests)",
  "startTimestamp": 1474195770641,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSettingsAreProperlyPropogated(org.elasticsearch.script.ScriptSettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSettingsAreProperlyPropogated(org.elasticsearch.script.ScriptSettingsTests)",
  "startTimestamp": 1474195770644,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidDefaultLanguage(org.elasticsearch.script.ScriptSettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidDefaultLanguage(org.elasticsearch.script.ScriptSettingsTests)",
  "startTimestamp": 1474195770646,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testCustomDefaultLanguage(org.elasticsearch.script.ScriptSettingsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCustomDefaultLanguage(org.elasticsearch.script.ScriptSettingsTests)",
  "startTimestamp": 1474195770648,
  "executionTime": 1
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.script.ScriptSettingsTests",
  "startTimestamp": 1474195770625,
  "executionTime": 31
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.script.ScriptTests",
   "displayName": "org.elasticsearch.script.ScriptTests",
   "methodName": null,
   "className": "org.elasticsearch.script.ScriptTests",
   "children": [
    {
     "id": "ID#testScriptSerialization(org.elasticsearch.script.ScriptTests)",
     "displayName": "testScriptSerialization(org.elasticsearch.script.ScriptTests)",
     "methodName": "testScriptSerialization",
     "className": "org.elasticsearch.script.ScriptTests",
     "children": []
    },
    {
     "id": "ID#testScriptParsing(org.elasticsearch.script.ScriptTests)",
     "displayName": "testScriptParsing(org.elasticsearch.script.ScriptTests)",
     "methodName": "testScriptParsing",
     "className": "org.elasticsearch.script.ScriptTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195770882
 }
]

[
 "TEST_STARTED",
 "ID#testScriptSerialization(org.elasticsearch.script.ScriptTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testScriptSerialization(org.elasticsearch.script.ScriptTests)",
  "startTimestamp": 1474195770890,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testScriptParsing(org.elasticsearch.script.ScriptTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testScriptParsing(org.elasticsearch.script.ScriptTests)",
  "startTimestamp": 1474195770892,
  "executionTime": 1
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.script.ScriptTests",
  "startTimestamp": 1474195770882,
  "executionTime": 12
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.MultiValueModeTests",
   "displayName": "org.elasticsearch.search.MultiValueModeTests",
   "methodName": null,
   "className": "org.elasticsearch.search.MultiValueModeTests",
   "children": [
    {
     "id": "ID#testMultiValuedDoubles(org.elasticsearch.search.MultiValueModeTests)",
     "displayName": "testMultiValuedDoubles(org.elasticsearch.search.MultiValueModeTests)",
     "methodName": "testMultiValuedDoubles",
     "className": "org.elasticsearch.search.MultiValueModeTests",
     "children": []
    },
    {
     "id": "ID#testMultiValuedStrings(org.elasticsearch.search.MultiValueModeTests)",
     "displayName": "testMultiValuedStrings(org.elasticsearch.search.MultiValueModeTests)",
     "methodName": "testMultiValuedStrings",
     "className": "org.elasticsearch.search.MultiValueModeTests",
     "children": []
    },
    {
     "id": "ID#testFromString(org.elasticsearch.search.MultiValueModeTests)",
     "displayName": "testFromString(org.elasticsearch.search.MultiValueModeTests)",
     "methodName": "testFromString",
     "className": "org.elasticsearch.search.MultiValueModeTests",
     "children": []
    },
    {
     "id": "ID#testReadFrom(org.elasticsearch.search.MultiValueModeTests)",
     "displayName": "testReadFrom(org.elasticsearch.search.MultiValueModeTests)",
     "methodName": "testReadFrom",
     "className": "org.elasticsearch.search.MultiValueModeTests",
     "children": []
    },
    {
     "id": "ID#testSingleValuedDoubles(org.elasticsearch.search.MultiValueModeTests)",
     "displayName": "testSingleValuedDoubles(org.elasticsearch.search.MultiValueModeTests)",
     "methodName": "testSingleValuedDoubles",
     "className": "org.elasticsearch.search.MultiValueModeTests",
     "children": []
    },
    {
     "id": "ID#testSingleValuedStrings(org.elasticsearch.search.MultiValueModeTests)",
     "displayName": "testSingleValuedStrings(org.elasticsearch.search.MultiValueModeTests)",
     "methodName": "testSingleValuedStrings",
     "className": "org.elasticsearch.search.MultiValueModeTests",
     "children": []
    },
    {
     "id": "ID#testUnsortedMultiValuedDoubles(org.elasticsearch.search.MultiValueModeTests)",
     "displayName": "testUnsortedMultiValuedDoubles(org.elasticsearch.search.MultiValueModeTests)",
     "methodName": "testUnsortedMultiValuedDoubles",
     "className": "org.elasticsearch.search.MultiValueModeTests",
     "children": []
    },
    {
     "id": "ID#testSingleValuedLongs(org.elasticsearch.search.MultiValueModeTests)",
     "displayName": "testSingleValuedLongs(org.elasticsearch.search.MultiValueModeTests)",
     "methodName": "testSingleValuedLongs",
     "className": "org.elasticsearch.search.MultiValueModeTests",
     "children": []
    },
    {
     "id": "ID#testSingleValuedOrds(org.elasticsearch.search.MultiValueModeTests)",
     "displayName": "testSingleValuedOrds(org.elasticsearch.search.MultiValueModeTests)",
     "methodName": "testSingleValuedOrds",
     "className": "org.elasticsearch.search.MultiValueModeTests",
     "children": []
    },
    {
     "id": "ID#testWriteTo(org.elasticsearch.search.MultiValueModeTests)",
     "displayName": "testWriteTo(org.elasticsearch.search.MultiValueModeTests)",
     "methodName": "testWriteTo",
     "className": "org.elasticsearch.search.MultiValueModeTests",
     "children": []
    },
    {
     "id": "ID#testUnsortedSingleValuedDoubles(org.elasticsearch.search.MultiValueModeTests)",
     "displayName": "testUnsortedSingleValuedDoubles(org.elasticsearch.search.MultiValueModeTests)",
     "methodName": "testUnsortedSingleValuedDoubles",
     "className": "org.elasticsearch.search.MultiValueModeTests",
     "children": []
    },
    {
     "id": "ID#testValidOrdinals(org.elasticsearch.search.MultiValueModeTests)",
     "displayName": "testValidOrdinals(org.elasticsearch.search.MultiValueModeTests)",
     "methodName": "testValidOrdinals",
     "className": "org.elasticsearch.search.MultiValueModeTests",
     "children": []
    },
    {
     "id": "ID#testMultiValuedOrds(org.elasticsearch.search.MultiValueModeTests)",
     "displayName": "testMultiValuedOrds(org.elasticsearch.search.MultiValueModeTests)",
     "methodName": "testMultiValuedOrds",
     "className": "org.elasticsearch.search.MultiValueModeTests",
     "children": []
    },
    {
     "id": "ID#testMultiValuedLongs(org.elasticsearch.search.MultiValueModeTests)",
     "displayName": "testMultiValuedLongs(org.elasticsearch.search.MultiValueModeTests)",
     "methodName": "testMultiValuedLongs",
     "className": "org.elasticsearch.search.MultiValueModeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195771168
 }
]

[
 "TEST_STARTED",
 "ID#testMultiValuedDoubles(org.elasticsearch.search.MultiValueModeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultiValuedDoubles(org.elasticsearch.search.MultiValueModeTests)",
  "startTimestamp": 1474195771192,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testMultiValuedStrings(org.elasticsearch.search.MultiValueModeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultiValuedStrings(org.elasticsearch.search.MultiValueModeTests)",
  "startTimestamp": 1474195771196,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromString(org.elasticsearch.search.MultiValueModeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromString(org.elasticsearch.search.MultiValueModeTests)",
  "startTimestamp": 1474195771198,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testReadFrom(org.elasticsearch.search.MultiValueModeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReadFrom(org.elasticsearch.search.MultiValueModeTests)",
  "startTimestamp": 1474195771200,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSingleValuedDoubles(org.elasticsearch.search.MultiValueModeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleValuedDoubles(org.elasticsearch.search.MultiValueModeTests)",
  "startTimestamp": 1474195771202,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testSingleValuedStrings(org.elasticsearch.search.MultiValueModeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleValuedStrings(org.elasticsearch.search.MultiValueModeTests)",
  "startTimestamp": 1474195771206,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testUnsortedMultiValuedDoubles(org.elasticsearch.search.MultiValueModeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnsortedMultiValuedDoubles(org.elasticsearch.search.MultiValueModeTests)",
  "startTimestamp": 1474195771208,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSingleValuedLongs(org.elasticsearch.search.MultiValueModeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleValuedLongs(org.elasticsearch.search.MultiValueModeTests)",
  "startTimestamp": 1474195771211,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSingleValuedOrds(org.elasticsearch.search.MultiValueModeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleValuedOrds(org.elasticsearch.search.MultiValueModeTests)",
  "startTimestamp": 1474195771213,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testWriteTo(org.elasticsearch.search.MultiValueModeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWriteTo(org.elasticsearch.search.MultiValueModeTests)",
  "startTimestamp": 1474195771215,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testUnsortedSingleValuedDoubles(org.elasticsearch.search.MultiValueModeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnsortedSingleValuedDoubles(org.elasticsearch.search.MultiValueModeTests)",
  "startTimestamp": 1474195771217,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testValidOrdinals(org.elasticsearch.search.MultiValueModeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidOrdinals(org.elasticsearch.search.MultiValueModeTests)",
  "startTimestamp": 1474195771220,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testMultiValuedOrds(org.elasticsearch.search.MultiValueModeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultiValuedOrds(org.elasticsearch.search.MultiValueModeTests)",
  "startTimestamp": 1474195771222,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testMultiValuedLongs(org.elasticsearch.search.MultiValueModeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultiValuedLongs(org.elasticsearch.search.MultiValueModeTests)",
  "startTimestamp": 1474195771225,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.MultiValueModeTests",
  "startTimestamp": 1474195771168,
  "executionTime": 63
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.bucket.ChildrenTests",
   "displayName": "org.elasticsearch.search.aggregations.bucket.ChildrenTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.bucket.ChildrenTests",
   "children": [
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.ChildrenTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.ChildrenTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.aggregations.bucket.ChildrenTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.aggregations.bucket.ChildrenTests)",
     "displayName": "testSerialization(org.elasticsearch.search.aggregations.bucket.ChildrenTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.aggregations.bucket.ChildrenTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.aggregations.bucket.ChildrenTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.aggregations.bucket.ChildrenTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.aggregations.bucket.ChildrenTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195771449
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T16:49:31,476][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{TwD760eSRFGWjqX8byzWUA}{local}{local[582]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.ChildrenTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.ChildrenTests)",
  "startTimestamp": 1474195771484,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.aggregations.bucket.ChildrenTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.aggregations.bucket.ChildrenTests)",
  "startTimestamp": 1474195771487,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.aggregations.bucket.ChildrenTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.aggregations.bucket.ChildrenTests)",
  "startTimestamp": 1474195771489,
  "executionTime": 10
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.bucket.ChildrenTests",
  "startTimestamp": 1474195771449,
  "executionTime": 53
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.bucket.DateRangeTests",
   "displayName": "org.elasticsearch.search.aggregations.bucket.DateRangeTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.bucket.DateRangeTests",
   "children": [
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.DateRangeTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.DateRangeTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.aggregations.bucket.DateRangeTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.aggregations.bucket.DateRangeTests)",
     "displayName": "testSerialization(org.elasticsearch.search.aggregations.bucket.DateRangeTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.aggregations.bucket.DateRangeTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.aggregations.bucket.DateRangeTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.aggregations.bucket.DateRangeTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.aggregations.bucket.DateRangeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195771721
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T10:49:31,736][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{-H7Bh3QdTCuBACvULtGmGw}{local}{local[583]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.DateRangeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.DateRangeTests)",
  "startTimestamp": 1474195771753,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.aggregations.bucket.DateRangeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.aggregations.bucket.DateRangeTests)",
  "startTimestamp": 1474195771760,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.aggregations.bucket.DateRangeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.aggregations.bucket.DateRangeTests)",
  "startTimestamp": 1474195771762,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.bucket.DateRangeTests",
  "startTimestamp": 1474195771721,
  "executionTime": 47
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.bucket.GeoDistanceRangeTests",
   "displayName": "org.elasticsearch.search.aggregations.bucket.GeoDistanceRangeTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.bucket.GeoDistanceRangeTests",
   "children": [
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.GeoDistanceRangeTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.GeoDistanceRangeTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.aggregations.bucket.GeoDistanceRangeTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.aggregations.bucket.GeoDistanceRangeTests)",
     "displayName": "testSerialization(org.elasticsearch.search.aggregations.bucket.GeoDistanceRangeTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.aggregations.bucket.GeoDistanceRangeTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.aggregations.bucket.GeoDistanceRangeTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.aggregations.bucket.GeoDistanceRangeTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.aggregations.bucket.GeoDistanceRangeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195771985
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:49:32,006][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{CrBED087SWSO_nU8XxlJyw}{local}{local[584]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.GeoDistanceRangeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.bucket.GeoDistanceRangeTests)",
  "startTimestamp": 1474195772015,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.aggregations.bucket.GeoDistanceRangeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.aggregations.bucket.GeoDistanceRangeTests)",
  "startTimestamp": 1474195772022,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.aggregations.bucket.GeoDistanceRangeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.aggregations.bucket.GeoDistanceRangeTests)",
  "startTimestamp": 1474195772025,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.bucket.GeoDistanceRangeTests",
  "startTimestamp": 1474195771985,
  "executionTime": 46
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.metrics.StatsTests",
   "displayName": "org.elasticsearch.search.aggregations.metrics.StatsTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.metrics.StatsTests",
   "children": [
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.StatsTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.StatsTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.aggregations.metrics.StatsTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.aggregations.metrics.StatsTests)",
     "displayName": "testSerialization(org.elasticsearch.search.aggregations.metrics.StatsTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.aggregations.metrics.StatsTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.aggregations.metrics.StatsTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.aggregations.metrics.StatsTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.aggregations.metrics.StatsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195772252
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T06:49:32,266][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{g8TdghG_RgOtU_AOyma-TQ}{local}{local[585]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.StatsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.StatsTests)",
  "startTimestamp": 1474195772274,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.aggregations.metrics.StatsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.aggregations.metrics.StatsTests)",
  "startTimestamp": 1474195772275,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.aggregations.metrics.StatsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.aggregations.metrics.StatsTests)",
  "startTimestamp": 1474195772277,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.metrics.StatsTests",
  "startTimestamp": 1474195772252,
  "executionTime": 30
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.metrics.TopHitsTests",
   "displayName": "org.elasticsearch.search.aggregations.metrics.TopHitsTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.metrics.TopHitsTests",
   "children": [
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.aggregations.metrics.TopHitsTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.aggregations.metrics.TopHitsTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.aggregations.metrics.TopHitsTests",
     "children": []
    },
    {
     "id": "ID#testFailWithSubAgg(org.elasticsearch.search.aggregations.metrics.TopHitsTests)",
     "displayName": "testFailWithSubAgg(org.elasticsearch.search.aggregations.metrics.TopHitsTests)",
     "methodName": "testFailWithSubAgg",
     "className": "org.elasticsearch.search.aggregations.metrics.TopHitsTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.aggregations.metrics.TopHitsTests)",
     "displayName": "testSerialization(org.elasticsearch.search.aggregations.metrics.TopHitsTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.aggregations.metrics.TopHitsTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.TopHitsTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.TopHitsTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.aggregations.metrics.TopHitsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195772522
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:49:32,539][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{CL7pqopwT6CfcskzeSPkag}{local}{local[586]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.aggregations.metrics.TopHitsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.aggregations.metrics.TopHitsTests)",
  "startTimestamp": 1474195772547,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testFailWithSubAgg(org.elasticsearch.search.aggregations.metrics.TopHitsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFailWithSubAgg(org.elasticsearch.search.aggregations.metrics.TopHitsTests)",
  "startTimestamp": 1474195772552,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.aggregations.metrics.TopHitsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.aggregations.metrics.TopHitsTests)",
  "startTimestamp": 1474195772555,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.TopHitsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.TopHitsTests)",
  "startTimestamp": 1474195772563,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.metrics.TopHitsTests",
  "startTimestamp": 1474195772522,
  "executionTime": 50
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.metrics.cardinality.CardinalityTests",
   "displayName": "org.elasticsearch.search.aggregations.metrics.cardinality.CardinalityTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.metrics.cardinality.CardinalityTests",
   "children": [
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.cardinality.CardinalityTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.cardinality.CardinalityTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.aggregations.metrics.cardinality.CardinalityTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.aggregations.metrics.cardinality.CardinalityTests)",
     "displayName": "testSerialization(org.elasticsearch.search.aggregations.metrics.cardinality.CardinalityTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.aggregations.metrics.cardinality.CardinalityTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.aggregations.metrics.cardinality.CardinalityTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.aggregations.metrics.cardinality.CardinalityTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.aggregations.metrics.cardinality.CardinalityTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195772782
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T18:49:32,796][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{UY2gbJgBRAS2t2jhZZ0FxA}{local}{local[587]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.cardinality.CardinalityTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.metrics.cardinality.CardinalityTests)",
  "startTimestamp": 1474195772804,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.aggregations.metrics.cardinality.CardinalityTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.aggregations.metrics.cardinality.CardinalityTests)",
  "startTimestamp": 1474195772806,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.aggregations.metrics.cardinality.CardinalityTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.aggregations.metrics.cardinality.CardinalityTests)",
  "startTimestamp": 1474195772808,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.metrics.cardinality.CardinalityTests",
  "startTimestamp": 1474195772782,
  "executionTime": 31
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.pipeline.CumulativeSumTests",
   "displayName": "org.elasticsearch.search.aggregations.pipeline.CumulativeSumTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.pipeline.CumulativeSumTests",
   "children": [
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.CumulativeSumTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.CumulativeSumTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.aggregations.pipeline.CumulativeSumTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.aggregations.pipeline.CumulativeSumTests)",
     "displayName": "testSerialization(org.elasticsearch.search.aggregations.pipeline.CumulativeSumTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.aggregations.pipeline.CumulativeSumTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.aggregations.pipeline.CumulativeSumTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.aggregations.pipeline.CumulativeSumTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.aggregations.pipeline.CumulativeSumTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195773106
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:49:33,143][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{8MqjqFkqSVmNtcZeCuHCqA}{local}{local[588]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.CumulativeSumTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.CumulativeSumTests)",
  "startTimestamp": 1474195773152,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.aggregations.pipeline.CumulativeSumTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.aggregations.pipeline.CumulativeSumTests)",
  "startTimestamp": 1474195773154,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.aggregations.pipeline.CumulativeSumTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:49:33,158][INFO ][org.elasticsearch.search.aggregations.pipeline] Content string: {%0A  \"WojciOEBiPq\" : {%0A    \"cumulative_sum\" : {%0A      \"buckets_path\" : [%0A        \"CqPKBSBHLEeH\"%0A      ]%0A    }%0A  }%0A}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T15:49:33,158][INFO ][org.elasticsearch.search.aggregations.pipeline] Content string: {%0A  \"WojciOEBiPq\" : {%0A    \"cumulative_sum\" : {%0A      \"buckets_path\" : [%0A        \"CqPKBSBHLEeH\"%0A      ]%0A    }%0A  }%0A}%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.aggregations.pipeline.CumulativeSumTests)",
  "startTimestamp": 1474195773156,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.pipeline.CumulativeSumTests",
  "startTimestamp": 1474195773106,
  "executionTime": 55
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.pipeline.DerivativeTests",
   "displayName": "org.elasticsearch.search.aggregations.pipeline.DerivativeTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.pipeline.DerivativeTests",
   "children": [
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.DerivativeTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.DerivativeTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.aggregations.pipeline.DerivativeTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.aggregations.pipeline.DerivativeTests)",
     "displayName": "testSerialization(org.elasticsearch.search.aggregations.pipeline.DerivativeTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.aggregations.pipeline.DerivativeTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.aggregations.pipeline.DerivativeTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.aggregations.pipeline.DerivativeTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.aggregations.pipeline.DerivativeTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195773431
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:49:33,505][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{LpOuzzvGQoKtZC4Djy9dBw}{local}{local[589]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.DerivativeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.aggregations.pipeline.DerivativeTests)",
  "startTimestamp": 1474195773517,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.aggregations.pipeline.DerivativeTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.aggregations.pipeline.DerivativeTests)",
  "startTimestamp": 1474195773519,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.aggregations.pipeline.DerivativeTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:49:33,523][INFO ][org.elasticsearch.search.aggregations.pipeline] Content string: {%0A  \"WojciOEBiPq\" : {%0A    \"derivative\" : {%0A      \"buckets_path\" : [%0A        \"CqPKBSBHLEeH\"%0A      ],%0A      \"gap_policy\" : \"skip\"%0A    }%0A  }%0A}%0D%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T13:49:33,523][INFO ][org.elasticsearch.search.aggregations.pipeline] Content string: {%0A  \"WojciOEBiPq\" : {%0A    \"derivative\" : {%0A      \"buckets_path\" : [%0A        \"CqPKBSBHLEeH\"%0A      ],%0A      \"gap_policy\" : \"skip\"%0A    }%0A  }%0A}%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.aggregations.pipeline.DerivativeTests)",
  "startTimestamp": 1474195773521,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.pipeline.DerivativeTests",
  "startTimestamp": 1474195773431,
  "executionTime": 111
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.support.PathTests",
   "displayName": "org.elasticsearch.search.aggregations.support.PathTests",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.support.PathTests",
   "children": [
    {
     "id": "ID#testValidPaths(org.elasticsearch.search.aggregations.support.PathTests)",
     "displayName": "testValidPaths(org.elasticsearch.search.aggregations.support.PathTests)",
     "methodName": "testValidPaths",
     "className": "org.elasticsearch.search.aggregations.support.PathTests",
     "children": []
    },
    {
     "id": "ID#testInvalidPaths(org.elasticsearch.search.aggregations.support.PathTests)",
     "displayName": "testInvalidPaths(org.elasticsearch.search.aggregations.support.PathTests)",
     "methodName": "testInvalidPaths",
     "className": "org.elasticsearch.search.aggregations.support.PathTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195773698
 }
]

[
 "TEST_STARTED",
 "ID#testValidPaths(org.elasticsearch.search.aggregations.support.PathTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testValidPaths(org.elasticsearch.search.aggregations.support.PathTests)",
  "startTimestamp": 1474195773710,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testInvalidPaths(org.elasticsearch.search.aggregations.support.PathTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testInvalidPaths(org.elasticsearch.search.aggregations.support.PathTests)",
  "startTimestamp": 1474195773717,
  "executionTime": 1
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.support.PathTests",
  "startTimestamp": 1474195773698,
  "executionTime": 23
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.builder.SearchSourceBuilderTests",
   "displayName": "org.elasticsearch.search.builder.SearchSourceBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.search.builder.SearchSourceBuilderTests",
   "children": [
    {
     "id": "ID#testTimeoutWithUnits(org.elasticsearch.search.builder.SearchSourceBuilderTests)",
     "displayName": "testTimeoutWithUnits(org.elasticsearch.search.builder.SearchSourceBuilderTests)",
     "methodName": "testTimeoutWithUnits",
     "className": "org.elasticsearch.search.builder.SearchSourceBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEmptyQuery(org.elasticsearch.search.builder.SearchSourceBuilderTests)",
     "displayName": "testEmptyQuery(org.elasticsearch.search.builder.SearchSourceBuilderTests)",
     "methodName": "testEmptyQuery",
     "className": "org.elasticsearch.search.builder.SearchSourceBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParseRescore(org.elasticsearch.search.builder.SearchSourceBuilderTests)",
     "displayName": "testParseRescore(org.elasticsearch.search.builder.SearchSourceBuilderTests)",
     "methodName": "testParseRescore",
     "className": "org.elasticsearch.search.builder.SearchSourceBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEmptyPostFilter(org.elasticsearch.search.builder.SearchSourceBuilderTests)",
     "displayName": "testEmptyPostFilter(org.elasticsearch.search.builder.SearchSourceBuilderTests)",
     "methodName": "testEmptyPostFilter",
     "className": "org.elasticsearch.search.builder.SearchSourceBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParseSort(org.elasticsearch.search.builder.SearchSourceBuilderTests)",
     "displayName": "testParseSort(org.elasticsearch.search.builder.SearchSourceBuilderTests)",
     "methodName": "testParseSort",
     "className": "org.elasticsearch.search.builder.SearchSourceBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSearchRequestBuilderSerializationWithIndexBoost(org.elasticsearch.search.builder.SearchSourceBuilderTests)",
     "displayName": "testSearchRequestBuilderSerializationWithIndexBoost(org.elasticsearch.search.builder.SearchSourceBuilderTests)",
     "methodName": "testSearchRequestBuilderSerializationWithIndexBoost",
     "className": "org.elasticsearch.search.builder.SearchSourceBuilderTests",
     "children": []
    },
    {
     "id": "ID#testTimeoutWithoutUnits(org.elasticsearch.search.builder.SearchSourceBuilderTests)",
     "displayName": "testTimeoutWithoutUnits(org.elasticsearch.search.builder.SearchSourceBuilderTests)",
     "methodName": "testTimeoutWithoutUnits",
     "className": "org.elasticsearch.search.builder.SearchSourceBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.builder.SearchSourceBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.builder.SearchSourceBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.builder.SearchSourceBuilderTests",
     "children": []
    },
    {
     "id": "ID#testAggsParsing(org.elasticsearch.search.builder.SearchSourceBuilderTests)",
     "displayName": "testAggsParsing(org.elasticsearch.search.builder.SearchSourceBuilderTests)",
     "methodName": "testAggsParsing",
     "className": "org.elasticsearch.search.builder.SearchSourceBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.builder.SearchSourceBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.search.builder.SearchSourceBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.builder.SearchSourceBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParseIncludeExclude(org.elasticsearch.search.builder.SearchSourceBuilderTests)",
     "displayName": "testParseIncludeExclude(org.elasticsearch.search.builder.SearchSourceBuilderTests)",
     "methodName": "testParseIncludeExclude",
     "className": "org.elasticsearch.search.builder.SearchSourceBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.builder.SearchSourceBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.builder.SearchSourceBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.builder.SearchSourceBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195773962
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:49:33,981][INFO ][org.elasticsearch.cluster.service] [node_s_0] new_master {node}{TdtWEimCTGSGTUQZND3rhQ}{local}{local[590]}, reason: test setting state%0D%0A"
 }
]

[
 "TEST_STARTED",
 "ID#testTimeoutWithUnits(org.elasticsearch.search.builder.SearchSourceBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTimeoutWithUnits(org.elasticsearch.search.builder.SearchSourceBuilderTests)",
  "startTimestamp": 1474195773991,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyQuery(org.elasticsearch.search.builder.SearchSourceBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:49:33,996][WARN ][org.elasticsearch.deprecation.index.query] query malformed, empty clause found at [1:13]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyQuery(org.elasticsearch.search.builder.SearchSourceBuilderTests)",
  "startTimestamp": 1474195773993,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testParseRescore(org.elasticsearch.search.builder.SearchSourceBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseRescore(org.elasticsearch.search.builder.SearchSourceBuilderTests)",
  "startTimestamp": 1474195773996,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyPostFilter(org.elasticsearch.search.builder.SearchSourceBuilderTests)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-09-18T04:49:34,000][WARN ][org.elasticsearch.deprecation.index.query] query malformed, empty clause found at [1:19]%0D%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyPostFilter(org.elasticsearch.search.builder.SearchSourceBuilderTests)",
  "startTimestamp": 1474195773998,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParseSort(org.elasticsearch.search.builder.SearchSourceBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseSort(org.elasticsearch.search.builder.SearchSourceBuilderTests)",
  "startTimestamp": 1474195774000,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSearchRequestBuilderSerializationWithIndexBoost(org.elasticsearch.search.builder.SearchSourceBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSearchRequestBuilderSerializationWithIndexBoost(org.elasticsearch.search.builder.SearchSourceBuilderTests)",
  "startTimestamp": 1474195774002,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testTimeoutWithoutUnits(org.elasticsearch.search.builder.SearchSourceBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTimeoutWithoutUnits(org.elasticsearch.search.builder.SearchSourceBuilderTests)",
  "startTimestamp": 1474195774005,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.builder.SearchSourceBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.builder.SearchSourceBuilderTests)",
  "startTimestamp": 1474195774007,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testAggsParsing(org.elasticsearch.search.builder.SearchSourceBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testAggsParsing(org.elasticsearch.search.builder.SearchSourceBuilderTests)",
  "startTimestamp": 1474195774010,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.builder.SearchSourceBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.builder.SearchSourceBuilderTests)",
  "startTimestamp": 1474195774012,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testParseIncludeExclude(org.elasticsearch.search.builder.SearchSourceBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseIncludeExclude(org.elasticsearch.search.builder.SearchSourceBuilderTests)",
  "startTimestamp": 1474195774021,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.builder.SearchSourceBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.builder.SearchSourceBuilderTests)",
  "startTimestamp": 1474195774023,
  "executionTime": 4
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.builder.SearchSourceBuilderTests",
  "startTimestamp": 1474195773962,
  "executionTime": 73
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.fetch.subphase.highlight.PlainHighlighterTests",
   "displayName": "org.elasticsearch.search.fetch.subphase.highlight.PlainHighlighterTests",
   "methodName": null,
   "className": "org.elasticsearch.search.fetch.subphase.highlight.PlainHighlighterTests",
   "children": [
    {
     "id": "ID#testGeoPointInBBoxQueryHighlighting(org.elasticsearch.search.fetch.subphase.highlight.PlainHighlighterTests)",
     "displayName": "testGeoPointInBBoxQueryHighlighting(org.elasticsearch.search.fetch.subphase.highlight.PlainHighlighterTests)",
     "methodName": "testGeoPointInBBoxQueryHighlighting",
     "className": "org.elasticsearch.search.fetch.subphase.highlight.PlainHighlighterTests",
     "children": []
    },
    {
     "id": "ID#testHighlightPhrase(org.elasticsearch.search.fetch.subphase.highlight.PlainHighlighterTests)",
     "displayName": "testHighlightPhrase(org.elasticsearch.search.fetch.subphase.highlight.PlainHighlighterTests)",
     "methodName": "testHighlightPhrase",
     "className": "org.elasticsearch.search.fetch.subphase.highlight.PlainHighlighterTests",
     "children": []
    },
    {
     "id": "ID#testGeoPointInPolygonQueryHighlighting(org.elasticsearch.search.fetch.subphase.highlight.PlainHighlighterTests)",
     "displayName": "testGeoPointInPolygonQueryHighlighting(org.elasticsearch.search.fetch.subphase.highlight.PlainHighlighterTests)",
     "methodName": "testGeoPointInPolygonQueryHighlighting",
     "className": "org.elasticsearch.search.fetch.subphase.highlight.PlainHighlighterTests",
     "children": []
    },
    {
     "id": "ID#testGeoPointDistanceQueryHighlighting(org.elasticsearch.search.fetch.subphase.highlight.PlainHighlighterTests)",
     "displayName": "testGeoPointDistanceQueryHighlighting(org.elasticsearch.search.fetch.subphase.highlight.PlainHighlighterTests)",
     "methodName": "testGeoPointDistanceQueryHighlighting",
     "className": "org.elasticsearch.search.fetch.subphase.highlight.PlainHighlighterTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195774241
 }
]

[
 "TEST_STARTED",
 "ID#testGeoPointInBBoxQueryHighlighting(org.elasticsearch.search.fetch.subphase.highlight.PlainHighlighterTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGeoPointInBBoxQueryHighlighting(org.elasticsearch.search.fetch.subphase.highlight.PlainHighlighterTests)",
  "startTimestamp": 1474195774252,
  "executionTime": 108
 }
]

[
 "TEST_STARTED",
 "ID#testHighlightPhrase(org.elasticsearch.search.fetch.subphase.highlight.PlainHighlighterTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testHighlightPhrase(org.elasticsearch.search.fetch.subphase.highlight.PlainHighlighterTests)",
  "startTimestamp": 1474195774360,
  "executionTime": 84
 }
]

[
 "TEST_STARTED",
 "ID#testGeoPointInPolygonQueryHighlighting(org.elasticsearch.search.fetch.subphase.highlight.PlainHighlighterTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGeoPointInPolygonQueryHighlighting(org.elasticsearch.search.fetch.subphase.highlight.PlainHighlighterTests)",
  "startTimestamp": 1474195774444,
  "executionTime": 8
 }
]

[
 "TEST_STARTED",
 "ID#testGeoPointDistanceQueryHighlighting(org.elasticsearch.search.fetch.subphase.highlight.PlainHighlighterTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGeoPointDistanceQueryHighlighting(org.elasticsearch.search.fetch.subphase.highlight.PlainHighlighterTests)",
  "startTimestamp": 1474195774452,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.fetch.subphase.highlight.PlainHighlighterTests",
  "startTimestamp": 1474195774241,
  "executionTime": 214
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.sort.GeoDistanceSortBuilderTests",
   "displayName": "org.elasticsearch.search.sort.GeoDistanceSortBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.search.sort.GeoDistanceSortBuilderTests",
   "children": [
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.sort.GeoDistanceSortBuilderTests",
     "children": []
    },
    {
     "id": "ID#testCoerceIsDeprecated(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
     "displayName": "testCoerceIsDeprecated(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
     "methodName": "testCoerceIsDeprecated",
     "className": "org.elasticsearch.search.sort.GeoDistanceSortBuilderTests",
     "children": []
    },
    {
     "id": "ID#testBuildSortField(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
     "displayName": "testBuildSortField(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
     "methodName": "testBuildSortField",
     "className": "org.elasticsearch.search.sort.GeoDistanceSortBuilderTests",
     "children": []
    },
    {
     "id": "ID#testGeoDistanceSortCanBeParsedFromGeoHash(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
     "displayName": "testGeoDistanceSortCanBeParsedFromGeoHash(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
     "methodName": "testGeoDistanceSortCanBeParsedFromGeoHash",
     "className": "org.elasticsearch.search.sort.GeoDistanceSortBuilderTests",
     "children": []
    },
    {
     "id": "ID#testGeoDistanceSortDeprecatedSortModeException(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
     "displayName": "testGeoDistanceSortDeprecatedSortModeException(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
     "methodName": "testGeoDistanceSortDeprecatedSortModeException",
     "className": "org.elasticsearch.search.sort.GeoDistanceSortBuilderTests",
     "children": []
    },
    {
     "id": "ID#testReverseOptionFailsBuildWhenInvalidGeoHashString(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
     "displayName": "testReverseOptionFailsBuildWhenInvalidGeoHashString(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
     "methodName": "testReverseOptionFailsBuildWhenInvalidGeoHashString",
     "className": "org.elasticsearch.search.sort.GeoDistanceSortBuilderTests",
     "children": []
    },
    {
     "id": "ID#testReverseOptionFailsWhenNonStringField(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
     "displayName": "testReverseOptionFailsWhenNonStringField(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
     "methodName": "testReverseOptionFailsWhenNonStringField",
     "className": "org.elasticsearch.search.sort.GeoDistanceSortBuilderTests",
     "children": []
    },
    {
     "id": "ID#testGeoDistanceSortParserManyPointsNoException(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
     "displayName": "testGeoDistanceSortParserManyPointsNoException(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
     "methodName": "testGeoDistanceSortParserManyPointsNoException",
     "className": "org.elasticsearch.search.sort.GeoDistanceSortBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIgnoreMalformedIsDeprecated(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
     "displayName": "testIgnoreMalformedIsDeprecated(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
     "methodName": "testIgnoreMalformedIsDeprecated",
     "className": "org.elasticsearch.search.sort.GeoDistanceSortBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSortModeSumIsRejectedInSetter(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
     "displayName": "testSortModeSumIsRejectedInSetter(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
     "methodName": "testSortModeSumIsRejectedInSetter",
     "className": "org.elasticsearch.search.sort.GeoDistanceSortBuilderTests",
     "children": []
    },
    {
     "id": "ID#testReverseOptionFailsWhenStringFieldButResetting(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
     "displayName": "testReverseOptionFailsWhenStringFieldButResetting(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
     "methodName": "testReverseOptionFailsWhenStringFieldButResetting",
     "className": "org.elasticsearch.search.sort.GeoDistanceSortBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSortModeSumIsRejectedInJSON(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
     "displayName": "testSortModeSumIsRejectedInJSON(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
     "methodName": "testSortModeSumIsRejectedInJSON",
     "className": "org.elasticsearch.search.sort.GeoDistanceSortBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.sort.GeoDistanceSortBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.sort.GeoDistanceSortBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195774525
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
  "startTimestamp": 1474195774551,
  "executionTime": 17
 }
]

[
 "TEST_STARTED",
 "ID#testCoerceIsDeprecated(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCoerceIsDeprecated(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
  "startTimestamp": 1474195774569,
  "executionTime": 7
 }
]

[
 "TEST_STARTED",
 "ID#testBuildSortField(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBuildSortField(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
  "startTimestamp": 1474195774576,
  "executionTime": 18
 }
]

[
 "TEST_STARTED",
 "ID#testGeoDistanceSortCanBeParsedFromGeoHash(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGeoDistanceSortCanBeParsedFromGeoHash(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
  "startTimestamp": 1474195774594,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testGeoDistanceSortDeprecatedSortModeException(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGeoDistanceSortDeprecatedSortModeException(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
  "startTimestamp": 1474195774597,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testReverseOptionFailsBuildWhenInvalidGeoHashString(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReverseOptionFailsBuildWhenInvalidGeoHashString(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
  "startTimestamp": 1474195774599,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testReverseOptionFailsWhenNonStringField(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReverseOptionFailsWhenNonStringField(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
  "startTimestamp": 1474195774605,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testGeoDistanceSortParserManyPointsNoException(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGeoDistanceSortParserManyPointsNoException(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
  "startTimestamp": 1474195774607,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIgnoreMalformedIsDeprecated(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIgnoreMalformedIsDeprecated(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
  "startTimestamp": 1474195774609,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSortModeSumIsRejectedInSetter(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSortModeSumIsRejectedInSetter(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
  "startTimestamp": 1474195774611,
  "executionTime": 51
 }
]

[
 "TEST_STARTED",
 "ID#testReverseOptionFailsWhenStringFieldButResetting(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReverseOptionFailsWhenStringFieldButResetting(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
  "startTimestamp": 1474195774662,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testSortModeSumIsRejectedInJSON(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSortModeSumIsRejectedInJSON(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
  "startTimestamp": 1474195774666,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
  "startTimestamp": 1474195774668,
  "executionTime": 6
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.sort.GeoDistanceSortBuilderTests)",
  "startTimestamp": 1474195774674,
  "executionTime": 58
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.sort.GeoDistanceSortBuilderTests",
  "startTimestamp": 1474195774525,
  "executionTime": 330
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.sort.ScoreSortBuilderTests",
   "displayName": "org.elasticsearch.search.sort.ScoreSortBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.search.sort.ScoreSortBuilderTests",
   "children": [
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.sort.ScoreSortBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.sort.ScoreSortBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.sort.ScoreSortBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.sort.ScoreSortBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.search.sort.ScoreSortBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.sort.ScoreSortBuilderTests",
     "children": []
    },
    {
     "id": "ID#testBuildSortField(org.elasticsearch.search.sort.ScoreSortBuilderTests)",
     "displayName": "testBuildSortField(org.elasticsearch.search.sort.ScoreSortBuilderTests)",
     "methodName": "testBuildSortField",
     "className": "org.elasticsearch.search.sort.ScoreSortBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParseOrder(org.elasticsearch.search.sort.ScoreSortBuilderTests)",
     "displayName": "testParseOrder(org.elasticsearch.search.sort.ScoreSortBuilderTests)",
     "methodName": "testParseOrder",
     "className": "org.elasticsearch.search.sort.ScoreSortBuilderTests",
     "children": []
    },
    {
     "id": "ID#testIllegalOrder(org.elasticsearch.search.sort.ScoreSortBuilderTests)",
     "displayName": "testIllegalOrder(org.elasticsearch.search.sort.ScoreSortBuilderTests)",
     "methodName": "testIllegalOrder",
     "className": "org.elasticsearch.search.sort.ScoreSortBuilderTests",
     "children": []
    },
    {
     "id": "ID#testReverseOptionFails(org.elasticsearch.search.sort.ScoreSortBuilderTests)",
     "displayName": "testReverseOptionFails(org.elasticsearch.search.sort.ScoreSortBuilderTests)",
     "methodName": "testReverseOptionFails",
     "className": "org.elasticsearch.search.sort.ScoreSortBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.sort.ScoreSortBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.sort.ScoreSortBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.sort.ScoreSortBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195775068
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.sort.ScoreSortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.sort.ScoreSortBuilderTests)",
  "startTimestamp": 1474195775120,
  "executionTime": 9
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.sort.ScoreSortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.sort.ScoreSortBuilderTests)",
  "startTimestamp": 1474195775129,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testBuildSortField(org.elasticsearch.search.sort.ScoreSortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBuildSortField(org.elasticsearch.search.sort.ScoreSortBuilderTests)",
  "startTimestamp": 1474195775132,
  "executionTime": 19
 }
]

[
 "TEST_STARTED",
 "ID#testParseOrder(org.elasticsearch.search.sort.ScoreSortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseOrder(org.elasticsearch.search.sort.ScoreSortBuilderTests)",
  "startTimestamp": 1474195775151,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testIllegalOrder(org.elasticsearch.search.sort.ScoreSortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIllegalOrder(org.elasticsearch.search.sort.ScoreSortBuilderTests)",
  "startTimestamp": 1474195775153,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testReverseOptionFails(org.elasticsearch.search.sort.ScoreSortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReverseOptionFails(org.elasticsearch.search.sort.ScoreSortBuilderTests)",
  "startTimestamp": 1474195775164,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.sort.ScoreSortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.sort.ScoreSortBuilderTests)",
  "startTimestamp": 1474195775166,
  "executionTime": 3
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.sort.ScoreSortBuilderTests",
  "startTimestamp": 1474195775068,
  "executionTime": 105
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.sort.ScriptSortBuilderTests",
   "displayName": "org.elasticsearch.search.sort.ScriptSortBuilderTests",
   "methodName": null,
   "className": "org.elasticsearch.search.sort.ScriptSortBuilderTests",
   "children": [
    {
     "id": "ID#testParseJson(org.elasticsearch.search.sort.ScriptSortBuilderTests)",
     "displayName": "testParseJson(org.elasticsearch.search.sort.ScriptSortBuilderTests)",
     "methodName": "testParseJson",
     "className": "org.elasticsearch.search.sort.ScriptSortBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParseJson_simple(org.elasticsearch.search.sort.ScriptSortBuilderTests)",
     "displayName": "testParseJson_simple(org.elasticsearch.search.sort.ScriptSortBuilderTests)",
     "methodName": "testParseJson_simple",
     "className": "org.elasticsearch.search.sort.ScriptSortBuilderTests",
     "children": []
    },
    {
     "id": "ID#testEqualsAndHashcode(org.elasticsearch.search.sort.ScriptSortBuilderTests)",
     "displayName": "testEqualsAndHashcode(org.elasticsearch.search.sort.ScriptSortBuilderTests)",
     "methodName": "testEqualsAndHashcode",
     "className": "org.elasticsearch.search.sort.ScriptSortBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParseBadFieldNameExceptions(org.elasticsearch.search.sort.ScriptSortBuilderTests)",
     "displayName": "testParseBadFieldNameExceptions(org.elasticsearch.search.sort.ScriptSortBuilderTests)",
     "methodName": "testParseBadFieldNameExceptions",
     "className": "org.elasticsearch.search.sort.ScriptSortBuilderTests",
     "children": []
    },
    {
     "id": "ID#testScriptSortTypeIllegalArgument(org.elasticsearch.search.sort.ScriptSortBuilderTests)",
     "displayName": "testScriptSortTypeIllegalArgument(org.elasticsearch.search.sort.ScriptSortBuilderTests)",
     "methodName": "testScriptSortTypeIllegalArgument",
     "className": "org.elasticsearch.search.sort.ScriptSortBuilderTests",
     "children": []
    },
    {
     "id": "ID#testBadSortMode(org.elasticsearch.search.sort.ScriptSortBuilderTests)",
     "displayName": "testBadSortMode(org.elasticsearch.search.sort.ScriptSortBuilderTests)",
     "methodName": "testBadSortMode",
     "className": "org.elasticsearch.search.sort.ScriptSortBuilderTests",
     "children": []
    },
    {
     "id": "ID#testScriptSortTypeNull(org.elasticsearch.search.sort.ScriptSortBuilderTests)",
     "displayName": "testScriptSortTypeNull(org.elasticsearch.search.sort.ScriptSortBuilderTests)",
     "methodName": "testScriptSortTypeNull",
     "className": "org.elasticsearch.search.sort.ScriptSortBuilderTests",
     "children": []
    },
    {
     "id": "ID#testSerialization(org.elasticsearch.search.sort.ScriptSortBuilderTests)",
     "displayName": "testSerialization(org.elasticsearch.search.sort.ScriptSortBuilderTests)",
     "methodName": "testSerialization",
     "className": "org.elasticsearch.search.sort.ScriptSortBuilderTests",
     "children": []
    },
    {
     "id": "ID#testBuildSortField(org.elasticsearch.search.sort.ScriptSortBuilderTests)",
     "displayName": "testBuildSortField(org.elasticsearch.search.sort.ScriptSortBuilderTests)",
     "methodName": "testBuildSortField",
     "className": "org.elasticsearch.search.sort.ScriptSortBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParseUnexpectedToken(org.elasticsearch.search.sort.ScriptSortBuilderTests)",
     "displayName": "testParseUnexpectedToken(org.elasticsearch.search.sort.ScriptSortBuilderTests)",
     "methodName": "testParseUnexpectedToken",
     "className": "org.elasticsearch.search.sort.ScriptSortBuilderTests",
     "children": []
    },
    {
     "id": "ID#testParseBadFieldNameExceptionsOnStartObject(org.elasticsearch.search.sort.ScriptSortBuilderTests)",
     "displayName": "testParseBadFieldNameExceptionsOnStartObject(org.elasticsearch.search.sort.ScriptSortBuilderTests)",
     "methodName": "testParseBadFieldNameExceptionsOnStartObject",
     "className": "org.elasticsearch.search.sort.ScriptSortBuilderTests",
     "children": []
    },
    {
     "id": "ID#testFromXContent(org.elasticsearch.search.sort.ScriptSortBuilderTests)",
     "displayName": "testFromXContent(org.elasticsearch.search.sort.ScriptSortBuilderTests)",
     "methodName": "testFromXContent",
     "className": "org.elasticsearch.search.sort.ScriptSortBuilderTests",
     "children": []
    },
    {
     "id": "ID#testScriptSortType(org.elasticsearch.search.sort.ScriptSortBuilderTests)",
     "displayName": "testScriptSortType(org.elasticsearch.search.sort.ScriptSortBuilderTests)",
     "methodName": "testScriptSortType",
     "className": "org.elasticsearch.search.sort.ScriptSortBuilderTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195775336
 }
]

[
 "TEST_STARTED",
 "ID#testParseJson(org.elasticsearch.search.sort.ScriptSortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseJson(org.elasticsearch.search.sort.ScriptSortBuilderTests)",
  "startTimestamp": 1474195775351,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testParseJson_simple(org.elasticsearch.search.sort.ScriptSortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseJson_simple(org.elasticsearch.search.sort.ScriptSortBuilderTests)",
  "startTimestamp": 1474195775353,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testEqualsAndHashcode(org.elasticsearch.search.sort.ScriptSortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEqualsAndHashcode(org.elasticsearch.search.sort.ScriptSortBuilderTests)",
  "startTimestamp": 1474195775355,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testParseBadFieldNameExceptions(org.elasticsearch.search.sort.ScriptSortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseBadFieldNameExceptions(org.elasticsearch.search.sort.ScriptSortBuilderTests)",
  "startTimestamp": 1474195775360,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testScriptSortTypeIllegalArgument(org.elasticsearch.search.sort.ScriptSortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testScriptSortTypeIllegalArgument(org.elasticsearch.search.sort.ScriptSortBuilderTests)",
  "startTimestamp": 1474195775362,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testBadSortMode(org.elasticsearch.search.sort.ScriptSortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBadSortMode(org.elasticsearch.search.sort.ScriptSortBuilderTests)",
  "startTimestamp": 1474195775364,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testScriptSortTypeNull(org.elasticsearch.search.sort.ScriptSortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testScriptSortTypeNull(org.elasticsearch.search.sort.ScriptSortBuilderTests)",
  "startTimestamp": 1474195775366,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testSerialization(org.elasticsearch.search.sort.ScriptSortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSerialization(org.elasticsearch.search.sort.ScriptSortBuilderTests)",
  "startTimestamp": 1474195775367,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testBuildSortField(org.elasticsearch.search.sort.ScriptSortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBuildSortField(org.elasticsearch.search.sort.ScriptSortBuilderTests)",
  "startTimestamp": 1474195775370,
  "executionTime": 10
 }
]

[
 "TEST_STARTED",
 "ID#testParseUnexpectedToken(org.elasticsearch.search.sort.ScriptSortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseUnexpectedToken(org.elasticsearch.search.sort.ScriptSortBuilderTests)",
  "startTimestamp": 1474195775380,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testParseBadFieldNameExceptionsOnStartObject(org.elasticsearch.search.sort.ScriptSortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testParseBadFieldNameExceptionsOnStartObject(org.elasticsearch.search.sort.ScriptSortBuilderTests)",
  "startTimestamp": 1474195775382,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testFromXContent(org.elasticsearch.search.sort.ScriptSortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFromXContent(org.elasticsearch.search.sort.ScriptSortBuilderTests)",
  "startTimestamp": 1474195775384,
  "executionTime": 5
 }
]

[
 "TEST_STARTED",
 "ID#testScriptSortType(org.elasticsearch.search.sort.ScriptSortBuilderTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testScriptSortType(org.elasticsearch.search.sort.ScriptSortBuilderTests)",
  "startTimestamp": 1474195775390,
  "executionTime": 1
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.sort.ScriptSortBuilderTests",
  "startTimestamp": 1474195775336,
  "executionTime": 58
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.threadpool.ThreadPoolSerializationTests",
   "displayName": "org.elasticsearch.threadpool.ThreadPoolSerializationTests",
   "methodName": null,
   "className": "org.elasticsearch.threadpool.ThreadPoolSerializationTests",
   "children": [
    {
     "id": "ID#testThatToXContentWritesOutUnboundedCorrectly(org.elasticsearch.threadpool.ThreadPoolSerializationTests)",
     "displayName": "testThatToXContentWritesOutUnboundedCorrectly(org.elasticsearch.threadpool.ThreadPoolSerializationTests)",
     "methodName": "testThatToXContentWritesOutUnboundedCorrectly",
     "className": "org.elasticsearch.threadpool.ThreadPoolSerializationTests",
     "children": []
    },
    {
     "id": "ID#testThatQueueSizeSerializationWorks(org.elasticsearch.threadpool.ThreadPoolSerializationTests)",
     "displayName": "testThatQueueSizeSerializationWorks(org.elasticsearch.threadpool.ThreadPoolSerializationTests)",
     "methodName": "testThatQueueSizeSerializationWorks",
     "className": "org.elasticsearch.threadpool.ThreadPoolSerializationTests",
     "children": []
    },
    {
     "id": "ID#testThatThreadPoolTypeIsSerializedCorrectly(org.elasticsearch.threadpool.ThreadPoolSerializationTests)",
     "displayName": "testThatThreadPoolTypeIsSerializedCorrectly(org.elasticsearch.threadpool.ThreadPoolSerializationTests)",
     "methodName": "testThatThreadPoolTypeIsSerializedCorrectly",
     "className": "org.elasticsearch.threadpool.ThreadPoolSerializationTests",
     "children": []
    },
    {
     "id": "ID#testThatNegativeQueueSizesCanBeSerialized(org.elasticsearch.threadpool.ThreadPoolSerializationTests)",
     "displayName": "testThatNegativeQueueSizesCanBeSerialized(org.elasticsearch.threadpool.ThreadPoolSerializationTests)",
     "methodName": "testThatNegativeQueueSizesCanBeSerialized",
     "className": "org.elasticsearch.threadpool.ThreadPoolSerializationTests",
     "children": []
    },
    {
     "id": "ID#testThatNegativeSettingAllowsToStart(org.elasticsearch.threadpool.ThreadPoolSerializationTests)",
     "displayName": "testThatNegativeSettingAllowsToStart(org.elasticsearch.threadpool.ThreadPoolSerializationTests)",
     "methodName": "testThatNegativeSettingAllowsToStart",
     "className": "org.elasticsearch.threadpool.ThreadPoolSerializationTests",
     "children": []
    },
    {
     "id": "ID#testThatToXContentWritesInteger(org.elasticsearch.threadpool.ThreadPoolSerializationTests)",
     "displayName": "testThatToXContentWritesInteger(org.elasticsearch.threadpool.ThreadPoolSerializationTests)",
     "methodName": "testThatToXContentWritesInteger",
     "className": "org.elasticsearch.threadpool.ThreadPoolSerializationTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195775629
 }
]

[
 "TEST_STARTED",
 "ID#testThatToXContentWritesOutUnboundedCorrectly(org.elasticsearch.threadpool.ThreadPoolSerializationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatToXContentWritesOutUnboundedCorrectly(org.elasticsearch.threadpool.ThreadPoolSerializationTests)",
  "startTimestamp": 1474195775694,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testThatQueueSizeSerializationWorks(org.elasticsearch.threadpool.ThreadPoolSerializationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatQueueSizeSerializationWorks(org.elasticsearch.threadpool.ThreadPoolSerializationTests)",
  "startTimestamp": 1474195775697,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testThatThreadPoolTypeIsSerializedCorrectly(org.elasticsearch.threadpool.ThreadPoolSerializationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatThreadPoolTypeIsSerializedCorrectly(org.elasticsearch.threadpool.ThreadPoolSerializationTests)",
  "startTimestamp": 1474195775699,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testThatNegativeQueueSizesCanBeSerialized(org.elasticsearch.threadpool.ThreadPoolSerializationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatNegativeQueueSizesCanBeSerialized(org.elasticsearch.threadpool.ThreadPoolSerializationTests)",
  "startTimestamp": 1474195775701,
  "executionTime": 2
 }
]

[
 "TEST_STARTED",
 "ID#testThatNegativeSettingAllowsToStart(org.elasticsearch.threadpool.ThreadPoolSerializationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatNegativeSettingAllowsToStart(org.elasticsearch.threadpool.ThreadPoolSerializationTests)",
  "startTimestamp": 1474195775703,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testThatToXContentWritesInteger(org.elasticsearch.threadpool.ThreadPoolSerializationTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatToXContentWritesInteger(org.elasticsearch.threadpool.ThreadPoolSerializationTests)",
  "startTimestamp": 1474195775707,
  "executionTime": 2
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.threadpool.ThreadPoolSerializationTests",
  "startTimestamp": 1474195775629,
  "executionTime": 81
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.threadpool.ThreadPoolStatsTests",
   "displayName": "org.elasticsearch.threadpool.ThreadPoolStatsTests",
   "methodName": null,
   "className": "org.elasticsearch.threadpool.ThreadPoolStatsTests",
   "children": [
    {
     "id": "ID#testThreadPoolStatsToXContent(org.elasticsearch.threadpool.ThreadPoolStatsTests)",
     "displayName": "testThreadPoolStatsToXContent(org.elasticsearch.threadpool.ThreadPoolStatsTests)",
     "methodName": "testThreadPoolStatsToXContent",
     "className": "org.elasticsearch.threadpool.ThreadPoolStatsTests",
     "children": []
    },
    {
     "id": "ID#testThreadPoolStatsSort(org.elasticsearch.threadpool.ThreadPoolStatsTests)",
     "displayName": "testThreadPoolStatsSort(org.elasticsearch.threadpool.ThreadPoolStatsTests)",
     "methodName": "testThreadPoolStatsSort",
     "className": "org.elasticsearch.threadpool.ThreadPoolStatsTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195775899
 }
]

[
 "TEST_STARTED",
 "ID#testThreadPoolStatsToXContent(org.elasticsearch.threadpool.ThreadPoolStatsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThreadPoolStatsToXContent(org.elasticsearch.threadpool.ThreadPoolStatsTests)",
  "startTimestamp": 1474195775912,
  "executionTime": 4
 }
]

[
 "TEST_STARTED",
 "ID#testThreadPoolStatsSort(org.elasticsearch.threadpool.ThreadPoolStatsTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThreadPoolStatsSort(org.elasticsearch.threadpool.ThreadPoolStatsTests)",
  "startTimestamp": 1474195775917,
  "executionTime": 1
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.threadpool.ThreadPoolStatsTests",
  "startTimestamp": 1474195775899,
  "executionTime": 21
 }
]

[
 "IDLE",
 {}
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.threadpool.ThreadPoolTests",
   "displayName": "org.elasticsearch.threadpool.ThreadPoolTests",
   "methodName": null,
   "className": "org.elasticsearch.threadpool.ThreadPoolTests",
   "children": [
    {
     "id": "ID#testBoundedByAboveMax(org.elasticsearch.threadpool.ThreadPoolTests)",
     "displayName": "testBoundedByAboveMax(org.elasticsearch.threadpool.ThreadPoolTests)",
     "methodName": "testBoundedByAboveMax",
     "className": "org.elasticsearch.threadpool.ThreadPoolTests",
     "children": []
    },
    {
     "id": "ID#testBoundedByBetweenMinAndMax(org.elasticsearch.threadpool.ThreadPoolTests)",
     "displayName": "testBoundedByBetweenMinAndMax(org.elasticsearch.threadpool.ThreadPoolTests)",
     "methodName": "testBoundedByBetweenMinAndMax",
     "className": "org.elasticsearch.threadpool.ThreadPoolTests",
     "children": []
    },
    {
     "id": "ID#testBoundedByBelowMin(org.elasticsearch.threadpool.ThreadPoolTests)",
     "displayName": "testBoundedByBelowMin(org.elasticsearch.threadpool.ThreadPoolTests)",
     "methodName": "testBoundedByBelowMin",
     "className": "org.elasticsearch.threadpool.ThreadPoolTests",
     "children": []
    }
   ]
  },
  "startTimestamp": 1474195776170
 }
]

[
 "TEST_STARTED",
 "ID#testBoundedByAboveMax(org.elasticsearch.threadpool.ThreadPoolTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBoundedByAboveMax(org.elasticsearch.threadpool.ThreadPoolTests)",
  "startTimestamp": 1474195776298,
  "executionTime": 3
 }
]

[
 "TEST_STARTED",
 "ID#testBoundedByBetweenMinAndMax(org.elasticsearch.threadpool.ThreadPoolTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBoundedByBetweenMinAndMax(org.elasticsearch.threadpool.ThreadPoolTests)",
  "startTimestamp": 1474195776301,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testBoundedByBelowMin(org.elasticsearch.threadpool.ThreadPoolTests)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBoundedByBelowMin(org.elasticsearch.threadpool.ThreadPoolTests)",
  "startTimestamp": 1474195776303,
  "executionTime": 1
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.threadpool.ThreadPoolTests",
  "startTimestamp": 1474195776170,
  "executionTime": 142
 }
]

[
 "IDLE",
 {}
]

[
 "QUIT",
 {}
]

